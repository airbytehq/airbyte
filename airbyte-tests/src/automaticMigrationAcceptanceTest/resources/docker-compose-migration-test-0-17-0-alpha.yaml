#The file is used for testing and is from version 0.17.0-alpha
version: "3.7"
#https://github.com/compose-spec/compose-spec/blob/master/spec.md#using-extensions-as-fragments
x-logging: &default-logging
  options:
    max-size: "1m"
    max-file: "1"
  driver: json-file
services:
  init:
    image: airbyte/init:${VERSION}
    logging: *default-logging
    command: /bin/sh -c "./scripts/create_mount_directories.sh /local_parent ${HACK_LOCAL_ROOT_PARENT} ${LOCAL_ROOT}"
    environment:
      - LOCAL_ROOT=${LOCAL_ROOT}
      - HACK_LOCAL_ROOT_PARENT=${HACK_LOCAL_ROOT_PARENT}
    volumes:
      - ${HACK_LOCAL_ROOT_PARENT}:/local_parent
  db:
    image: airbyte/db:${VERSION}
    logging: *default-logging
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
  seed:
    image: airbyte/seed:${VERSION}
    # Pre-populate the volume if it is empty.
    # See: https://docs.docker.com/storage/volumes/#populate-a-volume-using-a-container
    volumes:
      - data:/app/seed
  server:
    image: airbyte/server:${VERSION}
    logging: *default-logging
    restart: unless-stopped
    environment:
      - WEBAPP_URL=${WEBAPP_URL}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_URL=jdbc:postgresql://db:5432/${DATABASE_DB}
      - WORKSPACE_ROOT=${WORKSPACE_ROOT}
      - CONFIG_ROOT=${CONFIG_ROOT}
      - TRACKING_STRATEGY=${TRACKING_STRATEGY}
      - AIRBYTE_VERSION=${VERSION}
      - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
      - TEMPORAL_HOST=${TEMPORAL_HOST}
    ports:
      - 8001:8001
    volumes:
      - workspace:${WORKSPACE_ROOT}
      - data:${CONFIG_ROOT}
volumes:
  workspace:
    name: ${WORKSPACE_DOCKER_MOUNT}
  data:
    name: ${DATA_DOCKER_MOUNT}
  db:
    name: ${DB_DOCKER_MOUNT}
