# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from connector_builder.generated.models.any_of_interpolated_stringstring import AnyOfInterpolatedStringstring
from connector_builder.generated.models.declarative_oauth2_authenticator_all_of import DeclarativeOauth2AuthenticatorAllOf


class DeclarativeOauth2Authenticator(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DeclarativeOauth2Authenticator - a model defined in OpenAPI

        token_refresh_endpoint: The token_refresh_endpoint of this DeclarativeOauth2Authenticator.
        client_id: The client_id of this DeclarativeOauth2Authenticator.
        client_secret: The client_secret of this DeclarativeOauth2Authenticator.
        refresh_token: The refresh_token of this DeclarativeOauth2Authenticator.
        config: The config of this DeclarativeOauth2Authenticator.
        scopes: The scopes of this DeclarativeOauth2Authenticator [Optional].
        token_expiry_date: The token_expiry_date of this DeclarativeOauth2Authenticator [Optional].
        token_expiry_date: The token_expiry_date of this DeclarativeOauth2Authenticator [Optional].
        access_token_name: The access_token_name of this DeclarativeOauth2Authenticator [Optional].
        expires_in_name: The expires_in_name of this DeclarativeOauth2Authenticator [Optional].
        refresh_request_body: The refresh_request_body of this DeclarativeOauth2Authenticator [Optional].
        grant_type: The grant_type of this DeclarativeOauth2Authenticator [Optional].
    """

    token_refresh_endpoint: AnyOfInterpolatedStringstring = Field(alias="token_refresh_endpoint")
    client_id: AnyOfInterpolatedStringstring = Field(alias="client_id")
    client_secret: AnyOfInterpolatedStringstring = Field(alias="client_secret")
    refresh_token: AnyOfInterpolatedStringstring = Field(alias="refresh_token")
    config: Dict[str, Any] = Field(alias="config")
    scopes: Optional[List[str]] = Field(alias="scopes", default=None)
    token_expiry_date: Optional[AnyOfInterpolatedStringstring] = Field(alias="token_expiry_date", default=None)
    token_expiry_date: Optional[object] = Field(alias="_token_expiry_date", default=None)
    access_token_name: Optional[AnyOfInterpolatedStringstring] = Field(alias="access_token_name", default=None)
    expires_in_name: Optional[AnyOfInterpolatedStringstring] = Field(alias="expires_in_name", default=None)
    refresh_request_body: Optional[Dict[str, Any]] = Field(alias="refresh_request_body", default=None)
    grant_type: Optional[AnyOfInterpolatedStringstring] = Field(alias="grant_type", default=None)

DeclarativeOauth2Authenticator.update_forward_refs()