# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from connector_builder.generated.models.any_of_interpolated_booleanstring import AnyOfInterpolatedBooleanstring
from connector_builder.generated.models.any_of_interpolated_stringstring import AnyOfInterpolatedStringstring
from connector_builder.generated.models.any_ofstringstring import AnyOfstringstring


class HttpResponseFilter(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    HttpResponseFilter - a model defined in OpenAPI

        action: The action of this HttpResponseFilter.
        config: The config of this HttpResponseFilter.
        http_codes: The http_codes of this HttpResponseFilter [Optional].
        error_message_contains: The error_message_contains of this HttpResponseFilter [Optional].
        predicate: The predicate of this HttpResponseFilter [Optional].
        error_message: The error_message of this HttpResponseFilter [Optional].
    """

    action: AnyOfstringstring = Field(alias="action")
    config: Dict[str, Any] = Field(alias="config")
    http_codes: Optional[list[int]] = Field(alias="http_codes", default=None)
    error_message_contains: Optional[str] = Field(alias="error_message_contains", default=None)
    predicate: Optional[AnyOfInterpolatedBooleanstring] = Field(alias="predicate", default=None)
    error_message: Optional[AnyOfInterpolatedStringstring] = Field(alias="error_message", default=None)

HttpResponseFilter.update_forward_refs()