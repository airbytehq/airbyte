import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
plugins {
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '6.6.1'
}

def image = 'airbyte/integration-singer-postgres-destination:dev'

sourceSets {
    integrationTest {
        java {
            srcDir 'src/test-integration/java'
        }
        resources {
            srcDir 'src/test-integration/resources'
        }
    }
}
test.dependsOn('compileIntegrationTestJava')

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    integrationTestImplementation 'org.apache.commons:commons-dbcp2:2.7.0'
    integrationTestImplementation 'com.fasterxml.jackson.core:jackson-databind'
    integrationTestImplementation 'org.apache.commons:commons-text:1.9'
    integrationTestImplementation "org.testcontainers:postgresql:1.15.0-rc2"
    integrationTestImplementation "org.postgresql:postgresql:42.2.16"

    integrationTestImplementation project(':airbyte-config:models')
    integrationTestImplementation project(':airbyte-workers')
    integrationTestImplementation project(':airbyte-db')
}

task imageName {
    doLast {
        println "IMAGE $image"
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir = projectDir
    images.add(image)
}

task integrationTest(type: Test) {
    testClassesDirs += sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
    testLogging() {
        events "passed", "failed"
        exceptionFormat "full"
    }

    mustRunAfter test
    dependsOn(buildImage)
}
