import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import groovy.json.JsonSlurper
plugins {
    id 'java'
    id 'com.bmuschko.docker-remote-api'
}

def image = 'airbyte/integration-singer-bigquery-destination:dev'

sourceSets {
    integrationTest {
        java {
            srcDir 'src/test-integration/java'
        }
        resources {
            srcDir 'src/test-integration/resources'
        }
    }
}
test.dependsOn('compileIntegrationTestJava')

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    integrationTestImplementation 'org.apache.commons:commons-dbcp2:2.7.0'
    integrationTestImplementation 'com.google.cloud:google-cloud-bigquery:1.117.0'
    integrationTestImplementation 'org.apache.commons:commons-text:1.9'

    integrationTestImplementation project(':airbyte-workers')
}


task imageName {
    doLast {
        println "IMAGE $image"
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir = projectDir
    images.add(image)
}

task integrationTest(type: Test) {
    def credFile = project.file("config/credentials.json")
    def creds = [:]
    try {
        creds = new JsonSlurper().parse(credFile)
    } catch (Exception ignored) {
    }

    environment "GOOGLE_CLOUD_PROJECT", creds["project_id"]
    environment "GOOGLE_APPLICATION_CREDENTIALS", credFile.absolutePath

    testClassesDirs += sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
    testLogging() {
        events "passed", "failed"
        exceptionFormat "full"
    }

    mustRunAfter test
    dependsOn(buildImage)
}
