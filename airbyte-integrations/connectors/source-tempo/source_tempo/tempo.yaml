version: "0.1.0"

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: ["results"]
  requester:
    type: HttpRequester
    name: "{{ options['name'] }}"
    url_base: "https://api.tempo.io/4/"
    http_method: "GET"
    error_handler:
      type: CompositeErrorHandler
      # ignore 403 error but retry default retriable http errors (429, 500 - 600)
      error_handlers:
        - type: DefaultErrorHandler
          response_filters:
            - http_codes: [403]
              action: IGNORE
        - type: DefaultErrorHandler
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['api_token'] }}"
  retriever:
    type: SimpleRetriever
    name: "{{ options['name'] }}"
    record_selector:
      $ref: "*ref(definitions.selector)"
    paginator:
      type: DefaultPaginator
      pagination_strategy:
        type: "CursorPagination"
        cursor_value: "{{ response['metadata']['next'] }}"
        stop_condition: "{{ 'next' not in response['metadata'] }}"
        page_size: 50
      page_size_option:
        field_name: "limit"
        inject_into: "request_parameter"
      page_token_option:
        inject_into: "path"
      url_base: "*ref(definitions.requester.url_base)"
  base_stream:
    primary_key: "id"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
  accounts_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "accounts"
      path: "accounts"
  customers_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "customers"
      path: "customers"
  worklogs_stream:
    $ref: "*ref(definitions.base_stream)"
    stream_cursor_field: "startDate"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester: "*ref(definitions.requester)"
      stream_slicer:
        cursor_field: "startDate"
        datetime_format: "%Y-%m-%d"
        cursor_granularity: "P1D"
        start_datetime:
          datetime: "2020-01-01"
          datetime_format: "%Y-%m-%d"
        end_datetime:
          datetime: "{{ today_utc() }}"
          datetime_format: "%Y-%m-%d"
        step: "P1W"
        end_time_option:
          field_name: "to"
          inject_into: "request_parameter"
        start_time_option:
          field_name: "from"
          inject_into: "request_parameter"
        type: DatetimeStreamSlicer
    $options:
      name: "worklogs"
      path: "worklogs"
    primary_key: "tempoWorklogId"
  workload_schemes_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "workload-schemes"
      path: "workload-schemes"

streams:
  - "*ref(definitions.accounts_stream)"
  - "*ref(definitions.customers_stream)"
  - "*ref(definitions.worklogs_stream)"
  - "*ref(definitions.workload_schemes_stream)"

check:
  type: CheckStream
  stream_names: ["workload-schemes"]
