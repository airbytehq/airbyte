version: 6.41.5

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - workload-schemes

definitions:
  streams:
    accounts:
      type: DeclarativeStream
      name: accounts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: accounts
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
              - type: DefaultErrorHandler
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestPath
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 50
            cursor_value: "{{ response['metadata']['next'] }}"
            stop_condition: "{{ 'next' not in response['metadata'] }}"
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accounts"
    customers:
      type: DeclarativeStream
      name: customers
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: customers
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
              - type: DefaultErrorHandler
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestPath
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 50
            cursor_value: "{{ response['metadata']['next'] }}"
            stop_condition: "{{ 'next' not in response['metadata'] }}"
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/customers"
    worklogs:
      type: DeclarativeStream
      name: worklogs
      primary_key:
        - tempoWorklogId
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: worklogs
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
              - type: DefaultErrorHandler
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestPath
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 50
            cursor_value: "{{ response['metadata']['next'] }}"
            stop_condition: "{{ 'next' not in response['metadata'] }}"
        decoder:
          type: JsonDecoder
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: startDate
        cursor_datetime_formats:
          - "%Y-%m-%d"
        datetime_format: "%Y-%m-%d"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config['start_date'] }}"
          datetime_format: "%Y-%m-%d"
        start_time_option:
          type: RequestOption
          field_name: from
          inject_into: request_parameter
        end_time_option:
          type: RequestOption
          field_name: to
          inject_into: request_parameter
        end_datetime:
          type: MinMaxDatetime
          datetime: "{{ today_utc() }}"
          datetime_format: "%Y-%m-%d"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/worklogs"
    workload-schemes:
      type: DeclarativeStream
      name: workload-schemes
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: workload-schemes
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
              - type: DefaultErrorHandler
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestPath
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 50
            cursor_value: "{{ response['metadata']['next'] }}"
            stop_condition: "{{ 'next' not in response['metadata'] }}"
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/workload-schemes"
    plans:
      type: DeclarativeStream
      name: plans
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: plans
          http_method: GET
          request_parameters:
            from: "{{ config['start_date'] }}"
            to: "\"2100-01-01\""
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestPath
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 50
            cursor_value: "{{ response['metadata']['next'] }}"
            stop_condition: "{{ 'next' not in response['metadata'] }}"
        decoder:
          type: JsonDecoder
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: updatedAt
        cursor_datetime_formats:
          - "%Y-%m-%dT%H:%M:%SZ"
        datetime_format: "%Y-%m-%d"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config['start_date'] }}"
          datetime_format: "%Y-%m-%d"
        start_time_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: updatedFrom
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/plans"
    teams:
      type: DeclarativeStream
      name: teams
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: teams
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/teams"
    timesheet-approvals:
      type: DeclarativeStream
      name: timesheet-approvals
      primary_key:
        - self
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: timesheet-approvals/team/{{ stream_slice['team_id'] }}
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: team_id
              stream:
                $ref: "#/definitions/streams/teams"
        decoder:
          type: JsonDecoder
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: period_from
        cursor_datetime_formats:
          - "%Y-%m-%d"
        datetime_format: "%Y-%m-%d"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config['start_date'] }}"
          datetime_format: "%Y-%m-%d"
        start_time_option:
          type: RequestOption
          field_name: from
          inject_into: request_parameter
        end_datetime:
          type: MinMaxDatetime
          datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
          datetime_format: "%Y-%m-%dT%H:%M:%SZ"
        step: P1M
        cursor_granularity: P1D
      transformations:
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - period_from
              value: "{{ record[\"period\"][\"from\"] }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/timesheet-approvals"
    holiday-schemes:
      type: DeclarativeStream
      name: holiday-schemes
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: holiday-schemes
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/holiday-schemes"
    holidays:
      type: DeclarativeStream
      name: holidays
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: holiday-schemes/{{ stream_slice['scheme_id'] }}/holidays
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: scheme_id
              stream:
                $ref: "#/definitions/streams/holiday-schemes"
        decoder:
          type: JsonDecoder
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/holidays"
    holiday-scheme-members:
      type: DeclarativeStream
      name: holiday-scheme-members
      primary_key:
        - accountId
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: holiday-schemes/{{ stream_slice['scheme_id'] }}/members
          http_method: GET
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 403
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: scheme_id
              stream:
                $ref: "#/definitions/streams/holiday-schemes"
        decoder:
          type: JsonDecoder
      transformations:
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - schemeId
              value: "{{ stream_slice['scheme_id'] }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/holiday-scheme-members"
  base_requester:
    type: HttpRequester
    url_base: https://api.tempo.io/4/
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config[\"api_token\"] }}"

streams:
  - $ref: "#/definitions/streams/accounts"
  - $ref: "#/definitions/streams/customers"
  - $ref: "#/definitions/streams/worklogs"
  - $ref: "#/definitions/streams/workload-schemes"
  - $ref: "#/definitions/streams/plans"
  - $ref: "#/definitions/streams/teams"
  - $ref: "#/definitions/streams/timesheet-approvals"
  - $ref: "#/definitions/streams/holiday-schemes"
  - $ref: "#/definitions/streams/holidays"
  - $ref: "#/definitions/streams/holiday-scheme-members"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_token
    properties:
      api_token:
        type: string
        description: >-
          Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and
          select API integration.
        order: 0
        title: API token
        airbyte_secret: true
      start_date:
        type: string
        title: Start date
        format: date
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
        order: 1
    additionalProperties: true

metadata:
  autoImportSchema:
    accounts: false
    customers: false
    worklogs: false
    workload-schemes: false
    plans: true
    teams: true
    timesheet-approvals: true
    holiday-schemes: true
    holidays: true
    holiday-scheme-members: true
  testedStreams:
    accounts:
      streamHash: 3a62fd72589bb9e60684fd118ca8cb99bc0257e8
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    customers:
      streamHash: aab3b81e1940147af3026eb559e3004fa33b3e47
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    worklogs:
      streamHash: d7844405a81bc051c3079847f9fc3566a52237c8
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    workload-schemes:
      streamHash: d8c519bc6137e06520b131f6a300eaa156aa053d
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    plans:
      streamHash: 097d557c75c082d9e6276ad024564c2401936dd0
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    teams:
      hasRecords: true
      streamHash: 2ca8486d9c2847217c91ace9f2450d50769c890d
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    timesheet-approvals:
      streamHash: e703da6824625becf26e6e1c98c765ad95cb5cbd
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    holiday-schemes:
      hasRecords: true
      streamHash: e5f28e59bb5e662af608c3c1044fee6539a2702b
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    holidays:
      hasRecords: true
      streamHash: 17a7cbf5ad1795b8ce0a50945d2ddef82e308c5e
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    holiday-scheme-members:
      streamHash: 5247dbee9c28e2f3bd41b4ea4ba93d78254064b8
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  assist: {}

schemas:
  accounts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      category:
        type: object
        properties:
          type:
            type: object
            properties:
              name:
                type: string
          id:
            type: integer
          key:
            type: string
          name:
            type: string
          self:
            type: string
      contact:
        type: object
        properties:
          type:
            type: string
          accountId:
            type: string
          self:
            type: string
      customer:
        type:
          - "null"
          - object
        properties:
          id:
            type: integer
          key:
            type: string
          name:
            type: string
          self:
            type: string
      global:
        type: boolean
      id:
        type: integer
      key:
        type: string
      lead:
        type: object
        properties:
          accountId:
            type: string
          self:
            type:
              - "null"
              - string
      links:
        type: object
        properties:
          self:
            type: string
      monthlyBudget:
        type:
          - "null"
          - integer
      name:
        type: string
      self:
        type: string
      status:
        type: string
  customers:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      self:
        type: string
  worklogs:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      description:
        type:
          - string
          - "null"
      attributes:
        type:
          - object
          - "null"
        properties:
          self:
            type:
              - string
              - "null"
          values:
            type:
              - array
              - "null"
      author:
        type:
          - object
          - "null"
        properties:
          accountId:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      billableSeconds:
        type:
          - number
          - "null"
      createdAt:
        type:
          - string
          - "null"
      issue:
        type:
          - object
          - "null"
        properties:
          id:
            type:
              - number
              - "null"
          self:
            type:
              - string
              - "null"
      self:
        type:
          - string
          - "null"
      startDate:
        type: string
      startDateTimeUtc:
        type:
          - string
          - "null"
      startTime:
        type:
          - string
          - "null"
      tempoWorklogId:
        type: number
      timeSpentSeconds:
        type:
          - number
          - "null"
      updatedAt:
        type:
          - string
          - "null"
    required:
      - tempoWorklogId
      - startDate
  workload-schemes:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      description:
        type: string
        description: The description of the tempo Workload Scheme.
        readOnly: true
      days:
        type: array
        description: The days of the tempo Workload Scheme.
        items:
          type: object
          properties:
            day:
              type: string
            requiredSeconds:
              type: integer
        readOnly: true
      defaultScheme:
        type: boolean
        description: The defaultScheme of the tempo Workload Scheme.
        readOnly: true
      id:
        type: integer
        description: The ID of the tempo Workload Scheme.
        readOnly: true
      memberCount:
        type: integer
        description: The memberCount of the tempo Workload Scheme.
        readOnly: true
      name:
        type: string
        description: The name of the tempo Workload Scheme.
        readOnly: true
      self:
        type: string
        description: The URL of the Workload Scheme
        format: uri
        readOnly: true
  plans:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      description:
        type:
          - string
          - "null"
      assignee:
        type:
          - object
          - "null"
        properties:
          type:
            type:
              - string
              - "null"
          id:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      createdAt:
        type:
          - string
          - "null"
      effortPersistenceType:
        type:
          - string
          - "null"
      endDate:
        type:
          - string
          - "null"
      id:
        type: number
      includeNonWorkingDays:
        type:
          - boolean
          - "null"
      planCreatorId:
        type:
          - string
          - "null"
      planItem:
        type:
          - object
          - "null"
        properties:
          type:
            type:
              - string
              - "null"
          id:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      plannedSecondsPerDay:
        type:
          - number
          - "null"
      plannedTime:
        type:
          - object
          - "null"
        properties:
          metadata:
            type:
              - object
              - "null"
            properties:
              all:
                type:
                  - string
                  - "null"
      recurrenceEndDate:
        type:
          - string
          - "null"
      rule:
        type:
          - string
          - "null"
      self:
        type:
          - string
          - "null"
      startDate:
        type:
          - string
          - "null"
      startTime:
        type:
          - string
          - "null"
      syncSource:
        type:
          - string
          - "null"
      totalPlannedSeconds:
        type:
          - number
          - "null"
      totalPlannedSecondsInScope:
        type:
          - number
          - "null"
      updatedAt:
        type: string
    required:
      - id
      - updatedAt
  teams:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      administrative:
        type:
          - boolean
          - "null"
      id:
        type: number
      lead:
        type:
          - object
          - "null"
        properties:
          accountId:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      links:
        type:
          - object
          - "null"
        properties:
          self:
            type:
              - string
              - "null"
      members:
        type:
          - object
          - "null"
        properties:
          self:
            type:
              - string
              - "null"
      name:
        type:
          - string
          - "null"
      permissions:
        type:
          - object
          - "null"
        properties:
          self:
            type:
              - string
              - "null"
      self:
        type:
          - string
          - "null"
      summary:
        type:
          - string
          - "null"
    required:
      - id
  timesheet-approvals:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      actions:
        type:
          - object
          - "null"
        properties:
          approve:
            type:
              - object
              - "null"
            properties:
              self:
                type:
                  - string
                  - "null"
          reject:
            type:
              - object
              - "null"
            properties:
              self:
                type:
                  - string
                  - "null"
          reopen:
            type:
              - object
              - "null"
            properties:
              self:
                type:
                  - string
                  - "null"
          submit:
            type:
              - object
              - "null"
            properties:
              self:
                type:
                  - string
                  - "null"
      period:
        type:
          - object
          - "null"
        properties:
          from:
            type:
              - string
              - "null"
          to:
            type:
              - string
              - "null"
      period_from:
        type: string
      requiredSeconds:
        type:
          - number
          - "null"
      reviewer:
        type:
          - object
          - "null"
        properties:
          accountId:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      self:
        type: string
      status:
        type:
          - object
          - "null"
        properties:
          actor:
            type:
              - object
              - "null"
            properties:
              accountId:
                type:
                  - string
                  - "null"
              self:
                type:
                  - string
                  - "null"
          comment:
            type:
              - string
              - "null"
          key:
            type:
              - string
              - "null"
          requiredSecondsAtSubmit:
            type:
              - number
              - "null"
          timeSpentSecondsAtSubmit:
            type:
              - number
              - "null"
          updatedAt:
            type:
              - string
              - "null"
      timeSpentSeconds:
        type:
          - number
          - "null"
      user:
        type:
          - object
          - "null"
        properties:
          accountId:
            type:
              - string
              - "null"
          self:
            type:
              - string
              - "null"
      worklogs:
        type:
          - object
          - "null"
        properties:
          self:
            type:
              - string
              - "null"
    required:
      - self
      - period_from
  holiday-schemes:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      description:
        type:
          - string
          - "null"
      defaultScheme:
        type:
          - boolean
          - "null"
      id:
        type: number
      memberCount:
        type:
          - number
          - "null"
      name:
        type:
          - string
          - "null"
      self:
        type:
          - string
          - "null"
    required:
      - id
  holidays:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      type:
        type:
          - string
          - "null"
      description:
        type:
          - string
          - "null"
      date:
        type:
          - string
          - "null"
      durationSeconds:
        type:
          - number
          - "null"
      id:
        type: number
      name:
        type:
          - string
          - "null"
      schemeId:
        type:
          - number
          - "null"
      self:
        type:
          - string
          - "null"
    required:
      - id
  holiday-scheme-members:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      accountId:
        type: string
      schemeId:
        type:
          - number
          - "null"
      self:
        type:
          - string
          - "null"
    required:
      - accountId
