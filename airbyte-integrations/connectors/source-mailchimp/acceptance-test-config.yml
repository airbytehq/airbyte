connector_image: airbyte/source-mailchimp:dev
tests:
  spec:
    - spec_path: "source_mailchimp/spec.json"
      timeout_seconds: 60
  connection:
    # for old spec config (without oneOf)
    - config_path: "secrets/config.json"
      status: "succeed"
      timeout_seconds: 180
    # for auth with API token
    - config_path: "secrets/config_apikey.json"
      status: "succeed"
      timeout_seconds: 180
    # for auth with oauth2 token
    - config_path: "secrets/config_oauth.json"
      status: "succeed"
      timeout_seconds: 180
    - config_path: "integration_tests/invalid_config.json"
      status: "failed"
      timeout_seconds: 180
    - config_path: "integration_tests/invalid_config_apikey.json"
      status: "failed"
      timeout_seconds: 180
    - config_path: "integration_tests/invalid_config_oauth.json"
      status: "failed"
      timeout_seconds: 180
  discovery:
    # for old spec config (without oneOf)
    - config_path: "secrets/config.json"
    # for auth with API token
    - config_path: "secrets/config_apikey.json"
    # for auth with oauth2 token
    - config_path: "secrets/config_oauth.json"
  basic_read:
    - config_path: "secrets/config.json"
      configured_catalog_path: "integration_tests/configured_catalog.json"
      timeout_seconds: 1800
    - config_path: "secrets/config_oauth.json"
      configured_catalog_path: "integration_tests/configured_catalog.json"
      timeout_seconds: 1800
#  THIS TEST IS COMMENTED OUT. Tests are supposed to accept
#  `state = {cursor_field: value}`. When we have dependent endpoint path
#  `path_begin/{some_id}/path_end` we need a complex state like below:
#  `{"id1": {cursor_field: value}, "id2": {cursor_field: value}...}`
#  The test currently is not supposed to accept this desired construction,
#  so it is commented out

#  incremental:
#    - config_path: "secrets/config.json"
#      configured_catalog_path: "integration_tests/configured_catalog.json"
#      future_state_path: "integration_tests/state.json"
#      cursor_paths:
#        lists: [ "date_created" ]
#        campaigns: [ "create_time" ]
#        Email_activity: [ "timestamp" ]

  # Email activities stream has working campaigns with email newsletters.
  # Due to this sequential_reads test could be failed.
  full_refresh:
    - config_path: "secrets/config.json"
      configured_catalog_path: "integration_tests/configured_catalog_without_email_activities.json"
      timeout_seconds: 1800
    - config_path: "secrets/config_oauth.json"
      configured_catalog_path: "integration_tests/configured_catalog_without_email_activities.json"
      timeout_seconds: 1800
