version: 0.40.5
type: DeclarativeSource
check:
  type: CheckStream
  stream_names:
    - submitted_inspection_forms
streams:
  - name: submitted_inspection_forms
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/submitted_inspection_forms
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/submitted_inspection_forms.json"
  - name: issues
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v2/issues
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/issues.json" 
  - name: service_entries
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v2/service_entries
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/service_entries.json" 
  - name: vehicles
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/vehicles
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/vehicles.json"
  - name: expense_entries
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/expense_entries
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/expense_entries.json"
  - name: contacts
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v2/contacts
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/contacts.json" 
  - name: fuel_entries
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/fuel_entries
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/fuel_entries.json"
  - name: parts
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/parts
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/parts.json"
  - name: purchase_orders
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/purchase_orders
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/purchase_orders.json"
  - name: vehicle_assignments
    type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          field_name: start_cursor
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("next_cursor", {}) }}'
          stop_condition: '{{ not response.get("next_cursor", {}) }}'
      requester:
        path: /v1/vehicle_assignments
        type: HttpRequester
        url_base: https://secure.fleetio.com/api/
        http_method: GET
        authenticator:
          type: NoAuth
        request_headers:
          Account-Token: '{{ config[''account_token''] }}'
          Authorization: Token {{ config['api_token'] }}
          X-Api-Version: '2024-03-15'
          X-Client-Name: data_connector
          X-Client-Platform: fleetio_airbyte
        request_body_json: {}
        request_parameters: {}
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - records
      partition_router: []
    primary_key:
      - id
    schema_loader:
      type: JsonSchema
      file_path: "./source_fleetio/schemas/vehicle_assignments.json"
spec:
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    required:
      - api_token
      - account_token
    properties:
      api_token:
        type: string
        order: 0
        title: api_token
        airbyte_secret: true
      account_token:
        type: string
        order: 1
        title: account_token
        airbyte_secret: true
    additionalProperties: true
  documentation_url: https://docs.airbyte.com/integrations/sources/fleetio
  type: Spec
metadata:
  autoImportSchema:
    submitted_inspection_forms: true
    issues: true
    service_entries: true
    vehicles: true
    expense_entries: true
    contacts: true
    fuel_entries: true
    parts: true
    purchase_orders: true
    vehicle_assignments: true