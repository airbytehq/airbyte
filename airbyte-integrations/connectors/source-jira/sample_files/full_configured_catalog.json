{
  "streams": [
    {
      "stream": {
        "name": "projects",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "expand": {
              "type": "string",
              "description": "Expand options that include additional project details in the response.",
              "readOnly": true,
              "xml": {
                "attribute": true
              }
            },
            "self": {
              "type": "string",
              "description": "The URL of the project details.",
              "format": "uri",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "The ID of the project."
            },
            "key": {
              "type": "string",
              "description": "The key of the project.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "A brief description of the project.",
              "readOnly": true
            },
            "lead": {
              "description": "The username of the project lead.",
              "readOnly": true
            },
            "components": {
              "type": "array",
              "description": "List of the components contained in the project.",
              "readOnly": true
            },
            "issueTypes": {
              "type": "array",
              "description": "List of the issue types available in the project.",
              "readOnly": true
            },
            "url": {
              "type": "string",
              "description": "A link to information about this project, such as project documentation.",
              "readOnly": true
            },
            "email": {
              "type": "string",
              "description": "An email address associated with the project."
            },
            "assigneeType": {
              "type": "string",
              "description": "The default assignee when creating issues for this project.",
              "readOnly": true,
              "enum": ["PROJECT_LEAD", "UNASSIGNED"]
            },
            "versions": {
              "type": "array",
              "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the project.",
              "readOnly": true
            },
            "roles": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "format": "uri",
                "readOnly": true
              },
              "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
              "readOnly": true
            },
            "avatarUrls": {
              "description": "The URLs of the project's avatars.",
              "readOnly": true
            },
            "projectCategory": {
              "description": "The category the project belongs to.",
              "readOnly": true
            },
            "projectTypeKey": {
              "type": "string",
              "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
              "readOnly": true,
              "enum": ["software", "service_desk", "business"]
            },
            "simplified": {
              "type": "boolean",
              "description": "Whether the project is simplified.",
              "readOnly": true
            },
            "style": {
              "type": "string",
              "description": "The type of the project.",
              "readOnly": true,
              "enum": ["classic", "next-gen"]
            },
            "favourite": {
              "type": "boolean",
              "description": "Whether the project is selected as a favorite."
            },
            "isPrivate": {
              "type": "boolean",
              "description": "Whether the project is private.",
              "readOnly": true
            },
            "issueTypeHierarchy": {
              "description": "The issue type hierarchy for the project",
              "readOnly": true
            },
            "permissions": {
              "description": "User permissions on the project",
              "readOnly": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "Map of project properties",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID for next-gen projects.",
              "format": "uuid",
              "readOnly": true
            },
            "insight": {
              "description": "Insights about the project.",
              "readOnly": true
            },
            "deleted": {
              "type": "boolean",
              "description": "Whether the project is marked as deleted.",
              "readOnly": true
            },
            "retentionTillDate": {
              "type": "string",
              "description": "The date when the project is deleted permanently.",
              "format": "date-time",
              "readOnly": true
            },
            "deletedDate": {
              "type": "string",
              "description": "The date when the project was marked as deleted.",
              "format": "date-time",
              "readOnly": true
            },
            "deletedBy": {
              "description": "The user who marked the project as deleted.",
              "readOnly": true
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the project is archived.",
              "readOnly": true
            },
            "archivedDate": {
              "type": "string",
              "description": "The date when the project was archived.",
              "format": "date-time",
              "readOnly": true
            },
            "archivedBy": {
              "description": "The user who archived the project.",
              "readOnly": true
            }
          },
          "additionalProperties": false,
          "description": "Details about a project."
        },
        "supported_sync_modes": ["full_refresh"]
      }
    },
    {
      "stream": {
        "name": "resolutions",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the issue resolution.",
              "format": "uri"
            },
            "id": {
              "type": "string",
              "description": "The ID of the issue resolution."
            },
            "description": {
              "type": "string",
              "description": "The description of the issue resolution."
            },
            "name": {
              "type": "string",
              "description": "The name of the issue resolution."
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue resolution."
        },
        "supported_sync_modes": ["full_refresh"]
      }
    },
    {
      "stream": {
        "name": "users",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the user.",
              "format": "uri",
              "readOnly": true
            },
            "key": {
              "type": "string",
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
            },
            "accountId": {
              "maxLength": 128,
              "type": "string",
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests."
            },
            "accountType": {
              "type": "string",
              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
              "readOnly": true,
              "enum": ["atlassian", "app", "customer", "unknown"]
            },
            "name": {
              "type": "string",
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
            },
            "emailAddress": {
              "type": "string",
              "description": "The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.",
              "readOnly": true
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "readOnly": true
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.",
              "readOnly": true
            },
            "active": {
              "type": "boolean",
              "description": "Whether the user is active.",
              "readOnly": true
            },
            "timeZone": {
              "type": "string",
              "description": "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.",
              "readOnly": true
            },
            "locale": {
              "type": "string",
              "description": "The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.",
              "readOnly": true
            },
            "groups": {
              "description": "The groups that the user belongs to.",
              "readOnly": true
            },
            "applicationRoles": {
              "description": "The application roles the user is assigned to.",
              "readOnly": true
            },
            "expand": {
              "type": "string",
              "description": "Expand options that include additional user details in the response.",
              "readOnly": true,
              "xml": {
                "attribute": true
              }
            }
          },
          "additionalProperties": false,
          "description": "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values."
        },
        "supported_sync_modes": ["full_refresh"]
      }
    },
    {
      "stream": {
        "name": "issues",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "expand": {
              "type": "string",
              "description": "Expand options that include additional issue details in the response.",
              "readOnly": true,
              "xml": {
                "attribute": true
              }
            },
            "id": {
              "type": "string",
              "description": "The ID of the issue.",
              "readOnly": true
            },
            "self": {
              "type": "string",
              "description": "The URL of the issue details.",
              "format": "uri",
              "readOnly": true
            },
            "key": {
              "type": "string",
              "description": "The key of the issue.",
              "readOnly": true
            },
            "renderedFields": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "The rendered value of each field present on the issue.",
              "readOnly": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "Details of the issue properties identified in the request.",
              "readOnly": true
            },
            "names": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "readOnly": true
              },
              "description": "The ID and name of each field present on the issue.",
              "readOnly": true
            },
            "schema": {
              "type": "object",
              "description": "The schema describing each field present on the issue.",
              "readOnly": true
            },
            "transitions": {
              "type": "array",
              "description": "The transitions that can be performed on the issue.",
              "readOnly": true
            },
            "operations": {
              "description": "The operations that can be performed on the issue.",
              "readOnly": true
            },
            "editmeta": {
              "description": "The metadata for the fields on the issue that can be amended.",
              "readOnly": true
            },
            "changelog": {
              "description": "Details of changelogs associated with the issue.",
              "readOnly": true
            },
            "versionedRepresentations": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "readOnly": true
                },
                "readOnly": true
              },
              "description": "The versions of each field on the issue.",
              "readOnly": true
            },
            "fieldsToInclude": {
              "type": "object"
            },
            "fields": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "additionalProperties": false
        },
        "supported_sync_modes": ["full_refresh"]
      }
    },
    {
      "stream": {
        "name": "issue_comments",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the comment.",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "The ID of the comment.",
              "readOnly": true
            },
            "author": {
              "description": "The ID of the user who created the comment.",
              "readOnly": true
            },
            "body": {
              "description": "The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/)."
            },
            "renderedBody": {
              "type": "string",
              "description": "The rendered version of the comment.",
              "readOnly": true
            },
            "updateAuthor": {
              "description": "The ID of the user who updated the comment last.",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "description": "The date and time at which the comment was created.",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "description": "The date and time at which the comment was updated last.",
              "format": "date-time",
              "readOnly": true
            },
            "visibility": {
              "description": "The group or role to which this comment is visible. Optional on create and update."
            },
            "jsdPublic": {
              "type": "boolean",
              "description": "Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.",
              "readOnly": true
            },
            "properties": {
              "type": "array",
              "description": "A list of comment properties. Optional on create and update."
            }
          },
          "additionalProperties": true,
          "description": "A comment."
        },
        "supported_sync_modes": ["full_refresh"]
      }
    }
  ]
}
