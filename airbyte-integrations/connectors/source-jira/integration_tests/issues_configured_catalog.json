{
  "streams": [
    {
      "stream": {
        "name": "issues",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "expand": {
              "type": "string",
              "description": "Expand options that include additional issue details in the response.",
              "readOnly": true,
              "xml": {
                "attribute": true
              }
            },
            "id": {
              "type": "string",
              "description": "The ID of the issue.",
              "readOnly": true
            },
            "self": {
              "type": "string",
              "description": "The URL of the issue details.",
              "format": "uri",
              "readOnly": true
            },
            "key": {
              "type": "string",
              "description": "The key of the issue.",
              "readOnly": true
            },
            "renderedFields": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "The rendered value of each field present on the issue.",
              "readOnly": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "Details of the issue properties identified in the request.",
              "readOnly": true
            },
            "names": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "readOnly": true
              },
              "description": "The ID and name of each field present on the issue.",
              "readOnly": true
            },
            "schema": {
              "type": "object",
              "description": "The schema describing each field present on the issue.",
              "readOnly": true
            },
            "transitions": {
              "type": "array",
              "description": "The transitions that can be performed on the issue.",
              "readOnly": true
            },
            "operations": {
              "description": "The operations that can be performed on the issue.",
              "readOnly": true
            },
            "editmeta": {
              "description": "The metadata for the fields on the issue that can be amended.",
              "readOnly": true
            },
            "changelog": {
              "description": "Details of changelogs associated with the issue.",
              "readOnly": true
            },
            "versionedRepresentations": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "readOnly": true
                },
                "readOnly": true
              },
              "description": "The versions of each field on the issue.",
              "readOnly": true
            },
            "fieldsToInclude": {
              "type": "object"
            },
            "fields": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "additionalProperties": false
        },
        "supported_sync_modes": ["incremental"],
        "source_defined_cursor": true,
        "default_cursor_field": ["created"]
      },
      "sync_mode": "incremental",
      "cursor_field": ["created"],
      "destination_sync_mode": "append"
    },
    {
      "stream": {
        "name": "issue_comments",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the comment.",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "The ID of the comment.",
              "readOnly": true
            },
            "author": {
              "description": "The ID of the user who created the comment.",
              "readOnly": true
            },
            "body": {
              "description": "The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/)."
            },
            "renderedBody": {
              "type": "string",
              "description": "The rendered version of the comment.",
              "readOnly": true
            },
            "updateAuthor": {
              "description": "The ID of the user who updated the comment last.",
              "readOnly": true
            },
            "created": {
              "type": "string",
              "description": "The date and time at which the comment was created.",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "type": "string",
              "description": "The date and time at which the comment was updated last.",
              "format": "date-time",
              "readOnly": true
            },
            "visibility": {
              "description": "The group or role to which this comment is visible. Optional on create and update."
            },
            "jsdPublic": {
              "type": "boolean",
              "description": "Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.",
              "readOnly": true
            },
            "properties": {
              "type": "array",
              "description": "A list of comment properties. Optional on create and update."
            }
          },
          "additionalProperties": true,
          "description": "A comment."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_fields",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": { "type": "string", "description": "The ID of the field." },
            "key": { "type": "string", "description": "The key of the field." },
            "name": {
              "type": "string",
              "description": "The name of the field."
            },
            "custom": {
              "type": "boolean",
              "description": "Whether the field is a custom field."
            },
            "orderable": {
              "type": "boolean",
              "description": "Whether the content of the field can be used to order lists."
            },
            "navigable": {
              "type": "boolean",
              "description": "Whether the field can be used as a column on the issue navigator."
            },
            "searchable": {
              "type": "boolean",
              "description": "Whether the content of the field can be searched."
            },
            "clauseNames": {
              "uniqueItems": true,
              "type": "array",
              "description": "The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).",
              "items": { "type": "string" }
            },
            "scope": {
              "description": "The scope of the field.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of scope.",
                  "readOnly": true,
                  "enum": ["PROJECT", "TEMPLATE"]
                },
                "project": {
                  "description": "The project the item has scope in.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "description": "The URL of the project details.",
                      "readOnly": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the project."
                    },
                    "key": {
                      "type": "string",
                      "description": "The key of the project.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the project.",
                      "readOnly": true
                    },
                    "projectTypeKey": {
                      "type": "string",
                      "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                      "readOnly": true,
                      "enum": ["software", "service_desk", "business"]
                    },
                    "simplified": {
                      "type": "boolean",
                      "description": "Whether or not the project is simplified.",
                      "readOnly": true
                    },
                    "avatarUrls": {
                      "description": "The URLs of the project's avatars.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "16x16": {
                          "type": "string",
                          "description": "The URL of the item's 16x16 pixel avatar.",
                          "format": "uri"
                        },
                        "24x24": {
                          "type": "string",
                          "description": "The URL of the item's 24x24 pixel avatar.",
                          "format": "uri"
                        },
                        "32x32": {
                          "type": "string",
                          "description": "The URL of the item's 32x32 pixel avatar.",
                          "format": "uri"
                        },
                        "48x48": {
                          "type": "string",
                          "description": "The URL of the item's 48x48 pixel avatar.",
                          "format": "uri"
                        }
                      }
                    },
                    "projectCategory": {
                      "description": "The category the project belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "The URL of the project category.",
                          "readOnly": true
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the project category.",
                          "readOnly": true
                        },
                        "description": {
                          "type": "string",
                          "description": "The name of the project category.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The description of the project category.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "schema": {
              "description": "The data schema for the field.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The data type of the field.",
                  "readOnly": true
                },
                "items": {
                  "type": "string",
                  "description": "When the data type is an array, the name of the field items within the array.",
                  "readOnly": true
                },
                "system": {
                  "type": "string",
                  "description": "If the field is a system field, the name of the field.",
                  "readOnly": true
                },
                "custom": {
                  "type": "string",
                  "description": "If the field is a custom field, the URI of the field.",
                  "readOnly": true
                },
                "customId": {
                  "type": "integer",
                  "description": "If the field is a custom field, the custom ID of the field.",
                  "format": "int64",
                  "readOnly": true
                },
                "configuration": {
                  "type": "object",
                  "additionalProperties": { "readOnly": true },
                  "description": "If the field is a custom field, the configuration of the field.",
                  "readOnly": true
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "Details about a field."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_field_configurations",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The ID of the field configuration.",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "The name of the field configuration."
            },
            "description": {
              "type": "string",
              "description": "The description of the field configuration."
            },
            "isDefault": {
              "type": "boolean",
              "description": "Whether the field configuration is the default."
            }
          },
          "additionalProperties": false,
          "description": "Details of a field configuration."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_custom_field_contexts",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": { "type": "string", "description": "The ID of the context." },
            "name": {
              "type": "string",
              "description": "The name of the context."
            },
            "description": {
              "type": "string",
              "description": "The description of the context."
            },
            "isGlobalContext": {
              "type": "boolean",
              "description": "Whether the context is global."
            },
            "isAnyIssueType": {
              "type": "boolean",
              "description": "Whether the context apply to all issue types."
            }
          },
          "additionalProperties": false,
          "description": "The details of a custom field context."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_link_types",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "issueLinkTypes": {
              "type": "array",
              "description": "The issue link type bean.",
              "readOnly": true,
              "xml": { "name": "issueLinkTypes" },
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `name` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `id` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only."
                  },
                  "inward": {
                    "type": "string",
                    "description": "The description of the issue link type inward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only."
                  },
                  "outward": {
                    "type": "string",
                    "description": "The description of the issue link type outward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only."
                  },
                  "self": {
                    "type": "string",
                    "description": "The URL of the issue link type. Read only.",
                    "format": "uri",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "A list of issue link type beans."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_navigator_settings",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "The issue navigator column label."
            },
            "value": {
              "type": "string",
              "description": "The issue navigator column value."
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue navigator column item."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_notification_schemes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "expand": {
              "type": "string",
              "description": "Expand options that include additional notification scheme details in the response."
            },
            "id": {
              "type": "integer",
              "description": "The ID of the notification scheme.",
              "format": "int64"
            },
            "self": { "type": "string" },
            "name": {
              "type": "string",
              "description": "The name of the notification scheme."
            },
            "description": {
              "type": "string",
              "description": "The description of the notification scheme."
            },
            "notificationSchemeEvents": {
              "type": "array",
              "description": "The notification events and associated recipients.",
              "items": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the event."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the event."
                      }
                    }
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "expand": {
                          "type": "string",
                          "description": "Expand options that include additional event notification details in the response."
                        },
                        "id": {
                          "type": "integer",
                          "description": "The ID of the notification.",
                          "format": "int64"
                        },
                        "notificationType": {
                          "type": "string",
                          "description": "Identifies the recipients of the notification.",
                          "enum": [
                            "CurrentAssignee",
                            "Reporter",
                            "CurrentUser",
                            "ProjectLead",
                            "ComponentLead",
                            "User",
                            "Group",
                            "ProjectRole",
                            "EmailAddress",
                            "AllWatchers",
                            "UserCustomField",
                            "GroupCustomField"
                          ]
                        },
                        "parameter": {
                          "type": "string",
                          "description": "The value of the `notificationType`:\n\n *  `User` The `parameter` is the user account ID.\n *  `Group` The `parameter` is the group name.\n *  `ProjectRole` The `parameter` is the project role ID.\n *  `UserCustomField` The `parameter` is the ID of the custom field.\n *  `GroupCustomField` The `parameter` is the ID of the custom field."
                        },
                        "group": {
                          "description": "The specified group.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of group."
                            },
                            "self": {
                              "type": "string",
                              "description": "The URL for these group details.",
                              "format": "uri",
                              "readOnly": true
                            }
                          }
                        },
                        "field": {
                          "description": "The custom user or group field.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the field."
                            },
                            "key": {
                              "type": "string",
                              "description": "The key of the field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field."
                            },
                            "custom": {
                              "type": "boolean",
                              "description": "Whether the field is a custom field."
                            },
                            "orderable": {
                              "type": "boolean",
                              "description": "Whether the content of the field can be used to order lists."
                            },
                            "navigable": {
                              "type": "boolean",
                              "description": "Whether the field can be used as a column on the issue navigator."
                            },
                            "searchable": {
                              "type": "boolean",
                              "description": "Whether the content of the field can be searched."
                            },
                            "clauseNames": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).",
                              "items": { "type": "string" }
                            },
                            "scope": {
                              "description": "The scope of the field.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of scope.",
                                  "readOnly": true,
                                  "enum": ["PROJECT", "TEMPLATE"]
                                },
                                "project": {
                                  "description": "The project the item has scope in.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "self": {
                                      "type": "string",
                                      "description": "The URL of the project details.",
                                      "readOnly": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of the project."
                                    },
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the project.",
                                      "readOnly": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the project.",
                                      "readOnly": true
                                    },
                                    "projectTypeKey": {
                                      "type": "string",
                                      "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                                      "readOnly": true,
                                      "enum": [
                                        "software",
                                        "service_desk",
                                        "business"
                                      ]
                                    },
                                    "simplified": {
                                      "type": "boolean",
                                      "description": "Whether or not the project is simplified.",
                                      "readOnly": true
                                    },
                                    "avatarUrls": {
                                      "description": "The URLs of the project's avatars.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "16x16": {
                                          "type": "string",
                                          "description": "The URL of the item's 16x16 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "24x24": {
                                          "type": "string",
                                          "description": "The URL of the item's 24x24 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "32x32": {
                                          "type": "string",
                                          "description": "The URL of the item's 32x32 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "48x48": {
                                          "type": "string",
                                          "description": "The URL of the item's 48x48 pixel avatar.",
                                          "format": "uri"
                                        }
                                      }
                                    },
                                    "projectCategory": {
                                      "description": "The category the project belongs to.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "string",
                                          "description": "The URL of the project category.",
                                          "readOnly": true
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the project category.",
                                          "readOnly": true
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The name of the project category.",
                                          "readOnly": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The description of the project category.",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "schema": {
                              "description": "The data schema for the field.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The data type of the field.",
                                  "readOnly": true
                                },
                                "items": {
                                  "type": "string",
                                  "description": "When the data type is an array, the name of the field items within the array.",
                                  "readOnly": true
                                },
                                "system": {
                                  "type": "string",
                                  "description": "If the field is a system field, the name of the field.",
                                  "readOnly": true
                                },
                                "custom": {
                                  "type": "string",
                                  "description": "If the field is a custom field, the URI of the field.",
                                  "readOnly": true
                                },
                                "customId": {
                                  "type": "integer",
                                  "description": "If the field is a custom field, the custom ID of the field.",
                                  "format": "int64",
                                  "readOnly": true
                                },
                                "configuration": {
                                  "type": "object",
                                  "additionalProperties": { "readOnly": true },
                                  "description": "If the field is a custom field, the configuration of the field.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "The email address."
                        },
                        "projectRole": {
                          "description": "The specified project role.",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "string",
                              "description": "The URL the project role details.",
                              "format": "uri",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the project role."
                            },
                            "id": {
                              "type": "integer",
                              "description": "The ID of the project role.",
                              "format": "int64",
                              "readOnly": true
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the project role.",
                              "readOnly": true
                            },
                            "actors": {
                              "type": "array",
                              "description": "The list of users who act in this role.",
                              "readOnly": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The ID of the role actor.",
                                    "format": "int64",
                                    "readOnly": true
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "The display name of the role actor. For users, depending on the user\u2019s privacy setting, this may return an alternative value for the user's name.",
                                    "readOnly": true
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of role actor.",
                                    "readOnly": true,
                                    "enum": [
                                      "atlassian-group-role-actor",
                                      "atlassian-user-role-actor"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                                    "readOnly": true
                                  },
                                  "avatarUrl": {
                                    "type": "string",
                                    "description": "The avatar of the role actor.",
                                    "format": "uri",
                                    "readOnly": true
                                  },
                                  "actorUser": {
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "accountId": {
                                        "maxLength": 128,
                                        "type": "string",
                                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "actorGroup": {
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "displayName": {
                                        "type": "string",
                                        "description": "The display name of the group."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the group"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "scope": {
                              "description": "The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of scope.",
                                  "readOnly": true,
                                  "enum": ["PROJECT", "TEMPLATE"]
                                },
                                "project": {
                                  "description": "The project the item has scope in.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "self": {
                                      "type": "string",
                                      "description": "The URL of the project details.",
                                      "readOnly": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of the project."
                                    },
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the project.",
                                      "readOnly": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the project.",
                                      "readOnly": true
                                    },
                                    "projectTypeKey": {
                                      "type": "string",
                                      "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                                      "readOnly": true,
                                      "enum": [
                                        "software",
                                        "service_desk",
                                        "business"
                                      ]
                                    },
                                    "simplified": {
                                      "type": "boolean",
                                      "description": "Whether or not the project is simplified.",
                                      "readOnly": true
                                    },
                                    "avatarUrls": {
                                      "description": "The URLs of the project's avatars.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "16x16": {
                                          "type": "string",
                                          "description": "The URL of the item's 16x16 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "24x24": {
                                          "type": "string",
                                          "description": "The URL of the item's 24x24 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "32x32": {
                                          "type": "string",
                                          "description": "The URL of the item's 32x32 pixel avatar.",
                                          "format": "uri"
                                        },
                                        "48x48": {
                                          "type": "string",
                                          "description": "The URL of the item's 48x48 pixel avatar.",
                                          "format": "uri"
                                        }
                                      }
                                    },
                                    "projectCategory": {
                                      "description": "The category the project belongs to.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "string",
                                          "description": "The URL of the project category.",
                                          "readOnly": true
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the project category.",
                                          "readOnly": true
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The name of the project category.",
                                          "readOnly": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The description of the project category.",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "translatedName": {
                              "type": "string",
                              "description": "The translated name of the project role."
                            },
                            "currentUserRole": {
                              "type": "boolean",
                              "description": "Whether the calling user is part of this role."
                            },
                            "admin": {
                              "type": "boolean",
                              "description": "Whether this role is the admin role for the project.",
                              "readOnly": true
                            },
                            "roleConfigurable": {
                              "type": "boolean",
                              "description": "Whether the roles are configurable for this project.",
                              "readOnly": true
                            },
                            "default": {
                              "type": "boolean",
                              "description": "Whether this role is the default role for the project",
                              "readOnly": true
                            }
                          }
                        },
                        "user": {
                          "description": "The specified user.",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "string",
                              "description": "The URL of the user.",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "readOnly": true
                            },
                            "key": {
                              "type": "string",
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "readOnly": true
                            },
                            "accountId": {
                              "maxLength": 128,
                              "type": "string",
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
                            },
                            "emailAddress": {
                              "type": "string",
                              "description": "The email address of the user. Depending on the user\u2019s privacy settings, this may be returned as null.",
                              "readOnly": true
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "16x16": {
                                  "type": "string",
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "format": "uri"
                                },
                                "24x24": {
                                  "type": "string",
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "format": "uri"
                                },
                                "32x32": {
                                  "type": "string",
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "format": "uri"
                                },
                                "48x48": {
                                  "type": "string",
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "format": "uri"
                                }
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The display name of the user. Depending on the user\u2019s privacy settings, this may return an alternative value.",
                              "readOnly": true
                            },
                            "active": {
                              "type": "boolean",
                              "description": "Whether the user is active.",
                              "readOnly": true
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy settings, this may be returned as null.",
                              "readOnly": true
                            },
                            "accountType": {
                              "type": "string",
                              "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "scope": {
              "description": "The scope of the notification scheme.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of scope.",
                  "readOnly": true,
                  "enum": ["PROJECT", "TEMPLATE"]
                },
                "project": {
                  "description": "The project the item has scope in.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "description": "The URL of the project details.",
                      "readOnly": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the project."
                    },
                    "key": {
                      "type": "string",
                      "description": "The key of the project.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the project.",
                      "readOnly": true
                    },
                    "projectTypeKey": {
                      "type": "string",
                      "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                      "readOnly": true,
                      "enum": ["software", "service_desk", "business"]
                    },
                    "simplified": {
                      "type": "boolean",
                      "description": "Whether or not the project is simplified.",
                      "readOnly": true
                    },
                    "avatarUrls": {
                      "description": "The URLs of the project's avatars.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "16x16": {
                          "type": "string",
                          "description": "The URL of the item's 16x16 pixel avatar.",
                          "format": "uri"
                        },
                        "24x24": {
                          "type": "string",
                          "description": "The URL of the item's 24x24 pixel avatar.",
                          "format": "uri"
                        },
                        "32x32": {
                          "type": "string",
                          "description": "The URL of the item's 32x32 pixel avatar.",
                          "format": "uri"
                        },
                        "48x48": {
                          "type": "string",
                          "description": "The URL of the item's 48x48 pixel avatar.",
                          "format": "uri"
                        }
                      }
                    },
                    "projectCategory": {
                      "description": "The category the project belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "The URL of the project category.",
                          "readOnly": true
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the project category.",
                          "readOnly": true
                        },
                        "description": {
                          "type": "string",
                          "description": "The name of the project category.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The description of the project category.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "Details about a notification scheme."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_priorities",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the issue priority."
            },
            "statusColor": {
              "type": "string",
              "description": "The color used to indicate the issue priority."
            },
            "description": {
              "type": "string",
              "description": "The description of the issue priority."
            },
            "iconUrl": {
              "type": "string",
              "description": "The URL of the icon for the issue priority."
            },
            "name": {
              "type": "string",
              "description": "The name of the issue priority."
            },
            "id": {
              "type": "string",
              "description": "The ID of the issue priority."
            }
          },
          "additionalProperties": true,
          "description": "An issue priority."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_remote_links",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The ID of the link.",
              "format": "int64"
            },
            "self": {
              "type": "string",
              "description": "The URL of the link.",
              "format": "uri"
            },
            "globalId": {
              "type": "string",
              "description": "The global ID of the link, such as the ID of the item on the remote system."
            },
            "application": {
              "description": "Details of the remote application the linked item is in.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The name-spaced type of the application, used by registered rendering apps."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link's icon. The tooltip takes the format \"\\[application name\\] icon title\". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\". Grouping and sorting of links may place links without an application name last."
                }
              }
            },
            "relationship": {
              "type": "string",
              "description": "Description of the relationship between the issue and the linked item."
            },
            "object": {
              "description": "Details of the item linked to.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL of the item."
                },
                "title": {
                  "type": "string",
                  "description": "The title of the item."
                },
                "summary": {
                  "type": "string",
                  "description": "The summary details of the item."
                },
                "icon": {
                  "description": "Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.",
                  "type": "object",
                  "properties": {
                    "url16x16": {
                      "type": "string",
                      "description": "The URL of an icon that displays at 16x16 pixel in Jira."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \"\\[application name\\] icon title\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\"."
                    },
                    "link": {
                      "type": "string",
                      "description": "The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable."
                    }
                  }
                },
                "status": {
                  "description": "The status of the item.",
                  "type": "object",
                  "properties": {
                    "resolved": {
                      "type": "boolean",
                      "description": "Whether the item is resolved. If set to \"true\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font."
                    },
                    "icon": {
                      "description": "Details of the icon representing the status. If not provided, no status icon displays in Jira.",
                      "type": "object",
                      "properties": {
                        "url16x16": {
                          "type": "string",
                          "description": "The URL of an icon that displays at 16x16 pixel in Jira."
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \"\\[application name\\] icon title\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\"."
                        },
                        "link": {
                          "type": "string",
                          "description": "The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue remote link."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_resolutions",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the issue resolution.",
              "format": "uri"
            },
            "id": {
              "type": "string",
              "description": "The ID of the issue resolution."
            },
            "description": {
              "type": "string",
              "description": "The description of the issue resolution."
            },
            "name": {
              "type": "string",
              "description": "The name of the issue resolution."
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue resolution."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_security_schemes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "issueSecuritySchemes": {
              "type": "array",
              "description": "List of security schemes.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the issue security scheme.",
                    "readOnly": true
                  },
                  "id": {
                    "type": "integer",
                    "description": "The ID of the issue security scheme.",
                    "format": "int64",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the issue security scheme.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the issue security scheme.",
                    "readOnly": true
                  },
                  "defaultSecurityLevelId": {
                    "type": "integer",
                    "description": "The ID of the default security level.",
                    "format": "int64",
                    "readOnly": true
                  },
                  "levels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "The URL of the issue level security item.",
                          "readOnly": true
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the issue level security item.",
                          "readOnly": true
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the issue level security item.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the issue level security item.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "List of security schemes."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_type_schemes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the issue type scheme."
            },
            "name": {
              "type": "string",
              "description": "The name of the issue type scheme."
            },
            "description": {
              "type": "string",
              "description": "The description of the issue type scheme."
            },
            "defaultIssueTypeId": {
              "type": "string",
              "description": "The ID of the default issue type of the issue type scheme."
            },
            "isDefault": {
              "type": "boolean",
              "description": "Whether the issue type scheme is the default."
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue type scheme."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_type_screen_schemes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the issue type screen scheme."
            },
            "name": {
              "type": "string",
              "description": "The name of the issue type screen scheme."
            },
            "description": {
              "type": "string",
              "description": "The description of the issue type screen scheme."
            }
          },
          "additionalProperties": false,
          "description": "Details of an issue type screen scheme."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_votes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of these issue vote details.",
              "format": "uri",
              "readOnly": true
            },
            "votes": {
              "type": "integer",
              "description": "The number of votes on the issue.",
              "format": "int64",
              "readOnly": true
            },
            "hasVoted": {
              "type": "boolean",
              "description": "Whether the user making this request has voted on the issue.",
              "readOnly": true
            },
            "voters": {
              "type": "array",
              "description": "List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user.",
                    "format": "uri",
                    "readOnly": true
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "accountId": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests."
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                    "readOnly": true,
                    "enum": ["atlassian", "app", "customer", "unknown"]
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "16x16": {
                        "type": "string",
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "format": "uri"
                      },
                      "24x24": {
                        "type": "string",
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "format": "uri"
                      },
                      "32x32": {
                        "type": "string",
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "format": "uri"
                      },
                      "48x48": {
                        "type": "string",
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "format": "uri"
                      }
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                    "readOnly": true
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active.",
                    "readOnly": true
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "locale": {
                    "type": "string",
                    "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "groups": {
                    "description": "The groups that the user belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of group."
                            },
                            "self": {
                              "type": "string",
                              "description": "The URL for these group details.",
                              "format": "uri",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "applicationRoles": {
                    "description": "The application roles the user is assigned to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the application role."
                            },
                            "groups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups associated with the application role.",
                              "items": { "type": "string" }
                            },
                            "name": {
                              "type": "string",
                              "description": "The display name of the application role."
                            },
                            "defaultGroups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups that are granted default access for this application role.",
                              "items": { "type": "string" }
                            },
                            "selectedByDefault": {
                              "type": "boolean",
                              "description": "Determines whether this application role should be selected by default on user creation."
                            },
                            "defined": {
                              "type": "boolean",
                              "description": "Deprecated."
                            },
                            "numberOfSeats": {
                              "type": "integer",
                              "description": "The maximum count of users on your license.",
                              "format": "int32"
                            },
                            "remainingSeats": {
                              "type": "integer",
                              "description": "The count of users remaining on your license.",
                              "format": "int32"
                            },
                            "userCount": {
                              "type": "integer",
                              "description": "The number of users counting against your license.",
                              "format": "int32"
                            },
                            "userCountDescription": {
                              "type": "string",
                              "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license."
                            },
                            "hasUnlimitedSeats": { "type": "boolean" },
                            "platform": {
                              "type": "boolean",
                              "description": "Indicates if the application role belongs to Jira platform (`jira-core`)."
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "expand": {
                    "type": "string",
                    "description": "Expand options that include additional user details in the response.",
                    "readOnly": true,
                    "xml": { "attribute": true }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "The details of votes on an issue."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "issue_watchers",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of these issue watcher details.",
              "readOnly": true
            },
            "isWatching": {
              "type": "boolean",
              "description": "Whether the calling user is watching this issue.",
              "readOnly": true
            },
            "watchCount": {
              "type": "integer",
              "description": "The number of users watching this issue.",
              "format": "int32",
              "readOnly": true
            },
            "watchers": {
              "type": "array",
              "description": "Details of the users watching this issue.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user.",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "readOnly": true
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "readOnly": true
                  },
                  "accountId": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user\u2019s privacy settings, this may be returned as null.",
                    "readOnly": true
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "16x16": {
                        "type": "string",
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "format": "uri"
                      },
                      "24x24": {
                        "type": "string",
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "format": "uri"
                      },
                      "32x32": {
                        "type": "string",
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "format": "uri"
                      },
                      "48x48": {
                        "type": "string",
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "format": "uri"
                      }
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user\u2019s privacy settings, this may return an alternative value.",
                    "readOnly": true
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active.",
                    "readOnly": true
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy settings, this may be returned as null.",
                    "readOnly": true
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "The details of watchers on an issue."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    }
  ]
}
