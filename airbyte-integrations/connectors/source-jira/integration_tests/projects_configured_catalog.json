{
  "streams": [
    {
      "stream": {
        "name": "projects",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "expand": {
              "type": "string",
              "description": "Expand options that include additional project details in the response.",
              "readOnly": true,
              "xml": {
                "attribute": true
              }
            },
            "self": {
              "type": "string",
              "description": "The URL of the project details.",
              "format": "uri",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "The ID of the project."
            },
            "key": {
              "type": "string",
              "description": "The key of the project.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "A brief description of the project.",
              "readOnly": true
            },
            "lead": {
              "description": "The username of the project lead.",
              "readOnly": true
            },
            "components": {
              "type": "array",
              "description": "List of the components contained in the project.",
              "readOnly": true
            },
            "issueTypes": {
              "type": "array",
              "description": "List of the issue types available in the project.",
              "readOnly": true
            },
            "url": {
              "type": "string",
              "description": "A link to information about this project, such as project documentation.",
              "readOnly": true
            },
            "email": {
              "type": "string",
              "description": "An email address associated with the project."
            },
            "assigneeType": {
              "type": "string",
              "description": "The default assignee when creating issues for this project.",
              "readOnly": true,
              "enum": ["PROJECT_LEAD", "UNASSIGNED"]
            },
            "versions": {
              "type": "array",
              "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the project.",
              "readOnly": true
            },
            "roles": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "format": "uri",
                "readOnly": true
              },
              "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
              "readOnly": true
            },
            "avatarUrls": {
              "description": "The URLs of the project's avatars.",
              "readOnly": true
            },
            "projectCategory": {
              "description": "The category the project belongs to.",
              "readOnly": true
            },
            "projectTypeKey": {
              "type": "string",
              "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
              "readOnly": true,
              "enum": ["software", "service_desk", "business"]
            },
            "simplified": {
              "type": "boolean",
              "description": "Whether the project is simplified.",
              "readOnly": true
            },
            "style": {
              "type": "string",
              "description": "The type of the project.",
              "readOnly": true,
              "enum": ["classic", "next-gen"]
            },
            "favourite": {
              "type": "boolean",
              "description": "Whether the project is selected as a favorite."
            },
            "isPrivate": {
              "type": "boolean",
              "description": "Whether the project is private.",
              "readOnly": true
            },
            "issueTypeHierarchy": {
              "description": "The issue type hierarchy for the project",
              "readOnly": true
            },
            "permissions": {
              "description": "User permissions on the project",
              "readOnly": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "readOnly": true
              },
              "description": "Map of project properties",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID for next-gen projects.",
              "format": "uuid",
              "readOnly": true
            },
            "insight": {
              "description": "Insights about the project.",
              "readOnly": true
            },
            "deleted": {
              "type": "boolean",
              "description": "Whether the project is marked as deleted.",
              "readOnly": true
            },
            "retentionTillDate": {
              "type": "string",
              "description": "The date when the project is deleted permanently.",
              "format": "date-time",
              "readOnly": true
            },
            "deletedDate": {
              "type": "string",
              "description": "The date when the project was marked as deleted.",
              "format": "date-time",
              "readOnly": true
            },
            "deletedBy": {
              "description": "The user who marked the project as deleted.",
              "readOnly": true
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the project is archived.",
              "readOnly": true
            },
            "archivedDate": {
              "type": "string",
              "description": "The date when the project was archived.",
              "format": "date-time",
              "readOnly": true
            },
            "archivedBy": {
              "description": "The user who archived the project.",
              "readOnly": true
            }
          },
          "additionalProperties": false,
          "description": "Details about a project."
        },
        "supported_sync_modes": ["full_refresh"]
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_avatars",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "system": {
              "type": "array",
              "description": "List of avatars included with Jira. These avatars cannot be deleted.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the avatar."
                  },
                  "owner": {
                    "type": "string",
                    "description": "The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.",
                    "readOnly": true
                  },
                  "isSystemAvatar": {
                    "type": "boolean",
                    "description": "Whether the avatar is a system avatar.",
                    "readOnly": true
                  },
                  "isSelected": {
                    "type": "boolean",
                    "description": "Whether the avatar is used in Jira. For example, shown as a project's avatar.",
                    "readOnly": true
                  },
                  "isDeletable": {
                    "type": "boolean",
                    "description": "Whether the avatar can be deleted.",
                    "readOnly": true
                  },
                  "fileName": {
                    "type": "string",
                    "description": "The file name of the avatar icon. Returned for system avatars.",
                    "readOnly": true
                  },
                  "urls": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "description": "The list of avatar icon URLs.",
                    "readOnly": true
                  }
                }
              }
            },
            "custom": {
              "type": "array",
              "description": "List of avatars added to Jira. These avatars may be deleted.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the avatar."
                  },
                  "owner": {
                    "type": "string",
                    "description": "The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.",
                    "readOnly": true
                  },
                  "isSystemAvatar": {
                    "type": "boolean",
                    "description": "Whether the avatar is a system avatar.",
                    "readOnly": true
                  },
                  "isSelected": {
                    "type": "boolean",
                    "description": "Whether the avatar is used in Jira. For example, shown as a project's avatar.",
                    "readOnly": true
                  },
                  "isDeletable": {
                    "type": "boolean",
                    "description": "Whether the avatar can be deleted.",
                    "readOnly": true
                  },
                  "fileName": {
                    "type": "string",
                    "description": "The file name of the avatar icon. Returned for system avatars.",
                    "readOnly": true
                  },
                  "urls": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "description": "The list of avatar icon URLs.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "List of project avatars."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_categories",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the project category.",
              "format": "uri",
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "The ID of the project category.",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the project category. Required on create, optional on update."
            },
            "description": {
              "type": "string",
              "description": "The description of the project category. Required on create, optional on update."
            }
          },
          "additionalProperties": false,
          "description": "A project category."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_components",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "array",
          "description": "The list of items.",
          "readOnly": true,
          "items": {
            "properties": {
              "issueCount": {
                "type": "integer",
                "description": "Count of issues for the component.",
                "format": "int64",
                "readOnly": true
              },
              "self": {
                "type": "string",
                "description": "The URL for this count of the issues contained in the component.",
                "format": "uri",
                "readOnly": true
              },
              "description": {
                "type": "string",
                "description": "The description for the component.",
                "readOnly": true
              },
              "project": {
                "type": "string",
                "description": "The key of the project to which the component is assigned.",
                "readOnly": true
              },
              "assigneeType": {
                "type": "string",
                "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.",
                "readOnly": true,
                "enum": [
                  "PROJECT_DEFAULT",
                  "COMPONENT_LEAD",
                  "PROJECT_LEAD",
                  "UNASSIGNED"
                ]
              },
              "lead": {
                "description": "The user details for the component's lead user.",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user.",
                    "format": "uri",
                    "readOnly": true
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "accountId": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests."
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                    "readOnly": true,
                    "enum": ["atlassian", "app", "customer", "unknown"]
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "16x16": {
                        "type": "string",
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "format": "uri"
                      },
                      "24x24": {
                        "type": "string",
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "format": "uri"
                      },
                      "32x32": {
                        "type": "string",
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "format": "uri"
                      },
                      "48x48": {
                        "type": "string",
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "format": "uri"
                      }
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                    "readOnly": true
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active.",
                    "readOnly": true
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "locale": {
                    "type": "string",
                    "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "groups": {
                    "description": "The groups that the user belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of group."
                            },
                            "self": {
                              "type": "string",
                              "description": "The URL for these group details.",
                              "format": "uri",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "applicationRoles": {
                    "description": "The application roles the user is assigned to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the application role."
                            },
                            "groups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups associated with the application role.",
                              "items": { "type": "string" }
                            },
                            "name": {
                              "type": "string",
                              "description": "The display name of the application role."
                            },
                            "defaultGroups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups that are granted default access for this application role.",
                              "items": { "type": "string" }
                            },
                            "selectedByDefault": {
                              "type": "boolean",
                              "description": "Determines whether this application role should be selected by default on user creation."
                            },
                            "defined": {
                              "type": "boolean",
                              "description": "Deprecated."
                            },
                            "numberOfSeats": {
                              "type": "integer",
                              "description": "The maximum count of users on your license.",
                              "format": "int32"
                            },
                            "remainingSeats": {
                              "type": "integer",
                              "description": "The count of users remaining on your license.",
                              "format": "int32"
                            },
                            "userCount": {
                              "type": "integer",
                              "description": "The number of users counting against your license.",
                              "format": "int32"
                            },
                            "userCountDescription": {
                              "type": "string",
                              "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license."
                            },
                            "hasUnlimitedSeats": { "type": "boolean" },
                            "platform": {
                              "type": "boolean",
                              "description": "Indicates if the application role belongs to Jira platform (`jira-core`)."
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "expand": {
                    "type": "string",
                    "description": "Expand options that include additional user details in the response.",
                    "readOnly": true,
                    "xml": { "attribute": true }
                  }
                }
              },
              "projectId": {
                "type": "integer",
                "description": "Not used.",
                "format": "int64",
                "readOnly": true
              },
              "realAssignee": {
                "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user.",
                    "format": "uri",
                    "readOnly": true
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "accountId": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests."
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                    "readOnly": true,
                    "enum": ["atlassian", "app", "customer", "unknown"]
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "16x16": {
                        "type": "string",
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "format": "uri"
                      },
                      "24x24": {
                        "type": "string",
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "format": "uri"
                      },
                      "32x32": {
                        "type": "string",
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "format": "uri"
                      },
                      "48x48": {
                        "type": "string",
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "format": "uri"
                      }
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                    "readOnly": true
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active.",
                    "readOnly": true
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "locale": {
                    "type": "string",
                    "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "groups": {
                    "description": "The groups that the user belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of group."
                            },
                            "self": {
                              "type": "string",
                              "description": "The URL for these group details.",
                              "format": "uri",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "applicationRoles": {
                    "description": "The application roles the user is assigned to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the application role."
                            },
                            "groups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups associated with the application role.",
                              "items": { "type": "string" }
                            },
                            "name": {
                              "type": "string",
                              "description": "The display name of the application role."
                            },
                            "defaultGroups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups that are granted default access for this application role.",
                              "items": { "type": "string" }
                            },
                            "selectedByDefault": {
                              "type": "boolean",
                              "description": "Determines whether this application role should be selected by default on user creation."
                            },
                            "defined": {
                              "type": "boolean",
                              "description": "Deprecated."
                            },
                            "numberOfSeats": {
                              "type": "integer",
                              "description": "The maximum count of users on your license.",
                              "format": "int32"
                            },
                            "remainingSeats": {
                              "type": "integer",
                              "description": "The count of users remaining on your license.",
                              "format": "int32"
                            },
                            "userCount": {
                              "type": "integer",
                              "description": "The number of users counting against your license.",
                              "format": "int32"
                            },
                            "userCountDescription": {
                              "type": "string",
                              "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license."
                            },
                            "hasUnlimitedSeats": { "type": "boolean" },
                            "platform": {
                              "type": "boolean",
                              "description": "Indicates if the application role belongs to Jira platform (`jira-core`)."
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "expand": {
                    "type": "string",
                    "description": "Expand options that include additional user details in the response.",
                    "readOnly": true,
                    "xml": { "attribute": true }
                  }
                }
              },
              "isAssigneeTypeValid": {
                "type": "boolean",
                "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
                "readOnly": true
              },
              "assignee": {
                "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user.",
                    "format": "uri",
                    "readOnly": true
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "accountId": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests."
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                    "readOnly": true,
                    "enum": ["atlassian", "app", "customer", "unknown"]
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "16x16": {
                        "type": "string",
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "format": "uri"
                      },
                      "24x24": {
                        "type": "string",
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "format": "uri"
                      },
                      "32x32": {
                        "type": "string",
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "format": "uri"
                      },
                      "48x48": {
                        "type": "string",
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "format": "uri"
                      }
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                    "readOnly": true
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active.",
                    "readOnly": true
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "locale": {
                    "type": "string",
                    "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true
                  },
                  "groups": {
                    "description": "The groups that the user belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of group."
                            },
                            "self": {
                              "type": "string",
                              "description": "The URL for these group details.",
                              "format": "uri",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "applicationRoles": {
                    "description": "The application roles the user is assigned to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "attribute": true }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the application role."
                            },
                            "groups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups associated with the application role.",
                              "items": { "type": "string" }
                            },
                            "name": {
                              "type": "string",
                              "description": "The display name of the application role."
                            },
                            "defaultGroups": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "The groups that are granted default access for this application role.",
                              "items": { "type": "string" }
                            },
                            "selectedByDefault": {
                              "type": "boolean",
                              "description": "Determines whether this application role should be selected by default on user creation."
                            },
                            "defined": {
                              "type": "boolean",
                              "description": "Deprecated."
                            },
                            "numberOfSeats": {
                              "type": "integer",
                              "description": "The maximum count of users on your license.",
                              "format": "int32"
                            },
                            "remainingSeats": {
                              "type": "integer",
                              "description": "The count of users remaining on your license.",
                              "format": "int32"
                            },
                            "userCount": {
                              "type": "integer",
                              "description": "The number of users counting against your license.",
                              "format": "int32"
                            },
                            "userCountDescription": {
                              "type": "string",
                              "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license."
                            },
                            "hasUnlimitedSeats": { "type": "boolean" },
                            "platform": {
                              "type": "boolean",
                              "description": "Indicates if the application role belongs to Jira platform (`jira-core`)."
                            }
                          }
                        }
                      },
                      "pagingCallback": { "type": "object" },
                      "callback": { "type": "object" },
                      "max-results": {
                        "type": "integer",
                        "format": "int32",
                        "xml": { "name": "max-results", "attribute": true }
                      }
                    }
                  },
                  "expand": {
                    "type": "string",
                    "description": "Expand options that include additional user details in the response.",
                    "readOnly": true,
                    "xml": { "attribute": true }
                  }
                }
              },
              "realAssigneeType": {
                "type": "string",
                "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
                "readOnly": true,
                "enum": [
                  "PROJECT_DEFAULT",
                  "COMPONENT_LEAD",
                  "PROJECT_LEAD",
                  "UNASSIGNED"
                ]
              },
              "name": {
                "type": "string",
                "description": "The name for the component.",
                "readOnly": true
              },
              "id": {
                "type": "string",
                "description": "The unique identifier for the component.",
                "readOnly": true
              }
            },
            "description": "Details about a component with a count of the issues it contains."
          }
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_email",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "emailAddress": {
              "type": "string",
              "description": "The email address."
            }
          },
          "additionalProperties": false,
          "description": "A project's sender email address."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_permission_schemes",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "The URL of the issue security scheme.",
              "readOnly": true
            },
            "id": {
              "type": "integer",
              "description": "The ID of the issue security scheme.",
              "format": "int64",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the issue security scheme.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The description of the issue security scheme.",
              "readOnly": true
            },
            "defaultSecurityLevelId": {
              "type": "integer",
              "description": "The ID of the default security level.",
              "format": "int64",
              "readOnly": true
            },
            "levels": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the issue level security item.",
                    "readOnly": true
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the issue level security item.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the issue level security item.",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the issue level security item.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "Details about a security scheme."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_types",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "The key of the project type.",
              "readOnly": true
            },
            "formattedKey": {
              "type": "string",
              "description": "The formatted key of the project type.",
              "readOnly": true
            },
            "descriptionI18nKey": {
              "type": "string",
              "description": "The key of the project type's description.",
              "readOnly": true
            },
            "icon": {
              "type": "string",
              "description": "The icon of the project type.",
              "readOnly": true
            },
            "color": {
              "type": "string",
              "description": "The color of the project type.",
              "readOnly": true
            }
          },
          "additionalProperties": false,
          "description": "Details about a project type."
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    },
    {
      "stream": {
        "name": "project_versions",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "array",
          "description": "The list of items.",
          "readOnly": true,
          "items": {
            "properties": {
              "expand": {
                "type": "string",
                "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
                "xml": { "attribute": true }
              },
              "self": {
                "type": "string",
                "description": "The URL of the version.",
                "format": "uri",
                "readOnly": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the version.",
                "readOnly": true
              },
              "description": {
                "type": "string",
                "description": "The description of the version. Optional when creating or updating a version."
              },
              "name": {
                "type": "string",
                "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters."
              },
              "archived": {
                "type": "boolean",
                "description": "Indicates that the version is archived. Optional when creating or updating a version."
              },
              "released": {
                "type": "boolean",
                "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version."
              },
              "startDate": {
                "type": "string",
                "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                "format": "date"
              },
              "releaseDate": {
                "type": "string",
                "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                "format": "date"
              },
              "overdue": {
                "type": "boolean",
                "description": "Indicates that the version is overdue.",
                "readOnly": true
              },
              "userStartDate": {
                "type": "string",
                "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
                "readOnly": true
              },
              "userReleaseDate": {
                "type": "string",
                "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
                "readOnly": true
              },
              "project": {
                "type": "string",
                "description": "Deprecated. Use `projectId`."
              },
              "projectId": {
                "type": "integer",
                "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
                "format": "int64"
              },
              "moveUnfixedIssuesTo": {
                "type": "string",
                "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
                "format": "uri"
              },
              "operations": {
                "type": "array",
                "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "styleClass": { "type": "string" },
                    "iconClass": { "type": "string" },
                    "label": { "type": "string" },
                    "title": { "type": "string" },
                    "href": { "type": "string" },
                    "weight": { "type": "integer", "format": "int32" }
                  }
                }
              },
              "issuesStatusForFixVersion": {
                "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "unmapped": {
                    "type": "integer",
                    "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
                    "format": "int64",
                    "readOnly": true
                  },
                  "toDo": {
                    "type": "integer",
                    "description": "Count of issues with status *to do*.",
                    "format": "int64",
                    "readOnly": true
                  },
                  "inProgress": {
                    "type": "integer",
                    "description": "Count of issues with status *in progress*.",
                    "format": "int64",
                    "readOnly": true
                  },
                  "done": {
                    "type": "integer",
                    "description": "Count of issues with status *done*.",
                    "format": "int64",
                    "readOnly": true
                  }
                }
              }
            },
            "xml": { "name": "version" }
          }
        },
        "supported_sync_modes": ["full_refresh"],
        "source_defined_cursor": false
      },
      "sync_mode": "full_refresh",
      "destination_sync_mode": "overwrite"
    }
  ]
}
