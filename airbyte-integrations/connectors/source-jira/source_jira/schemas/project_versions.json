{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "expand": {
      "type": ["string", "null"],
      "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
      "xml": {
        "attribute": true
      }
    },
    "self": {
      "type": "string",
      "description": "The URL of the version.",
      "readOnly": true
    },
    "id": {
      "type": "string",
      "description": "The ID of the version.",
      "readOnly": true
    },
    "description": {
      "type": "string",
      "description": "The description of the version. Optional when creating or updating a version."
    },
    "name": {
      "type": "string",
      "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters."
    },
    "archived": {
      "type": "boolean",
      "description": "Indicates that the version is archived. Optional when creating or updating a version."
    },
    "released": {
      "type": "boolean",
      "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version."
    },
    "startDate": {
      "type": "string",
      "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
      "format": "date"
    },
    "releaseDate": {
      "type": "string",
      "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
      "format": "date"
    },
    "overdue": {
      "type": "boolean",
      "description": "Indicates that the version is overdue.",
      "readOnly": true
    },
    "userStartDate": {
      "type": "string",
      "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
      "readOnly": true
    },
    "userReleaseDate": {
      "type": "string",
      "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
      "readOnly": true
    },
    "project": {
      "type": "string",
      "description": "Deprecated. Use `projectId`."
    },
    "projectId": {
      "type": "integer",
      "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version."
    },
    "moveUnfixedIssuesTo": {
      "type": "string",
      "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version."
    },
    "operations": {
      "type": "array",
      "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
      "readOnly": true,
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "styleClass": {
            "type": "string"
          },
          "iconClass": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "weight": {
            "type": "integer"
          }
        }
      }
    },
    "issuesStatusForFixVersion": {
      "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
      "readOnly": true,
      "type": "object",
      "properties": {
        "unmapped": {
          "type": "integer",
          "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
          "readOnly": true
        },
        "toDo": {
          "type": "integer",
          "description": "Count of issues with status *to do*.",
          "readOnly": true
        },
        "inProgress": {
          "type": "integer",
          "description": "Count of issues with status *in progress*.",
          "readOnly": true
        },
        "done": {
          "type": "integer",
          "description": "Count of issues with status *done*.",
          "readOnly": true
        }
      }
    }
  },
  "readOnly": true
}
