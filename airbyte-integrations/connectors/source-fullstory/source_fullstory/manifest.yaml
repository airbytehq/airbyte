version: "0.29.0"

definitions:
  requester:
    url_base: "https://api.fullstory.com"
    http_method: "GET"
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['api_key'] }}"

  large_value_filter:
    type: CustomFilter
    filter_function: |
      def filter_records(records, stream_state, config):
          max_state_value = stream_state.get("createdAt", "9999-04-12T18:13:36.000Z")
          if max_state_value == "9999-04-12T18:13:36.000Z":
              return []
          return records
  retriever:
    type: SimpleRetriever
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path: ["{{ parameters.name }}"]
      paginator:
        type: NoPagination
      # paginator:
      #   type: "DefaultPaginator"
      #   page_size_option:
      #     type: "RequestOption"
      #     inject_into: "request_parameter"
      #     field_name: "{{ response['meta']['per_page'] }}"
      #   pagination_strategy:
      #     type: "PageIncrement"
      #     page_size: 5
      # page_token_option:
      #   type: "RequestOption"
      #   inject_into: "request_parameter"
      #   field_name: "{{ response['meta']['page'] }}"

  operations_stream:
    type: DeclarativeStream
    $parameters:
      name: "operations"
      path: "/operations/v1"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"
      filters:
        - $ref: "#/definitions/large_value_filter"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: "createdAt"
      datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
      cursor_granularity: "PT0.000001S"
      lookback_window: "P31D"
      start_datetime:
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
      end_datetime:
        datetime: "{{ today_utc() }}"
        datetime_format: "%Y-%m-%d"
      step: "P1M"

  sessions_stream:
    type: DeclarativeStream
    $parameters:
      name: "sessions"
      path: "/sessions/v2?{{ 'uid=' ~ config['uid'] }}"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  segments_stream:
    type: DeclarativeStream
    $parameters:
      name: "segments"
      path: "/segments/v1"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"
        filters:
          - $ref: "#/definitions/large_value_filter"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: "created"
      datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
      cursor_granularity: "PT0.000001S"
      lookback_window: "P31D"
      start_datetime:
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
      end_datetime:
        datetime: "{{ today_utc() }}"
        datetime_format: "%Y-%m-%d"
      step: "P1M"
    primary_key: "id"

  blockrules_stream:
    type: DeclarativeStream
    $parameters:
      name: "blockrules"
      path: "/settings/recording/v1/blocking"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  domainsettings_stream:
    type: DeclarativeStream
    $parameters:
      name: "domainsettings"
      path: "/settings/recording/v1/domain"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  geosettings_stream:
    type: DeclarativeStream
    $parameters:
      name: "geosettings"
      path: "/settings/recording/v1/geo"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  recordingfeatures_stream:
    type: DeclarativeStream
    $parameters:
      name: "recordingfeatures"
      path: "/settings/recording/v1/features"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  targetrules_stream:
    type: DeclarativeStream
    $parameters:
      name: "sessionTargetingRules"
      path: "/settings/recording/v1/targeting"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  webhooks_stream:
    type: DeclarativeStream
    $parameters:
      name: "webhooks"
      path: "/webhooks/v1/endpoints"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

  event-types_stream:
    type: DeclarativeStream
    $parameters:
      name: "eventDefs"
      path: "/webhooks/v1/event-types"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"

streams:
  - "#/definitions/sessions_stream"
  - "#/definitions/segments_stream"
  - "#/definitions/operations_stream"
  - "#/definitions/blockrules_stream"
  - "#/definitions/domainsettings_stream"
  - "#/definitions/geosettings_stream"
  - "#/definitions/recordingfeatures_stream"
  - "#/definitions/targetrules_stream"
  - "#/definitions/webhooks_stream"
  - "#/definitions/event-types_stream"

check:
  type: CheckStream
  stream_names:
    - "sessions"
