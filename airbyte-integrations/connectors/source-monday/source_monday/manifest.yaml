version: "0.29.0"

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_monday/schemas/{{ parameters['name'] }}.json"
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
        - "data"
        - "{{ parameters['name'] }}"

  requester:
    type: CustomRequester
    class_name: "source_monday.MondayGraphqlRequester"
    url_base: "https://api.monday.com/v2"
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials', {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token') if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token', '') }}"
    limit: "{{ parameters['items_per_page'] }}"
    nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
    error_handler:
      type: CompositeErrorHandler
      error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] == 'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] == 'complexityBudgetExhausted' }}"
              action: RETRY
          backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: "
            Ignore the slice when there is no access to the requested entity - 'code: 403, message: None'.
            https://github.com/airbytehq/alpha-beta-issues/issues/846
            "
          response_filters:
            - http_codes: [403]
              action: IGNORE
        - type: "DefaultErrorHandler"
          description: "
            Retry when `Internal Server Error occures - `code: 500, message: Internal server error`.
            https://github.com/airbytehq/alpha-beta-issues/issues/245
            "
          response_filters:
            - http_codes: [500, 502]
              action: RETRY
          backoff_strategies:
            - type: ExponentialBackoffStrategy

  default_paginator:
    type: "DefaultPaginator"
    pagination_strategy:
      type: "PageIncrement"
      start_from_page: 1
      page_size: 100
  retriever:
    record_selector:
      $ref: "#/definitions/selector"
    requester:
      $ref: "#/definitions/requester"
    paginator:
      $ref: "#/definitions/default_paginator"

  base_stream:
    type: DeclarativeStream
    retriever:
      $ref: "#/definitions/retriever"
    schema_loader:
      $ref: "#/definitions/schema_loader"
    primary_key: "id"

  base_nopagination_stream:
    retriever:
      $ref: "#/definitions/retriever"
      paginator:
        type: NoPagination

  tags_stream:
    $ref: "#/definitions/base_nopagination_stream"
    $parameters:
      name: "tags"
      path: ""
  teams_stream:
    $ref: "#/definitions/base_nopagination_stream"
    $parameters:
      name: "teams"
      path: ""
  updates_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "updates"
      path: ""
  users_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "users"
      path: ""
  workspaces_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "workspaces"
      path: ""

  double_paginator:
    $ref: "#/definitions/default_paginator"
    pagination_strategy:
      class_name: "source_monday.item_pagination_strategy.ItemPaginationStrategy"
      type: "CustomPaginationStrategy"

  cursor_paginator:
    $ref: "#/definitions/default_paginator"
    pagination_strategy:
      class_name: "source_monday.item_pagination_strategy.ItemCursorPaginationStrategy"
      type: "CustomPaginationStrategy"

  activity_logs_stream:
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: "created_at_int"
      start_datetime: "1"
      datetime_format: "%s"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      record_selector:
        $ref: "#/definitions/selector"
        extractor:
          class_name: "source_monday.extractor.MondayActivityExtractor"
      paginator:
        $ref: "#/definitions/double_paginator"
    $parameters:
      name: "activity_logs"
      primary_key: "id"
      path: ""
      items_per_page: 1
      page_size: 50
      nested_items_per_page: 50

  # Substream partition router for semi-incremental streams
  substream_partition_router:
    type: SubstreamPartitionRouter
    parent_stream_configs:
      - type: ParentStreamConfig
        stream: "#/definitions/activity_logs_stream"
        parent_key: "board_id" # For boards_stream
        partition_field: "ids"

  incremental_extractor:
    class_name: "source_monday.extractor.MondayIncrementalItemsExtractor"

  # Boards Stream: Split into full refresh and incremental, then combine with StateDelegatingStream
  boards_stream:
    type: StateDelegatingStream
    $parameters:
      name: "boards"
    full_refresh_stream: "#/definitions/boards_stream_full_refresh"
    incremental_stream: "#/definitions/boards_stream_incremental"

  state_delegating_stream:
    $ref: "#/definitions/base_stream"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: "updated_at_int"
      start_datetime: "1"
      datetime_format: "%s"

  boards_stream_full_refresh:
    $ref: "#/definitions/state_delegating_stream"
    $parameters:
      path: ""
      stream_mode: "full_refresh"
      items_per_page: 10
      nested_items_per_page: 10
      field_path: ["data", "boards", "*"]
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 10
      record_selector:
        $ref: "#/definitions/selector"
        extractor:
          $ref: "#/definitions/incremental_extractor"

  boards_stream_incremental:
    $ref: "#/definitions/state_delegating_stream"
    $parameters:
      path: ""
      stream_mode: "incremental"
      items_per_page: 10
      nested_items_per_page: 10
      field_path: ["data", "boards", "*"]
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 10
      record_selector:
        $ref: "#/definitions/selector"
        extractor:
          $ref: "#/definitions/incremental_extractor"
      partition_router:
        type: GroupingPartitionRouter
        underlying_partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              stream: "#/definitions/activity_logs_stream"
              parent_key: "board_id"
              partition_field: "ids"
              incremental_dependency: true
        group_size: 10
        deduplicate: true
      state_migrations:
        - type: CustomStateMigration
          class_name: source_monday.state_migration.MondayStateMigration

  items_stream:
    type: StateDelegatingStream
    $parameters:
      name: "items"
    full_refresh_stream: "#/definitions/items_stream_full_refresh"
    incremental_stream: "#/definitions/items_stream_incremental"

  items_stream_full_refresh:
    $ref: "#/definitions/state_delegating_stream"
    $parameters:
      path: ""
      stream_mode: "full_refresh"
      items_per_page: 1
      page_size: 20
      nested_items_per_page: 20
      field_path: ["data", "boards", "*", "items_page", "items", "*"]
      field_path_pagination: ["data", "next_items_page", "items", "*"]
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      record_selector:
        $ref: "#/definitions/selector"
        extractor:
          $ref: "#/definitions/incremental_extractor"

  items_stream_incremental:
    $ref: "#/definitions/state_delegating_stream"
    $parameters:
      path: ""
      stream_mode: "incremental"
      page_size: 20
      nested_items_per_page: 20
      field_path: ["data", "items", "*"]
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      record_selector:
        $ref: "#/definitions/selector"
        extractor:
          $ref: "#/definitions/incremental_extractor"
      partition_router:
        type: GroupingPartitionRouter
        underlying_partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              stream: "#/definitions/activity_logs_stream"
              parent_key: "pulse_id"
              partition_field: "ids"
              incremental_dependency: true
        group_size: 20
        deduplicate: true
    state_migrations:
      - type: CustomStateMigration
        class_name: source_monday.state_migration.MondayStateMigration
streams:
  - "#/definitions/items_stream"
  - "#/definitions/boards_stream"
  - "#/definitions/tags_stream"
  - "#/definitions/teams_stream"
  - "#/definitions/updates_stream"
  - "#/definitions/users_stream"
  - "#/definitions/workspaces_stream"
  - "#/definitions/activity_logs_stream"

check:
  stream_names:
    - "users"

# The smallest limit for 1 minute is 250 queries, so set the default number of workers to 4. https://developer.monday.com/api-reference/docs/rate-limits#minute-limit
concurrency_level:
  type: ConcurrencyLevel
  default_concurrency: "{{ config.get('num_workers', 4) }}"
  max_concurrency: 40
