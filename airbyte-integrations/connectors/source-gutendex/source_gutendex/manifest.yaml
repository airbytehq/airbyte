version: 0.78.1

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - books

definitions:
  streams:
    books:
      type: DeclarativeStream
      name: books
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /books
          http_method: GET
          request_parameters:
            author_year_start: "{{ config['author_year_start'] }}"
            author_year_end: "{{ config['author_year_end'] }}"
            copyright: "{{ config['copyright'] }}"
            languages: "{{ config['languages'] }}"
            search: "{{ config['search'] }}"
            sort: "{{ config['sort'] }}"
            topic: "{{ config['topic'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - results
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: page
          page_size_option:
            type: RequestOption
            inject_into: body_data
            field_name: page_size
          pagination_strategy:
            type: PageIncrement
            page_size: 32
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/books"
  base_requester:
    type: HttpRequester
    url_base: https://gutendex.com/

streams:
  - $ref: "#/definitions/streams/books"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required: []
    properties:
      author_year_end:
        type: string
        description: >-
          (Optional) Defines the maximum birth year of the authors. Books by
          authors born after the end year will not be returned. Supports both
          positive (CE) or negative (BCE) integer values
        pattern: ^[-]?[0-9]{1,4}$
        examples:
          - 2002
          - 500
          - -500
          - 2020
        order: 0
      author_year_start:
        type: string
        description: >-
          (Optional) Defines the minimum birth year of the authors. Books by
          authors born prior to the start year will not be returned. Supports
          both positive (CE) or negative (BCE) integer values
        pattern: ^[-]?[0-9]{1,4}$
        examples:
          - 2002
          - 500
          - -500
          - 2020
        order: 1
      copyright:
        type: string
        description: >-
          (Optional) Use this to find books with a certain copyright status -
          true for books with existing copyrights, false for books in the public
          domain in the USA, or null for books with no available copyright
          information.
        pattern: ^(true|false|null)$
        examples:
          - true
          - false
          - null
        order: 2
      languages:
        type: string
        description: >-
          (Optional) Use this to find books in any of a list of languages. They
          must be comma-separated, two-character language codes.
        examples:
          - en
          - en,fr,fi
        order: 3
      search:
        type: string
        description: >-
          (Optional) Use this to search author names and book titles with given
          words. They must be separated by a space (i.e. %20 in URL-encoded
          format) and are case-insensitive.
        examples:
          - dickens%20great%20expect
          - dickens
        order: 4
      sort:
        type: string
        description: >-
          (Optional) Use this to sort books - ascending for Project Gutenberg ID
          numbers from lowest to highest, descending for IDs highest to lowest,
          or popular (the default) for most popular to least popular by number
          of downloads.
        pattern: ^(ascending|descending|popular)$
        examples:
          - ascending
          - descending
          - popular
        order: 5
      topic:
        type: string
        description: >-
          (Optional) Use this to search for a case-insensitive key-phrase in
          books' bookshelves or subjects.
        examples:
          - children
          - fantasy
        order: 6
    additionalProperties: true

metadata:
  autoImportSchema:
    books: false

schemas:
  books:
    type: object
    $schema: http://json-schema.org/draft-04/schema#
    additionalProperties: true
    properties:
      authors:
        type: array
        items:
          type: object
          properties:
            birth_year:
              type:
                - integer
                - "null"
            death_year:
              type:
                - integer
                - "null"
            name:
              type: string
          required:
            - name
            - birth_year
            - death_year
      bookshelves:
        type: array
        items:
          type: string
      copyright:
        type:
          - boolean
          - "null"
      download_count:
        type: integer
      formats:
        type: object
        properties:
          application/epub+zip:
            type: string
          application/octet-stream:
            type: string
          application/rdf+xml:
            type: string
          application/x-mobipocket-ebook:
            type: string
          image/jpeg:
            type: string
          text/html:
            type: string
          text/plain; charset=us-ascii:
            type: string
      id:
        type: integer
      languages:
        type: array
        items:
          type: string
      media_type:
        type: string
      subjects:
        type: array
        items:
          type: string
      title:
        type: string
      translators:
        type: array
        items:
          type: object
          properties:
            birth_year:
              type:
                - integer
                - "null"
            death_year:
              type:
                - integer
                - "null"
            name:
              type: string
          required:
            - name
            - birth_year
            - death_year
