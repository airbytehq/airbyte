version: 5.12.0

type: DeclarativeSource

description: This directory contains the manifest-only connector for source-zoho-desk

check:
  type: CheckStream
  stream_names:
    - organization

definitions:
  streams:
    organization:
      type: DeclarativeStream
      name: organization
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: organizations/{{ stream_partition.organization_id }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: organization_id
              stream:
                $ref: "#/definitions/streams/organizations"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/organization"
    organizations:
      type: DeclarativeStream
      name: organizations
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /organizations
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/organizations"
    accessible_organizations:
      type: DeclarativeStream
      name: accessible_organizations
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accessibleOrganizations
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accessible_organizations"
    agent:
      type: DeclarativeStream
      name: agent
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agents/{{ stream_partition.agent_id }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: agent_id
              stream:
                $ref: "#/definitions/streams/agents"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agent"
    agents:
      type: DeclarativeStream
      name: agents
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agents
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agents"
    agent_details_by_id:
      type: DeclarativeStream
      name: agent_details_by_id
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agentsByIds?agentIds={{ stream_partition.agent_id }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: agent_id
              stream:
                $ref: "#/definitions/streams/agents"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agent_details_by_id"
    profiles:
      type: DeclarativeStream
      name: profiles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /profiles
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/profiles"
    roles:
      type: DeclarativeStream
      name: roles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /roles
          http_method: GET
          request_parameters:
            limit: "{{ config['limit'] }}"
            isDefault: "{{ config['isdefault'] }}"
            isVisible: "{{ config['isvisible'] }}"
            searchStr: "{{ config['searchstr'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/roles"
    teams:
      type: DeclarativeStream
      name: teams
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /teams
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - teams
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/teams"
    team_members:
      type: DeclarativeStream
      name: team_members
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /teams/{{ stream_partition.team_id }}/members
          http_method: GET
          request_parameters:
            include: "{{ config[\"include\"] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - members
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: team_id
              stream:
                $ref: "#/definitions/streams/teams"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/team_members"
    departments:
      type: DeclarativeStream
      name: departments
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /departments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/departments"
    channels:
      type: DeclarativeStream
      name: channels
      primary_key:
        - code
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /channels
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/channels"
    tickets:
      type: DeclarativeStream
      name: tickets
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/tickets"
    all_threads:
      type: DeclarativeStream
      name: all_threads
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ stream_partition.ticket_id }}/threads
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: ticket_id
              stream:
                $ref: "#/definitions/streams/tickets"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/all_threads"
    get_latest_thread:
      type: DeclarativeStream
      name: get_latest_thread
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ stream_partition.ticket_id }}/latestThread
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: ticket_id
              stream:
                $ref: "#/definitions/streams/tickets"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/get_latest_thread"
    list_contacts:
      type: DeclarativeStream
      name: list_contacts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /contacts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/list_contacts"
    webhooks:
      type: DeclarativeStream
      name: webhooks
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /webhooks
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/webhooks"
    accounts:
      type: DeclarativeStream
      name: accounts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accounts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accounts"
    contracts:
      type: DeclarativeStream
      name: contracts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accounts/{{ stream_partition.account_id }}/contracts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: account_id
              stream:
                $ref: "#/definitions/streams/accounts"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/contracts"
    tasks:
      type: DeclarativeStream
      name: tasks
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tasks
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/tasks"
    products:
      type: DeclarativeStream
      name: products
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /products
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/products"
    articles:
      type: DeclarativeStream
      name: articles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /articles
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/articles"
    events:
      type: DeclarativeStream
      name: events
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /events
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/events"
    modules:
      type: DeclarativeStream
      name: modules
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /organizationModules
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/modules"
    users:
      type: DeclarativeStream
      name: users
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /users
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/users"
    ticket_activities:
      type: DeclarativeStream
      name: ticket_activities
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ stream_partition.ticket_id }}/activities
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: ticket_id
              stream:
                $ref: "#/definitions/streams/tickets"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/ticket_activities"
    product_attachments:
      type: DeclarativeStream
      name: product_attachments
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /products/{{ stream_partition.product_id }}/attachments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 100
            inject_on_first_request: true
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: product_id
              stream:
                $ref: "#/definitions/streams/products"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/product_attachments"
    product:
      type: DeclarativeStream
      name: product
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /products/{{ stream_partition.product_id }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 100
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: product_id
              stream:
                $ref: "#/definitions/streams/products"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/product"
    task_attachments:
      type: DeclarativeStream
      name: task_attachments
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tasks/{{ stream_partition.task_id }}/attachments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 100
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: task_id
              stream:
                $ref: "#/definitions/streams/tasks"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/task_attachments"
    calls:
      type: DeclarativeStream
      name: calls
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /calls
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 100
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/calls"
    call:
      type: DeclarativeStream
      name: call
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /calls/{{ stream_partition.call_id }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 100
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: call_id
              stream:
                $ref: "#/definitions/streams/calls"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/call"
    call_comments:
      type: DeclarativeStream
      name: call_comments
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /calls/{{ stream_partition.call_id }}/comments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: call_id
              stream:
                $ref: "#/definitions/streams/calls"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/call_comments"
    dashboard:
      type: DeclarativeStream
      name: dashboard
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /dashboards/createdTickets
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
        partition_router:
          - type: ListPartitionRouter
            values:
              - date
              - channel
              - agent
            cursor_field: groupBy
            request_option:
              type: RequestOption
              field_name: groupBy
              inject_into: request_parameter
          - type: ListPartitionRouter
            values:
              - LAST_7_DAYS
            cursor_field: duration
            request_option:
              type: RequestOption
              inject_into: request_parameter
              field_name: duration
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/dashboard"
  base_requester:
    type: HttpRequester
    url_base: https://desk.zoho.com/api/v1
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config[\"api_key\"] }}"

streams:
  - $ref: "#/definitions/streams/organization"
  - $ref: "#/definitions/streams/organizations"
  - $ref: "#/definitions/streams/accessible_organizations"
  - $ref: "#/definitions/streams/agent"
  - $ref: "#/definitions/streams/agents"
  - $ref: "#/definitions/streams/agent_details_by_id"
  - $ref: "#/definitions/streams/profiles"
  - $ref: "#/definitions/streams/roles"
  - $ref: "#/definitions/streams/teams"
  - $ref: "#/definitions/streams/team_members"
  - $ref: "#/definitions/streams/departments"
  - $ref: "#/definitions/streams/channels"
  - $ref: "#/definitions/streams/tickets"
  - $ref: "#/definitions/streams/all_threads"
  - $ref: "#/definitions/streams/get_latest_thread"
  - $ref: "#/definitions/streams/list_contacts"
  - $ref: "#/definitions/streams/webhooks"
  - $ref: "#/definitions/streams/accounts"
  - $ref: "#/definitions/streams/contracts"
  - $ref: "#/definitions/streams/tasks"
  - $ref: "#/definitions/streams/products"
  - $ref: "#/definitions/streams/articles"
  - $ref: "#/definitions/streams/events"
  - $ref: "#/definitions/streams/modules"
  - $ref: "#/definitions/streams/users"
  - $ref: "#/definitions/streams/ticket_activities"
  - $ref: "#/definitions/streams/product_attachments"
  - $ref: "#/definitions/streams/product"
  - $ref: "#/definitions/streams/task_attachments"
  - $ref: "#/definitions/streams/calls"
  - $ref: "#/definitions/streams/call"
  - $ref: "#/definitions/streams/call_comments"
  - $ref: "#/definitions/streams/dashboard"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
    properties:
      api_key:
        type: string
        order: 0
        title: API Key
        airbyte_secret: true
    additionalProperties: true

metadata:
  autoImportSchema:
    organization: true
    organizations: false
    accessible_organizations: false
    agent: false
    agents: false
    agent_details_by_id: false
    profiles: false
    roles: false
    teams: false
    team_members: false
    departments: false
    channels: false
    tickets: false
    all_threads: false
    get_latest_thread: false
    list_contacts: false
    webhooks: false
    accounts: false
    contracts: false
    tasks: false
    products: false
    articles: false
    events: false
    modules: false
    users: false
    ticket_activities: false
    product_attachments: false
    product: false
    task_attachments: false
    calls: false
    call: false
    call_comments: false
    dashboard: false
  testedStreams:
    organization:
      streamHash: acea5e734e47b6c70fe9daf026db8308baaf85bc
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    organizations:
      hasRecords: true
      streamHash: f08371a4851fa6643aecbf594721c3cbfab22d3f
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    accessible_organizations:
      hasRecords: true
      streamHash: d939e1ab5e1ffba2025584ed89d2e8683d41a38d
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    agent:
      hasRecords: true
      streamHash: 0aba0bd9a7e12c5464a9819de5bd583d3dd97425
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    agents:
      hasRecords: true
      streamHash: ad4a02705fa0fbb30ed9aa63abdbce4c6c775f8b
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    agent_details_by_id:
      hasRecords: true
      streamHash: c50e2729278a9825f71a584d3332e0a46480908d
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    profiles:
      hasRecords: true
      streamHash: 716ea0f7fc0af469d5d8038d53699e62c0b58b5d
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    roles:
      hasRecords: true
      streamHash: 63c74cb90ae9d9e8e92f41a23102203da52d7e96
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    teams:
      hasRecords: true
      streamHash: ebf7928916e8e7fcf0b4af89b3e3dd3d4e531d1a
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    team_members:
      hasRecords: true
      streamHash: d74035a4382dc1fe9523c236410f9c5d6f2ecacd
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    departments:
      hasRecords: true
      streamHash: e7b14bf6a53abccf187baf504a59c1be2af4d53c
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    channels:
      hasRecords: true
      streamHash: 4d737781ba8a7ad229f0f1d3c3d2cfcbc595b832
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    tickets:
      hasRecords: true
      streamHash: ff102f1577595dbd2be76cca80c42df33b66ac8a
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    all_threads:
      hasRecords: true
      streamHash: d56e37bbc9d3dccee3a55e8f872a1ed94a90a4be
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    get_latest_thread:
      hasRecords: true
      streamHash: 193363507e43f82e2cc11839f221ae3d7280e014
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    list_contacts:
      hasRecords: true
      streamHash: 91c9d80ce6600c58bf05b313dad5587e909c8c06
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    webhooks:
      hasRecords: true
      streamHash: 8db973b7c64f698fc0292049c100429ef7756376
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    accounts:
      hasRecords: true
      streamHash: f2e476d872614030c81da97767c34ae125441116
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    contracts:
      hasRecords: true
      streamHash: e1a1e68f4b7b626345ccb629ae4007c5fdd41fed
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    tasks:
      hasRecords: true
      streamHash: 18513f5affdd44eecabd953e7cfdb2bd165250b4
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    products:
      hasRecords: true
      streamHash: 1d92c131dcd6afdd4f18038c1a3e2a79629c55b8
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    articles:
      hasRecords: true
      streamHash: 7d56b794b8c9f300439dd9a3806ffded653b1389
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    events:
      hasRecords: true
      streamHash: f74cab4416f7ac5d5e1a37041162c5380949e5d1
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    modules:
      hasRecords: true
      streamHash: f159c8e73b927c9c08a3fda810e735c8390569e3
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    users:
      hasRecords: true
      streamHash: fa2a3a79e0f279a83a434c7207f318757b59d6b7
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    ticket_activities:
      hasRecords: true
      streamHash: e22c7434d5693c308de99943f1c76d35949f33e1
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    product_attachments:
      hasRecords: true
      streamHash: 586f3f8078d4207f52115cd05228c5572648c1c0
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    product:
      hasRecords: true
      streamHash: 2d2d153c79b97b391f47a388f95c7f4186656ce7
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    task_attachments:
      hasRecords: true
      streamHash: c3c8fd76adfd118c6e5e2b66343116dc37bf7b50
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    calls:
      hasRecords: true
      streamHash: 91e5c2908936141dcd9e11d9000d6b3f4364da17
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    call:
      hasRecords: true
      streamHash: 5a810f8d7016266c4a64ac80094de19e4600b473
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    call_comments:
      hasRecords: true
      streamHash: 6f5b231dc79c858da74bc9ae16febadf7dd29ddb
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    dashboard:
      streamHash: f5f8be1c531c122a2e719be8cbc8f6514c80f5c4
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  assist:
    docsUrl: https://desk.zoho.com/DeskAPIDocument

schemas:
  organization:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      city:
        type:
          - string
          - "null"
      companyName:
        type:
          - string
          - "null"
      country:
        type:
          - string
          - "null"
      currencyCode:
        type:
          - string
          - "null"
      currencyLocale:
        type:
          - string
          - "null"
      currencySymbol:
        type:
          - string
          - "null"
      edition:
        type:
          - string
          - "null"
      employeeCount:
        type:
          - number
          - "null"
      faviconURL:
        type:
          - string
          - "null"
      fax:
        type:
          - string
          - "null"
      id:
        type: number
      isAdminInOrg:
        type:
          - boolean
          - "null"
      isDefault:
        type:
          - boolean
          - "null"
      isPayloadEncryptionEnabled:
        type:
          - boolean
          - "null"
      isSandboxPortal:
        type:
          - boolean
          - "null"
      logoURL:
        type:
          - string
          - "null"
      mobile:
        type:
          - string
          - "null"
      phoneNumber:
        type:
          - string
          - "null"
      portalName:
        type:
          - string
          - "null"
      portalURL:
        type:
          - string
          - "null"
      primaryContact:
        type:
          - string
          - "null"
      state:
        type:
          - string
          - "null"
      street:
        type:
          - string
          - "null"
      website:
        type:
          - string
          - "null"
      zip:
        type:
          - string
          - "null"
    required:
      - id
  organizations:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  accessible_organizations:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agent:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agents:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agent_details_by_id:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  profiles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  roles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  teams:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  team_members:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  departments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  channels:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  tickets:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  all_threads:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  get_latest_thread:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  list_contacts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  webhooks:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  accounts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  contracts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  tasks:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  products:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  articles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  events:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  modules:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  users:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  ticket_activities:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  product_attachments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  product:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  task_attachments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  calls:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  call:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  call_comments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  dashboard:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
