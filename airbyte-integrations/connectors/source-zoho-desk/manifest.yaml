version: 5.12.0

type: DeclarativeSource

description: This directory contains the manifest-only connector for source-zoho-desk

check:
  type: CheckStream
  stream_names:
    - organization

definitions:
  streams:
    organization:
      type: DeclarativeStream
      name: organization
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: organizations/{{ config['organization_Id'] }}
          http_method: GET
          request_parameters:
            includeCustomDomain: "{{ config['include_custom_domain'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/organization"
    organizations:
      type: DeclarativeStream
      name: organizations
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /organizations
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/organizations"
    accessible_organizations:
      type: DeclarativeStream
      name: accessible_organizations
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accessibleOrganizations
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accessible_organizations"
    agent:
      type: DeclarativeStream
      name: agent
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agents/{{ config['agent_id'] }}
          http_method: GET
          request_parameters:
            include: "{{ config['include'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agent"
    agents:
      type: DeclarativeStream
      name: agents
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agents
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agents"
    agent_details_by_id:
      type: DeclarativeStream
      name: agent_details_by_id
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /agentsByIds?agentIds={{ config['agent_ids'] }}
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/agent_details_by_id"
    profiles:
      type: DeclarativeStream
      name: profiles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /profiles
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/profiles"
    roles:
      type: DeclarativeStream
      name: roles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /roles
          http_method: GET
          request_parameters:
            limit: "{{ config['limit'] }}"
            isVisible: "{{ config['isvisible'] }}"
            isDefault: "{{ config['isdefault'] }}"
            searchStr: "{{ config['searchstr'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/roles"
    teams:
      type: DeclarativeStream
      name: teams
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /teams
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - teams
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/teams"
    team_members:
      type: DeclarativeStream
      name: team_members
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /teams/{{ config['team_id'] }}/members
          http_method: GET
          request_parameters:
            include: "{{ config[\"include\"] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - members
        paginator:
          type: DefaultPaginator
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/team_members"
    departments:
      type: DeclarativeStream
      name: departments
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /departments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/departments"
    channels:
      type: DeclarativeStream
      name: channels
      primary_key:
        - code
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /channels
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/channels"
    tickets:
      type: DeclarativeStream
      name: tickets
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/tickets"
    all_threads:
      type: DeclarativeStream
      name: all_threads
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ config['ticket_id'] }}/threads
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/all_threads"
    get_latest_thread:
      type: DeclarativeStream
      name: get_latest_thread
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ config['ticket_id'] }}/latestThread
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/get_latest_thread"
    list_contacts:
      type: DeclarativeStream
      name: list_contacts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /contacts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/list_contacts"
    webhooks:
      type: DeclarativeStream
      name: webhooks
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /webhooks
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/webhooks"
    accounts:
      type: DeclarativeStream
      name: accounts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accounts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accounts"
    contracts:
      type: DeclarativeStream
      name: contracts
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /accounts/{{ config['account_id'] }}/contracts
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/contracts"
    tasks:
      type: DeclarativeStream
      name: tasks
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tasks
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/tasks"
    products:
      type: DeclarativeStream
      name: products
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /products
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/products"
    articles:
      type: DeclarativeStream
      name: articles
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /articles
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/articles"
    events:
      type: DeclarativeStream
      name: events
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /events
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/events"
    modules:
      type: DeclarativeStream
      name: modules
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /organizationModules
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/modules"
    users:
      type: DeclarativeStream
      name: users
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /users
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: true
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/users"
    ticket_activities:
      type: DeclarativeStream
      name: ticket_activities
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /tickets/{{ config['ticket_id'] }}/activities
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: from
          pagination_strategy:
            type: OffsetIncrement
            page_size: 50
            inject_on_first_request: false
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/ticket_activities"
  base_requester:
    type: HttpRequester
    url_base: https://desk.zoho.com/api/v1
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config[\"api_key\"] }}"

streams:
  - $ref: "#/definitions/streams/organization"
  - $ref: "#/definitions/streams/organizations"
  - $ref: "#/definitions/streams/accessible_organizations"
  - $ref: "#/definitions/streams/agent"
  - $ref: "#/definitions/streams/agents"
  - $ref: "#/definitions/streams/agent_details_by_id"
  - $ref: "#/definitions/streams/profiles"
  - $ref: "#/definitions/streams/roles"
  - $ref: "#/definitions/streams/teams"
  - $ref: "#/definitions/streams/team_members"
  - $ref: "#/definitions/streams/departments"
  - $ref: "#/definitions/streams/channels"
  - $ref: "#/definitions/streams/tickets"
  - $ref: "#/definitions/streams/all_threads"
  - $ref: "#/definitions/streams/get_latest_thread"
  - $ref: "#/definitions/streams/list_contacts"
  - $ref: "#/definitions/streams/webhooks"
  - $ref: "#/definitions/streams/accounts"
  - $ref: "#/definitions/streams/contracts"
  - $ref: "#/definitions/streams/tasks"
  - $ref: "#/definitions/streams/products"
  - $ref: "#/definitions/streams/articles"
  - $ref: "#/definitions/streams/events"
  - $ref: "#/definitions/streams/modules"
  - $ref: "#/definitions/streams/users"
  - $ref: "#/definitions/streams/ticket_activities"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - organization_Id
      - include_custom_domain
      - api_key
      - agent_id
      - agent_ids
      - profile_id
      - team_id
      - department_id
      - ticket_id
      - account_id
    properties:
      organization_Id:
        type: string
        description: Organization ID
        order: 0
        title: organization_Id
      include_custom_domain:
        type: boolean
        description: >-
          Key that denotes if the customDomain field must be included in the API
          response
        order: 1
        title: include Custom Domain
      api_key:
        type: string
        order: 2
        title: API Key
        airbyte_secret: true
      agent_id:
        type: string
        description: Agent unique id
        order: 3
        title: agent_id
      include:
        type: string
        description: >-
          Secondary information related to the agent. Values allowed are
          profile, role, associatedDepartments, associatedChatDepartments and
          verifiedEmails. You can include all four values by separating them
          with commas in the API request.
        order: 4
        title: include
      status:
        type: string
        description: >-
          Parameter that filters agents based on their activation status: ACTIVE
          or DISABLED
        order: 5
        title: status
      isconfirmed:
        type: boolean
        description: Filters Confirmed & Unconfirmed agents
        order: 6
        title: isConfirmed
      include_light_agent:
        type: string
        description: count Light Agent
        order: 7
        title: include Light Agent
      agent_ids:
        type: string
        description: agent ids
        order: 8
        title: agent_ids
      profile_id:
        type: string
        description: Profile ID
        title: profile_id
        order: 9
      limit:
        type: integer
        description: >-
          Number of roles to display. The default value is 15 and the maximum
          value allowed is 500.
        title: limit
        order: 10
      isvisible:
        type: boolean
        description: " Key that filters roles according to their visibility in the UI"
        title: isVisible
        order: 11
      isdefault:
        type: boolean
        description: >-
          Key that denotes whether the roles must be default roles or custom
          roles
        title: isDefault
        order: 12
      searchstr:
        type: string
        description: >-
          String to search for roles by name or description. The string must
          contain at least one character. Three search methods are supported: 1)
          string* - Searches for roles whose name or description start with the
          string, 2) *string* - Searches for roles whose name or description
          contain the string, 3) string - Searches for roles whose name or
          description is an exact match for the string
        title: searchStr
        order: 13
      team_id:
        type: string
        description: Team ID
        title: team_id
        order: 14
      department_id:
        type: string
        description: Department Id
        title: department_id
        order: 15
      ticket_id:
        type: string
        description: ticket id
        title: ticket_id
        order: 16
      account_id:
        type: string
        description: Account ID
        title: account_id
        order: 17
    additionalProperties: true

metadata:
  autoImportSchema:
    organization: true
    organizations: false
    accessible_organizations: false
    agent: false
    agents: false
    agent_details_by_id: false
    profiles: false
    roles: false
    teams: false
    team_members: false
    departments: false
    channels: false
    tickets: false
    all_threads: false
    get_latest_thread: false
    list_contacts: false
    webhooks: false
    accounts: false
    contracts: false
    tasks: false
    products: false
    articles: false
    events: false
    modules: false
    users: false
    ticket_activities: false
  testedStreams:
    organization:
      streamHash: e100a3be5d916a07d391f01e55c73ade8a226d51
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    organizations:
      streamHash: beb1809f2c51390259385f2abad2da222c822e83
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    accessible_organizations:
      streamHash: d939e1ab5e1ffba2025584ed89d2e8683d41a38d
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    agent:
      streamHash: 273abe01b32d946de07971db1ac49cf907cf356c
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    agents:
      streamHash: ad4a02705fa0fbb30ed9aa63abdbce4c6c775f8b
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    agent_details_by_id:
      streamHash: b5be771b85efed73f2db9986de132c9d8f29b70d
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    profiles:
      streamHash: 716ea0f7fc0af469d5d8038d53699e62c0b58b5d
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    roles:
      streamHash: 63c74cb90ae9d9e8e92f41a23102203da52d7e96
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    teams:
      streamHash: ebf7928916e8e7fcf0b4af89b3e3dd3d4e531d1a
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    team_members:
      streamHash: 1659f094a9c5deef31fbadc22a37a99c90ff1d5f
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    departments:
      streamHash: e7b14bf6a53abccf187baf504a59c1be2af4d53c
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    channels:
      streamHash: 4d737781ba8a7ad229f0f1d3c3d2cfcbc595b832
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    tickets:
      streamHash: ff102f1577595dbd2be76cca80c42df33b66ac8a
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    all_threads:
      streamHash: d4c44799063d4c088fcdc9980657f0c9b6e8d447
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    get_latest_thread:
      streamHash: fdccae3c447cfe9082b4f95adb43763dab321076
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    list_contacts:
      streamHash: 91c9d80ce6600c58bf05b313dad5587e909c8c06
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    webhooks:
      streamHash: 8db973b7c64f698fc0292049c100429ef7756376
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    accounts:
      streamHash: f2e476d872614030c81da97767c34ae125441116
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    contracts:
      streamHash: 9d7479483044c119c6f88722a24f6c53321e00f9
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    tasks:
      streamHash: 18513f5affdd44eecabd953e7cfdb2bd165250b4
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    products:
      streamHash: 1d92c131dcd6afdd4f18038c1a3e2a79629c55b8
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    articles:
      streamHash: 7d56b794b8c9f300439dd9a3806ffded653b1389
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    events:
      streamHash: f74cab4416f7ac5d5e1a37041162c5380949e5d1
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    modules:
      streamHash: f159c8e73b927c9c08a3fda810e735c8390569e3
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    users:
      streamHash: fa2a3a79e0f279a83a434c7207f318757b59d6b7
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    ticket_activities:
      streamHash: 2fea00af8b9a70891f38dca788e6f45bf75f1d6f
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  assist:
    docsUrl: https://desk.zoho.com/DeskAPIDocument

schemas:
  organization:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      city:
        type:
          - string
          - "null"
      companyName:
        type:
          - string
          - "null"
      country:
        type:
          - string
          - "null"
      currencyCode:
        type:
          - string
          - "null"
      currencyLocale:
        type:
          - string
          - "null"
      currencySymbol:
        type:
          - string
          - "null"
      edition:
        type:
          - string
          - "null"
      employeeCount:
        type:
          - number
          - "null"
      faviconURL:
        type:
          - string
          - "null"
      fax:
        type:
          - string
          - "null"
      id:
        type:
          - number
          - "null"
      isAdminInOrg:
        type:
          - boolean
          - "null"
      isDefault:
        type:
          - boolean
          - "null"
      isPayloadEncryptionEnabled:
        type:
          - boolean
          - "null"
      isSandboxPortal:
        type:
          - boolean
          - "null"
      logoURL:
        type:
          - string
          - "null"
      mobile:
        type:
          - string
          - "null"
      phoneNumber:
        type:
          - string
          - "null"
      portalName:
        type:
          - string
          - "null"
      portalURL:
        type:
          - string
          - "null"
      primaryContact:
        type:
          - string
          - "null"
      state:
        type:
          - string
          - "null"
      street:
        type:
          - string
          - "null"
      website:
        type:
          - string
          - "null"
      zip:
        type:
          - string
          - "null"
  organizations:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  accessible_organizations:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agent:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agents:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  agent_details_by_id:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  profiles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  roles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  teams:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  team_members:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  departments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  channels:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  tickets:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  all_threads:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  get_latest_thread:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  list_contacts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  webhooks:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  accounts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  contracts:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  tasks:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  products:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  articles:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  events:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  modules:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  users:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  ticket_activities:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
