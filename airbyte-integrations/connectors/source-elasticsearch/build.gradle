plugins {
    id 'application'
    id 'airbyte-docker'
    id 'airbyte-integration-test-java'
    id 'airbyte-connector-acceptance-test'
}

application {
    mainClass = 'io.airbyte.integrations.source.elasticsearch.ElasticsearchSource'
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

dependencies {
    implementation project(':airbyte-config-oss:config-models-oss')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-integrations:bases:base-java')
    implementation files(project(':airbyte-integrations:bases:base-java').airbyteDocker.outputs)

    implementation 'co.elastic.clients:elasticsearch-java:7.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

    // EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
    // https://eclipse-ee4j.github.io/jsonp/
    implementation 'jakarta.json:jakarta.json-api:2.0.1'

    // Needed even if using Jackson to have an implementation of the Jsonp object model
    // EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
    // https://github.com/eclipse-ee4j/jsonp
    implementation 'org.glassfish:jakarta.json:2.0.1'

    //  MIT
    //  https://www.testcontainers.org/
    testImplementation libs.connectors.testcontainers.elasticsearch
    integrationTestJavaImplementation libs.connectors.testcontainers.elasticsearch

    integrationTestJavaImplementation project(':airbyte-integrations:bases:standard-source-test')
    integrationTestJavaImplementation project(':airbyte-integrations:connectors:source-elasticsearch')
}

repositories {
    maven {
        name = "ESSnapshots"
        url = "https://snapshots.elastic.co/maven/"
    }
    maven {
        name = "ESJavaGithubPackages"
        url = "https://maven.pkg.github.com/elastic/elasticsearch-java"
    }
}
