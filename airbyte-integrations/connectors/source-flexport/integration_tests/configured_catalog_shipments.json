{
  "streams": [
    {
      "stream": {
        "name": "shipments",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "metadata": {
              "type": "object",
              "description": "Set of custom key-values specific to the object. The keys are strings and values are arrays of strings. The set of valid keys is always the consignee's list of keys, even if call was made by a different party."
            },
            "_object": {
              "type": "string",
              "description": "String representing the object's type. Always /shipment for this object.",
              "pattern": "^/shipment$"
            },
            "id": {
              "type": "integer",
              "description": "Unique identifier for the object."
            },
            "name": {
              "type": "string",
              "description": "Name of the shipment."
            },
            "booking": {
              "description": "The booking associated with this shipment",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "properties": {
                    "_object": {
                      "type": "string",
                      "description": "String representing the object's type. Always /api/refs/object for this object.",
                      "pattern": "^/api/refs/object$"
                    },
                    "link": {
                      "type": "string",
                      "description": "API end point that points to a resource."
                    },
                    "ref_type": {
                      "type": "string",
                      "description": "The _object value of the object that the link points to."
                    },
                    "id": {
                      "type": ["integer", "string"],
                      "description": "The id value of the object that the link points to."
                    }
                  }
                }
              ]
            },
            "transportation_mode": {
              "type": "string",
              "description": "Transportation mode of the main carriage of the shipment.",
              "enum": [
                "ocean",
                "air",
                "truck",
                "rail",
                "unknown_transportation",
                "ocean_air",
                "truck_intl",
                "warehouse_storage"
              ]
            },
            "freight_type": {
              "type": "string",
              "description": "The type of freight service provided. One of:",
              "enum": [
                "port_to_door",
                "port_to_port",
                "door_to_door",
                "door_to_port"
              ]
            },
            "archived_at": {
              "type": ["null", "string"],
              "description": "Date when the shipment was archived, if applicable. In ISO8601 UTC format with timezone denoted by Z.",
              "format": "date-time"
            },
            "incoterm": {
              "type": "string",
              "description": "The Incoterm of your shipment.",
              "enum": [
                "EXW",
                "FOB",
                "FAS",
                "FCA",
                "CPT",
                "CFR",
                "CIF",
                "CIP",
                "DAT",
                "DAP",
                "DDP",
                "DPU"
              ]
            },
            "calculated_weight": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /quantity/weight for this object.",
                  "pattern": "^/quantity/weight"
                },
                "value": {
                  "type": "number",
                  "description": "Specifies the quantity of units as a float."
                },
                "unit": {
                  "type": "string",
                  "description": "Specifies the unit of measure for this quantity.",
                  "enum": ["kg", "lbs", "t"]
                }
              }
            },
            "calculated_volume": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /quantity/volume for this object.",
                  "pattern": "^/quantity/volume"
                },
                "value": {
                  "type": "number",
                  "description": "Specifies the quantity of units as a float."
                },
                "unit": {
                  "type": "string",
                  "description": "Specifies the unit of measure for this quantity.",
                  "enum": ["cbm", "cbft"]
                }
              }
            },
            "pieces": {
              "type": ["null", "integer"],
              "description": "Total number of pieces in the shipment."
            },
            "it_number": {
              "type": ["null", "string"],
              "description": "Inbond Transit number used for US Customs"
            },
            "created_date": {
              "type": "string",
              "description": "Date the user confirmed the Flexport quote for this Shipment.",
              "format": "date-time"
            },
            "status": {
              "type": "string",
              "description": "Status of the shipment. One of:",
              "enum": [
                "seller_location",
                "in_transit_to_departure_port",
                "departure_port",
                "in_transit_to_arrival_port",
                "arrival_port",
                "in_transit_to_final_destination",
                "final_destination"
              ]
            },
            "priority": {
              "type": "string",
              "description": "The level of attention Flexport should give to this shipment.",
              "enum": ["standard", "high"]
            },
            "updated_at": {
              "type": "string",
              "description": "Date when the shipment object was last updated. In ISO8601 UTC format with timezone denoted by Z.",
              "format": "date-time"
            },
            "estimated_departure_date": {
              "type": ["null", "string"],
              "description": "Estimated departure date from the first port of the main voyage. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "actual_departure_date": {
              "type": ["null", "string"],
              "description": "Actual departure date from the first port of the main voyage. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "estimated_arrival_date": {
              "type": ["null", "string"],
              "description": "Estimated arrival date to the last port of the main voyage. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "actual_arrival_date": {
              "type": ["null", "string"],
              "description": "Actual arrival date to the last port of the main voyage. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "cargo_ready_date": {
              "type": "string",
              "description": "Date when cargo is ready for pickup at the origin location. Calendar date only, no time.",
              "format": "date"
            },
            "wants_freight_management_bco": {
              "type": "boolean",
              "description": "Determines if a shipment bypasses a freight forwarder and is booked directly with a steamship line."
            },
            "wants_flexport_freight": {
              "type": "boolean",
              "description": "Determines if a shipment is using Flexport services for a combination of import customs clearance or final leg delivery."
            },
            "wants_commercial_invoice_transcription": {
              "type": "boolean"
            },
            "wants_flexport_insurance": {
              "type": "boolean"
            },
            "wants_pickup_service": {
              "type": "boolean"
            },
            "wants_trade_declaration_service": {
              "type": ["null", "boolean"]
            },
            "visibility_only": {
              "type": "boolean",
              "description": "Indicates if a shipment was requested for tracking via the Flexport visibility-only service."
            },
            "wants_delivery_service": {
              "type": "boolean",
              "description": "Determines if Flexport is responsible for door delivery on a shipment."
            },
            "estimated_picked_up_in_full_date": {
              "type": ["null", "string"],
              "description": "Estimated pickup date from the origin location. For ocean shipments with multiple containers, this is the date of last picked up container. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "actual_picked_up_in_full_date": {
              "type": ["null", "string"],
              "description": "Actual pickup date from the origin location. For ocean shipments with multiple containers, this is the date of last picked up container. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "target_delivery_date": {
              "type": ["null", "string"],
              "description": "Target date for when the shipment will be fully delivered. This date is set when the shipment''s booking is confirmed. This value may be different from estimated_delivered_in_full_date, which is updated when there is new information about the progress of a shipment. Date only.",
              "format": "date"
            },
            "estimated_delivered_in_full_date": {
              "type": ["null", "string"],
              "description": "Estimated delivery date to the destination location. For ocean shipments with multiple containers, this is the date of last delivered container. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "actual_delivered_in_full_date": {
              "type": ["null", "string"],
              "description": "Actual delivery date to the destination location. For ocean shipments with multiple containers, this is the date of last delivered container. In ISO8601 format with timezone denoted by +/-HH:MM.",
              "format": "date-time"
            },
            "wants_export_customs_service": {
              "type": "boolean",
              "description": "Determines if the shipment requires Flexport to provide export customs service."
            },
            "wants_import_customs_service": {
              "type": "boolean",
              "description": "Determines if the shipment requires Flexport to provide import customs service."
            },
            "ocean_shipment": {
              "description": "Ocean-specific Shipment information. Available only if this is an ocean shipment. null otherwise.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "properties": {
                    "_object": {
                      "type": "string",
                      "description": "String representing the object's type. Always /ocean/shipment for this object.",
                      "pattern": "^/ocean/shipment$"
                    },
                    "is_lcl": {
                      "type": "boolean",
                      "description": "Flag that indicates whether the object is a LCL shipment."
                    },
                    "house_bill_number": {
                      "type": "string",
                      "description": "House bill of lading number."
                    },
                    "master_bill_number": {
                      "type": ["null", "string"],
                      "description": "Master bill of lading number."
                    },
                    "carrier_booking_number": {
                      "type": ["null", "string"],
                      "description": "Ocean carrier booking reference number."
                    },
                    "confirmed_space_released_at": {
                      "type": ["null", "string"],
                      "format": "date-time"
                    },
                    "containers": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /api/refs/collection for this object.",
                          "pattern": "^/api/refs/collection$"
                        },
                        "link": {
                          "type": "string",
                          "description": "API end point that points to a list of resources"
                        },
                        "ref_type": {
                          "type": "string",
                          "description": "The _object value of each individual element of the list that link points to."
                        }
                      }
                    }
                  }
                }
              ]
            },
            "air_shipment": {
              "description": "Air-specific Shipment information. Available only if this is an air shipment. null otherwise.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "properties": {
                    "_object": {
                      "type": "string",
                      "description": "String representing the object`s type. Always /air/shipment for this object.",
                      "pattern": "^/air/shipment$"
                    },
                    "house_airway_bill": {
                      "type": "string",
                      "description": "House air waybill number"
                    },
                    "master_airway_bill": {
                      "type": "string",
                      "description": "Master air waybill number"
                    },
                    "chargeable_weight": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /quantity/weight for this object.",
                          "pattern": "^/quantity/weight"
                        },
                        "value": {
                          "type": "number",
                          "description": "Specifies the quantity of units as a float."
                        },
                        "unit": {
                          "type": "string",
                          "description": "Specifies the unit of measure for this quantity.",
                          "enum": ["kg", "lbs", "t"]
                        }
                      }
                    },
                    "chargeable_volume": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /quantity/volume for this object.",
                          "pattern": "^/quantity/volume"
                        },
                        "value": {
                          "type": "number",
                          "description": "Specifies the quantity of units as a float."
                        },
                        "unit": {
                          "type": "string",
                          "description": "Specifies the unit of measure for this quantity.",
                          "enum": ["cbm", "cbft"]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "dangerous_goods": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /shipment/dangerous_goods for this object.",
                  "pattern": "^/shipment/dangerous_goods"
                },
                "review_status": {
                  "type": ["null", "string"]
                },
                "classifications": {
                  "type": "array"
                }
              }
            },
            "shippers": {
              "type": "array",
              "description": "Array of shippers of the shipment, represented by the CompanyEntity objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /company_entity for this object.",
                    "pattern": "^/company_entity$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company entity."
                  },
                  "ref": {
                    "type": "string",
                    "description": "Your reference for this company entity, as set in the Network tab."
                  },
                  "mailing_address": {
                    "description": "Address of the company entity.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "_object": {
                            "type": "string",
                            "description": "String representing the object's type. Always /address for this object.",
                            "pattern": "^/address$"
                          },
                          "street_address": {
                            "type": "string",
                            "description": "Address line 1 (Street address/PO Box)."
                          },
                          "street_address2": {
                            "type": ["null", "string"],
                            "description": "Address line 2 (Apartment/Suite/Unit/Building)."
                          },
                          "city": {
                            "type": "string",
                            "description": "City/Town."
                          },
                          "state": {
                            "type": ["null", "string"],
                            "description": "State/County/Province/Region."
                          },
                          "country": {
                            "type": ["null", "string"],
                            "description": "Country."
                          },
                          "country_code": {
                            "type": ["null", "string"],
                            "description": "Two-letter country code (ISO 3166-1 Alpha-2)."
                          },
                          "zip": {
                            "type": ["null", "string"],
                            "description": "ZIP or postal code."
                          },
                          "timezone": {
                            "type": ["null", "string"],
                            "description": "Timezone for this address"
                          },
                          "ref": {
                            "type": ["null", "string"],
                            "description": "Your reference for the address, as set in your network tab"
                          },
                          "unlocode": {
                            "type": ["null", "string"],
                            "description": "If port, then UN/LOCODE (United Nations Code for Trade and Transport Locations)."
                          }
                        }
                      }
                    ]
                  },
                  "vat_numbers": {
                    "type": "array",
                    "description": "Array of VAT numbers of the company entity.",
                    "items": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /company_entity/vat_number for this object.",
                          "pattern": "^/company_entity/vat_number$"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "ISO 3166 two-letter country code of the VAT number's country"
                        },
                        "number": {
                          "type": "string",
                          "description": "Full VAT number, including the country code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "consignees": {
              "type": "array",
              "description": "Array of consignees of the shipment, represented by CompanyEntity objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /company_entity for this object.",
                    "pattern": "^/company_entity$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company entity."
                  },
                  "ref": {
                    "type": "string",
                    "description": "Your reference for this company entity, as set in the Network tab."
                  },
                  "mailing_address": {
                    "description": "Address of the company entity.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "_object": {
                            "type": "string",
                            "description": "String representing the object's type. Always /address for this object.",
                            "pattern": "^/address$"
                          },
                          "street_address": {
                            "type": "string",
                            "description": "Address line 1 (Street address/PO Box)."
                          },
                          "street_address2": {
                            "type": ["null", "string"],
                            "description": "Address line 2 (Apartment/Suite/Unit/Building)."
                          },
                          "city": {
                            "type": "string",
                            "description": "City/Town."
                          },
                          "state": {
                            "type": ["null", "string"],
                            "description": "State/County/Province/Region."
                          },
                          "country": {
                            "type": ["null", "string"],
                            "description": "Country."
                          },
                          "country_code": {
                            "type": ["null", "string"],
                            "description": "Two-letter country code (ISO 3166-1 Alpha-2)."
                          },
                          "zip": {
                            "type": ["null", "string"],
                            "description": "ZIP or postal code."
                          },
                          "timezone": {
                            "type": ["null", "string"],
                            "description": "Timezone for this address"
                          },
                          "ref": {
                            "type": ["null", "string"],
                            "description": "Your reference for the address, as set in your network tab"
                          },
                          "unlocode": {
                            "type": ["null", "string"],
                            "description": "If port, then UN/LOCODE (United Nations Code for Trade and Transport Locations)."
                          }
                        }
                      }
                    ]
                  },
                  "vat_numbers": {
                    "type": "array",
                    "description": "Array of VAT numbers of the company entity.",
                    "items": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /company_entity/vat_number for this object.",
                          "pattern": "^/company_entity/vat_number$"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "ISO 3166 two-letter country code of the VAT number's country"
                        },
                        "number": {
                          "type": "string",
                          "description": "Full VAT number, including the country code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "buyers": {
              "type": "array",
              "description": "Array of buyers of the shipment, represented by CompanyEntity objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /company_entity for this object.",
                    "pattern": "^/company_entity$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company entity."
                  },
                  "ref": {
                    "type": "string",
                    "description": "Your reference for this company entity, as set in the Network tab."
                  },
                  "mailing_address": {
                    "description": "Address of the company entity.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "_object": {
                            "type": "string",
                            "description": "String representing the object's type. Always /address for this object.",
                            "pattern": "^/address$"
                          },
                          "street_address": {
                            "type": "string",
                            "description": "Address line 1 (Street address/PO Box)."
                          },
                          "street_address2": {
                            "type": ["null", "string"],
                            "description": "Address line 2 (Apartment/Suite/Unit/Building)."
                          },
                          "city": {
                            "type": "string",
                            "description": "City/Town."
                          },
                          "state": {
                            "type": ["null", "string"],
                            "description": "State/County/Province/Region."
                          },
                          "country": {
                            "type": ["null", "string"],
                            "description": "Country."
                          },
                          "country_code": {
                            "type": ["null", "string"],
                            "description": "Two-letter country code (ISO 3166-1 Alpha-2)."
                          },
                          "zip": {
                            "type": ["null", "string"],
                            "description": "ZIP or postal code."
                          },
                          "timezone": {
                            "type": ["null", "string"],
                            "description": "Timezone for this address"
                          },
                          "ref": {
                            "type": ["null", "string"],
                            "description": "Your reference for the address, as set in your network tab"
                          },
                          "unlocode": {
                            "type": ["null", "string"],
                            "description": "If port, then UN/LOCODE (United Nations Code for Trade and Transport Locations)."
                          }
                        }
                      }
                    ]
                  },
                  "vat_numbers": {
                    "type": "array",
                    "description": "Array of VAT numbers of the company entity.",
                    "items": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /company_entity/vat_number for this object.",
                          "pattern": "^/company_entity/vat_number$"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "ISO 3166 two-letter country code of the VAT number's country"
                        },
                        "number": {
                          "type": "string",
                          "description": "Full VAT number, including the country code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "sellers": {
              "type": "array",
              "description": "Array of sellers of the shipment, represented by CompanyEntity objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /company_entity for this object.",
                    "pattern": "^/company_entity$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company entity."
                  },
                  "ref": {
                    "type": "string",
                    "description": "Your reference for this company entity, as set in the Network tab."
                  },
                  "mailing_address": {
                    "description": "Address of the company entity.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "_object": {
                            "type": "string",
                            "description": "String representing the object's type. Always /address for this object.",
                            "pattern": "^/address$"
                          },
                          "street_address": {
                            "type": "string",
                            "description": "Address line 1 (Street address/PO Box)."
                          },
                          "street_address2": {
                            "type": ["null", "string"],
                            "description": "Address line 2 (Apartment/Suite/Unit/Building)."
                          },
                          "city": {
                            "type": "string",
                            "description": "City/Town."
                          },
                          "state": {
                            "type": ["null", "string"],
                            "description": "State/County/Province/Region."
                          },
                          "country": {
                            "type": ["null", "string"],
                            "description": "Country."
                          },
                          "country_code": {
                            "type": ["null", "string"],
                            "description": "Two-letter country code (ISO 3166-1 Alpha-2)."
                          },
                          "zip": {
                            "type": ["null", "string"],
                            "description": "ZIP or postal code."
                          },
                          "timezone": {
                            "type": ["null", "string"],
                            "description": "Timezone for this address"
                          },
                          "ref": {
                            "type": ["null", "string"],
                            "description": "Your reference for the address, as set in your network tab"
                          },
                          "unlocode": {
                            "type": ["null", "string"],
                            "description": "If port, then UN/LOCODE (United Nations Code for Trade and Transport Locations)."
                          }
                        }
                      }
                    ]
                  },
                  "vat_numbers": {
                    "type": "array",
                    "description": "Array of VAT numbers of the company entity.",
                    "items": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /company_entity/vat_number for this object.",
                          "pattern": "^/company_entity/vat_number$"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "ISO 3166 two-letter country code of the VAT number's country"
                        },
                        "number": {
                          "type": "string",
                          "description": "Full VAT number, including the country code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "importers_of_record": {
              "type": "array",
              "description": "Array of importers of record of the shipment, represented by CompanyEntity objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /company_entity for this object.",
                    "pattern": "^/company_entity$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company entity."
                  },
                  "ref": {
                    "type": "string",
                    "description": "Your reference for this company entity, as set in the Network tab."
                  },
                  "mailing_address": {
                    "description": "Address of the company entity.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "_object": {
                            "type": "string",
                            "description": "String representing the object's type. Always /address for this object.",
                            "pattern": "^/address$"
                          },
                          "street_address": {
                            "type": "string",
                            "description": "Address line 1 (Street address/PO Box)."
                          },
                          "street_address2": {
                            "type": ["null", "string"],
                            "description": "Address line 2 (Apartment/Suite/Unit/Building)."
                          },
                          "city": {
                            "type": "string",
                            "description": "City/Town."
                          },
                          "state": {
                            "type": ["null", "string"],
                            "description": "State/County/Province/Region."
                          },
                          "country": {
                            "type": ["null", "string"],
                            "description": "Country."
                          },
                          "country_code": {
                            "type": ["null", "string"],
                            "description": "Two-letter country code (ISO 3166-1 Alpha-2)."
                          },
                          "zip": {
                            "type": ["null", "string"],
                            "description": "ZIP or postal code."
                          },
                          "timezone": {
                            "type": ["null", "string"],
                            "description": "Timezone for this address"
                          },
                          "ref": {
                            "type": ["null", "string"],
                            "description": "Your reference for the address, as set in your network tab"
                          },
                          "unlocode": {
                            "type": ["null", "string"],
                            "description": "If port, then UN/LOCODE (United Nations Code for Trade and Transport Locations)."
                          }
                        }
                      }
                    ]
                  },
                  "vat_numbers": {
                    "type": "array",
                    "description": "Array of VAT numbers of the company entity.",
                    "items": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "properties": {
                        "_object": {
                          "type": "string",
                          "description": "String representing the object's type. Always /company_entity/vat_number for this object.",
                          "pattern": "^/company_entity/vat_number$"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "ISO 3166 two-letter country code of the VAT number's country"
                        },
                        "number": {
                          "type": "string",
                          "description": "Full VAT number, including the country code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "items": {
              "type": "array",
              "description": "Array of products and SKUs in the shipment, represented by ShipmentItem objects.",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                  "_object": {
                    "type": "string",
                    "description": "String representing the object's type. Always /shipment_item for this object.",
                    "pattern": "^/shipment_item$"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the object."
                  },
                  "total_units": {
                    "type": "string",
                    "description": "Total quantity of specific SKU within shipment."
                  },
                  "total_weight": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "type": "object",
                    "properties": {
                      "_object": {
                        "type": "string",
                        "description": "String representing the object's type. Always /quantity/weight for this object.",
                        "pattern": "^/quantity/weight"
                      },
                      "value": {
                        "type": "number",
                        "description": "Specifies the quantity of units as a float."
                      },
                      "unit": {
                        "type": "string",
                        "description": "Specifies the unit of measure for this quantity.",
                        "enum": ["kg", "lbs", "t"]
                      }
                    }
                  },
                  "total_volume": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "type": "object",
                    "properties": {
                      "_object": {
                        "type": "string",
                        "description": "String representing the object's type. Always /quantity/volume for this object.",
                        "pattern": "^/quantity/volume"
                      },
                      "value": {
                        "type": "number",
                        "description": "Specifies the quantity of units as a float."
                      },
                      "unit": {
                        "type": "string",
                        "description": "Specifies the unit of measure for this quantity.",
                        "enum": ["cbm", "cbft"]
                      }
                    }
                  },
                  "purchase_order_number": {
                    "type": "string",
                    "description": "Purchase order number associated with SKU within shipment."
                  },
                  "product": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "type": "object",
                    "properties": {
                      "_object": {
                        "type": "string",
                        "description": "String representing the object's type. Always /product for this object.",
                        "pattern": "^/product$"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the object."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of product."
                      },
                      "description": {
                        "type": ["null", "string"],
                        "description": "Description of product."
                      },
                      "sku": {
                        "type": ["null", "string"],
                        "description": "SKU of product."
                      },
                      "product_category": {
                        "type": ["null", "string"],
                        "description": "The category of the product"
                      },
                      "country_of_origin": {
                        "type": ["null", "string"],
                        "description": "Nation in which the product is manufactured"
                      },
                      "client_verified": {
                        "type": "boolean",
                        "description": "Indicates whether Client has verified this Product."
                      },
                      "product_properties": {
                        "type": "array",
                        "description": "An array of product properties, represented by ProductProperty",
                        "items": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "_object": {
                              "type": "string",
                              "description": "String representing the object's type. Always /product/property for this object.",
                              "pattern": "^/product/property$"
                            },
                            "type": {
                              "type": "string",
                              "description": "The property describing the product"
                            },
                            "value": {
                              "type": "string",
                              "description": "The value associated with the product"
                            }
                          }
                        }
                      },
                      "hs_codes": {
                        "type": "array",
                        "description": "DEPRECATED - HS codes can be found in the classifications array",
                        "items": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "_object": {
                              "type": "string",
                              "description": "String representing the object's type. Always /hs_code for this object.",
                              "pattern": "^/hs_code$"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of HS or HTS code classification."
                            },
                            "code": {
                              "type": "string",
                              "description": "6 digit (international HS) or 10 digit (US HTS) code."
                            },
                            "country_code": {
                              "type": "string",
                              "description": "The country code that the HS code belongs to."
                            }
                          }
                        }
                      },
                      "classifications": {
                        "type": "array",
                        "description": "An array of product classifications, represented by Classification",
                        "items": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "_object": {
                              "type": "string",
                              "description": "String representing the object's type. Always /product/classification for this object.",
                              "pattern": "^/product/classification$"
                            },
                            "region": {
                              "type": "string",
                              "description": "The two letter code for the region of the classification"
                            },
                            "codes": {
                              "type": "array",
                              "description": "Array of 6 digit (international HS) or 10 digit (US HTS) code.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "suppliers": {
                        "type": "array",
                        "description": "Array of suppliers.",
                        "items": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "_object": {
                              "type": "string",
                              "description": "String representing the object's type. Always /product/supplier for this object.",
                              "pattern": "^/product/supplier$"
                            },
                            "id": {
                              "type": "integer"
                            },
                            "ref": {
                              "type": "string"
                            },
                            "country_of_origin": {
                              "type": ["null", "string"]
                            }
                          }
                        }
                      },
                      "archived_at": {
                        "type": ["null", "string"],
                        "description": "A date string representing when the product was archived. Will be null if product is not archived. In ISO8601 UTC format with timezone denoted by Z.",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            },
            "legs": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /api/refs/collection for this object.",
                  "pattern": "^/api/refs/collection$"
                },
                "link": {
                  "type": "string",
                  "description": "API end point that points to a list of resources"
                },
                "ref_type": {
                  "type": "string",
                  "description": "The _object value of each individual element of the list that link points to."
                }
              }
            },
            "customs_entries": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /api/refs/collection for this object.",
                  "pattern": "^/api/refs/collection$"
                },
                "link": {
                  "type": "string",
                  "description": "API end point that points to a list of resources"
                },
                "ref_type": {
                  "type": "string",
                  "description": "The _object value of each individual element of the list that link points to."
                }
              }
            },
            "commercial_invoices": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /api/refs/collection for this object.",
                  "pattern": "^/api/refs/collection$"
                },
                "link": {
                  "type": "string",
                  "description": "API end point that points to a list of resources"
                },
                "ref_type": {
                  "type": "string",
                  "description": "The _object value of each individual element of the list that link points to."
                }
              }
            },
            "documents": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "properties": {
                "_object": {
                  "type": "string",
                  "description": "String representing the object's type. Always /api/refs/collection for this object.",
                  "pattern": "^/api/refs/collection$"
                },
                "link": {
                  "type": "string",
                  "description": "API end point that points to a list of resources"
                },
                "ref_type": {
                  "type": "string",
                  "description": "The _object value of each individual element of the list that link points to."
                }
              }
            },
            "departure_date": {
              "$comment": "deprecated",
              "type": ["null", "string"],
              "description": "Departure date from the first port of the main voyage.",
              "format": "date-time"
            },
            "arrival_date": {
              "$comment": "deprecated",
              "type": ["null", "string"],
              "description": "Arrival date to the last port of the main voyage.",
              "format": "date-time"
            },
            "picked_up_in_full_date": {
              "$comment": "deprecated",
              "type": ["null", "string"],
              "description": "Pickup date from the origin location. For ocean shipments with multiple containers, this is the date of last picked up container.",
              "format": "date-time"
            },
            "delivered_in_full_date": {
              "$comment": "deprecated",
              "type": ["null", "string"],
              "description": "Delivery date to the destination location. For ocean shipments with multiple containers, this is the date of last delivered container.",
              "format": "date-time"
            }
          }
        },
        "supported_sync_modes": ["full_refresh", "incremental"],
        "source_defined_cursor": true,
        "default_cursor_field": ["updated_at"],
        "source_defined_primary_key": [["id"]]
      },
      "sync_mode": "incremental",
      "destination_sync_mode": "append_dedup"
    }
  ]
}
