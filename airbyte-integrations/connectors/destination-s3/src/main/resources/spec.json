{
  "documentationUrl": "https://docs.airbyte.com/integrations/destinations/s3",
  "supportsIncremental": true,
  "supportsNormalization": false,
  "supportsDBT": false,
  "supported_destination_sync_modes": ["overwrite", "append"],
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "S3 Destination Spec",
    "type": "object",
    "required": [
      "s3_bucket_name",
      "s3_bucket_path",
      "s3_bucket_region",
      "format"
    ],
    "properties": {
      "access_key_id": {
        "type": "string",
        "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>.",
        "title": "S3 Key ID",
        "airbyte_secret": true,
        "examples": ["A012345678910EXAMPLE"],
        "order": 0
      },
      "secret_access_key": {
        "type": "string",
        "description": "The corresponding secret to the access key ID. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>",
        "title": "S3 Access Key",
        "airbyte_secret": true,
        "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"],
        "order": 1
      },
      "s3_bucket_name": {
        "title": "S3 Bucket Name",
        "type": "string",
        "description": "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\">here</a>.",
        "examples": ["airbyte_sync"],
        "order": 2
      },
      "s3_bucket_path": {
        "title": "S3 Bucket Path",
        "description": "Directory under the S3 bucket where data will be written. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\">here</a>",
        "type": "string",
        "examples": ["data_sync/test"],
        "order": 3
      },
      "s3_bucket_region": {
        "title": "S3 Bucket Region",
        "type": "string",
        "default": "",
        "description": "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\">here</a> for all region codes.",
        "enum": [
          "",
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "af-south-1",
          "ap-east-1",
          "ap-south-1",
          "ap-northeast-1",
          "ap-northeast-2",
          "ap-northeast-3",
          "ap-southeast-1",
          "ap-southeast-2",
          "ca-central-1",
          "cn-north-1",
          "cn-northwest-1",
          "eu-central-1",
          "eu-north-1",
          "eu-south-1",
          "eu-west-1",
          "eu-west-2",
          "eu-west-3",
          "sa-east-1",
          "me-south-1",
          "us-gov-east-1",
          "us-gov-west-1"
        ],
        "order": 4
      },
      "format": {
        "title": "Output Format",
        "type": "object",
        "description": "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\">here</a> for more details",
        "oneOf": [
          {
            "title": "Avro: Apache Avro",
            "required": ["format_type", "compression_codec"],
            "properties": {
              "format_type": {
                "title": "Format Type",
                "type": "string",
                "enum": ["Avro"],
                "default": "Avro",
                "order": 0
              },
              "compression_codec": {
                "title": "Compression Codec",
                "description": "The compression algorithm used to compress data. Default to no compression.",
                "type": "object",
                "oneOf": [
                  {
                    "title": "No Compression",
                    "required": ["codec"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["no compression"],
                        "default": "no compression"
                      }
                    }
                  },
                  {
                    "title": "Deflate",
                    "required": ["codec", "compression_level"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["Deflate"],
                        "default": "Deflate"
                      },
                      "compression_level": {
                        "title": "Deflate Level",
                        "description": "0: no compression & fastest, 9: best compression & slowest.",
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 9
                      }
                    }
                  },
                  {
                    "title": "bzip2",
                    "required": ["codec"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["bzip2"],
                        "default": "bzip2"
                      }
                    }
                  },
                  {
                    "title": "xz",
                    "required": ["codec", "compression_level"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["xz"],
                        "default": "xz"
                      },
                      "compression_level": {
                        "title": "Compression Level",
                        "description": "See <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\">here</a> for details.",
                        "type": "integer",
                        "default": 6,
                        "minimum": 0,
                        "maximum": 9
                      }
                    }
                  },
                  {
                    "title": "zstandard",
                    "required": ["codec", "compression_level"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["zstandard"],
                        "default": "zstandard"
                      },
                      "compression_level": {
                        "title": "Compression Level",
                        "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory.",
                        "type": "integer",
                        "default": 3,
                        "minimum": -5,
                        "maximum": 22
                      },
                      "include_checksum": {
                        "title": "Include Checksum",
                        "description": "If true, include a checksum with each data block.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  {
                    "title": "snappy",
                    "required": ["codec"],
                    "properties": {
                      "codec": {
                        "type": "string",
                        "enum": ["snappy"],
                        "default": "snappy"
                      }
                    }
                  }
                ],
                "order": 1
              }
            }
          },
          {
            "title": "CSV: Comma-Separated Values",
            "required": ["format_type", "flattening"],
            "properties": {
              "format_type": {
                "title": "Format Type",
                "type": "string",
                "enum": ["CSV"],
                "default": "CSV"
              },
              "flattening": {
                "type": "string",
                "title": "Flattening",
                "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details.",
                "default": "No flattening",
                "enum": ["No flattening", "Root level flattening"]
              },
              "compression": {
                "title": "Compression",
                "type": "object",
                "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").",
                "oneOf": [
                  {
                    "title": "No Compression",
                    "requires": ["compression_type"],
                    "properties": {
                      "compression_type": {
                        "type": "string",
                        "enum": ["No Compression"],
                        "default": "No Compression"
                      }
                    }
                  },
                  {
                    "title": "GZIP",
                    "requires": ["compression_type"],
                    "properties": {
                      "compression_type": {
                        "type": "string",
                        "enum": ["GZIP"],
                        "default": "GZIP"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "title": "JSON Lines: Newline-delimited JSON",
            "required": ["format_type"],
            "properties": {
              "format_type": {
                "title": "Format Type",
                "type": "string",
                "enum": ["JSONL"],
                "default": "JSONL"
              },
              "flattening": {
                "type": "string",
                "title": "Flattening",
                "description": "Whether the input json data should be normalized (flattened) in the output JSON Lines. Please refer to docs for details.",
                "default": "No flattening",
                "enum": ["No flattening", "Root level flattening"]
              },
              "compression": {
                "title": "Compression",
                "type": "object",
                "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").",
                "oneOf": [
                  {
                    "title": "No Compression",
                    "requires": "compression_type",
                    "properties": {
                      "compression_type": {
                        "type": "string",
                        "enum": ["No Compression"],
                        "default": "No Compression"
                      }
                    }
                  },
                  {
                    "title": "GZIP",
                    "requires": "compression_type",
                    "properties": {
                      "compression_type": {
                        "type": "string",
                        "enum": ["GZIP"],
                        "default": "GZIP"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "title": "Parquet: Columnar Storage",
            "required": ["format_type"],
            "properties": {
              "format_type": {
                "title": "Format Type",
                "type": "string",
                "enum": ["Parquet"],
                "default": "Parquet"
              },
              "compression_codec": {
                "title": "Compression Codec",
                "description": "The compression algorithm used to compress data pages.",
                "type": "string",
                "enum": [
                  "UNCOMPRESSED",
                  "SNAPPY",
                  "GZIP",
                  "LZO",
                  "BROTLI",
                  "LZ4",
                  "ZSTD"
                ],
                "default": "UNCOMPRESSED"
              },
              "block_size_mb": {
                "title": "Block Size (Row Group Size) (MB)",
                "description": "This is the size of a row group being buffered in memory. It limits the memory usage when writing. Larger values will improve the IO when reading, but consume more memory when writing. Default: 128 MB.",
                "type": "integer",
                "default": 128,
                "examples": [128]
              },
              "max_padding_size_mb": {
                "title": "Max Padding Size (MB)",
                "description": "Maximum size allowed as padding to align row groups. This is also the minimum size of a row group. Default: 8 MB.",
                "type": "integer",
                "default": 8,
                "examples": [8]
              },
              "page_size_kb": {
                "title": "Page Size (KB)",
                "description": "The page size is for compression. A block is composed of pages. A page is the smallest unit that must be read fully to access a single record. If this value is too small, the compression will deteriorate. Default: 1024 KB.",
                "type": "integer",
                "default": 1024,
                "examples": [1024]
              },
              "dictionary_page_size_kb": {
                "title": "Dictionary Page Size (KB)",
                "description": "There is one dictionary page per column per row group when dictionary encoding is used. The dictionary page size works like the page size but for dictionary. Default: 1024 KB.",
                "type": "integer",
                "default": 1024,
                "examples": [1024]
              },
              "dictionary_encoding": {
                "title": "Dictionary Encoding",
                "description": "Default: true.",
                "type": "boolean",
                "default": true
              }
            }
          }
        ],
        "order": 5
      },
      "s3_endpoint": {
        "title": "Endpoint",
        "type": "string",
        "default": "",
        "description": "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\">here</a>",
        "examples": ["http://localhost:9000"],
        "order": 6
      },
      "s3_path_format": {
        "title": "S3 Path Format",
        "description": "Format string on how data will be organized inside the S3 bucket directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\">here</a>",
        "type": "string",
        "examples": [
          "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
        ],
        "order": 7
      },
      "file_name_pattern": {
        "type": "string",
        "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
        "title": "S3 Filename pattern",
        "examples": [
          "{date}",
          "{date:yyyy_MM}",
          "{timestamp}",
          "{part_number}",
          "{sync_id}"
        ],
        "order": 8
      }
    }
  }
}
