version: 6.13.0

type: DeclarativeSource

description: Fixed the bug with the endless pagination

check:
  type: CheckStream
  stream_names:
    - Domain history

definitions:
  streams:
    Domain history:
      type: DeclarativeStream
      npt: "{{next_page_token['next_page_token']}}"
      name: Domain history
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: X-page
            inject_into: header
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{response['result']['summary_info']['page']+1}}"
            stop_condition: >-
              {{ ('32017' in response.error.code if response.error and
              response.error.code else False) or  
              (response.result.summary_info.page if response.result and
              response.result.summary_info and response.result.summary_info.page
              is not none else 0) > config['pages_to_fetch'] - 1 }}
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getDomainsHistory
            params:
              se: "{{config['region_id']}}"
              page: "{{next_page_token['next_page_token']}}"
              size: "{{config['page_size']}}"
              sort:
                date: desc
              domain: "{{config['domain']}}"
              during_all_time: true
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      primary_key:
        - date
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domain history"
    Domain keywords:
      type: DeclarativeStream
      name: Domain keywords
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: X-page
            inject_into: header
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{response['result']['summary_info']['page']+1}}"
            stop_condition: >-
              {{ ('32017' in response.error.code if response.error and
              response.error.code else False) or  
              (response.result.summary_info.page if response.result and
              response.result.summary_info and response.result.summary_info.page
              is not none else 0) > config['pages_to_fetch'] - 1 }}
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getDomainKeywords
            params:
              se: "{{config['region_id']}}"
              page: "{{next_page_token['next_page_token']}}"
              size: "{{config['page_size']}}"
              sort:
                "{{config['sort_by']}}": "{{config['sort_value']}}"
              domain: "{{config['domain']}}"
              filters:
                "{{config['filter_by']}}": "{{config['filter_value']}}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      primary_key:
        - keyword
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domain keywords"
    Domains summary:
      type: DeclarativeStream
      name: Domains summary
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getDomainsInfo
            params:
              se: "{{config['region_id']}}"
              domains: "{{config['domains']}}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      primary_key:
        - domain
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domains summary"
    Domain top pages:
      type: DeclarativeStream
      name: Domain top pages
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: X-page
            inject_into: header
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{response.result.summary_info.page}}"
            stop_condition: >-
              {{response.error.code==32017 or response.result.summary_info.page
              > config['pages_to_fetch'] - 1}}
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getTopUrls
            params:
              se: "{{config['region_id']}}"
              page: "{{(next_page_token['next_page_token'] or 0) + 1}}"
              size: "{{config['page_size']}}"
              sort:
                "{{config['sort_by']}}": "{{config['sort_value']}}"
              domain: "{{config['domain']}}"
              filters:
                "{{config['filter_by']}}": "{{config['filter_value']}}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domain top pages"
    Domain competitors:
      type: DeclarativeStream
      name: Domain competitors
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getCompetitors
            params:
              se: "{{config['region_id']}}"
              size: "{{config['page_size']}}"
              sort:
                "{{config['sort_by']}}": "{{config['sort_value']}}"
              domain: "{{config['domain']}}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      primary_key:
        - domain
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domain competitors"
    Domain keywords by region:
      type: DeclarativeStream
      name: Domain keywords by region
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /
          http_method: POST
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: RETRY
                    predicate: "{{response.error.code == 32000}}"
                    error_message: >-
                      You are sending more requests per second then available
                      for your Serpstat plan
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 2
          request_headers:
            X-request-sender: Airbyte
          request_body_json:
            id: "{{ now_utc() }}"
            method: SerpstatDomainProcedure.getRegionsCount
            params:
              sort: "{{config['sort_by']}}"
              order: "{{config['sort_value']}}"
              domain: "{{config['domain']}}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - result
              - data
      primary_key:
        - db_name
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Domain keywords by region"
  base_requester:
    type: HttpRequester
    url_base: https://api.serpstat.com/v4/
    authenticator:
      type: ApiKeyAuthenticator
      api_token: "{{ config[\"api_key\"] }}"
      inject_into:
        type: RequestOption
        field_name: token
        inject_into: header

streams:
  - $ref: "#/definitions/streams/Domain history"
  - $ref: "#/definitions/streams/Domains summary"
  - $ref: "#/definitions/streams/Domain keywords"
  - $ref: "#/definitions/streams/Domain keywords by region"
  - $ref: "#/definitions/streams/Domain competitors"
  - $ref: "#/definitions/streams/Domain top pages"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
    properties:
      domain:
        type: string
        description: The domain name to get data for (ex. serpstat.com)
        order: 1
        title: Domain
        default: serpstat.com
      api_key:
        type: string
        description: >-
          Serpstat API key can be found here:
          https://serpstat.com/users/profile/
        order: 0
        title: API Key
        airbyte_secret: true
      domains:
        type: array
        description: >-
          The list of domains that will be used in streams that support batch
          operations. You can set a single domain here.
        order: 3
        title: Domains
      sort_by:
        type: string
        description: >-
          The field name by which the results should be sorted. Each stream has
          different sorting options. See https://serpstat.com/api/ for more
          details.
        order: 6
        title: Sort by
      filter_by:
        type: string
        description: >-
          The field name by which the results should be filtered. Filtering the
          results will result in fewer API credits spent. Each stream has
          different filtering options. See https://serpstat.com/api/ for more
          details.
        order: 4
        title: Filter by
      page_size:
        type: integer
        description: >-
          The number of data rows per page to be returned. Each data row can
          contain multiple data points. The max value is 1000. Reducing the size
          of the page will result in fewer API credits spent.
        order: 2
        title: Page size
        default: "10"
      region_id:
        type: string
        description: >-
          The ID of a region to get data from in the form of a two-letter
          country code prepended with the g_ prefix. See the list of supported
          region IDs here: https://serpstat.com/api/664-request-parameters-v4/.
        order: 9
        title: Region ID
        default: g_us
      sort_value:
        type: string
        description: >-
          The value of the field to sort by. Each stream has different sorting
          options. See https://serpstat.com/api/ for more details.
        order: 7
        title: Sort value
      filter_value:
        type: string
        description: >-
          The value of the field to filter by. Each stream has different
          filtering options. See https://serpstat.com/api/ for more details.
        order: 5
        title: Filter value
      pages_to_fetch:
        type: integer
        description: >-
          The number of pages that should be fetched. All results will be
          obtained if left blank. Reducing the number of pages will result in
          fewer API credits spent.
        order: 8
        title: Pages to fetch
        default: "1"
    additionalProperties: true

metadata:
  assist: {}
  testedStreams:
    Domain history:
      hasRecords: true
      streamHash: adabf2328ab58e5a7496b4f410101e1c4e25aad7
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    Domain keywords:
      hasRecords: true
      streamHash: 387701232ec49ddcf0a045e643777fc51fb9fdfd
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    Domains summary:
      streamHash: 8587ac413498c8db3c8d441b484739d6109761ac
    Domain top pages:
      streamHash: 84877a80d1815e295786bdb0685a12dfed5856b6
    Domain competitors:
      streamHash: 268d7b5268acf78af5806a52a8a04facb3454bab
    Domain keywords by region:
      streamHash: 56115183fee0bdb32e63cacaf9782c792188f790
  autoImportSchema:
    Domain history: true
    Domain keywords: true
    Domains summary: true
    Domain top pages: true
    Domain competitors: true
    Domain keywords by region: true

schemas:
  Domain history:
    type: object
    $schema: http://json-schema.org/schema#
    required:
      - date
    properties:
      ads:
        type:
          - number
          - "null"
      date:
        type: string
      traff:
        type:
          - number
          - "null"
      domain:
        type:
          - string
          - "null"
      visible:
        type:
          - number
          - "null"
      keywords:
        type:
          - number
          - "null"
      ad_keywords:
        type:
          - number
          - "null"
      new_keywords:
        type:
          - number
          - "null"
      out_keywords:
        type:
          - number
          - "null"
      down_keywords:
        type:
          - number
          - "null"
      rised_keywords:
        type:
          - number
          - "null"
      visible_static:
        type:
          - number
          - "null"
    additionalProperties: true
  Domain keywords:
    type: object
    $schema: http://json-schema.org/schema#
    required:
      - keyword
    properties:
      url:
        type:
          - string
          - "null"
      cost:
        type:
          - number
          - "null"
      traff:
        type:
          - number
          - "null"
      types:
        type:
          - array
          - "null"
        items:
          type:
            - string
            - "null"
      domain:
        type:
          - string
          - "null"
      dynamic:
        type:
          - number
          - "null"
      keyword:
        type: string
      position:
        type:
          - number
          - "null"
      geo_names:
        type:
          - array
          - "null"
      difficulty:
        type:
          - number
          - "null"
      concurrency:
        type:
          - number
          - "null"
      found_results:
        type:
          - number
          - "null"
      keyword_length:
        type:
          - number
          - "null"
      region_queries_count:
        type:
          - number
          - "null"
      region_queries_count_wide:
        type:
          - number
          - "null"
    additionalProperties: true
  Domains summary:
    type: object
    $schema: http://json-schema.org/schema#
    properties:
      ads:
        type: number
      traff:
        type: number
      domain:
        type: string
      visible:
        type: number
      keywords:
        type: number
      prev_date:
        type: string
      ad_keywords:
        type: number
      ads_dynamic:
        type: number
      new_keywords:
        type: number
      out_keywords:
        type: number
      down_keywords:
        type: number
      traff_dynamic:
        type: number
      rised_keywords:
        type: number
      visible_dynamic:
        type: number
      keywords_dynamic:
        type: number
    additionalProperties: true
  Domain top pages:
    type: object
    $schema: http://json-schema.org/schema#
    properties:
      url:
        type: string
      facebook_shares:
        type: number
      potencial_traff:
        type: number
      organic_keywords:
        type: number
    additionalProperties: true
  Domain competitors:
    type: object
    $schema: http://json-schema.org/schema#
    properties:
      ads:
        type: number
      traff:
        type: number
      common:
        type: number
      domain:
        type: string
      missing:
        type: number
      visible:
        type: number
      keywords:
        type: number
      relevance:
        type: number
      ad_keywords:
        type: number
      ads_dynamic:
        type: number
      intersected:
        type: number
      new_keywords:
        type: number
      out_keywords:
        type: number
      down_keywords:
        type: number
      new_relevance:
        type: number
      our_relevance:
        type: number
      traff_dynamic:
        type: number
      rised_keywords:
        type: number
      not_intersected:
        type: number
      visible_dynamic:
        type: number
      keywords_dynamic:
        type: number
    additionalProperties: true
  Domain keywords by region:
    type: object
    $schema: http://json-schema.org/schema#
    properties:
      domain:
        type: string
      db_name:
        type: string
      keywords_count:
        type: number
      country_name_en:
        type: string
    additionalProperties: true
