{"type": "RECORD", "record": {"emitted_at": 1000, "data": {"id1": 1, "id2": 200, "updated_at": "2000-01-01 00:00:00", "name": "Alice", "address": {"city": "San Francisco", "state": "CA"}}}}
// Emit a second record for id=(1,200) with a different updated_at. This generally doesn't happen
// in full refresh syncs - but if T+D is implemented correctly, it shouldn't matter
// (i.e. both records should be written to the final table).
{"type": "RECORD", "record": {"emitted_at": 1001, "data": {"id1": 1, "id2": 200, "updated_at": "2000-01-01 00:01:00", "name": "Alice", "address": {"city": "Los Angeles", "state": "CA"}}}}
{"type": "RECORD", "record": {"emitted_at": 1000, "data": {"id1": 1, "id2": 201, "updated_at": "2000-01-01 00:02:00", "name": "Bob", "address": {"city": "Boston", "state": "MA"}}}}
// Emit a record with an invalid age & address nulled at source.
{"type": "RECORD", "record": {"emitted_at": 1000, "data": {"id1": 2, "id2": 200, "updated_at": "2000-01-01 00:03:00", "name": "Charlie", "age": "this is not an integer", "registration_date": "this is not a date"}}}
// Emit a record with interesting characters in one of the values.
{"type": "RECORD", "record": {"emitted_at": 1000, "data": {"id1": 3, "id2": 200, "updated_at": "2000-01-01 00:04:00", "name": "a\bb\fc\nd\re\tf`~!@#$%^&*()_+-=[]\\{}|'\",./<>?"}}}
