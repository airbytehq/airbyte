version: 5.15.0

type: DeclarativeSource

description: >-
  Fetches data on users, expenses, transactions, vendors, and budgets from Brex
  API.

check:
  type: CheckStream
  stream_names:
    - transactions

definitions:
  streams:
    transactions:
      type: DeclarativeStream
      name: transactions
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v2/transactions/card/primary
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: posted_at_date
        lookback_window: P1D
        cursor_datetime_formats:
          - "%Y-%m-%d"
        datetime_format: "%Y-%m-%dT%H:%M:%S"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config[\"start_date\"] }}"
          datetime_format: "%Y-%m-%dT%H:%M:%SZ"
        start_time_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: posted_at_start
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/transactions"
    users:
      type: DeclarativeStream
      name: users
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v2/users
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/users"
    departments:
      type: DeclarativeStream
      name: departments
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v2/departments
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/departments"
    vendors:
      type: DeclarativeStream
      name: vendors
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v1/vendors
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/vendors"
    expenses:
      type: DeclarativeStream
      name: expenses
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v1/expenses/card
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: purchased_at
        lookback_window: P1M
        cursor_datetime_formats:
          - "%Y-%m-%dT%H:%M:%SZ"
          - "%Y-%m-%dT%H:%M:%S.%fZ"
        datetime_format: "%Y-%m-%dT%H:%M:%S"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config[\"start_date\"] }}"
          datetime_format: "%Y-%m-%dT%H:%M:%SZ"
        start_time_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: purchased_at_start
        end_time_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: purchased_at_end
        end_datetime:
          type: MinMaxDatetime
          datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
          datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/expenses"
    budgets:
      type: DeclarativeStream
      name: budgets
      primary_key:
        - budget_id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /v2/budgets
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - items
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: cursor
          pagination_strategy:
            type: CursorPagination
            cursor_value: "{{ response.get('next_cursor') }}"
            stop_condition: "{{ response.get('next_cursor') is none }}"
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/budgets"
  base_requester:
    type: HttpRequester
    url_base: https://platform.brexapis.com
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config[\"user_token\"] }}"

streams:
  - $ref: "#/definitions/streams/transactions"
  - $ref: "#/definitions/streams/users"
  - $ref: "#/definitions/streams/departments"
  - $ref: "#/definitions/streams/vendors"
  - $ref: "#/definitions/streams/expenses"
  - $ref: "#/definitions/streams/budgets"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - user_token
      - start_date
    properties:
      user_token:
        type: string
        description: >-
          User token to authenticate API requests. Generate it from your Brex
          dashboard under Developer > Settings.
        name: user_token
        title: User Token
        airbyte_secret: true
        order: 0
      start_date:
        type: string
        title: Start date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        order: 1
    additionalProperties: true

metadata:
  autoImportSchema:
    transactions: true
    users: false
    departments: false
    vendors: false
    expenses: false
    budgets: false
  testedStreams:
    transactions:
      streamHash: 9095688de0c91a5eafb2969f27859182d0eb1329
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    users:
      streamHash: 22fb9114f7bec24f5b753c0eed981138105cd5e6
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    departments:
      streamHash: 3a7de8adfde28e720a9f9254c63103d34bfc3966
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    vendors:
      streamHash: 678154fbac1bda4601d2a9ce17e8e4283df96e22
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    expenses:
      streamHash: 83d3aa00696a8b74df332824a39fbcf75bdebd7d
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    budgets:
      streamHash: 9bfb438f0d1d68b61814339b4153e4904088baaa
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  assist:
    docsUrl: https://developer.brex.com/openapi/transactions_api/

schemas:
  transactions:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      type:
        type:
          - string
          - "null"
      description:
        type:
          - string
          - "null"
      amount:
        type:
          - object
          - "null"
        properties:
          amount:
            type:
              - number
              - "null"
          currency:
            type:
              - string
              - "null"
      card_id:
        type:
          - string
          - "null"
      id:
        type: string
      initiated_at_date:
        type:
          - string
          - "null"
      merchant:
        type:
          - object
          - "null"
        properties:
          country:
            type:
              - string
              - "null"
          mcc:
            type:
              - string
              - "null"
          raw_descriptor:
            type:
              - string
              - "null"
      posted_at_date:
        type: string
    required:
      - id
      - posted_at_date
  users:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  departments:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  vendors:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  expenses:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
  budgets:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties: {}
