version: 0.72.2
type: DeclarativeSource
check:
  type: CheckStream
  stream_names:
    - agents

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
      - domain
    properties:
      api_key:
        type: string
        order: 1
        title: API Key
        description: 'Freshdesk API Key. See the <a href="https://docs.airbyte.com/integrations/sources/freshdesk">docs</a> for more information on how to obtain this key.'
        airbyte_secret: true
      domain:
        type: string
        order: 2
        title: Domain
        description: "Freshdesk domain"
        examples:
          - "myaccount.freshdesk.com"
        pattern: "^[a-zA-Z0-9._-]*\\.freshdesk\\.com$"
      requests_per_minute:
        type: integer
        order: 3
        title: "Requests per minute"
        description: "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account."
      start_date:
        title: "Start Date"
        type: "string"
        order: 4
        description: "UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated."
        format: "date-time"
        pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        examples:
          - "2020-12-01T00:00:00Z"
      lookback_window_in_days:
        type: integer
        order: 5
        title: Lookback Window
        default: 14
        description: Number of days for lookback window for the stream Satisfaction Ratings
    additionalProperties: true

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_freshdesk/schemas/{{ parameters['name'] }}.json"

  basic_authenticator:
    type: BasicHttpAuthenticator
    username: "{{ config.get('api_key')}}"

  record_selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: []

  paginator:
    type: DefaultPaginator
    pagination_strategy:
      type: CursorPagination
      cursor_value: "{{ headers['link']['next']['url'] }}"
      stop_condition: "{{ 'next' not in headers['link'] }}"
      page_size: 100
    page_size_option:
      field_name: "per_page"
      inject_into: "request_parameter"
    page_token_option:
      type: RequestPath

  error_handler:
    type: CompositeErrorHandler
    error_handlers:
      - type: DefaultErrorHandler
        response_filters:
          - http_codes: [401]
            action: FAIL
            error_message: "The endpoint to access stream '{{ parameters['name'] }}' returned 401: Unauthorized. This is most likely due to wrong credentials."
      - type: DefaultErrorHandler
        backoff_strategies:
          - type: WaitTimeFromHeader
            header: Retry-After

  requester:
    # This requester is used to count call credits used for requests to Freshdesk
    type: CustomRequester
    class_name: source_freshdesk.components.FreshdeskRequester
    path: "{{ parameters['path'] or parameters['name'] }}"
    url_base: "https://{{ config['domain'] }}/api/v2/"
    http_method: GET
    request_headers: {}
    authenticator:
      $ref: "#/definitions/basic_authenticator"
    error_handler:
      $ref: "#/definitions/error_handler"

  base_stream:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
      record_selector:
        $ref: "#/definitions/record_selector"
      paginator:
        $ref: "#/definitions/paginator"

  incremental_sync:
    type: DatetimeBasedCursor
    cursor_datetime_formats:
      - "%Y-%m-%dT%H:%M:%SZ"
    datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    cursor_field: "{{ parameters['cursor_field'] }}"
    start_datetime:
      datetime: "{{ config.get('start_date') or day_delta(-3650, '%Y-%m-%dT%H:%M:%SZ') }}"
    start_time_option:
      inject_into: request_parameter
      field_name: "{{ parameters['cursor_filter'] }}"
      type: RequestOption

  base_incremental_stream:
    $ref: "#/definitions/base_stream"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"

  agents:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "agents"
      primary_key: "id"

  business_hours:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "business_hours"
      primary_key: "id"
    transformations:
      - type: AddFields
        fields:
          - path: ["working_hours"]
            value: "{{ record.get('business_hours') }}"
      - type: RemoveFields
        field_pointers:
          - ["business_hours"]

  canned_response_folders:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "canned_response_folders"
      primary_key: "id"

  companies:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "companies"
      primary_key: "id"

  discussion_categories:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "discussion_categories"
      path: "discussions/categories"
      primary_key: "id"

  email_configs:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "email_configs"
      primary_key: "id"

  email_mailboxes:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "email_mailboxes"
      path: "email/mailboxes"
      primary_key: "id"

  groups:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "groups"
      primary_key: "id"

  products:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "products"
      primary_key: "id"

  roles:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "roles"
      primary_key: "id"

  scenario_automations:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "scenario_automations"
      primary_key: "id"

  settings:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "settings"
      path: "settings/helpdesk"
      primary_key: "primary_language"

  skills:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "skills"
      primary_key: "id"

  sla_policies:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "sla_policies"
      primary_key: "id"

  solution_categories:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "solution_categories"
      path: "solutions/categories"
      primary_key: "id"

  surveys:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "surveys"
      primary_key: "id"

  time_entries:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "time_entries"
      primary_key: "id"

  ticket_fields:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "ticket_fields"
      primary_key: "id"

  contacts:
    type: DeclarativeStream
    $ref: "#/definitions/base_incremental_stream"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
      start_time_option:
        $ref: "#/definitions/incremental_sync/start_time_option"
        field_name: "_updated_since"
    $parameters:
      name: "contacts"
      cursor_field: "updated_at"
      primary_key: "id"
      cursor_filter: "_updated_since"

  satisfaction_ratings:
    type: DeclarativeStream
    $ref: "#/definitions/base_incremental_stream"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
      start_time_option:
        $ref: "#/definitions/incremental_sync/start_time_option"
        field_name: "created_since"
      lookback_window: "P{{ config['lookback_window_in_days'] or 14 }}D"
    $parameters:
      name: "satisfaction_ratings"
      primary_key: "id"
      path: "surveys/satisfaction_ratings"
      cursor_field: "updated_at"
      cursor_filter: "created_since"

  tickets:
    type: DeclarativeStream
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/base_stream/retriever/requester"
        class_name: source_freshdesk.components.FreshdeskTicketsIncrementalRequester
        request_parameters:
          order_type: "asc"
          order_by: "updated_at"
          include: "description,requester,stats"
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "CustomPaginationStrategy"
          class_name: source_freshdesk.components.FreshdeskTicketsPaginationStrategy
          page_size: 100
          start_from_page: 1
        page_size_option:
          type: "RequestOption"
          inject_into: "request_parameter"
          field_name: "per_page"
        page_token_option:
          type: "RequestOption"
          inject_into: "request_parameter"
          field_name: "page"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
      type: CustomIncrementalSync
      class_name: source_freshdesk.components.FreshdeskTicketsIncrementalSync
      start_time_option:
        $ref: "#/definitions/incremental_sync/start_time_option"
        field_name: "updated_since"
    $parameters:
      name: "tickets"
      primary_key: "id"
      cursor_field: "updated_at"
      cursor_filter: "updated_since"

  canned_responses:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/base_stream/retriever/requester"
        path: "canned_response_folders/{{ stream_slice.id }}/responses"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/canned_response_folders"
            parent_key: id
            partition_field: id
    $parameters:
      name: "canned_responses"
      primary_key: "id"

  conversations:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "tickets/{{ stream_slice.id }}/conversations"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/tickets"
            parent_key: id
            partition_field: id
    $parameters:
      name: "conversations"
      primary_key: "id"

  discussion_forums:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "discussions/categories/{{ stream_slice.id }}/forums"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/discussion_categories"
            parent_key: id
            partition_field: id
    $parameters:
      name: "discussion_forums"
      primary_key: "id"

  discussion_topics:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "discussions/forums/{{ stream_slice.id }}/topics"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/discussion_forums"
            parent_key: id
            partition_field: id
    $parameters:
      name: "discussion_topics"
      primary_key: "id"

  discussion_comments:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "discussions/topics/{{ stream_slice.id }}/comments"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/discussion_topics"
            parent_key: id
            partition_field: id
    $parameters:
      name: "discussion_comments"
      primary_key: "id"

  solution_folders:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "solutions/categories/{{ stream_slice.id }}/folders"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/solution_categories"
            parent_key: id
            partition_field: id
    transformations:
      - type: AddFields
        fields:
          - path: ["category_id"]
            value: "{{ record.get('category_id') or stream_slice.get('id') }}"
    $parameters:
      name: "solution_folders"
      primary_key: "id"

  solution_articles:
    type: DeclarativeStream
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/requester"
        path: "solutions/folders/{{ stream_slice.id }}/articles"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/solution_folders"
            parent_key: id
            partition_field: id
    $parameters:
      name: "solution_articles"
      primary_key: "id"

streams:
  - $ref: "#/definitions/agents"
  - $ref: "#/definitions/business_hours"
  - $ref: "#/definitions/canned_response_folders"
  - $ref: "#/definitions/canned_responses"
  - $ref: "#/definitions/companies"
  - $ref: "#/definitions/conversations"
  - $ref: "#/definitions/contacts"
  - $ref: "#/definitions/discussion_categories"
  - $ref: "#/definitions/discussion_comments"
  - $ref: "#/definitions/discussion_forums"
  - $ref: "#/definitions/discussion_topics"
  - $ref: "#/definitions/email_configs"
  - $ref: "#/definitions/email_mailboxes"
  - $ref: "#/definitions/groups"
  - $ref: "#/definitions/products"
  - $ref: "#/definitions/roles"
  - $ref: "#/definitions/satisfaction_ratings"
  - $ref: "#/definitions/scenario_automations"
  - $ref: "#/definitions/settings"
  - $ref: "#/definitions/skills"
  - $ref: "#/definitions/sla_policies"
  - $ref: "#/definitions/solution_articles"
  - $ref: "#/definitions/solution_categories"
  - $ref: "#/definitions/solution_folders"
  - $ref: "#/definitions/surveys"
  - $ref: "#/definitions/ticket_fields"
  - $ref: "#/definitions/tickets"
  - $ref: "#/definitions/time_entries"
