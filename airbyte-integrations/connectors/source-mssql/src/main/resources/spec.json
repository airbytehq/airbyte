{
  "documentationUrl": "https://docs.airbyte.io/integrations/destinations/mssql",
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MSSQL Source Spec",
    "type": "object",
    "required": ["host", "port", "database", "username"],
    "additionalProperties": false,
    "properties": {
      "host": {
        "description": "The hostname of the database.",
        "title": "Host",
        "type": "string",
        "order": 0
      },
      "port": {
        "description": "The port of the database.",
        "title": "Port",
        "type": "integer",
        "minimum": 0,
        "maximum": 65536,
        "examples": ["1433"],
        "order": 1
      },
      "database": {
        "description": "The name of the database.",
        "title": "Database",
        "type": "string",
        "examples": ["master"],
        "order": 2
      },
      "username": {
        "description": "The username which is used to access the database.",
        "title": "Username",
        "type": "string",
        "order": 3
      },
      "password": {
        "description": "The password associated with the username.",
        "title": "Password",
        "type": "string",
        "airbyte_secret": true,
        "order": 4
      },
      "jdbc_url_params": {
        "title": "JDBC URL Params",
        "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
        "type": "string",
        "order": 5
      },
      "ssl_method": {
        "title": "SSL Method",
        "type": "object",
        "description": "The encryption method which is used when communicating with the database.",
        "order": 6,
        "oneOf": [
          {
            "title": "Unencrypted",
            "additionalProperties": false,
            "description": "Data transfer will not be encrypted.",
            "required": ["ssl_method"],
            "properties": {
              "ssl_method": {
                "type": "string",
                "const": "unencrypted",
                "enum": ["unencrypted"],
                "default": "unencrypted"
              }
            }
          },
          {
            "title": "Encrypted (trust server certificate)",
            "additionalProperties": false,
            "description": "Use the certificate provided by the server without verification. (For testing purposes only!)",
            "required": ["ssl_method"],
            "properties": {
              "ssl_method": {
                "type": "string",
                "const": "encrypted_trust_server_certificate",
                "enum": ["encrypted_trust_server_certificate"],
                "default": "encrypted_trust_server_certificate"
              }
            }
          },
          {
            "title": "Encrypted (verify certificate)",
            "additionalProperties": false,
            "description": "Verify and use the certificate provided by the server.",
            "required": ["ssl_method", "trustStoreName", "trustStorePassword"],
            "properties": {
              "ssl_method": {
                "type": "string",
                "const": "encrypted_verify_certificate",
                "enum": ["encrypted_verify_certificate"],
                "default": "encrypted_verify_certificate"
              },
              "hostNameInCertificate": {
                "title": "Host Name In Certificate",
                "type": "string",
                "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.",
                "order": 7
              }
            }
          }
        ]
      },
      "replication_method": {
        "type": "object",
        "title": "Replication Method",
        "description": "The replication method used for extracting data from the database.  ",
        "order": 8,
        "oneOf": [
          {
            "title": "STANDARD",
            "additionalProperties": false,
            "description": "STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
            "properties": {
              "replication_method": {
                "type": "string",
                "const": "STANDARD",
                "enum": ["STANDARD"],
                "default": "STANDARD",
                "order": 0
              }
            }
          },
          {
            "title": "CDC",
            "additionalProperties": false,
            "description": "CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
            "properties": {
              "replication_method": {
                "type": "string",
                "const": "CDC",
                "enum": ["CDC"],
                "default": "CDC",
                "order":0
              },
              "is_snapshot_disabled": {
                "title": "DisableSnapshot",
                "type": "boolean",
                "description": "validate the snapshot enable in the database. true would set snapshot.isolation.mode to snapshot otherwise, it would be ",
                "default": false,
                "order": 1
              },
              "is_cdc_only": {
                "title": "cdcOnly",
                "type": "boolean",
                "default": false,
                "description": "true would set snapshot mode to schema_only otherwise, it would set to initial. Refer, https://debezium.io/documentation/reference/stable/connectors/sqlserver.html",
                "order": 2
              }
            }
          }
          ]
      }
    }
  }
}
