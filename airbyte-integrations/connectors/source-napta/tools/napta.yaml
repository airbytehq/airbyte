components:
  schemas:
    ApplicationConfig:
      properties:
        _advanced_search:
          readOnly: true
          type: boolean
        _canDislike:
          type: boolean
        _canLikeProjects:
          readOnly: true
          type: boolean
        _canSeeAllTimesheets:
          readOnly: true
          type: boolean
        _canSeeWhoLikedProjects:
          readOnly: true
          type: boolean
        _createUserAuth0:
          type: boolean
        _crisp_notifications:
          type: object
        _date_format_front:
          type: string
        _default_language:
          type: string
        _demoKPMG:
          type: boolean
        _employeesAvailableRate:
          format: float
          type: number
        _grade_group_default_id:
          format: int32
          type: integer
        _hasAssessment:
          type: boolean
        _hasAvailabilityComponent:
          type: boolean
        _hasAvailabilityComponentExtended:
          type: boolean
        _hasCareerTracks:
          readOnly: true
          type: boolean
        _hasFinanceComponent:
          type: boolean
        _hasFinanceComponentExtended:
          type: boolean
        _hasPeriodModuleOnProjectModal:
          readOnly: true
          type: boolean
        _hasResumeImport:
          type: boolean
        _hasSkillGraph:
          type: boolean
        _hasSkillSubCategories:
          readOnly: true
          type: boolean
        _hasTaskManagement:
          type: boolean
        _hasTimesheet:
          type: boolean
        _hasUserSkillEvaluatedByOtherLegend:
          type: boolean
        _hours_per_day:
          format: float
          type: number
        _individual_reporting_colors:
          type: object
        _logo_url:
          readOnly: true
          type: boolean
        _maxUserProjectForRex:
          default: 200
        _mayAccessSearch:
          readOnly: true
          type: boolean
        _mayAccessTimesheetReporting:
          readOnly: true
          type: boolean
        _mayCompareUsersCareerPath:
          readOnly: true
          type: boolean
        _mayCreateBusinessUnit:
          readOnly: true
          type: boolean
        _mayCreateCardLabel:
          readOnly: true
          type: boolean
        _mayCreateCareerTrack:
          readOnly: true
          type: boolean
        _mayCreateClient:
          readOnly: true
          type: boolean
        _mayCreateEvaluationCampaignEvaluation:
          readOnly: true
          type: boolean
        _mayCreateGrade:
          readOnly: true
          type: boolean
        _mayCreateJobSheet:
          readOnly: true
          type: boolean
        _mayCreateLocation:
          readOnly: true
          type: boolean
        _mayCreateMetadata:
          readOnly: true
          type: boolean
        _mayCreateMetadataField:
          readOnly: true
          type: boolean
        _mayCreateMetadataFieldRight:
          readOnly: true
          type: boolean
        _mayCreateProject:
          readOnly: true
          type: boolean
        _mayCreateProjectCategory:
          readOnly: true
          type: boolean
        _mayCreateProjectStaffingColumn:
          readOnly: true
          type: boolean
        _mayCreateProjectStatus:
          readOnly: true
          type: boolean
        _mayCreateProjectTagType:
          readOnly: true
          type: boolean
        _mayCreateSkill:
          readOnly: true
          type: boolean
        _mayCreateSkillCategory:
          readOnly: true
          type: boolean
        _mayCreateUser:
          readOnly: true
          type: boolean
        _mayCreateUserGroup:
          readOnly: true
          type: boolean
        _mayCreateUserHolidayCategory:
          readOnly: true
          type: boolean
        _mayCreateUserPosition:
          readOnly: true
          type: boolean
        _mayCreateUserProjectPeriodStatus:
          readOnly: true
          type: boolean
        _mayCreateUserProjectStatus:
          readOnly: true
          type: boolean
        _mayCreateUserTagType:
          readOnly: true
          type: boolean
        _mayDeactivateAssessment:
          readOnly: true
          type: boolean
        _mayExportRex:
          readOnly: true
          type: boolean
        _mayMergeSkill:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _maySeeAllSimulatedStaffing:
          readOnly: true
          type: boolean
        _maySeeMarkupRate:
          readOnly: true
          type: boolean
        _maySeeOtherUsersOutOfHisBU:
          readOnly: true
          type: boolean
        _maySeeWorkload:
          readOnly: true
          type: boolean
        _maySimulateUserProject:
          readOnly: true
          type: boolean
        _mayStaffSimulatedOnly:
          readOnly: true
          type: boolean
        _mayStaffUser:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        _projectDefault_status_id:
          format: int32
          nullable: true
          type: integer
        _project_category_default_id:
          format: int32
          nullable: true
          type: integer
        _requiredFields:
          type: object
        _sendWelcomeMail:
          type: boolean
        _staffed_days_as_reference:
          type: boolean
        _translations:
          type: object
        _upp_split_by_default:
          type: string
        _userProjectDefault_business_unit_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_location_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_status_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_user_position_id:
          format: int32
          nullable: true
          type: integer
        _userProjectEvaluationActivatedByDefault:
          type: boolean
        _userProjectPeriodDefault_status_id:
          format: int32
          nullable: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ApplicationConfigPatch:
      properties:
        _advanced_search:
          readOnly: true
          type: boolean
        _canDislike:
          type: boolean
        _canLikeProjects:
          readOnly: true
          type: boolean
        _canSeeAllTimesheets:
          readOnly: true
          type: boolean
        _canSeeWhoLikedProjects:
          readOnly: true
          type: boolean
        _createUserAuth0:
          type: boolean
        _crisp_notifications:
          type: object
        _date_format_front:
          type: string
        _default_language:
          type: string
        _demoKPMG:
          type: boolean
        _employeesAvailableRate:
          format: float
          type: number
        _grade_group_default_id:
          format: int32
          type: integer
        _hasAssessment:
          type: boolean
        _hasAvailabilityComponent:
          type: boolean
        _hasAvailabilityComponentExtended:
          type: boolean
        _hasCareerTracks:
          readOnly: true
          type: boolean
        _hasFinanceComponent:
          type: boolean
        _hasFinanceComponentExtended:
          type: boolean
        _hasPeriodModuleOnProjectModal:
          readOnly: true
          type: boolean
        _hasResumeImport:
          type: boolean
        _hasSkillGraph:
          type: boolean
        _hasSkillSubCategories:
          readOnly: true
          type: boolean
        _hasTaskManagement:
          type: boolean
        _hasTimesheet:
          type: boolean
        _hasUserSkillEvaluatedByOtherLegend:
          type: boolean
        _hours_per_day:
          format: float
          type: number
        _individual_reporting_colors:
          type: object
        _logo_url:
          readOnly: true
          type: boolean
        _maxUserProjectForRex:
          default: 200
        _mayAccessSearch:
          readOnly: true
          type: boolean
        _mayAccessTimesheetReporting:
          readOnly: true
          type: boolean
        _mayCompareUsersCareerPath:
          readOnly: true
          type: boolean
        _mayCreateBusinessUnit:
          readOnly: true
          type: boolean
        _mayCreateCardLabel:
          readOnly: true
          type: boolean
        _mayCreateCareerTrack:
          readOnly: true
          type: boolean
        _mayCreateClient:
          readOnly: true
          type: boolean
        _mayCreateEvaluationCampaignEvaluation:
          readOnly: true
          type: boolean
        _mayCreateGrade:
          readOnly: true
          type: boolean
        _mayCreateJobSheet:
          readOnly: true
          type: boolean
        _mayCreateLocation:
          readOnly: true
          type: boolean
        _mayCreateMetadata:
          readOnly: true
          type: boolean
        _mayCreateMetadataField:
          readOnly: true
          type: boolean
        _mayCreateMetadataFieldRight:
          readOnly: true
          type: boolean
        _mayCreateProject:
          readOnly: true
          type: boolean
        _mayCreateProjectCategory:
          readOnly: true
          type: boolean
        _mayCreateProjectStaffingColumn:
          readOnly: true
          type: boolean
        _mayCreateProjectStatus:
          readOnly: true
          type: boolean
        _mayCreateProjectTagType:
          readOnly: true
          type: boolean
        _mayCreateSkill:
          readOnly: true
          type: boolean
        _mayCreateSkillCategory:
          readOnly: true
          type: boolean
        _mayCreateUser:
          readOnly: true
          type: boolean
        _mayCreateUserGroup:
          readOnly: true
          type: boolean
        _mayCreateUserHolidayCategory:
          readOnly: true
          type: boolean
        _mayCreateUserPosition:
          readOnly: true
          type: boolean
        _mayCreateUserProjectPeriodStatus:
          readOnly: true
          type: boolean
        _mayCreateUserProjectStatus:
          readOnly: true
          type: boolean
        _mayCreateUserTagType:
          readOnly: true
          type: boolean
        _mayDeactivateAssessment:
          readOnly: true
          type: boolean
        _mayExportRex:
          readOnly: true
          type: boolean
        _mayMergeSkill:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _maySeeAllSimulatedStaffing:
          readOnly: true
          type: boolean
        _maySeeMarkupRate:
          readOnly: true
          type: boolean
        _maySeeOtherUsersOutOfHisBU:
          readOnly: true
          type: boolean
        _maySeeWorkload:
          readOnly: true
          type: boolean
        _maySimulateUserProject:
          readOnly: true
          type: boolean
        _mayStaffSimulatedOnly:
          readOnly: true
          type: boolean
        _mayStaffUser:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        _projectDefault_status_id:
          format: int32
          nullable: true
          type: integer
        _project_category_default_id:
          format: int32
          nullable: true
          type: integer
        _requiredFields:
          type: object
        _sendWelcomeMail:
          type: boolean
        _staffed_days_as_reference:
          type: boolean
        _translations:
          type: object
        _upp_split_by_default:
          type: string
        _userProjectDefault_business_unit_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_location_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_status_id:
          format: int32
          nullable: true
          type: integer
        _userProjectDefault_user_position_id:
          format: int32
          nullable: true
          type: integer
        _userProjectEvaluationActivatedByDefault:
          type: boolean
        _userProjectPeriodDefault_status_id:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
      type: object
    ApplicationConfigRelationships:
      properties: {}
      type: object
    ApplicationConfigRelationshipsPatch:
      properties: {}
      type: object
    BusinessUnit:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    BusinessUnitPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    BusinessUnitPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    BusinessUnitRelationships:
      properties:
        users:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    BusinessUnitRelationshipsPatch:
      properties: {}
      type: object
    BusinessUnitRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    CardLabel:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          minLength: 7
          type: string
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    CardLabelPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          minLength: 7
          type: string
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      type: object
    CardLabelPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          minLength: 7
          type: string
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      required:
      - color
      - name
      type: object
    CardLabelRelationships:
      properties: {}
      type: object
    CardLabelRelationshipsPatch:
      properties: {}
      type: object
    CardLabelRelationshipsPost:
      properties: {}
      required:
      - color
      - name
      type: object
    CareerTrack:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    CareerTrackJobSheet:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        career_track_id:
          format: int32
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        job_sheet_id:
          format: int32
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    CareerTrackJobSheetPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        career_track_id:
          format: int32
          type: integer
        job_sheet_id:
          format: int32
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      type: object
    CareerTrackJobSheetPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        career_track_id:
          format: int32
          type: integer
        job_sheet_id:
          format: int32
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      required:
      - career_track_id
      - job_sheet_id
      type: object
    CareerTrackJobSheetRelationships:
      properties:
        career_track:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: career_track
                  type: string
              type: object
          readOnly: true
          type: object
        job_sheet:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: job_sheet
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    CareerTrackJobSheetRelationshipsPatch:
      properties: {}
      type: object
    CareerTrackJobSheetRelationshipsPost:
      properties: {}
      required:
      - career_track_id
      - job_sheet_id
      type: object
    CareerTrackPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
      type: object
    CareerTrackPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    CareerTrackRelationships:
      properties:
        career_track_job_sheets:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: career_track_job_sheet
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    CareerTrackRelationshipsPatch:
      properties: {}
      type: object
    CareerTrackRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    Client:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ClientPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    ClientPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    ClientRelationships:
      properties: {}
      type: object
    ClientRelationshipsPatch:
      properties: {}
      type: object
    ClientRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    EvaluationCampaign:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        active:
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        end_date:
          format: date
          type: string
        evaluated_period_end_date:
          format: date
          type: string
        evaluated_period_start_date:
          format: date
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        start_date:
          format: date
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluation:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        closed:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        evaluated_user_id:
          format: int32
          type: integer
        evaluation_campaign_id:
          format: int32
          type: integer
        evaluation_metadata:
          type: object
        id:
          format: int32
          readOnly: true
          type: integer
        is_published:
          type: boolean
        minimal_evaluated_user_id:
          format: int32
          readOnly: true
          type: integer
        template_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluationApproval:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluationApprovalPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          type: integer
        evaluation_id:
          format: int32
          type: integer
      required:
      - evaluation_id
      type: object
    EvaluationCampaignEvaluationApprovalRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    EvaluationCampaignEvaluationApprovalRelationshipsPost:
      properties: {}
      required:
      - evaluation_id
      type: object
    EvaluationCampaignEvaluationAuthor:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_id:
          format: int32
          type: integer
        evaluator_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluationAuthorPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluation_id:
          format: int32
          type: integer
        evaluator_id:
          format: int32
          type: integer
      required:
      - evaluation_id
      - evaluator_id
      type: object
    EvaluationCampaignEvaluationAuthorRelationships:
      properties:
        evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
        evaluator:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    EvaluationCampaignEvaluationAuthorRelationshipsPost:
      properties: {}
      required:
      - evaluation_id
      - evaluator_id
      type: object
    EvaluationCampaignEvaluationPatch:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluation_metadata:
          type: object
        is_published:
          type: boolean
        template_id:
          format: int32
          type: integer
      type: object
    EvaluationCampaignEvaluationPost:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluated_user_id:
          format: int32
          type: integer
        evaluation_campaign_id:
          format: int32
          type: integer
        evaluation_metadata:
          type: object
        is_published:
          type: boolean
        template_id:
          format: int32
          type: integer
      required:
      - evaluated_user_id
      - evaluation_campaign_id
      - minimal_evaluated_user_id
      - template_id
      type: object
    EvaluationCampaignEvaluationRelationships:
      properties:
        approvals:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_approval
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        authors:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_author
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        evaluated_user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation_campaign:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation_user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        template:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign_evaluation_template
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    EvaluationCampaignEvaluationRelationshipsPatch:
      properties: {}
      type: object
    EvaluationCampaignEvaluationRelationshipsPost:
      properties: {}
      required:
      - evaluated_user_id
      - evaluation_campaign_id
      - minimal_evaluated_user_id
      - template_id
      type: object
    EvaluationCampaignEvaluationTemplate:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        form:
          items:
            type: object
          type: array
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        schema:
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluationTemplateRelationships:
      properties: {}
      type: object
    EvaluationCampaignEvaluationUserSkill:
      properties:
        _mayAssess:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_skill_id:
          format: int32
          readOnly: true
          type: integer
      type: object
    EvaluationCampaignEvaluationUserSkillGrade:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_user_skill_id:
          format: int32
          type: integer
        grade_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    EvaluationCampaignEvaluationUserSkillGradePatch:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        grade_id:
          format: int32
          type: integer
      type: object
    EvaluationCampaignEvaluationUserSkillGradePost:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        evaluation_user_skill_id:
          format: int32
          type: integer
        grade_id:
          format: int32
          type: integer
      required:
      - evaluation_user_skill_id
      - grade_id
      type: object
    EvaluationCampaignEvaluationUserSkillGradeRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation_user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign_evaluation_user_skill
                  type: string
              type: object
          readOnly: true
          type: object
        grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    EvaluationCampaignEvaluationUserSkillGradeRelationshipsPatch:
      properties: {}
      type: object
    EvaluationCampaignEvaluationUserSkillGradeRelationshipsPost:
      properties: {}
      required:
      - evaluation_user_skill_id
      - grade_id
      type: object
    EvaluationCampaignEvaluationUserSkillPost:
      properties:
        _mayAssess:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluation_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
          writeOnly: true
      required:
      - evaluation_id
      - skill_id
      type: object
    EvaluationCampaignEvaluationUserSkillRelationships:
      properties:
        evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: evaluation_campaign_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation_user_skill_grades:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_user_skill_grade
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_skill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    EvaluationCampaignEvaluationUserSkillRelationshipsPost:
      properties: {}
      required:
      - evaluation_id
      - skill_id
      type: object
    EvaluationCampaignRelationships:
      properties:
        evaluations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    Grade:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
        description_translations:
          type: object
        grade_group_id:
          format: int32
          readOnly: true
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        name_translations:
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
        value:
          format: int32
          readOnly: true
          type: integer
      type: object
    GradeGroup:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        name_translations:
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    GradeGroupPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name_translations:
          type: object
      type: object
    GradeGroupRelationships:
      properties:
        grades:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: grade
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    GradeGroupRelationshipsPatch:
      properties: {}
      type: object
    GradePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description_translations:
          type: object
        name_translations:
          type: object
      type: object
    GradeRelationships:
      properties:
        grade_group:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade_group
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    GradeRelationshipsPatch:
      properties: {}
      type: object
    JobSheet:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    JobSheetPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
      type: object
    JobSheetPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    JobSheetRelationships:
      properties:
        job_sheet_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: job_sheet_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    JobSheetRelationshipsPatch:
      properties: {}
      type: object
    JobSheetRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    JobSheetSkill:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        job_sheet_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
        target_grade_id:
          format: int32
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    JobSheetSkillPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        job_sheet_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
        target_grade_id:
          format: int32
          nullable: true
          type: integer
      type: object
    JobSheetSkillPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        job_sheet_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
        target_grade_id:
          format: int32
          nullable: true
          type: integer
      required:
      - job_sheet_id
      - skill_id
      type: object
    JobSheetSkillRelationships:
      properties:
        job_sheet:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: job_sheet
                  type: string
              type: object
          readOnly: true
          type: object
        skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: skill
                  type: string
              type: object
          readOnly: true
          type: object
        target_grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    JobSheetSkillRelationshipsPatch:
      properties: {}
      type: object
    JobSheetSkillRelationshipsPost:
      properties: {}
      required:
      - job_sheet_id
      - skill_id
      type: object
    Location:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    LocationPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    LocationPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    LocationRelationships:
      properties:
        users:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    LocationRelationshipsPatch:
      properties: {}
      type: object
    LocationRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    Log:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        action:
          type: string
        created_on:
          format: date
          readOnly: true
          type: string
        data:
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        obj_id:
          format: int32
          type: integer
        obj_type:
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
      type: object
    LogRelationships:
      properties:
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    MetadataField:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        displayProps:
          type: object
        displayType:
          type: string
        formProps:
          type: object
        formType:
          type: string
        formX:
          format: int32
          type: integer
        formY:
          format: int32
          type: integer
        icon:
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        key:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        readonly:
          readOnly: true
          type: object
        required:
          type: boolean
        type:
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    MetadataFieldPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        displayProps:
          type: object
        displayType:
          type: string
        formProps:
          type: object
        formType:
          type: string
        formX:
          format: int32
          type: integer
        formY:
          format: int32
          type: integer
        icon:
          type: string
        key:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        readonly:
          readOnly: true
          type: object
        required:
          type: boolean
        type:
          type: string
      type: object
    MetadataFieldPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        displayProps:
          type: object
        displayType:
          type: string
        formProps:
          type: object
        formType:
          type: string
        formX:
          format: int32
          type: integer
        formY:
          format: int32
          type: integer
        icon:
          type: string
        key:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        readonly:
          readOnly: true
          type: object
        required:
          type: boolean
        type:
          type: string
      required:
      - key
      - name
      - type
      type: object
    MetadataFieldRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        metadata_field_rights:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: metadata_field
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    MetadataFieldRelationshipsPatch:
      properties: {}
      type: object
    MetadataFieldRelationshipsPost:
      properties: {}
      required:
      - key
      - name
      - type
      type: object
    MetadataFieldRight:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        may_read:
          type: boolean
        may_write:
          type: boolean
        metadata_field_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_group_id:
          format: int32
          type: integer
      type: object
    MetadataFieldRightPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          type: integer
        may_read:
          type: boolean
        may_write:
          type: boolean
        metadata_field_id:
          format: int32
          type: integer
        user_group_id:
          format: int32
          type: integer
      type: object
    MetadataFieldRightPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          type: integer
        may_read:
          type: boolean
        may_write:
          type: boolean
        metadata_field_id:
          format: int32
          type: integer
        user_group_id:
          format: int32
          type: integer
      required:
      - metadata_field_id
      - user_group_id
      type: object
    MetadataFieldRightRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_group:
          nullable: true
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_group
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    MetadataFieldRightRelationshipsPatch:
      properties: {}
      type: object
    MetadataFieldRightRelationshipsPost:
      properties: {}
      required:
      - metadata_field_id
      - user_group_id
      type: object
    MinimalUser:
      properties:
        _mayGetUser:
          readOnly: true
          type: boolean
        business_unit_id:
          format: int32
          readOnly: true
          type: integer
        first_name:
          readOnly: true
          type: string
        has_picture:
          readOnly: true
          type: boolean
        id:
          format: int32
          readOnly: true
          type: integer
        last_name:
          readOnly: true
          type: string
        location_id:
          format: int32
          readOnly: true
          type: integer
        picture:
          readOnly: true
          type: object
        user_position_id:
          format: int32
          readOnly: true
          type: integer
      type: object
    MinimalUserRelationships:
      properties:
        business_unit:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: business_unit
                  type: string
              type: object
          readOnly: true
          type: object
        location:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: location
                  type: string
              type: object
          readOnly: true
          type: object
        user_position:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_position
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    Project:
      properties:
        _hasGlobalTimesheetReporting:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _mayShowAvailability:
          readOnly: true
          type: boolean
        _mayStaff:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        billing_method:
          readOnly: true
          type: object
        client_id:
          format: int32
          type: integer
        consumed_budget:
          readOnly: true
          type: object
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        current_projected_staffed_days:
          readOnly: true
          type: object
        current_used_staffed_days:
          readOnly: true
          type: object
        description:
          type: string
        end_date:
          format: date
          readOnly: true
          type: string
        estimated_end_date:
          format: date
          nullable: true
          type: string
        estimated_start_date:
          format: date
          nullable: true
          type: string
        expense:
          format: float
          type: number
        external_id:
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        isTeamReady:
          readOnly: true
          type: object
        is_archived:
          type: boolean
        margin_rate:
          readOnly: true
          type: object
        name:
          minLength: 1
          type: string
        project_cost:
          readOnly: true
          type: object
        project_metadata:
          type: object
        projectcategory_id:
          format: int32
          nullable: true
          type: integer
        projectstatus_id:
          format: int32
          nullable: true
          type: integer
        sold_budget:
          format: float
          type: number
        start_date:
          format: date
          readOnly: true
          type: string
        status:
          readOnly: true
          type: object
        supervision_rate:
          readOnly: true
          type: object
        total_projected_staffed_days:
          readOnly: true
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectCalendar:
      properties:
        _hasGlobalTimesheetReporting:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _mayShowAvailability:
          readOnly: true
          type: boolean
        _mayStaff:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        billing_method:
          readOnly: true
          type: object
        client_id:
          format: int32
          type: integer
        consumed_budget:
          readOnly: true
          type: object
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        current_projected_staffed_days:
          readOnly: true
          type: object
        current_used_staffed_days:
          readOnly: true
          type: object
        description:
          type: string
        end_date:
          format: date
          readOnly: true
          type: string
        estimated_end_date:
          format: date
          nullable: true
          type: string
        estimated_start_date:
          format: date
          nullable: true
          type: string
        expense:
          format: float
          type: number
        external_id:
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        isTeamReady:
          readOnly: true
          type: object
        is_archived:
          type: boolean
        margin_rate:
          readOnly: true
          type: object
        name:
          minLength: 1
          type: string
        project_cost:
          readOnly: true
          type: object
        project_metadata:
          type: object
        projectcategory_id:
          format: int32
          nullable: true
          type: integer
        projectstatus_id:
          format: int32
          nullable: true
          type: integer
        sold_budget:
          format: float
          type: number
        start_date:
          format: date
          readOnly: true
          type: string
        status:
          readOnly: true
          type: object
        supervision_rate:
          readOnly: true
          type: object
        total_projected_staffed_days:
          readOnly: true
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectCalendarRelationships:
      properties:
        client:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: client
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        project_contributors:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_contributor
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        project_likes:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_like
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        project_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_project_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        projectcategory:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectcategory
                  type: string
              type: object
          readOnly: true
          type: object
        projectstaffingcard:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstaffingcard
                  type: string
              type: object
          readOnly: true
          type: object
        projectstatus:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstatus
                  type: string
              type: object
          readOnly: true
          type: object
        user_projects:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    ProjectCategory:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          type: string
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        isHoliday:
          type: boolean
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectCategoryPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          type: string
        isHoliday:
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    ProjectCategoryPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        color:
          type: string
        isHoliday:
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    ProjectCategoryRelationships:
      properties: {}
      type: object
    ProjectCategoryRelationshipsPatch:
      properties: {}
      type: object
    ProjectCategoryRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    ProjectContributor:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        contributor_id:
          format: int32
          type: integer
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        project_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectContributorPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        contributor_id:
          format: int32
          type: integer
        project_id:
          format: int32
          type: integer
      required:
      - contributor_id
      - project_id
      type: object
    ProjectContributorRelationships:
      properties:
        contributor:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectContributorRelationshipsPost:
      properties: {}
      required:
      - contributor_id
      - project_id
      type: object
    ProjectLike:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        project_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectLikePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        project_id:
          format: int32
          type: integer
      required:
      - project_id
      type: object
    ProjectLikeRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectLikeRelationshipsPost:
      properties: {}
      required:
      - project_id
      type: object
    ProjectPatch:
      properties:
        _hasGlobalTimesheetReporting:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _mayShowAvailability:
          readOnly: true
          type: boolean
        _mayStaff:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        billing_method:
          readOnly: true
          type: object
        client_id:
          format: int32
          type: integer
        create_project_staffing_card:
          type: boolean
          writeOnly: true
        description:
          type: string
        estimated_end_date:
          format: date
          nullable: true
          type: string
        estimated_start_date:
          format: date
          nullable: true
          type: string
        expense:
          format: float
          type: number
        external_id:
          type: string
        isTeamReady:
          readOnly: true
          type: object
        is_archived:
          type: boolean
        name:
          minLength: 1
          type: string
        project_metadata:
          type: object
        projectcategory_id:
          format: int32
          nullable: true
          type: integer
        projectstatus_id:
          format: int32
          nullable: true
          type: integer
        sold_budget:
          format: float
          type: number
        status:
          readOnly: true
          type: object
      type: object
    ProjectPost:
      properties:
        _hasGlobalTimesheetReporting:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayRequestStaffing:
          readOnly: true
          type: boolean
        _mayShowAvailability:
          readOnly: true
          type: boolean
        _mayStaff:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        billing_method:
          readOnly: true
          type: object
        client_id:
          format: int32
          type: integer
        create_project_staffing_card:
          type: boolean
          writeOnly: true
        description:
          type: string
        estimated_end_date:
          format: date
          nullable: true
          type: string
        estimated_start_date:
          format: date
          nullable: true
          type: string
        expense:
          format: float
          type: number
        external_id:
          type: string
        isTeamReady:
          readOnly: true
          type: object
        is_archived:
          type: boolean
        name:
          minLength: 1
          type: string
        project_metadata:
          type: object
        projectcategory_id:
          format: int32
          nullable: true
          type: integer
        projectstatus_id:
          format: int32
          nullable: true
          type: integer
        sold_budget:
          format: float
          type: number
        status:
          readOnly: true
          type: object
      required:
      - client_id
      - name
      type: object
    ProjectProjectTag:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        project_id:
          format: int32
          type: integer
        project_tag_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectProjectTagPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        project_id:
          format: int32
          type: integer
        project_tag_id:
          format: int32
          type: integer
      required:
      - project_id
      - project_tag_id
      type: object
    ProjectProjectTagRelationships:
      properties:
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
        project_tag:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project_tag
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectProjectTagRelationshipsPost:
      properties: {}
      required:
      - project_id
      - project_tag_id
      type: object
    ProjectRelationships:
      properties:
        client:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: client
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        project_contributors:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_contributor
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        project_likes:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_like
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        project_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_project_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        projectcategory:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectcategory
                  type: string
              type: object
          readOnly: true
          type: object
        projectstaffingcard:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstaffingcard
                  type: string
              type: object
          readOnly: true
          type: object
        projectstatus:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstatus
                  type: string
              type: object
          readOnly: true
          type: object
        user_projects:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    ProjectRelationshipsPatch:
      properties: {}
      type: object
    ProjectRelationshipsPost:
      properties: {}
      required:
      - client_id
      - name
      type: object
    ProjectStaffingCard:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkCardLabel:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        pos:
          format: float
          type: number
        project_id:
          format: int32
          type: integer
        projectstaffingcolumn_id:
          format: int32
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectStaffingCardCardLabel:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        cardlabel_id:
          format: int32
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        projectstaffingcard_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectStaffingCardCardLabelPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        cardlabel_id:
          format: int32
          type: integer
        projectstaffingcard_id:
          format: int32
          type: integer
      required:
      - cardlabel_id
      - projectstaffingcard_id
      type: object
    ProjectStaffingCardCardLabelRelationships:
      properties:
        cardlabel:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: cardlabel
                  type: string
              type: object
          readOnly: true
          type: object
        projectstaffingcard:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstaffingcard
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectStaffingCardCardLabelRelationshipsPost:
      properties: {}
      required:
      - cardlabel_id
      - projectstaffingcard_id
      type: object
    ProjectStaffingCardPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkCardLabel:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        pos:
          format: float
          type: number
        projectstaffingcolumn_id:
          format: int32
          nullable: true
          type: integer
      type: object
    ProjectStaffingCardRelationships:
      properties:
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
        projectstaffingcard_cardlabels:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: projectstaffingcard_cardlabel
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        projectstaffingcolumn:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: projectstaffingcolumn
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectStaffingCardRelationshipsPatch:
      properties: {}
      type: object
    ProjectStaffingColumn:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        pos:
          format: float
          type: number
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectStaffingColumnPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        pos:
          format: float
          type: number
      type: object
    ProjectStaffingColumnPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        pos:
          format: float
          type: number
      required:
      - name
      - pos
      type: object
    ProjectStaffingColumnRelationships:
      properties:
        projectstaffingcards:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: projectstaffingcard
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    ProjectStaffingColumnRelationshipsPatch:
      properties: {}
      type: object
    ProjectStaffingColumnRelationshipsPost:
      properties: {}
      required:
      - name
      - pos
      type: object
    ProjectStatus:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        mayAssess:
          type: boolean
        name:
          minLength: 1
          type: string
        staffing_request_simulated_by_default:
          type: boolean
        staffing_simulated_by_default:
          type: boolean
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectStatusPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        mayAssess:
          type: boolean
        name:
          minLength: 1
          type: string
        staffing_request_simulated_by_default:
          type: boolean
        staffing_simulated_by_default:
          type: boolean
      type: object
    ProjectStatusPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        mayAssess:
          type: boolean
        name:
          minLength: 1
          type: string
        staffing_request_simulated_by_default:
          type: boolean
        staffing_simulated_by_default:
          type: boolean
      required:
      - name
      type: object
    ProjectStatusRelationships:
      properties: {}
      type: object
    ProjectStatusRelationshipsPatch:
      properties: {}
      type: object
    ProjectStatusRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    ProjectTag:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectTagPatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
      type: object
    ProjectTagPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
      required:
      - tag_type_id
      type: object
    ProjectTagRelationships:
      properties:
        project_project_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_project_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        tag_type:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project_tag_type
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    ProjectTagRelationshipsPatch:
      properties: {}
      type: object
    ProjectTagRelationshipsPost:
      properties: {}
      required:
      - tag_type_id
      type: object
    ProjectTagType:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ProjectTagTypePatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    ProjectTagTypePost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    ProjectTagTypeRelationships:
      properties:
        project_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    ProjectTagTypeRelationshipsPatch:
      properties: {}
      type: object
    ProjectTagTypeRelationshipsPost:
      properties: {}
      type: object
    Resume:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        form:
          type: object
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        schema:
          type: object
        template_url:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    ResumeRelationships:
      properties: {}
      type: object
    Rex:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          type: string
        template_url:
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    RexRelationships:
      properties: {}
      type: object
    Skill:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
        description_translations:
          type: object
        grade_group_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        name_translations:
          type: object
        skill_category_id:
          format: int32
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    SkillCategory:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        name_translations:
          type: object
        parent_category_id:
          format: int32
          nullable: true
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    SkillCategoryPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name_translations:
          type: object
        parent_category_id:
          format: int32
          nullable: true
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      type: object
    SkillCategoryPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name_translations:
          type: object
        parent_category_id:
          format: int32
          nullable: true
          type: integer
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      required:
      - name_translations
      type: object
    SkillCategoryRelationships:
      properties:
        children_categories:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: skill_category
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        parent_category:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: skill_category
                  type: string
              type: object
          readOnly: true
          type: object
        skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    SkillCategoryRelationshipsPatch:
      properties: {}
      type: object
    SkillCategoryRelationshipsPost:
      properties: {}
      required:
      - name_translations
      type: object
    SkillPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description_translations:
          type: object
        grade_group_id:
          format: int32
          type: integer
        name_translations:
          type: object
        skill_category_id:
          format: int32
          nullable: true
          type: integer
      type: object
    SkillPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        description_translations:
          type: object
        grade_group_id:
          format: int32
          type: integer
        name_translations:
          type: object
        skill_category_id:
          format: int32
          nullable: true
          type: integer
      required:
      - grade_group_id
      - name_translations
      type: object
    SkillRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        grade_group:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade_group
                  type: string
              type: object
          readOnly: true
          type: object
        skill_category:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: skill_category
                  type: string
              type: object
          readOnly: true
          type: object
        user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    SkillRelationshipsPatch:
      properties: {}
      type: object
    SkillRelationshipsPost:
      properties: {}
      required:
      - grade_group_id
      - name_translations
      type: object
    Timesheet:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        closed:
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
        week:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      type: object
    TimesheetPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        closed:
          type: boolean
        user_id:
          format: int32
          type: integer
        week:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      type: object
    TimesheetPeriod:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        day:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        project_id:
          format: int32
          type: integer
        timesheet_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        worked_days:
          format: float
          type: number
      type: object
    TimesheetPeriodPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        day:
          format: int32
          type: integer
        project_id:
          format: int32
          type: integer
        timesheet_id:
          format: int32
          type: integer
        worked_days:
          format: float
          type: number
      required:
      - day
      - project_id
      - timesheet_id
      - worked_days
      type: object
    TimesheetPeriodRelationships:
      properties:
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    TimesheetPeriodRelationshipsPost:
      properties: {}
      required:
      - day
      - project_id
      - timesheet_id
      - worked_days
      type: object
    TimesheetPeriodUpdate:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        day:
          format: int32
          readOnly: true
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        project_id:
          format: int32
          readOnly: true
          type: integer
        timesheet_id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        worked_days:
          format: float
          type: number
      type: object
    TimesheetPeriodUpdatePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        worked_days:
          format: float
          type: number
      type: object
    TimesheetPeriodUpdateRelationships:
      properties:
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    TimesheetPeriodUpdateRelationshipsPatch:
      properties: {}
      type: object
    TimesheetPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        closed:
          type: boolean
        user_id:
          format: int32
          type: integer
        week:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      required:
      - user_id
      - week
      - year
      type: object
    TimesheetRelationships:
      properties:
        timesheet_periods:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: timesheet_period
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    TimesheetRelationshipsPatch:
      properties: {}
      type: object
    TimesheetRelationshipsPost:
      properties: {}
      required:
      - user_id
      - week
      - year
      type: object
    User:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayExportCv:
          readOnly: true
          type: boolean
        _mayLinkInterest:
          readOnly: true
          type: boolean
        _mayLinkJobSheet:
          readOnly: true
          type: boolean
        _mayLinkUserHoliday:
          readOnly: true
          type: boolean
        _mayRecommend:
          readOnly: true
          type: boolean
        _maySeeLeavingDate:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        active:
          type: boolean
        business_unit_id:
          format: int32
          nullable: true
          type: integer
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        daily_cost:
          format: float
          minimum: 0
          nullable: true
          type: number
        email:
          type: string
        external_id:
          type: string
        first_name:
          minLength: 1
          type: string
        has_picture:
          readOnly: true
          type: boolean
        hiring_date:
          format: date
          nullable: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        last_name:
          minLength: 1
          type: string
        leaving_date:
          format: date
          nullable: true
          type: string
        location_id:
          format: int32
          nullable: true
          type: integer
        personal_description:
          type: string
        phone_number:
          type: string
        picture:
          readOnly: true
          type: object
        score:
          readOnly: true
          type: object
        staffing:
          readOnly: true
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
        user_group_id:
          format: int32
          type: integer
        user_metadata:
          type: object
        user_position_id:
          format: int32
          type: integer
        userinfo_metadata:
          type: object
      type: object
    UserConfig:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        default_resume_template_id:
          format: int32
          type: integer
        default_rex_template_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        language:
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
        user_project_period_display_unit:
          enum:
          - staffed_days
          - workload
          type: string
      type: object
    UserConfigPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        default_resume_template_id:
          format: int32
          type: integer
        default_rex_template_id:
          format: int32
          type: integer
        language:
          type: string
        user_id:
          format: int32
          type: integer
        user_project_period_display_unit:
          enum:
          - staffed_days
          - workload
          type: string
      type: object
    UserConfigRelationships:
      properties:
        default_resume_template:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: resume_template
                  type: string
              type: object
          readOnly: true
          type: object
        default_rex_template:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: rex_template
                  type: string
              type: object
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserConfigRelationshipsPatch:
      properties: {}
      type: object
    UserGroup:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        allow_projects:
          type: boolean
        allow_user_projects:
          type: boolean
        allow_userprojectperiods:
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        licence_type:
          readOnly: true
          type: object
        may_access_admin:
          type: boolean
        may_access_search:
          type: boolean
        may_access_skill_reporting:
          type: boolean
        may_access_staffing_reporting:
          type: boolean
        may_access_timesheet_reporting:
          type: boolean
        may_archive_all_projects:
          type: boolean
        may_archive_my_projects:
          type: boolean
        may_compare_users_career_path:
          type: boolean
        may_connect:
          type: boolean
        may_deactivate_assessment_all_projects:
          type: boolean
        may_deactivate_assessment_my_projects:
          type: boolean
        may_deactivate_assessment_myself:
          type: boolean
        may_edit_existing_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_edit_staffing_request:
          enum:
          - none
          - related
          - all
          type: string
        may_export_all_users_skills:
          type: boolean
        may_export_rex:
          type: boolean
        may_get_user_skill_grade_himself:
          type: boolean
        may_like_projects:
          type: boolean
        may_manage_all_timesheets:
          type: boolean
        may_manage_card_labels:
          type: boolean
        may_manage_clients:
          type: boolean
        may_manage_config:
          type: boolean
        may_manage_ea:
          type: boolean
        may_manage_efm:
          type: boolean
        may_manage_job_sheet_himself:
          type: boolean
        may_manage_job_sheet_others:
          type: boolean
        may_manage_project_cards:
          type: boolean
        may_manage_project_himself:
          type: boolean
        may_manage_projects:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_skills:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_user_holiday_category:
          type: boolean
        may_manage_user_skill_himself:
          type: boolean
        may_manage_user_skill_others:
          type: boolean
        may_manage_userprojectperiod_status:
          type: boolean
        may_manage_userprojectstatus:
          type: boolean
        may_manage_users:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_userskill_usergrade_himself:
          type: boolean
        may_manage_userskill_usergrade_others:
          type: boolean
        may_see_leaving_date:
          type: boolean
        may_see_project_staffing_card_out_of_his_business_unit:
          type: boolean
        may_see_simulated_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_see_who_liked_projects:
          type: boolean
        may_see_workload:
          type: boolean
        may_simulate_staffing:
          type: boolean
        may_skip_criteria_step:
          type: boolean
        may_staff_simulated_only:
          type: boolean
        may_staff_user:
          type: boolean
        name:
          minLength: 1
          type: string
        no_welcome_page_redirect_url:
          type: string
        protected:
          readOnly: true
          type: boolean
        updatable_by_integration_script:
          type: boolean
        updated_on:
          format: date
          readOnly: true
          type: string
        welcome_page_access:
          items:
            type: string
          type: array
      type: object
    UserGroupPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        allow_projects:
          type: boolean
        allow_user_projects:
          type: boolean
        allow_userprojectperiods:
          type: boolean
        licence_type:
          readOnly: true
          type: object
        may_access_admin:
          type: boolean
        may_access_search:
          type: boolean
        may_access_skill_reporting:
          type: boolean
        may_access_staffing_reporting:
          type: boolean
        may_access_timesheet_reporting:
          type: boolean
        may_archive_all_projects:
          type: boolean
        may_archive_my_projects:
          type: boolean
        may_compare_users_career_path:
          type: boolean
        may_connect:
          type: boolean
        may_deactivate_assessment_all_projects:
          type: boolean
        may_deactivate_assessment_my_projects:
          type: boolean
        may_deactivate_assessment_myself:
          type: boolean
        may_edit_existing_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_edit_staffing_request:
          enum:
          - none
          - related
          - all
          type: string
        may_export_all_users_skills:
          type: boolean
        may_export_rex:
          type: boolean
        may_get_user_skill_grade_himself:
          type: boolean
        may_like_projects:
          type: boolean
        may_manage_all_timesheets:
          type: boolean
        may_manage_card_labels:
          type: boolean
        may_manage_clients:
          type: boolean
        may_manage_config:
          type: boolean
        may_manage_ea:
          type: boolean
        may_manage_efm:
          type: boolean
        may_manage_job_sheet_himself:
          type: boolean
        may_manage_job_sheet_others:
          type: boolean
        may_manage_project_cards:
          type: boolean
        may_manage_project_himself:
          type: boolean
        may_manage_projects:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_skills:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_user_holiday_category:
          type: boolean
        may_manage_user_skill_himself:
          type: boolean
        may_manage_user_skill_others:
          type: boolean
        may_manage_userprojectperiod_status:
          type: boolean
        may_manage_userprojectstatus:
          type: boolean
        may_manage_users:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_userskill_usergrade_himself:
          type: boolean
        may_manage_userskill_usergrade_others:
          type: boolean
        may_see_leaving_date:
          type: boolean
        may_see_project_staffing_card_out_of_his_business_unit:
          type: boolean
        may_see_simulated_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_see_who_liked_projects:
          type: boolean
        may_see_workload:
          type: boolean
        may_simulate_staffing:
          type: boolean
        may_skip_criteria_step:
          type: boolean
        may_staff_simulated_only:
          type: boolean
        may_staff_user:
          type: boolean
        name:
          minLength: 1
          type: string
        no_welcome_page_redirect_url:
          type: string
        updatable_by_integration_script:
          type: boolean
        welcome_page_access:
          items:
            type: string
          type: array
      type: object
    UserGroupPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        allow_projects:
          type: boolean
        allow_user_projects:
          type: boolean
        allow_userprojectperiods:
          type: boolean
        licence_type:
          readOnly: true
          type: object
        may_access_admin:
          type: boolean
        may_access_search:
          type: boolean
        may_access_skill_reporting:
          type: boolean
        may_access_staffing_reporting:
          type: boolean
        may_access_timesheet_reporting:
          type: boolean
        may_archive_all_projects:
          type: boolean
        may_archive_my_projects:
          type: boolean
        may_compare_users_career_path:
          type: boolean
        may_connect:
          type: boolean
        may_deactivate_assessment_all_projects:
          type: boolean
        may_deactivate_assessment_my_projects:
          type: boolean
        may_deactivate_assessment_myself:
          type: boolean
        may_edit_existing_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_edit_staffing_request:
          enum:
          - none
          - related
          - all
          type: string
        may_export_all_users_skills:
          type: boolean
        may_export_rex:
          type: boolean
        may_get_user_skill_grade_himself:
          type: boolean
        may_like_projects:
          type: boolean
        may_manage_all_timesheets:
          type: boolean
        may_manage_card_labels:
          type: boolean
        may_manage_clients:
          type: boolean
        may_manage_config:
          type: boolean
        may_manage_ea:
          type: boolean
        may_manage_efm:
          type: boolean
        may_manage_job_sheet_himself:
          type: boolean
        may_manage_job_sheet_others:
          type: boolean
        may_manage_project_cards:
          type: boolean
        may_manage_project_himself:
          type: boolean
        may_manage_projects:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_skills:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_user_holiday_category:
          type: boolean
        may_manage_user_skill_himself:
          type: boolean
        may_manage_user_skill_others:
          type: boolean
        may_manage_userprojectperiod_status:
          type: boolean
        may_manage_userprojectstatus:
          type: boolean
        may_manage_users:
          enum:
          - none
          - related
          - all
          type: string
        may_manage_userskill_usergrade_himself:
          type: boolean
        may_manage_userskill_usergrade_others:
          type: boolean
        may_see_leaving_date:
          type: boolean
        may_see_project_staffing_card_out_of_his_business_unit:
          type: boolean
        may_see_simulated_staffing:
          enum:
          - none
          - related
          - all
          type: string
        may_see_who_liked_projects:
          type: boolean
        may_see_workload:
          type: boolean
        may_simulate_staffing:
          type: boolean
        may_skip_criteria_step:
          type: boolean
        may_staff_simulated_only:
          type: boolean
        may_staff_user:
          type: boolean
        name:
          minLength: 1
          type: string
        no_welcome_page_redirect_url:
          type: string
        updatable_by_integration_script:
          type: boolean
        welcome_page_access:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    UserGroupRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        users:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserGroupRelationshipsPatch:
      properties: {}
      type: object
    UserGroupRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    UserGroupToUserGroupRight:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        may_get_evaluation_campaign_evaluations:
          type: boolean
        may_get_user_daily_cost:
          type: boolean
        may_get_user_project_evaluations:
          type: boolean
        may_get_user_project_period_daily_fee:
          type: boolean
        may_get_user_skill_grades:
          type: boolean
        source_user_group_id:
          format: int32
          type: integer
        target_user_group_id:
          format: int32
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserGroupToUserGroupRightPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        may_get_evaluation_campaign_evaluations:
          type: boolean
        may_get_user_daily_cost:
          type: boolean
        may_get_user_project_evaluations:
          type: boolean
        may_get_user_project_period_daily_fee:
          type: boolean
        may_get_user_skill_grades:
          type: boolean
        source_user_group_id:
          format: int32
          type: integer
        target_user_group_id:
          format: int32
          nullable: true
          type: integer
      type: object
    UserGroupToUserGroupRightRelationships:
      properties:
        source_user_group:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_group
                  type: string
              type: object
          readOnly: true
          type: object
        target_user_group:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_group
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserGroupToUserGroupRightRelationshipsPatch:
      properties: {}
      type: object
    UserHoliday:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        end_date:
          format: date
          type: string
        end_date_until_afternoon:
          type: boolean
        external_id:
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        start_date:
          format: date
          type: string
        start_date_from_morning:
          type: boolean
        updated_on:
          format: date
          readOnly: true
          type: string
        user_holiday_category_id:
          format: int32
          nullable: true
          type: integer
        user_id:
          format: int32
          type: integer
      type: object
    UserHolidayCategory:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserHolidayCategoryPatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserHolidayCategoryPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    UserHolidayCategoryRelationships:
      properties: {}
      type: object
    UserHolidayCategoryRelationshipsPatch:
      properties: {}
      type: object
    UserHolidayCategoryRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    UserHolidayPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        end_date:
          format: date
          type: string
        end_date_until_afternoon:
          type: boolean
        external_id:
          type: string
        start_date:
          format: date
          type: string
        start_date_from_morning:
          type: boolean
        user_holiday_category_id:
          format: int32
          nullable: true
          type: integer
      type: object
    UserHolidayPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        end_date:
          format: date
          type: string
        end_date_until_afternoon:
          type: boolean
        external_id:
          type: string
        start_date:
          format: date
          type: string
        start_date_from_morning:
          type: boolean
        user_holiday_category_id:
          format: int32
          nullable: true
          type: integer
        user_id:
          format: int32
          type: integer
      required:
      - end_date
      - start_date
      - user_id
      type: object
    UserHolidayRelationships:
      properties:
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_holiday_category:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_holiday_category
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserHolidayRelationshipsPatch:
      properties: {}
      type: object
    UserHolidayRelationshipsPost:
      properties: {}
      required:
      - end_date
      - start_date
      - user_id
      type: object
    UserJobSheet:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        job_sheet_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
      type: object
    UserJobSheetPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        job_sheet_id:
          format: int32
          type: integer
        user_id:
          format: int32
          type: integer
      required:
      - job_sheet_id
      - user_id
      type: object
    UserJobSheetRelationships:
      properties:
        job_sheet:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: job_sheet
                  type: string
              type: object
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserJobSheetRelationshipsPost:
      properties: {}
      required:
      - job_sheet_id
      - user_id
      type: object
    UserPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayExportCv:
          readOnly: true
          type: boolean
        _mayLinkInterest:
          readOnly: true
          type: boolean
        _mayLinkJobSheet:
          readOnly: true
          type: boolean
        _mayLinkUserHoliday:
          readOnly: true
          type: boolean
        _mayRecommend:
          readOnly: true
          type: boolean
        _maySeeLeavingDate:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        active:
          type: boolean
        business_unit_id:
          format: int32
          nullable: true
          type: integer
        daily_cost:
          format: float
          minimum: 0
          nullable: true
          type: number
        email:
          type: string
        external_id:
          type: string
        first_name:
          minLength: 1
          type: string
        hiring_date:
          format: date
          nullable: true
          type: string
        last_name:
          minLength: 1
          type: string
        leaving_date:
          format: date
          nullable: true
          type: string
        location_id:
          format: int32
          nullable: true
          type: integer
        personal_description:
          type: string
        phone_number:
          type: string
        picture:
          readOnly: true
          type: object
        score:
          readOnly: true
          type: object
        staffing:
          readOnly: true
          type: object
        user_group_id:
          format: int32
          type: integer
        user_metadata:
          type: object
        user_position_id:
          format: int32
          type: integer
        userinfo_metadata:
          type: object
      type: object
    UserPosition:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        ignore_for_computation:
          type: boolean
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserPositionPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        ignore_for_computation:
          type: boolean
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      type: object
    UserPositionPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        ignore_for_computation:
          type: boolean
        name:
          minLength: 1
          type: string
        priority:
          format: int32
          minimum: 1
          nullable: true
          type: integer
      required:
      - name
      type: object
    UserPositionRelationships:
      properties:
        user_project_evaluation_templates_as_target:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_position_to_user_project_evaluation_template
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        users:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserPositionRelationshipsPatch:
      properties: {}
      type: object
    UserPositionRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    UserPositionToUserProjectEvaluationTemplate:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        source_user_position_id:
          format: int32
          type: integer
        target_user_position_id:
          format: int32
          type: integer
        template_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserPositionToUserProjectEvaluationTemplateRelationships:
      properties:
        source_user_position:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_position
                  type: string
              type: object
          readOnly: true
          type: object
        target_user_position:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_position
                  type: string
              type: object
          readOnly: true
          type: object
        template:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation_template
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayExportCv:
          readOnly: true
          type: boolean
        _mayLinkInterest:
          readOnly: true
          type: boolean
        _mayLinkJobSheet:
          readOnly: true
          type: boolean
        _mayLinkUserHoliday:
          readOnly: true
          type: boolean
        _mayRecommend:
          readOnly: true
          type: boolean
        _maySeeLeavingDate:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        active:
          type: boolean
        business_unit_id:
          format: int32
          nullable: true
          type: integer
        daily_cost:
          format: float
          minimum: 0
          nullable: true
          type: number
        email:
          type: string
        external_id:
          type: string
        first_name:
          minLength: 1
          type: string
        hiring_date:
          format: date
          nullable: true
          type: string
        last_name:
          minLength: 1
          type: string
        leaving_date:
          format: date
          nullable: true
          type: string
        location_id:
          format: int32
          nullable: true
          type: integer
        personal_description:
          type: string
        phone_number:
          type: string
        picture:
          readOnly: true
          type: object
        score:
          readOnly: true
          type: object
        staffing:
          readOnly: true
          type: object
        user_group_id:
          format: int32
          type: integer
        user_metadata:
          type: object
        user_position_id:
          format: int32
          type: integer
        userinfo_metadata:
          type: object
      required:
      - email
      - first_name
      - last_name
      - user_group_id
      - user_position_id
      type: object
    UserProject:
      properties:
        _hasPendingEvaluations:
          readOnly: true
          type: boolean
        _mayAssess:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkPeriod:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        completed_periods_count:
          readOnly: true
          type: object
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        daily_fee:
          readOnly: true
          type: object
        end_date:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        is_assessment_activated:
          type: boolean
        markup_rate:
          readOnly: true
          type: object
        periods_count:
          readOnly: true
          type: object
        project_id:
          format: int32
          type: integer
        simulated:
          type: boolean
        staffed_days:
          readOnly: true
          type: object
        start_date:
          format: date
          readOnly: true
          type: string
        status:
          readOnly: true
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          nullable: true
          type: integer
        user_project_metadata:
          type: object
        userproject_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      type: object
    UserProjectBusinessUnitPreference:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_unit_id:
          format: int32
          type: integer
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
      type: object
    UserProjectBusinessUnitPreferencePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_unit_id:
          format: int32
          type: integer
      type: object
    UserProjectBusinessUnitPreferencePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_unit_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      required:
      - business_unit_id
      - user_project_id
      type: object
    UserProjectBusinessUnitPreferenceRelationships:
      properties:
        business_unit:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: business_unit
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectBusinessUnitPreferenceRelationshipsPatch:
      properties: {}
      type: object
    UserProjectBusinessUnitPreferenceRelationshipsPost:
      properties: {}
      required:
      - business_unit_id
      - user_project_id
      type: object
    UserProjectEvaluation:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        closed:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        data:
          type: object
        id:
          format: int32
          readOnly: true
          type: integer
        template_id:
          format: int32
          nullable: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
      type: object
    UserProjectEvaluationApproval:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserProjectEvaluationApprovalPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluation_id:
          format: int32
          type: integer
      required:
      - evaluation_id
      type: object
    UserProjectEvaluationApprovalRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectEvaluationApprovalRelationshipsPost:
      properties: {}
      required:
      - evaluation_id
      type: object
    UserProjectEvaluationAuthor:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        author_id:
          format: int32
          type: integer
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_evaluation_id:
          format: int32
          type: integer
      type: object
    UserProjectEvaluationAuthorPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        author_id:
          format: int32
          type: integer
        user_project_evaluation_id:
          format: int32
          type: integer
      required:
      - author_id
      - user_project_evaluation_id
      type: object
    UserProjectEvaluationAuthorRelationships:
      properties:
        author:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_project_evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectEvaluationAuthorRelationshipsPost:
      properties: {}
      required:
      - author_id
      - user_project_evaluation_id
      type: object
    UserProjectEvaluationPatch:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        data:
          type: object
      type: object
    UserProjectEvaluationPost:
      properties:
        _isLocked:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        data:
          type: object
        template_id:
          format: int32
          nullable: true
          type: integer
        user_project_id:
          format: int32
          type: integer
      required:
      - user_project_id
      type: object
    UserProjectEvaluationRelationships:
      properties:
        approvals:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_approval
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        authors:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_author
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        template:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation_template
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
        user_project_evaluation_user_project_user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_user_project_user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserProjectEvaluationRelationshipsPatch:
      properties: {}
      type: object
    UserProjectEvaluationRelationshipsPost:
      properties: {}
      required:
      - user_project_id
      type: object
    UserProjectEvaluationTemplate:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        form:
          items:
            type: object
          type: array
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        schema:
          type: object
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserProjectEvaluationTemplateRelationships:
      properties: {}
      type: object
    UserProjectEvaluationUserProjectUserSkill:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        evaluation_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        userproject_userskill_id:
          format: int32
          type: integer
      type: object
    UserProjectEvaluationUserProjectUserSkillGrade:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        grade_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_evaluation_user_project_user_skill_id:
          format: int32
          type: integer
      type: object
    UserProjectEvaluationUserProjectUserSkillGradePatch:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        grade_id:
          format: int32
          type: integer
      type: object
    UserProjectEvaluationUserProjectUserSkillGradePost:
      properties:
        _counts_for_user_skill_grade:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        grade_id:
          format: int32
          type: integer
        user_project_evaluation_user_project_user_skill_id:
          format: int32
          type: integer
      required:
      - grade_id
      - user_project_evaluation_user_project_user_skill_id
      type: object
    UserProjectEvaluationUserProjectUserSkillGradeRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          type: object
        user_project_evaluation_user_project_user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation_user_project_user_skill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectEvaluationUserProjectUserSkillGradeRelationshipsPatch:
      properties:
        grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          type: object
      type: object
    UserProjectEvaluationUserProjectUserSkillGradeRelationshipsPost:
      properties:
        grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          type: object
      required:
      - grade_id
      - user_project_evaluation_user_project_user_skill_id
      type: object
    UserProjectEvaluationUserProjectUserSkillPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        evaluation_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
          writeOnly: true
        userproject_userskill_id:
          format: int32
          type: integer
      required:
      - evaluation_id
      type: object
    UserProjectEvaluationUserProjectUserSkillRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluation:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project_evaluation
                  type: string
              type: object
          readOnly: true
          type: object
        grades:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_user_project_user_skill_grade
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        userproject_userskill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: userproject_userskill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectEvaluationUserProjectUserSkillRelationshipsPost:
      properties: {}
      required:
      - evaluation_id
      type: object
    UserProjectLocationPreference:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        location_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
      type: object
    UserProjectLocationPreferencePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        location_id:
          format: int32
          type: integer
      type: object
    UserProjectLocationPreferencePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        location_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      required:
      - location_id
      - user_project_id
      type: object
    UserProjectLocationPreferenceRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        location:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: location
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectLocationPreferenceRelationshipsPatch:
      properties: {}
      type: object
    UserProjectLocationPreferenceRelationshipsPost:
      properties: {}
      required:
      - location_id
      - user_project_id
      type: object
    UserProjectPatch:
      properties:
        _hasPendingEvaluations:
          readOnly: true
          type: boolean
        _mayAssess:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkPeriod:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        completed_periods_count:
          readOnly: true
          type: object
        daily_fee:
          readOnly: true
          type: object
        is_assessment_activated:
          type: boolean
        markup_rate:
          readOnly: true
          type: object
        periods_count:
          readOnly: true
          type: object
        project_id:
          format: int32
          type: integer
        simulated:
          type: boolean
        staffed_days:
          readOnly: true
          type: object
        status:
          readOnly: true
          type: object
        user_id:
          format: int32
          nullable: true
          type: integer
        user_project_metadata:
          type: object
        userproject_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      type: object
    UserProjectPeriod:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayGetDailyFee:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_days:
          readOnly: true
          type: object
        completed:
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        daily_fee:
          format: float
          nullable: true
          type: number
        end_date:
          format: date
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        markup_rate:
          readOnly: true
          type: object
        name:
          nullable: true
          type: string
        staffed_days:
          format: float
          minimum: 0
          type: number
        start_date:
          format: date
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
        userprojectperiod_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      type: object
    UserProjectPeriodPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayGetDailyFee:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_days:
          readOnly: true
          type: object
        completed:
          type: boolean
        daily_fee:
          format: float
          nullable: true
          type: number
        end_date:
          format: date
          type: string
        markup_rate:
          readOnly: true
          type: object
        name:
          nullable: true
          type: string
        staffed_days:
          format: float
          minimum: 0
          type: number
        start_date:
          format: date
          type: string
        user_project_id:
          format: int32
          type: integer
        userprojectperiod_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      type: object
    UserProjectPeriodPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayGetDailyFee:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        business_days:
          readOnly: true
          type: object
        completed:
          type: boolean
        daily_fee:
          format: float
          nullable: true
          type: number
        end_date:
          format: date
          type: string
        markup_rate:
          readOnly: true
          type: object
        name:
          nullable: true
          type: string
        staffed_days:
          format: float
          minimum: 0
          type: number
        start_date:
          format: date
          type: string
        user_project_id:
          format: int32
          type: integer
        userprojectperiod_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      required:
      - end_date
      - staffed_days
      - start_date
      - user_project_id
      type: object
    UserProjectPeriodRelationships:
      properties:
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
        userprojectperiod_status:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: userprojectperiod_status
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectPeriodRelationshipsPatch:
      properties: {}
      type: object
    UserProjectPeriodRelationshipsPost:
      properties: {}
      required:
      - end_date
      - staffed_days
      - start_date
      - user_project_id
      type: object
    UserProjectPeriodStatus:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserProjectPeriodStatusPatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserProjectPeriodStatusPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserProjectPeriodStatusRelationships:
      properties: {}
      type: object
    UserProjectPeriodStatusRelationshipsPatch:
      properties: {}
      type: object
    UserProjectPeriodStatusRelationshipsPost:
      properties: {}
      type: object
    UserProjectPost:
      properties:
        _hasPendingEvaluations:
          readOnly: true
          type: boolean
        _mayAssess:
          readOnly: true
          type: boolean
        _mayClone:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayLinkPeriod:
          readOnly: true
          type: boolean
        _mayLinkUserSkill:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        completed_periods_count:
          readOnly: true
          type: object
        daily_fee:
          readOnly: true
          type: object
        is_assessment_activated:
          type: boolean
        markup_rate:
          readOnly: true
          type: object
        periods_count:
          readOnly: true
          type: object
        project_id:
          format: int32
          type: integer
        simulated:
          type: boolean
        staffed_days:
          readOnly: true
          type: object
        status:
          readOnly: true
          type: object
        user_id:
          format: int32
          nullable: true
          type: integer
        user_project_metadata:
          type: object
        userproject_status_id:
          format: int32
          nullable: true
          type: integer
        workload:
          readOnly: true
          type: object
      required:
      - project_id
      type: object
    UserProjectRelationships:
      properties:
        business_unit_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_business_unit_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        location_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_location_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: project
                  type: string
              type: object
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_position_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_user_position_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_user_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_tag_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_user_tag_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        userproject_status:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: userproject_status
                  type: string
              type: object
          readOnly: true
          type: object
        userproject_userskills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: userproject_userskill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        userprojectperiods:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: userprojectperiod
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserProjectRelationshipsPatch:
      properties: {}
      type: object
    UserProjectRelationshipsPost:
      properties: {}
      required:
      - project_id
      type: object
    UserProjectStatus:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserProjectStatusPatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserProjectStatusPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    UserProjectStatusRelationships:
      properties: {}
      type: object
    UserProjectStatusRelationshipsPatch:
      properties: {}
      type: object
    UserProjectStatusRelationshipsPost:
      properties: {}
      required:
      - name
      type: object
    UserProjectUserPositionPreference:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_position_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      type: object
    UserProjectUserPositionPreferencePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_position_id:
          format: int32
          type: integer
      type: object
    UserProjectUserPositionPreferencePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_position_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      required:
      - user_position_id
      - user_project_id
      type: object
    UserProjectUserPositionPreferenceRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_position:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_position
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectUserPositionPreferenceRelationshipsPatch:
      properties: {}
      type: object
    UserProjectUserPositionPreferenceRelationshipsPost:
      properties: {}
      required:
      - user_position_id
      - user_project_id
      type: object
    UserProjectUserPreference:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      type: object
    UserProjectUserPreferencePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_id:
          format: int32
          type: integer
      type: object
    UserProjectUserPreferencePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_id:
          format: int32
          type: integer
        user_project_id:
          format: int32
          type: integer
      required:
      - user_id
      - user_project_id
      type: object
    UserProjectUserPreferenceRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectUserPreferenceRelationshipsPatch:
      properties: {}
      type: object
    UserProjectUserPreferenceRelationshipsPost:
      properties: {}
      required:
      - user_id
      - user_project_id
      type: object
    UserProjectUserSkill:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
        user_skill_id:
          format: int32
          type: integer
      type: object
    UserProjectUserSkillPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        skill_id:
          format: int32
          type: integer
          writeOnly: true
        user_project_id:
          format: int32
          type: integer
        user_skill_id:
          format: int32
          type: integer
      required:
      - user_project_id
      type: object
    UserProjectUserSkillRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
        user_project_evaluation_user_project_user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_user_project_user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_skill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectUserSkillRelationshipsPost:
      properties: {}
      required:
      - user_project_id
      type: object
    UserProjectUserTagPreference:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_project_id:
          format: int32
          type: integer
        user_tag_id:
          format: int32
          type: integer
      type: object
    UserProjectUserTagPreferencePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_tag_id:
          format: int32
          type: integer
      type: object
    UserProjectUserTagPreferencePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_project_id:
          format: int32
          type: integer
        user_tag_id:
          format: int32
          type: integer
      required:
      - user_project_id
      - user_tag_id
      type: object
    UserProjectUserTagPreferenceRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_project:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_project
                  type: string
              type: object
          readOnly: true
          type: object
        user_tag:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_tag
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserProjectUserTagPreferenceRelationshipsPatch:
      properties: {}
      type: object
    UserProjectUserTagPreferenceRelationshipsPost:
      properties: {}
      required:
      - user_project_id
      - user_tag_id
      type: object
    UserRelationships:
      properties:
        authored_evaluations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_author
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        authored_user_project_evaluation_authors:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation_author
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        business_unit:
          nullable: true
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: business_unit
                  type: string
              type: object
          readOnly: true
          type: object
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        evaluations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        location:
          nullable: true
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: location
                  type: string
              type: object
          type: object
        projects_created:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: project
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        timesheets:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: timesheet
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_config:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_config
                  type: string
              type: object
          readOnly: true
          type: object
        user_group:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_group
                  type: string
              type: object
          readOnly: true
          type: object
        user_holidays:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_holiday
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_job_sheets:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_job_sheet
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_position:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_position
                  type: string
              type: object
          readOnly: true
          type: object
        user_project_evaluations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_evaluation
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_projects:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_user_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserRelationshipsPatch:
      properties:
        location:
          nullable: true
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: location
                  type: string
              type: object
          type: object
      type: object
    UserRelationshipsPost:
      properties:
        location:
          nullable: true
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: location
                  type: string
              type: object
          type: object
      required:
      - email
      - first_name
      - last_name
      - user_group_id
      - user_position_id
      type: object
    UserSkill:
      properties:
        _hasChildren:
          readOnly: true
          type: boolean
        _isAssessedByOthers:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        grade:
          readOnly: true
          type: object
        id:
          format: int32
          readOnly: true
          type: integer
        skill_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
      type: object
    UserSkillInterest:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        like:
          type: boolean
        updated_on:
          format: date
          readOnly: true
          type: string
        user_skill_id:
          format: int32
          readOnly: true
          type: integer
      type: object
    UserSkillInterestPatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        like:
          type: boolean
        skill_id:
          format: int32
          type: integer
          writeOnly: true
        user_id:
          format: int32
          type: integer
          writeOnly: true
      type: object
    UserSkillInterestPost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        like:
          type: boolean
        skill_id:
          format: int32
          type: integer
          writeOnly: true
        user_id:
          format: int32
          type: integer
          writeOnly: true
      required:
      - like
      - skill_id
      - user_id
      type: object
    UserSkillInterestRelationships:
      properties:
        user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_skill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserSkillInterestRelationshipsPatch:
      properties: {}
      type: object
    UserSkillInterestRelationshipsPost:
      properties: {}
      required:
      - like
      - skill_id
      - user_id
      type: object
    UserSkillRelationships:
      properties:
        evaluation_user_skills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: evaluation_campaign_evaluation_user_skill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: skill
                  type: string
              type: object
          readOnly: true
          type: object
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        userproject_userskills:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: userproject_userskill
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        userskill_interest:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: userskill_interest
                  type: string
              type: object
          readOnly: true
          type: object
        userskill_usergrades:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: userskill_usergrade
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserSkillUserGrade:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        created_by_id:
          format: int32
          readOnly: true
          type: integer
        created_on:
          format: date
          readOnly: true
          type: string
        grade_id:
          format: int32
          type: integer
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_skill_id:
          format: int32
          readOnly: true
          type: integer
      type: object
    UserSkillUserGradePatch:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        grade_id:
          format: int32
          type: integer
      type: object
    UserSkillUserGradePost:
      properties:
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        comment:
          type: string
        grade_id:
          format: int32
          type: integer
        skill_id:
          format: int32
          type: integer
          writeOnly: true
        user_id:
          format: int32
          type: integer
          writeOnly: true
      required:
      - grade_id
      - skill_id
      - user_id
      type: object
    UserSkillUserGradeRelationships:
      properties:
        created_by:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        grade:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: grade
                  type: string
              type: object
          readOnly: true
          type: object
        user_skill:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_skill
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserSkillUserGradeRelationshipsPatch:
      properties: {}
      type: object
    UserSkillUserGradeRelationshipsPost:
      properties: {}
      required:
      - grade_id
      - skill_id
      - user_id
      type: object
    UserTag:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserTagPatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
      type: object
    UserTagPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
        tag_type_id:
          format: int32
          type: integer
      required:
      - tag_type_id
      type: object
    UserTagRelationships:
      properties:
        tag_type:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_tag_type
                  type: string
              type: object
          readOnly: true
          type: object
        user_project_preferences:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_project_user_tag_preference
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
        user_user_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_user_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserTagRelationshipsPatch:
      properties: {}
      type: object
    UserTagRelationshipsPost:
      properties: {}
      required:
      - tag_type_id
      type: object
    UserTagType:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        name:
          minLength: 1
          type: string
        updated_on:
          format: date
          readOnly: true
          type: string
      type: object
    UserTagTypePatch:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserTagTypePost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        name:
          minLength: 1
          type: string
      type: object
    UserTagTypeRelationships:
      properties:
        user_tags:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  type:
                    example: user_tag
                    type: string
                type: object
              type: array
          readOnly: true
          type: object
      type: object
    UserTagTypeRelationshipsPatch:
      properties: {}
      type: object
    UserTagTypeRelationshipsPost:
      properties: {}
      type: object
    UserUserTag:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        created_on:
          format: date
          readOnly: true
          type: string
        id:
          format: int32
          readOnly: true
          type: integer
        updated_on:
          format: date
          readOnly: true
          type: string
        user_id:
          format: int32
          type: integer
        user_tag_id:
          format: int32
          type: integer
      type: object
    UserUserTagPost:
      properties:
        _mayCreate:
          readOnly: true
          type: boolean
        _mayDelete:
          readOnly: true
          type: boolean
        _mayUpdate:
          readOnly: true
          type: boolean
        user_id:
          format: int32
          type: integer
        user_tag_id:
          format: int32
          type: integer
      required:
      - user_id
      - user_tag_id
      type: object
    UserUserTagRelationships:
      properties:
        user:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user
                  type: string
              type: object
          readOnly: true
          type: object
        user_tag:
          properties:
            data:
              properties:
                id:
                  example: 1
                  type: integer
                type:
                  example: user_tag
                  type: string
              type: object
          readOnly: true
          type: object
      type: object
    UserUserTagRelationshipsPost:
      properties: {}
      required:
      - user_id
      - user_tag_id
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: '

    This is the Napta API.


    It follows the [JSON API 1.0 standard](https://jsonapi.org/format/1.0/) and supports
    the following behaviours:


    * [Include related objects](https://flask-rest-jsonapi.readthedocs.io/en/latest/include_related_objects.html)

    * [Sparse fieldsets](https://flask-rest-jsonapi.readthedocs.io/en/latest/sparse_fieldsets.html)

    * [Filtering](https://flask-rest-jsonapi.readthedocs.io/en/latest/filtering.html)

    * [Pagination](https://flask-rest-jsonapi.readthedocs.io/en/latest/pagination.html)

    * [Sorting](https://flask-rest-jsonapi.readthedocs.io/en/latest/sorting.html)


    For authentication please follow:

    * [Auth0 Machine to Machine (M2M) Authorization](https://auth0.com/docs/flows/guides/client-credentials/call-api-client-credentials)
    - url for authentication is [https://auth.napta.io/oauth/token](https://auth.pickyourskills.com/oauth/token)
    and audience is *backend*


    '
  title: Napta
  version: 1.0.0
openapi: 3.0.2
paths:
  /api/v1/user_config:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserConfig'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserConfigRelationships'
                        type:
                          example: user_config
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserConfig
  /api/v1/user_config/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserConfig'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserConfigRelationships'
                      type:
                        example: user_config
                        type: string
                    type: object
                type: object
      tags:
      - UserConfig
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserConfigPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserConfigRelationshipsPatch'
                    type:
                      example: user_config
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserConfig'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserConfigRelationships'
                      type:
                        example: user_config
                        type: string
                    type: object
                type: object
      tags:
      - UserConfig
  /api/v1/rex_template:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Rex'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/RexRelationships'
                        type:
                          example: rex_template
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - RexTemplate
  /api/v1/rex_template/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Rex'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/RexRelationships'
                      type:
                        example: rex_template
                        type: string
                    type: object
                type: object
      tags:
      - RexTemplate
  /api/v1/resume_template:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Resume'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ResumeRelationships'
                        type:
                          example: resume_template
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ResumeTemplate
  /api/v1/resume_template/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Resume'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ResumeRelationships'
                      type:
                        example: resume_template
                        type: string
                    type: object
                type: object
      tags:
      - ResumeTemplate
  /api/v1/user:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/User'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserRelationships'
                        type:
                          example: user
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - User
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserPost'
                    relationships:
                      $ref: '#/components/schemas/UserRelationshipsPost'
                    type:
                      example: user
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/User'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserRelationships'
                      type:
                        example: user
                        type: string
                    type: object
                type: object
      tags:
      - User
  /api/v1/user/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/User'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserRelationships'
                      type:
                        example: user
                        type: string
                    type: object
                type: object
      tags:
      - User
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserRelationshipsPatch'
                    type:
                      example: user
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/User'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserRelationships'
                      type:
                        example: user
                        type: string
                    type: object
                type: object
      tags:
      - User
  /api/v1/minimal_user:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/MinimalUser'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/MinimalUserRelationships'
                        type:
                          example: user
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - User
  /api/v1/minimal_user/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MinimalUser'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MinimalUserRelationships'
                      type:
                        example: user
                        type: string
                    type: object
                type: object
      tags:
      - User
  /api/v1/user_calendar:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/User'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserRelationships'
                        type:
                          example: user
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - User
  /api/v1/project_calendar:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectCalendar'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectCalendarRelationships'
                        type:
                          example: project_calendar
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectCalendar
  /api/v1/location:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Location'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/LocationRelationships'
                        type:
                          example: location
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Location
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/LocationPost'
                    relationships:
                      $ref: '#/components/schemas/LocationRelationshipsPost'
                    type:
                      example: location
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Location'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/LocationRelationships'
                      type:
                        example: location
                        type: string
                    type: object
                type: object
      tags:
      - Location
  /api/v1/location/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Location
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Location'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/LocationRelationships'
                      type:
                        example: location
                        type: string
                    type: object
                type: object
      tags:
      - Location
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/LocationPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/LocationRelationshipsPatch'
                    type:
                      example: location
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Location'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/LocationRelationships'
                      type:
                        example: location
                        type: string
                    type: object
                type: object
      tags:
      - Location
  /api/v1/user_group:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserGroup'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserGroupRelationships'
                        type:
                          example: user_group
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserGroup
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserGroupPost'
                    relationships:
                      $ref: '#/components/schemas/UserGroupRelationshipsPost'
                    type:
                      example: user_group
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserGroup'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserGroupRelationships'
                      type:
                        example: user_group
                        type: string
                    type: object
                type: object
      tags:
      - UserGroup
  /api/v1/user_group/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserGroup
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserGroup'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserGroupRelationships'
                      type:
                        example: user_group
                        type: string
                    type: object
                type: object
      tags:
      - UserGroup
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserGroupPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserGroupRelationshipsPatch'
                    type:
                      example: user_group
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserGroup'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserGroupRelationships'
                      type:
                        example: user_group
                        type: string
                    type: object
                type: object
      tags:
      - UserGroup
  /api/v1/grade_group:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/GradeGroup'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/GradeGroupRelationships'
                        type:
                          example: grade_group
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - GradeGroup
  /api/v1/grade_group/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/GradeGroup'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/GradeGroupRelationships'
                      type:
                        example: grade_group
                        type: string
                    type: object
                type: object
      tags:
      - GradeGroup
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/GradeGroupPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/GradeGroupRelationshipsPatch'
                    type:
                      example: grade_group
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/GradeGroup'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/GradeGroupRelationships'
                      type:
                        example: grade_group
                        type: string
                    type: object
                type: object
      tags:
      - GradeGroup
  /api/v1/skill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Skill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/SkillRelationships'
                        type:
                          example: skill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Skill
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/SkillPost'
                    relationships:
                      $ref: '#/components/schemas/SkillRelationshipsPost'
                    type:
                      example: skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Skill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillRelationships'
                      type:
                        example: skill
                        type: string
                    type: object
                type: object
      tags:
      - Skill
  /api/v1/skill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Skill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Skill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillRelationships'
                      type:
                        example: skill
                        type: string
                    type: object
                type: object
      tags:
      - Skill
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/SkillPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/SkillRelationshipsPatch'
                    type:
                      example: skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Skill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillRelationships'
                      type:
                        example: skill
                        type: string
                    type: object
                type: object
      tags:
      - Skill
  /api/v1/skill_category:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/SkillCategory'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/SkillCategoryRelationships'
                        type:
                          example: skill_category
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - SkillCategory
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/SkillCategoryPost'
                    relationships:
                      $ref: '#/components/schemas/SkillCategoryRelationshipsPost'
                    type:
                      example: skill_category
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/SkillCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillCategoryRelationships'
                      type:
                        example: skill_category
                        type: string
                    type: object
                type: object
      tags:
      - SkillCategory
  /api/v1/skill_category/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - SkillCategory
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/SkillCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillCategoryRelationships'
                      type:
                        example: skill_category
                        type: string
                    type: object
                type: object
      tags:
      - SkillCategory
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/SkillCategoryPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/SkillCategoryRelationshipsPatch'
                    type:
                      example: skill_category
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/SkillCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/SkillCategoryRelationships'
                      type:
                        example: skill_category
                        type: string
                    type: object
                type: object
      tags:
      - SkillCategory
  /api/v1/client:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Client'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ClientRelationships'
                        type:
                          example: client
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Client
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ClientPost'
                    relationships:
                      $ref: '#/components/schemas/ClientRelationshipsPost'
                    type:
                      example: client
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Client'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ClientRelationships'
                      type:
                        example: client
                        type: string
                    type: object
                type: object
      tags:
      - Client
  /api/v1/client/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Client
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Client'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ClientRelationships'
                      type:
                        example: client
                        type: string
                    type: object
                type: object
      tags:
      - Client
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ClientPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ClientRelationshipsPatch'
                    type:
                      example: client
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Client'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ClientRelationships'
                      type:
                        example: client
                        type: string
                    type: object
                type: object
      tags:
      - Client
  /api/v1/project:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Project'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectRelationships'
                        type:
                          example: project
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Project
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectRelationshipsPost'
                    type:
                      example: project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Project'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectRelationships'
                      type:
                        example: project
                        type: string
                    type: object
                type: object
      tags:
      - Project
  /api/v1/project/clone:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectRelationshipsPost'
                    type:
                      example: project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Project'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectRelationships'
                      type:
                        example: project
                        type: string
                    type: object
                type: object
      tags:
      - Project
  /api/v1/project/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Project
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Project'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectRelationships'
                      type:
                        example: project
                        type: string
                    type: object
                type: object
      tags:
      - Project
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectRelationshipsPatch'
                    type:
                      example: project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Project'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectRelationships'
                      type:
                        example: project
                        type: string
                    type: object
                type: object
      tags:
      - Project
  /api/v1/user_skill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserSkill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserSkillRelationships'
                        type:
                          example: user_skill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserSkill
  /api/v1/user_skill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserSkill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillRelationships'
                      type:
                        example: user_skill
                        type: string
                    type: object
                type: object
      tags:
      - UserSkill
  /api/v1/user_holiday:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserHoliday'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserHolidayRelationships'
                        type:
                          example: user_holiday
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserHoliday
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserHolidayPost'
                    relationships:
                      $ref: '#/components/schemas/UserHolidayRelationshipsPost'
                    type:
                      example: user_holiday
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHoliday'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayRelationships'
                      type:
                        example: user_holiday
                        type: string
                    type: object
                type: object
      tags:
      - UserHoliday
  /api/v1/user_holiday/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserHoliday
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHoliday'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayRelationships'
                      type:
                        example: user_holiday
                        type: string
                    type: object
                type: object
      tags:
      - UserHoliday
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserHolidayPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserHolidayRelationshipsPatch'
                    type:
                      example: user_holiday
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHoliday'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayRelationships'
                      type:
                        example: user_holiday
                        type: string
                    type: object
                type: object
      tags:
      - UserHoliday
  /api/v1/user_holiday_category:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserHolidayCategory'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserHolidayCategoryRelationships'
                        type:
                          example: user_holiday_category
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserHolidayCategory
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserHolidayCategoryPost'
                    relationships:
                      $ref: '#/components/schemas/UserHolidayCategoryRelationshipsPost'
                    type:
                      example: user_holiday_category
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHolidayCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayCategoryRelationships'
                      type:
                        example: user_holiday_category
                        type: string
                    type: object
                type: object
      tags:
      - UserHolidayCategory
  /api/v1/user_holiday_category/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserHolidayCategory
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHolidayCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayCategoryRelationships'
                      type:
                        example: user_holiday_category
                        type: string
                    type: object
                type: object
      tags:
      - UserHolidayCategory
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserHolidayCategoryPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserHolidayCategoryRelationshipsPatch'
                    type:
                      example: user_holiday_category
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserHolidayCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserHolidayCategoryRelationships'
                      type:
                        example: user_holiday_category
                        type: string
                    type: object
                type: object
      tags:
      - UserHolidayCategory
  /api/v1/log:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Log'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/LogRelationships'
                        type:
                          example: log
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Log
  /api/v1/log/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Log'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/LogRelationships'
                      type:
                        example: log
                        type: string
                    type: object
                type: object
      tags:
      - Log
  /api/v1/user_position:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserPosition'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserPositionRelationships'
                        type:
                          example: user_position
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserPosition
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserPositionPost'
                    relationships:
                      $ref: '#/components/schemas/UserPositionRelationshipsPost'
                    type:
                      example: user_position
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserPosition'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserPositionRelationships'
                      type:
                        example: user_position
                        type: string
                    type: object
                type: object
      tags:
      - UserPosition
  /api/v1/user_position/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserPosition
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserPosition'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserPositionRelationships'
                      type:
                        example: user_position
                        type: string
                    type: object
                type: object
      tags:
      - UserPosition
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserPositionPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserPositionRelationshipsPatch'
                    type:
                      example: user_position
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserPosition'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserPositionRelationships'
                      type:
                        example: user_position
                        type: string
                    type: object
                type: object
      tags:
      - UserPosition
  /api/v1/grade:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Grade'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/GradeRelationships'
                        type:
                          example: grade
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Grade
  /api/v1/grade/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Grade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/GradeRelationships'
                      type:
                        example: grade
                        type: string
                    type: object
                type: object
      tags:
      - Grade
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/GradePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/GradeRelationshipsPatch'
                    type:
                      example: grade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Grade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/GradeRelationships'
                      type:
                        example: grade
                        type: string
                    type: object
                type: object
      tags:
      - Grade
  /api/v1/user_project:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProject'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectRelationships'
                        type:
                          example: user_project
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProject
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectRelationshipsPost'
                    type:
                      example: user_project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProject'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectRelationships'
                      type:
                        example: user_project
                        type: string
                    type: object
                type: object
      tags:
      - UserProject
  /api/v1/user_project/clone:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectRelationshipsPost'
                    type:
                      example: user_project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProject'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectRelationships'
                      type:
                        example: user_project
                        type: string
                    type: object
                type: object
      tags:
      - UserProject
  /api/v1/user_project/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProject
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProject'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectRelationships'
                      type:
                        example: user_project
                        type: string
                    type: object
                type: object
      tags:
      - UserProject
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectRelationshipsPatch'
                    type:
                      example: user_project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProject'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectRelationships'
                      type:
                        example: user_project
                        type: string
                    type: object
                type: object
      tags:
      - UserProject
  /api/v1/user_project_shift/{id}:
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectRelationshipsPatch'
                    type:
                      example: user_project
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProject'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectRelationships'
                      type:
                        example: user_project
                        type: string
                    type: object
                type: object
      tags:
      - UserProject
  /api/v1/userproject_userskill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectUserSkill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectUserSkillRelationships'
                        type:
                          example: userproject_userskill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserprojectUserskill
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserSkillPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserSkillRelationshipsPost'
                    type:
                      example: userproject_userskill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserSkillRelationships'
                      type:
                        example: userproject_userskill
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectUserskill
  /api/v1/userproject_userskill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserprojectUserskill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserSkillRelationships'
                      type:
                        example: userproject_userskill
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectUserskill
  /api/v1/user_project_evaluation_user_project_user_skill_grade:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGrade'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationships'
                        type:
                          example: user_project_evaluation_user_project_user_skill_grade
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkillGrade
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationshipsPost'
                    type:
                      example: user_project_evaluation_user_project_user_skill_grade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationships'
                      type:
                        example: user_project_evaluation_user_project_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkillGrade
  /api/v1/user_project_evaluation_user_project_user_skill_grade/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectEvaluationUserProjectUserSkillGrade
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationships'
                      type:
                        example: user_project_evaluation_user_project_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkillGrade
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationshipsPatch'
                    type:
                      example: user_project_evaluation_user_project_user_skill_grade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillGradeRelationships'
                      type:
                        example: user_project_evaluation_user_project_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkillGrade
  /api/v1/user_project_evaluation_user_project_user_skill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillRelationships'
                        type:
                          example: user_project_evaluation_user_project_user_skill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkill
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillRelationshipsPost'
                    type:
                      example: user_project_evaluation_user_project_user_skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillRelationships'
                      type:
                        example: user_project_evaluation_user_project_user_skill
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkill
  /api/v1/user_project_evaluation_user_project_user_skill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectEvaluationUserProjectUserSkill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationUserProjectUserSkillRelationships'
                      type:
                        example: user_project_evaluation_user_project_user_skill
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationUserProjectUserSkill
  /api/v1/userskill_usergrade:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserSkillUserGrade'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserSkillUserGradeRelationships'
                        type:
                          example: userskill_usergrade
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserskillUsergrade
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserSkillUserGradePost'
                    relationships:
                      $ref: '#/components/schemas/UserSkillUserGradeRelationshipsPost'
                    type:
                      example: userskill_usergrade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillUserGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillUserGradeRelationships'
                      type:
                        example: userskill_usergrade
                        type: string
                    type: object
                type: object
      tags:
      - UserskillUsergrade
  /api/v1/userskill_usergrade/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserskillUsergrade
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillUserGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillUserGradeRelationships'
                      type:
                        example: userskill_usergrade
                        type: string
                    type: object
                type: object
      tags:
      - UserskillUsergrade
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserSkillUserGradePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserSkillUserGradeRelationshipsPatch'
                    type:
                      example: userskill_usergrade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillUserGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillUserGradeRelationships'
                      type:
                        example: userskill_usergrade
                        type: string
                    type: object
                type: object
      tags:
      - UserskillUsergrade
  /api/v1/userprojectperiod:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectPeriod'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectPeriodRelationships'
                        type:
                          example: userprojectperiod
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Userprojectperiod
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPeriodPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectPeriodRelationshipsPost'
                    type:
                      example: userprojectperiod
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriod'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodRelationships'
                      type:
                        example: userprojectperiod
                        type: string
                    type: object
                type: object
      tags:
      - Userprojectperiod
  /api/v1/userprojectperiod/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Userprojectperiod
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriod'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodRelationships'
                      type:
                        example: userprojectperiod
                        type: string
                    type: object
                type: object
      tags:
      - Userprojectperiod
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPeriodPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectPeriodRelationshipsPatch'
                    type:
                      example: userprojectperiod
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriod'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodRelationships'
                      type:
                        example: userprojectperiod
                        type: string
                    type: object
                type: object
      tags:
      - Userprojectperiod
  /api/v1/userprojectperiod_status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectPeriodStatus'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectPeriodStatusRelationships'
                        type:
                          example: userprojectperiod_status
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserprojectperiodStatus
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPeriodStatusPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectPeriodStatusRelationshipsPost'
                    type:
                      example: userprojectperiod_status
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriodStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodStatusRelationships'
                      type:
                        example: userprojectperiod_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectperiodStatus
  /api/v1/userprojectperiod_status/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserprojectperiodStatus
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriodStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodStatusRelationships'
                      type:
                        example: userprojectperiod_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectperiodStatus
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectPeriodStatusPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectPeriodStatusRelationshipsPatch'
                    type:
                      example: userprojectperiod_status
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectPeriodStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectPeriodStatusRelationships'
                      type:
                        example: userprojectperiod_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectperiodStatus
  /api/v1/application_config:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ApplicationConfig'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ApplicationConfigRelationships'
                        type:
                          example: application_config
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ApplicationConfig
  /api/v1/application_config/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ApplicationConfig'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ApplicationConfigRelationships'
                      type:
                        example: application_config
                        type: string
                    type: object
                type: object
      tags:
      - ApplicationConfig
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ApplicationConfigPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ApplicationConfigRelationshipsPatch'
                    type:
                      example: application_config
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ApplicationConfig'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ApplicationConfigRelationships'
                      type:
                        example: application_config
                        type: string
                    type: object
                type: object
      tags:
      - ApplicationConfig
  /api/v1/projectstaffingcard:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectStaffingCard'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectStaffingCardRelationships'
                        type:
                          example: projectstaffingcard
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Projectstaffingcard
  /api/v1/projectstaffingcard/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Projectstaffingcard
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingCard'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingCardRelationships'
                      type:
                        example: projectstaffingcard
                        type: string
                    type: object
                type: object
      tags:
      - Projectstaffingcard
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStaffingCardPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectStaffingCardRelationshipsPatch'
                    type:
                      example: projectstaffingcard
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingCard'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingCardRelationships'
                      type:
                        example: projectstaffingcard
                        type: string
                    type: object
                type: object
      tags:
      - Projectstaffingcard
  /api/v1/projectstaffingcolumn:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectStaffingColumn'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectStaffingColumnRelationships'
                        type:
                          example: projectstaffingcolumn
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Projectstaffingcolumn
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStaffingColumnPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectStaffingColumnRelationshipsPost'
                    type:
                      example: projectstaffingcolumn
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingColumn'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingColumnRelationships'
                      type:
                        example: projectstaffingcolumn
                        type: string
                    type: object
                type: object
      tags:
      - Projectstaffingcolumn
  /api/v1/projectstaffingcolumn/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Projectstaffingcolumn
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingColumn'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingColumnRelationships'
                      type:
                        example: projectstaffingcolumn
                        type: string
                    type: object
                type: object
      tags:
      - Projectstaffingcolumn
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStaffingColumnPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectStaffingColumnRelationshipsPatch'
                    type:
                      example: projectstaffingcolumn
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingColumn'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingColumnRelationships'
                      type:
                        example: projectstaffingcolumn
                        type: string
                    type: object
                type: object
      tags:
      - Projectstaffingcolumn
  /api/v1/projectstaffingcard_cardlabel:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectStaffingCardCardLabel'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectStaffingCardCardLabelRelationships'
                        type:
                          example: projectstaffingcard_cardlabel
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectstaffingcardCardlabel
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStaffingCardCardLabelPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectStaffingCardCardLabelRelationshipsPost'
                    type:
                      example: projectstaffingcard_cardlabel
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingCardCardLabel'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingCardCardLabelRelationships'
                      type:
                        example: projectstaffingcard_cardlabel
                        type: string
                    type: object
                type: object
      tags:
      - ProjectstaffingcardCardlabel
  /api/v1/projectstaffingcard_cardlabel/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectstaffingcardCardlabel
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStaffingCardCardLabel'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStaffingCardCardLabelRelationships'
                      type:
                        example: projectstaffingcard_cardlabel
                        type: string
                    type: object
                type: object
      tags:
      - ProjectstaffingcardCardlabel
  /api/v1/cardlabel:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/CardLabel'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/CardLabelRelationships'
                        type:
                          example: cardlabel
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Cardlabel
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CardLabelPost'
                    relationships:
                      $ref: '#/components/schemas/CardLabelRelationshipsPost'
                    type:
                      example: cardlabel
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CardLabel'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CardLabelRelationships'
                      type:
                        example: cardlabel
                        type: string
                    type: object
                type: object
      tags:
      - Cardlabel
  /api/v1/cardlabel/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Cardlabel
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CardLabel'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CardLabelRelationships'
                      type:
                        example: cardlabel
                        type: string
                    type: object
                type: object
      tags:
      - Cardlabel
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CardLabelPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/CardLabelRelationshipsPatch'
                    type:
                      example: cardlabel
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CardLabel'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CardLabelRelationships'
                      type:
                        example: cardlabel
                        type: string
                    type: object
                type: object
      tags:
      - Cardlabel
  /api/v1/projectstatus:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectStatus'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectStatusRelationships'
                        type:
                          example: projectstatus
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Projectstatus
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStatusPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectStatusRelationshipsPost'
                    type:
                      example: projectstatus
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStatusRelationships'
                      type:
                        example: projectstatus
                        type: string
                    type: object
                type: object
      tags:
      - Projectstatus
  /api/v1/projectstatus/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Projectstatus
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStatusRelationships'
                      type:
                        example: projectstatus
                        type: string
                    type: object
                type: object
      tags:
      - Projectstatus
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectStatusPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectStatusRelationshipsPatch'
                    type:
                      example: projectstatus
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectStatusRelationships'
                      type:
                        example: projectstatus
                        type: string
                    type: object
                type: object
      tags:
      - Projectstatus
  /api/v1/projectcategory:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectCategory'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectCategoryRelationships'
                        type:
                          example: projectcategory
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Projectcategory
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectCategoryPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectCategoryRelationshipsPost'
                    type:
                      example: projectcategory
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectCategoryRelationships'
                      type:
                        example: projectcategory
                        type: string
                    type: object
                type: object
      tags:
      - Projectcategory
  /api/v1/projectcategory/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Projectcategory
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectCategoryRelationships'
                      type:
                        example: projectcategory
                        type: string
                    type: object
                type: object
      tags:
      - Projectcategory
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectCategoryPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectCategoryRelationshipsPatch'
                    type:
                      example: projectcategory
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectCategory'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectCategoryRelationships'
                      type:
                        example: projectcategory
                        type: string
                    type: object
                type: object
      tags:
      - Projectcategory
  /api/v1/userproject_status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectStatus'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectStatusRelationships'
                        type:
                          example: userproject_status
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserprojectStatus
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectStatusPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectStatusRelationshipsPost'
                    type:
                      example: userproject_status
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectStatusRelationships'
                      type:
                        example: userproject_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectStatus
  /api/v1/userproject_status/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserprojectStatus
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectStatusRelationships'
                      type:
                        example: userproject_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectStatus
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectStatusPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectStatusRelationshipsPatch'
                    type:
                      example: userproject_status
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectStatus'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectStatusRelationships'
                      type:
                        example: userproject_status
                        type: string
                    type: object
                type: object
      tags:
      - UserprojectStatus
  /api/v1/metadata_field:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/MetadataField'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/MetadataFieldRelationships'
                        type:
                          example: metadata_field
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - MetadataField
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MetadataFieldPost'
                    relationships:
                      $ref: '#/components/schemas/MetadataFieldRelationshipsPost'
                    type:
                      example: metadata_field
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataField'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRelationships'
                      type:
                        example: metadata_field
                        type: string
                    type: object
                type: object
      tags:
      - MetadataField
  /api/v1/metadata_field/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - MetadataField
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataField'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRelationships'
                      type:
                        example: metadata_field
                        type: string
                    type: object
                type: object
      tags:
      - MetadataField
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MetadataFieldPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/MetadataFieldRelationshipsPatch'
                    type:
                      example: metadata_field
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataField'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRelationships'
                      type:
                        example: metadata_field
                        type: string
                    type: object
                type: object
      tags:
      - MetadataField
  /api/v1/metadata_field_right:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/MetadataFieldRight'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/MetadataFieldRightRelationships'
                        type:
                          example: metadata_field_right
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - MetadataFieldRight
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MetadataFieldRightPost'
                    relationships:
                      $ref: '#/components/schemas/MetadataFieldRightRelationshipsPost'
                    type:
                      example: metadata_field_right
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataFieldRight'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRightRelationships'
                      type:
                        example: metadata_field_right
                        type: string
                    type: object
                type: object
      tags:
      - MetadataFieldRight
  /api/v1/metadata_field_right/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - MetadataFieldRight
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataFieldRight'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRightRelationships'
                      type:
                        example: metadata_field_right
                        type: string
                    type: object
                type: object
      tags:
      - MetadataFieldRight
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MetadataFieldRightPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/MetadataFieldRightRelationshipsPatch'
                    type:
                      example: metadata_field_right
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MetadataFieldRight'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/MetadataFieldRightRelationships'
                      type:
                        example: metadata_field_right
                        type: string
                    type: object
                type: object
      tags:
      - MetadataFieldRight
  /api/v1/business_unit:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/BusinessUnit'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/BusinessUnitRelationships'
                        type:
                          example: business_unit
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - BusinessUnit
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/BusinessUnitPost'
                    relationships:
                      $ref: '#/components/schemas/BusinessUnitRelationshipsPost'
                    type:
                      example: business_unit
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/BusinessUnit'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/BusinessUnitRelationships'
                      type:
                        example: business_unit
                        type: string
                    type: object
                type: object
      tags:
      - BusinessUnit
  /api/v1/business_unit/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - BusinessUnit
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/BusinessUnit'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/BusinessUnitRelationships'
                      type:
                        example: business_unit
                        type: string
                    type: object
                type: object
      tags:
      - BusinessUnit
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/BusinessUnitPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/BusinessUnitRelationshipsPatch'
                    type:
                      example: business_unit
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/BusinessUnit'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/BusinessUnitRelationships'
                      type:
                        example: business_unit
                        type: string
                    type: object
                type: object
      tags:
      - BusinessUnit
  /api/v1/userskill_interest:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserSkillInterest'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserSkillInterestRelationships'
                        type:
                          example: userskill_interest
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserskillInterest
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserSkillInterestPost'
                    relationships:
                      $ref: '#/components/schemas/UserSkillInterestRelationshipsPost'
                    type:
                      example: userskill_interest
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillInterest'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillInterestRelationships'
                      type:
                        example: userskill_interest
                        type: string
                    type: object
                type: object
      tags:
      - UserskillInterest
  /api/v1/userskill_interest/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserskillInterest
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillInterest'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillInterestRelationships'
                      type:
                        example: userskill_interest
                        type: string
                    type: object
                type: object
      tags:
      - UserskillInterest
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserSkillInterestPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserSkillInterestRelationshipsPatch'
                    type:
                      example: userskill_interest
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserSkillInterest'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserSkillInterestRelationships'
                      type:
                        example: userskill_interest
                        type: string
                    type: object
                type: object
      tags:
      - UserskillInterest
  /api/v1/evaluation_campaign:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaign'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignRelationships'
                        type:
                          example: evaluation_campaign
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaign
  /api/v1/evaluation_campaign/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaign'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignRelationships'
                      type:
                        example: evaluation_campaign
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaign
  /api/v1/evaluation_campaign_evaluation:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluation'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationships'
                        type:
                          example: evaluation_campaign_evaluation
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluation
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationPost'
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationshipsPost'
                    type:
                      example: evaluation_campaign_evaluation
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationships'
                      type:
                        example: evaluation_campaign_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluation
  /api/v1/evaluation_campaign_evaluation/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationships'
                      type:
                        example: evaluation_campaign_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluation
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationshipsPatch'
                    type:
                      example: evaluation_campaign_evaluation
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationRelationships'
                      type:
                        example: evaluation_campaign_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluation
  /api/v1/evaluation_campaign_evaluation_author:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthor'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthorRelationships'
                        type:
                          example: evaluation_campaign_evaluation_author
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluationAuthor
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthorPost'
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthorRelationshipsPost'
                    type:
                      example: evaluation_campaign_evaluation_author
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthorRelationships'
                      type:
                        example: evaluation_campaign_evaluation_author
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationAuthor
  /api/v1/evaluation_campaign_evaluation_author/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - EvaluationCampaignEvaluationAuthor
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationAuthorRelationships'
                      type:
                        example: evaluation_campaign_evaluation_author
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationAuthor
  /api/v1/evaluation_campaign_evaluation_user_skill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillRelationships'
                        type:
                          example: evaluation_campaign_evaluation_user_skill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkill
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillPost'
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillRelationshipsPost'
                    type:
                      example: evaluation_campaign_evaluation_user_skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillRelationships'
                      type:
                        example: evaluation_campaign_evaluation_user_skill
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkill
  /api/v1/evaluation_campaign_evaluation_user_skill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - EvaluationCampaignEvaluationUserSkill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillRelationships'
                      type:
                        example: evaluation_campaign_evaluation_user_skill
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkill
  /api/v1/evaluation_campaign_evaluation_user_skill_grade:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGrade'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationships'
                        type:
                          example: evaluation_campaign_evaluation_user_skill_grade
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkillGrade
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradePost'
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationshipsPost'
                    type:
                      example: evaluation_campaign_evaluation_user_skill_grade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationships'
                      type:
                        example: evaluation_campaign_evaluation_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkillGrade
  /api/v1/evaluation_campaign_evaluation_user_skill_grade/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - EvaluationCampaignEvaluationUserSkillGrade
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationships'
                      type:
                        example: evaluation_campaign_evaluation_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkillGrade
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationshipsPatch'
                    type:
                      example: evaluation_campaign_evaluation_user_skill_grade
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGrade'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationUserSkillGradeRelationships'
                      type:
                        example: evaluation_campaign_evaluation_user_skill_grade
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationUserSkillGrade
  /api/v1/user_position_to_user_project_evaluation_template:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserPositionToUserProjectEvaluationTemplate'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserPositionToUserProjectEvaluationTemplateRelationships'
                        type:
                          example: user_position_to_user_project_evaluation_template
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserPositionToUserProjectEvaluationTemplate
  /api/v1/user_position_to_user_project_evaluation_template/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserPositionToUserProjectEvaluationTemplate'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserPositionToUserProjectEvaluationTemplateRelationships'
                      type:
                        example: user_position_to_user_project_evaluation_template
                        type: string
                    type: object
                type: object
      tags:
      - UserPositionToUserProjectEvaluationTemplate
  /api/v1/user_project_evaluation:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluation'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationRelationships'
                        type:
                          example: user_project_evaluation
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluation
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationRelationshipsPost'
                    type:
                      example: user_project_evaluation
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationRelationships'
                      type:
                        example: user_project_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluation
  /api/v1/user_project_evaluation/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectEvaluation
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationRelationships'
                      type:
                        example: user_project_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluation
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationRelationshipsPatch'
                    type:
                      example: user_project_evaluation
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluation'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationRelationships'
                      type:
                        example: user_project_evaluation
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluation
  /api/v1/user_project_evaluation_author:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluationAuthor'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationAuthorRelationships'
                        type:
                          example: user_project_evaluation_author
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluationAuthor
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationAuthorPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationAuthorRelationshipsPost'
                    type:
                      example: user_project_evaluation_author
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationAuthor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationAuthorRelationships'
                      type:
                        example: user_project_evaluation_author
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationAuthor
  /api/v1/user_project_evaluation_author/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectEvaluationAuthor
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationAuthor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationAuthorRelationships'
                      type:
                        example: user_project_evaluation_author
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationAuthor
  /api/v1/user_project_evaluation_template:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluationTemplate'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationTemplateRelationships'
                        type:
                          example: user_project_evaluation_template
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluationTemplate
  /api/v1/user_project_evaluation_template/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationTemplate'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationTemplateRelationships'
                      type:
                        example: user_project_evaluation_template
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationTemplate
  /api/v1/user_group_to_user_group_right:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserGroupToUserGroupRight'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserGroupToUserGroupRightRelationships'
                        type:
                          example: user_group_to_user_group_right
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserGroupToUserGroupRight
  /api/v1/user_group_to_user_group_right/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserGroupToUserGroupRight'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserGroupToUserGroupRightRelationships'
                      type:
                        example: user_group_to_user_group_right
                        type: string
                    type: object
                type: object
      tags:
      - UserGroupToUserGroupRight
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserGroupToUserGroupRightPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserGroupToUserGroupRightRelationshipsPatch'
                    type:
                      example: user_group_to_user_group_right
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserGroupToUserGroupRight'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserGroupToUserGroupRightRelationships'
                      type:
                        example: user_group_to_user_group_right
                        type: string
                    type: object
                type: object
      tags:
      - UserGroupToUserGroupRight
  /api/v1/evaluation_campaign_evaluation_template:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationTemplate'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationTemplateRelationships'
                        type:
                          example: evaluation_campaign_evaluation_template
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluationTemplate
  /api/v1/evaluation_campaign_evaluation_template/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationTemplate'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationTemplateRelationships'
                      type:
                        example: evaluation_campaign_evaluation_template
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationTemplate
  /api/v1/user_project_user_preference:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectUserPreference'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectUserPreferenceRelationships'
                        type:
                          example: user_project_user_preference
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectUserPreference
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserPreferencePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserPreferenceRelationshipsPost'
                    type:
                      example: user_project_user_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPreferenceRelationships'
                      type:
                        example: user_project_user_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPreference
  /api/v1/user_project_user_preference/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectUserPreference
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPreferenceRelationships'
                      type:
                        example: user_project_user_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPreference
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserPreferencePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserPreferenceRelationshipsPatch'
                    type:
                      example: user_project_user_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPreferenceRelationships'
                      type:
                        example: user_project_user_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPreference
  /api/v1/user_project_user_position_preference:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectUserPositionPreference'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationships'
                        type:
                          example: user_project_user_position_preference
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectUserPositionPreference
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserPositionPreferencePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationshipsPost'
                    type:
                      example: user_project_user_position_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPositionPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationships'
                      type:
                        example: user_project_user_position_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPositionPreference
  /api/v1/user_project_user_position_preference/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectUserPositionPreference
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPositionPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationships'
                      type:
                        example: user_project_user_position_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPositionPreference
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserPositionPreferencePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationshipsPatch'
                    type:
                      example: user_project_user_position_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserPositionPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserPositionPreferenceRelationships'
                      type:
                        example: user_project_user_position_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserPositionPreference
  /api/v1/user_project_business_unit_preference:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectBusinessUnitPreference'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationships'
                        type:
                          example: user_project_business_unit_preference
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectBusinessUnitPreference
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectBusinessUnitPreferencePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationshipsPost'
                    type:
                      example: user_project_business_unit_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationships'
                      type:
                        example: user_project_business_unit_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectBusinessUnitPreference
  /api/v1/user_project_business_unit_preference/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectBusinessUnitPreference
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationships'
                      type:
                        example: user_project_business_unit_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectBusinessUnitPreference
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectBusinessUnitPreferencePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationshipsPatch'
                    type:
                      example: user_project_business_unit_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectBusinessUnitPreferenceRelationships'
                      type:
                        example: user_project_business_unit_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectBusinessUnitPreference
  /api/v1/user_project_location_preference:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectLocationPreference'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectLocationPreferenceRelationships'
                        type:
                          example: user_project_location_preference
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectLocationPreference
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectLocationPreferencePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectLocationPreferenceRelationshipsPost'
                    type:
                      example: user_project_location_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectLocationPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectLocationPreferenceRelationships'
                      type:
                        example: user_project_location_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectLocationPreference
  /api/v1/user_project_location_preference/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectLocationPreference
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectLocationPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectLocationPreferenceRelationships'
                      type:
                        example: user_project_location_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectLocationPreference
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectLocationPreferencePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectLocationPreferenceRelationshipsPatch'
                    type:
                      example: user_project_location_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectLocationPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectLocationPreferenceRelationships'
                      type:
                        example: user_project_location_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectLocationPreference
  /api/v1/user_user_tag:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserUserTag'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserUserTagRelationships'
                        type:
                          example: user_user_tag
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserUserTag
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserUserTagPost'
                    relationships:
                      $ref: '#/components/schemas/UserUserTagRelationshipsPost'
                    type:
                      example: user_user_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserUserTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserUserTagRelationships'
                      type:
                        example: user_user_tag
                        type: string
                    type: object
                type: object
      tags:
      - UserUserTag
  /api/v1/user_user_tag/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserUserTag
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserUserTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserUserTagRelationships'
                      type:
                        example: user_user_tag
                        type: string
                    type: object
                type: object
      tags:
      - UserUserTag
  /api/v1/user_tag_type:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserTagType'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserTagTypeRelationships'
                        type:
                          example: user_tag_type
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserTagType
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserTagTypePost'
                    relationships:
                      $ref: '#/components/schemas/UserTagTypeRelationshipsPost'
                    type:
                      example: user_tag_type
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagTypeRelationships'
                      type:
                        example: user_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - UserTagType
  /api/v1/user_tag_type/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserTagType
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagTypeRelationships'
                      type:
                        example: user_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - UserTagType
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserTagTypePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserTagTypeRelationshipsPatch'
                    type:
                      example: user_tag_type
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagTypeRelationships'
                      type:
                        example: user_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - UserTagType
  /api/v1/user_tag:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserTag'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserTagRelationships'
                        type:
                          example: user_tag
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserTag
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserTagPost'
                    relationships:
                      $ref: '#/components/schemas/UserTagRelationshipsPost'
                    type:
                      example: user_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagRelationships'
                      type:
                        example: user_tag
                        type: string
                    type: object
                type: object
      tags:
      - UserTag
  /api/v1/user_tag/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserTag
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagRelationships'
                      type:
                        example: user_tag
                        type: string
                    type: object
                type: object
      tags:
      - UserTag
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserTagPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserTagRelationshipsPatch'
                    type:
                      example: user_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserTagRelationships'
                      type:
                        example: user_tag
                        type: string
                    type: object
                type: object
      tags:
      - UserTag
  /api/v1/user_project_user_tag_preference:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectUserTagPreference'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationships'
                        type:
                          example: user_project_user_tag_preference
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectUserTagPreference
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserTagPreferencePost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationshipsPost'
                    type:
                      example: user_project_user_tag_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserTagPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationships'
                      type:
                        example: user_project_user_tag_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserTagPreference
  /api/v1/user_project_user_tag_preference/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserProjectUserTagPreference
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserTagPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationships'
                      type:
                        example: user_project_user_tag_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserTagPreference
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectUserTagPreferencePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationshipsPatch'
                    type:
                      example: user_project_user_tag_preference
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectUserTagPreference'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectUserTagPreferenceRelationships'
                      type:
                        example: user_project_user_tag_preference
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectUserTagPreference
  /api/v1/evaluation_campaign_evaluation_approval:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationApproval'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/EvaluationCampaignEvaluationApprovalRelationships'
                        type:
                          example: evaluation_campaign_evaluation_approval
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - EvaluationCampaignEvaluationApproval
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationApprovalPost'
                    relationships:
                      $ref: '#/components/schemas/EvaluationCampaignEvaluationApprovalRelationshipsPost'
                    type:
                      example: evaluation_campaign_evaluation_approval
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationApproval'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationApprovalRelationships'
                      type:
                        example: evaluation_campaign_evaluation_approval
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationApproval
  /api/v1/evaluation_campaign_evaluation_approval/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationApproval'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/EvaluationCampaignEvaluationApprovalRelationships'
                      type:
                        example: evaluation_campaign_evaluation_approval
                        type: string
                    type: object
                type: object
      tags:
      - EvaluationCampaignEvaluationApproval
  /api/v1/user_project_evaluation_approval:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserProjectEvaluationApproval'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserProjectEvaluationApprovalRelationships'
                        type:
                          example: user_project_evaluation_approval
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserProjectEvaluationApproval
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserProjectEvaluationApprovalPost'
                    relationships:
                      $ref: '#/components/schemas/UserProjectEvaluationApprovalRelationshipsPost'
                    type:
                      example: user_project_evaluation_approval
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationApproval'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationApprovalRelationships'
                      type:
                        example: user_project_evaluation_approval
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationApproval
  /api/v1/user_project_evaluation_approval/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserProjectEvaluationApproval'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserProjectEvaluationApprovalRelationships'
                      type:
                        example: user_project_evaluation_approval
                        type: string
                    type: object
                type: object
      tags:
      - UserProjectEvaluationApproval
  /api/v1/project_contributor:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectContributor'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectContributorRelationships'
                        type:
                          example: project_contributor
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectContributor
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectContributorPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectContributorRelationshipsPost'
                    type:
                      example: project_contributor
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectContributor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectContributorRelationships'
                      type:
                        example: project_contributor
                        type: string
                    type: object
                type: object
      tags:
      - ProjectContributor
  /api/v1/project_contributor/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectContributor
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectContributor'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectContributorRelationships'
                      type:
                        example: project_contributor
                        type: string
                    type: object
                type: object
      tags:
      - ProjectContributor
  /api/v1/project_like:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectLike'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectLikeRelationships'
                        type:
                          example: project_like
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectLike
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectLikePost'
                    relationships:
                      $ref: '#/components/schemas/ProjectLikeRelationshipsPost'
                    type:
                      example: project_like
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectLike'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectLikeRelationships'
                      type:
                        example: project_like
                        type: string
                    type: object
                type: object
      tags:
      - ProjectLike
  /api/v1/project_like/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectLike
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectLike'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectLikeRelationships'
                      type:
                        example: project_like
                        type: string
                    type: object
                type: object
      tags:
      - ProjectLike
  /api/v1/project_project_tag:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectProjectTag'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectProjectTagRelationships'
                        type:
                          example: project_project_tag
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectProjectTag
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectProjectTagPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectProjectTagRelationshipsPost'
                    type:
                      example: project_project_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectProjectTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectProjectTagRelationships'
                      type:
                        example: project_project_tag
                        type: string
                    type: object
                type: object
      tags:
      - ProjectProjectTag
  /api/v1/project_project_tag/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectProjectTag
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectProjectTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectProjectTagRelationships'
                      type:
                        example: project_project_tag
                        type: string
                    type: object
                type: object
      tags:
      - ProjectProjectTag
  /api/v1/project_tag_type:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectTagType'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectTagTypeRelationships'
                        type:
                          example: project_tag_type
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectTagType
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectTagTypePost'
                    relationships:
                      $ref: '#/components/schemas/ProjectTagTypeRelationshipsPost'
                    type:
                      example: project_tag_type
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagTypeRelationships'
                      type:
                        example: project_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTagType
  /api/v1/project_tag_type/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectTagType
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagTypeRelationships'
                      type:
                        example: project_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTagType
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectTagTypePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectTagTypeRelationshipsPatch'
                    type:
                      example: project_tag_type
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTagType'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagTypeRelationships'
                      type:
                        example: project_tag_type
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTagType
  /api/v1/project_tag:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/ProjectTag'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/ProjectTagRelationships'
                        type:
                          example: project_tag
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - ProjectTag
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectTagPost'
                    relationships:
                      $ref: '#/components/schemas/ProjectTagRelationshipsPost'
                    type:
                      example: project_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagRelationships'
                      type:
                        example: project_tag
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTag
  /api/v1/project_tag/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - ProjectTag
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagRelationships'
                      type:
                        example: project_tag
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTag
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/ProjectTagPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/ProjectTagRelationshipsPatch'
                    type:
                      example: project_tag
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/ProjectTag'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/ProjectTagRelationships'
                      type:
                        example: project_tag
                        type: string
                    type: object
                type: object
      tags:
      - ProjectTag
  /api/v1/job_sheet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/JobSheet'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/JobSheetRelationships'
                        type:
                          example: job_sheet
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - JobSheet
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/JobSheetPost'
                    relationships:
                      $ref: '#/components/schemas/JobSheetRelationshipsPost'
                    type:
                      example: job_sheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetRelationships'
                      type:
                        example: job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - JobSheet
  /api/v1/job_sheet/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - JobSheet
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetRelationships'
                      type:
                        example: job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - JobSheet
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/JobSheetPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/JobSheetRelationshipsPatch'
                    type:
                      example: job_sheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetRelationships'
                      type:
                        example: job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - JobSheet
  /api/v1/job_sheet_skill:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/JobSheetSkill'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/JobSheetSkillRelationships'
                        type:
                          example: job_sheet_skill
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - JobSheetSkill
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/JobSheetSkillPost'
                    relationships:
                      $ref: '#/components/schemas/JobSheetSkillRelationshipsPost'
                    type:
                      example: job_sheet_skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheetSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetSkillRelationships'
                      type:
                        example: job_sheet_skill
                        type: string
                    type: object
                type: object
      tags:
      - JobSheetSkill
  /api/v1/job_sheet_skill/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - JobSheetSkill
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheetSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetSkillRelationships'
                      type:
                        example: job_sheet_skill
                        type: string
                    type: object
                type: object
      tags:
      - JobSheetSkill
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/JobSheetSkillPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/JobSheetSkillRelationshipsPatch'
                    type:
                      example: job_sheet_skill
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobSheetSkill'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/JobSheetSkillRelationships'
                      type:
                        example: job_sheet_skill
                        type: string
                    type: object
                type: object
      tags:
      - JobSheetSkill
  /api/v1/user_job_sheet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/UserJobSheet'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/UserJobSheetRelationships'
                        type:
                          example: user_job_sheet
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - UserJobSheet
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserJobSheetPost'
                    relationships:
                      $ref: '#/components/schemas/UserJobSheetRelationshipsPost'
                    type:
                      example: user_job_sheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserJobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserJobSheetRelationships'
                      type:
                        example: user_job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - UserJobSheet
  /api/v1/user_job_sheet/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - UserJobSheet
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserJobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/UserJobSheetRelationships'
                      type:
                        example: user_job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - UserJobSheet
  /api/v1/career_track:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/CareerTrack'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/CareerTrackRelationships'
                        type:
                          example: career_track
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - CareerTrack
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CareerTrackPost'
                    relationships:
                      $ref: '#/components/schemas/CareerTrackRelationshipsPost'
                    type:
                      example: career_track
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrack'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackRelationships'
                      type:
                        example: career_track
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrack
  /api/v1/career_track/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - CareerTrack
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrack'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackRelationships'
                      type:
                        example: career_track
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrack
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CareerTrackPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/CareerTrackRelationshipsPatch'
                    type:
                      example: career_track
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrack'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackRelationships'
                      type:
                        example: career_track
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrack
  /api/v1/career_track_job_sheet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/CareerTrackJobSheet'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/CareerTrackJobSheetRelationships'
                        type:
                          example: career_track_job_sheet
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - CareerTrackJobSheet
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CareerTrackJobSheetPost'
                    relationships:
                      $ref: '#/components/schemas/CareerTrackJobSheetRelationshipsPost'
                    type:
                      example: career_track_job_sheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrackJobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackJobSheetRelationships'
                      type:
                        example: career_track_job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrackJobSheet
  /api/v1/career_track_job_sheet/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - CareerTrackJobSheet
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrackJobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackJobSheetRelationships'
                      type:
                        example: career_track_job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrackJobSheet
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CareerTrackJobSheetPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/CareerTrackJobSheetRelationshipsPatch'
                    type:
                      example: career_track_job_sheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CareerTrackJobSheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/CareerTrackJobSheetRelationships'
                      type:
                        example: career_track_job_sheet
                        type: string
                    type: object
                type: object
      tags:
      - CareerTrackJobSheet
  /api/v1/timesheet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/Timesheet'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/TimesheetRelationships'
                        type:
                          example: timesheet
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - Timesheet
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/TimesheetPost'
                    relationships:
                      $ref: '#/components/schemas/TimesheetRelationshipsPost'
                    type:
                      example: timesheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Timesheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetRelationships'
                      type:
                        example: timesheet
                        type: string
                    type: object
                type: object
      tags:
      - Timesheet
  /api/v1/timesheet/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - Timesheet
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Timesheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetRelationships'
                      type:
                        example: timesheet
                        type: string
                    type: object
                type: object
      tags:
      - Timesheet
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/TimesheetPatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/TimesheetRelationshipsPatch'
                    type:
                      example: timesheet
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Timesheet'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetRelationships'
                      type:
                        example: timesheet
                        type: string
                    type: object
                type: object
      tags:
      - Timesheet
  /api/v1/timesheet_period:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        attributes:
                          $ref: '#/components/schemas/TimesheetPeriod'
                        id:
                          example: 1
                          type: integer
                        included:
                          items:
                            type: object
                          type: array
                        relationships:
                          $ref: '#/components/schemas/TimesheetPeriodRelationships'
                        type:
                          example: timesheet_period
                          type: string
                      type: object
                    type: array
                type: object
      tags:
      - TimesheetPeriod
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/TimesheetPeriodPost'
                    relationships:
                      $ref: '#/components/schemas/TimesheetPeriodRelationshipsPost'
                    type:
                      example: timesheet_period
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/TimesheetPeriod'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetPeriodRelationships'
                      type:
                        example: timesheet_period
                        type: string
                    type: object
                type: object
      tags:
      - TimesheetPeriod
  /api/v1/timesheet_period/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
      tags:
      - TimesheetPeriod
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/TimesheetPeriod'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetPeriodRelationships'
                      type:
                        example: timesheet_period
                        type: string
                    type: object
                type: object
      tags:
      - TimesheetPeriod
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/TimesheetPeriodUpdatePatch'
                    id:
                      type: integer
                    relationships:
                      $ref: '#/components/schemas/TimesheetPeriodUpdateRelationshipsPatch'
                    type:
                      example: timesheet_period
                      type: string
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/TimesheetPeriodUpdate'
                      id:
                        example: 1
                        type: integer
                      included:
                        items:
                          type: object
                        type: array
                      relationships:
                        $ref: '#/components/schemas/TimesheetPeriodUpdateRelationships'
                      type:
                        example: timesheet_period
                        type: string
                    type: object
                type: object
      tags:
      - TimesheetPeriod
security:
- jwt: []
servers:
- url: https://app.napta.io