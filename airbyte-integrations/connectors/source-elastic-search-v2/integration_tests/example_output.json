{"type": "DEBUG", "message": "Debug logs enabled", "data": {}}
state_obj : [{'type': 'STREAM', 'stream': {'stream_state': {'accounts': {'updated_at': '2024-05-15T13:10:01.213503'}, 'campaigns': {'updated_at': '2024-03-02T17:39:34.689756'}, 'creatives': {'updated_at': '2024-03-01T17:40:41.740085'}}, 'stream_descriptor': {'name': 'SourceElasticSearchV2', 'namespace': ''}}}]
state : {'accounts': {'updated_at': '2024-05-15T13:10:01.213503'}, 'campaigns': {'updated_at': '2024-03-02T17:39:34.689756'}, 'creatives': {'updated_at': '2024-03-01T17:40:41.740085'}}
{"type": "LOG", "log": {"level": "INFO", "message": "Starting syncing SourceElasticSearchV2"}}
/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/source_elastic_search_v2/source.py:127: ElasticsearchWarning: Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.16/security-minimal-setup.html to enable security.
  self.pit = self.client.open_point_in_time(index=self.index, keep_alive="1m")
{"type": "LOG", "log": {"level": "INFO", "message": "Finished syncing accounts"}}
{"type": "LOG", "log": {"level": "INFO", "message": "SourceElasticSearchV2 runtimes:\nSyncing stream accounts 0:00:29.763751"}}
Traceback (most recent call last):
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/main.py", line 13, in <module>
    launch(source, sys.argv[1:])
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/entrypoint.py", line 235, in launch
    for message in source_entrypoint.run(parsed_args):
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/entrypoint.py", line 122, in run
    yield from map(AirbyteEntrypoint.airbyte_message_to_string, self.read(source_spec, config, config_catalog, state))
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/entrypoint.py", line 166, in read
    for message in self.source.read(self.logger, config, catalog, state):
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/source_elastic_search_v2/source.py", line 326, in read
    stream_is_available, reason = stream_instance.check_availability(logger, self)
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/core.py", line 325, in check_availability
    return self.availability_strategy.check_availability(self, logger, source)
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py", line 50, in check_availability
    get_first_record_for_slice(stream, stream_slice)
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py", line 40, in get_first_record_for_slice
    return next(records_for_slice)
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/http/http.py", line 482, in read_records
    yield from self._read_pages(
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/http/http.py", line 498, in _read_pages
    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)
  File "/Users/nahidoulmi/dev/airbyte/airbyte-integrations/connectors/source-elastic-search-v2/.venv/lib/python3.10/site-packages/airbyte_cdk/sources/streams/http/http.py", line 515, in _fetch_next_page
    request = self._create_prepared_request(
KeyboardInterrupt
