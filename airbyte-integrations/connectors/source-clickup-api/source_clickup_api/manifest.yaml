version: "0.1.0"

definitions:
  schema_loader:
    type: JsonSchema
    file_path: "./source_clickup_api/schemas/{{ options['name'] }}.json"
  singleSelector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: []
  arraySelector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: ["{{ options['name']  }}s"]
  requester:
    type: HttpRequester
    name: "{{ options['name'] }}"
    http_method: "GET"
    authenticator:
      type: ApiKeyAuthenticator
      header: "Authorization"
      api_token: "{{ config['api_token'] }}"
  paginator:
    type: NoPagination
  retriever:
    type: SimpleRetriever
    $options:
      url_base: "https://api.clickup.com/api/v2"
    name: "{{ options['name'] }}"
    primary_key: "{{ options['primary_key'] }}"

streams:
  - type: DeclarativeStream
    $options:
      name: "user"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/user"
      paginator:
        $ref: "*ref(definitions.paginator)"
      record_selector:
        $ref: "*ref(definitions.singleSelector)"
  - type: DeclarativeStream
    $options:
      name: "team"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/team"
      paginator:
        $ref: "*ref(definitions.paginator)"
      record_selector:
        $ref: "*ref(definitions.arraySelector)"
  - type: DeclarativeStream
    $options:
      name: "list"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "folder/{{ config['folder_id'] }}/list"
      paginator:
        $ref: "*ref(definitions.paginator)"
      record_selector:
        $ref: "*ref(definitions.arraySelector)"
  - type: DeclarativeStream
    $options:
      name: "space"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "team/{{ config['team_id'] }}/space"
      paginator:
        $ref: "*ref(definitions.paginator)"
      record_selector:
        $ref: "*ref(definitions.arraySelector)"
  - type: DeclarativeStream
    $options:
      name: "folder"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "space/{{ config['space_id'] }}/folder"
      paginator:
        $ref: "*ref(definitions.paginator)"
      record_selector:
        $ref: "*ref(definitions.arraySelector)"
  - type: DeclarativeStream
    $options:
      name: "task"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "list/{{ config['list_id'] }}/task"
      record_selector:
        $ref: "*ref(definitions.arraySelector)"
      paginator:
        type: DefaultPaginator
        page_size_option:
          inject_into: "request_parameter"
          field_name: "page_size"
        pagination_strategy:
          type: "OffsetIncrement"
          page_size: 1
        page_token_option:
          field_name: "page"
          inject_into: "request_parameter"

check:
  type: CheckStream
  stream_names: ["user", "team", "space", "folder", "list", "task"]
