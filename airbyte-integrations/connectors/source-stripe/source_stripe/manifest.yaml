version: 6.42.1

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - events

definitions:
  # Base components
  base_stream:
    type: DeclarativeStream
    retriever:
      $ref: "#/definitions/base_retriever"
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_stripe/schemas/{{ parameters['name'] }}.json"

  base_retriever:
    type: SimpleRetriever
    requester:
      $ref: "#/definitions/base_requester"
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
          - data
      transform_before_filtering: true
      schema_normalization: Default
    paginator:
      $ref: "#/definitions/base_paginator"

  base_requester:
    type: HttpRequester
    url_base: https://api.stripe.com/v1
    authenticator:
      $ref: "#/definitions/bearer_authenticator"
    http_method: GET
    request_headers:
      Stripe-Version: "2022-11-15"
      Stripe-Account: '{{ config.get("account_id") }}'
    error_handler:
      type: CompositeErrorHandler
      error_handlers:
        - type: DefaultErrorHandler
          response_filters:
            - type: HttpResponseFilter
              action: IGNORE
              http_codes:
                - 403
              error_message: >-
                {{ response['error']['message'] }}
        - type: DefaultErrorHandler
          response_filters:
            - type: HttpResponseFilter
              action: IGNORE
              http_codes:
                - 400
              error_message: >-
                {{ response['error']['message'] }}
        - type: DefaultErrorHandler
          response_filters:
            - type: HttpResponseFilter
              action: IGNORE
              http_codes:
                - 404
              error_message: >-
                Data was not found. Error message: {{ response['error']['message'] }} If this is a path for getting 
                child attributes like /v1/checkout/sessions/<session_id>/line_items when running the incremental sync, 
                you may safely ignore this warning.
  bearer_authenticator:
    type: BearerAuthenticator
    api_token: "{{ config['client_secret'] }}"

  base_paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: starting_after
    page_size_option:
      type: RequestOption
      field_name: limit
      inject_into: request_parameter
    pagination_strategy:
      type: CursorPagination
      page_size: 100
      cursor_value: '{{ response["data"][-1]["id"] }}'
      stop_condition: '{{ not response.get("has_more", False) }}'

  base_incremental_sync:
    type: DatetimeBasedCursor
    cursor_datetime_formats:
      - "%s"
    datetime_format: "%s"
    step: P{{ config.get('slice_range', 365) }}D
    cursor_granularity: PT1S
    lookback_window: P{{ config.get('lookback_window_days', 0) }}D
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ format_datetime(config.get('start_date', '2017-01-25T00:00:00Z'), '%Y-%m-%dT%H:%M:%S%z') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%S%z"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    start_time_option:
      type: RequestOption
      field_name: "created[gte]"
      inject_into: "request_parameter"
    end_time_option:
      type: RequestOption
      field_name: "created[lte]"
      inject_into: "request_parameter"

  # Regular flow components
  created_stream:
    $ref: "#/definitions/base_stream"
    incremental_sync:
      $ref: "#/definitions/created_incremental_sync"

  created_incremental_sync:
    $ref: "#/definitions/base_incremental_sync"
    cursor_field: created

  # Entity flow components
  entity_stream:
    $ref: "#/definitions/base_stream"
    primary_key:
      - id
    incremental_sync:
      $ref: "#/definitions/entity_with_slice_cursor"
    transformations:
      - type: AddFields
        fields:
          - path:
              - updated
            value: "{{ record.get('updated', record.get('created', now_utc().timestamp())) | int }}"
            value_type: integer

  entity_restricted_stream:
    $ref: "#/definitions/base_stream"
    primary_key:
      - id
    incremental_sync:
      $ref: "#/definitions/entity_single_slice_cursor"
    transformations:
      - type: AddFields
        fields:
          - path:
              - updated
            value: "{{ record.get('updated', record.get('created', now_utc().timestamp())) | int }}"
            value_type: integer

  entity_with_slice_cursor:
    type: DatetimeBasedCursor
    cursor_field: updated
    cursor_datetime_formats:
      - "%s"
    datetime_format: "%s"
    step: P{{ config.get('slice_range', 365) }}D
    cursor_granularity: PT1S
    lookback_window: P{{ config.get('lookback_window_days', 0) }}D
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ format_datetime(config.get('start_date', '2017-01-25T00:00:00Z'), '%Y-%m-%dT%H:%M:%S%z') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%S%z"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    start_time_option:
      type: RequestOption
      field_name: "created[gte]"
      inject_into: "request_parameter"
    end_time_option:
      type: RequestOption
      field_name: "created[lte]"
      inject_into: "request_parameter"

  entity_single_slice_cursor:
    type: DatetimeBasedCursor
    cursor_field: updated
    cursor_datetime_formats:
      - "%s"
    datetime_format: "%s"
    lookback_window: P{{ config.get('lookback_window_days', 0) }}D
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ format_datetime(config.get('start_date', '2017-01-25T00:00:00Z'), '%Y-%m-%dT%H:%M:%S%z') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%S%z"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"

  # Events flow components
  events_based_stream:
    $ref: "#/definitions/base_stream"
    primary_key:
      - id
    incremental_sync:
      $ref: "#/definitions/events_read_slice_cursor"
    retriever:
      $ref: "#/definitions/events_objects_retriever"
    transformations:
      - type: AddFields
        fields:
          - path:
              - data
              - object
              - is_deleted
            value: "{{ True }}"
        condition: "{{ record.get('data', {}).get('object', False) and record.get('type', '').endswith('.deleted') }}"
      - type: AddFields
        fields:
          - path:
              - data
              - object
              - updated
            value: "{{ record.get('updated', record.get('created', now_utc().timestamp())) | int }}"
            value_type: integer
        condition: "{{ record.get('data', {}).get('object', False) }}"
      - type: DpathFlattenFields
        field_path:
          - data
          - object
        replace_record: true

  events_objects_retriever:
    $ref: "#/definitions/base_retriever"
    requester:
      $ref: "#/definitions/base_requester"
      path: events

  events_read_slice_cursor:
    type: DatetimeBasedCursor
    cursor_field: updated
    cursor_datetime_formats:
      - "%s"
    datetime_format: "%s"
    step: P{{ config.get('slice_range', 365) }}D
    cursor_granularity: PT1S
    lookback_window: P{{ config.get('lookback_window_days', 0) }}D
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ format_datetime(config.get('start_date', '2017-01-25T00:00:00Z'), '%Y-%m-%dT%H:%M:%S%z') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%S%z"
      min_datetime: "{{ (now_utc() - duration('P30D')).strftime('%Y-%m-%dT%H:%M:%SZ') }}"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    start_time_option:
      type: RequestOption
      field_name: "created[gte]"
      inject_into: "request_parameter"
    end_time_option:
      type: RequestOption
      field_name: "created[lte]"
      inject_into: "request_parameter"

  streams:
    events:
      $ref: "#/definitions/created_stream"
      $parameters:
        path: events
        name: events
    shipping_rates:
      $ref: "#/definitions/created_stream"
      $parameters:
        path: shipping_rates
        name: shipping_rates
    balance_transactions:
      $ref: "#/definitions/created_stream"
      $parameters:
        path: balance_transactions
        name: balance_transactions
    files:
      $ref: "#/definitions/created_stream"
      $parameters:
        path: files
        name: files
    file_links:
      $ref: "#/definitions/created_stream"
      $parameters:
        path: file_links
        name: file_links

    authorizations:
      type: StateDelegatingStream
      $parameters:
        name: authorizations
      full_refresh_stream:
        $ref: "#/definitions/entity_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: issuing/authorizations
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["issuing_authorization.created", "issuing_authorization.request", "issuing_authorization.updated"]}}'

    cardholders:
      type: StateDelegatingStream
      $parameters:
        name: cardholders
      full_refresh_stream:
        $ref: "#/definitions/entity_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: issuing/cardholders
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["issuing_cardholder.created", "issuing_cardholder.updated"]}}'

    application_fees:
      type: StateDelegatingStream
      $parameters:
        name: application_fees
      full_refresh_stream:
        $ref: "#/definitions/entity_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: application_fees
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["application_fee.created", "application_fee.refunded"]}}'

    cards:
      type: StateDelegatingStream
      $parameters:
        name: cards
      full_refresh_stream:
        $ref: "#/definitions/entity_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: issuing/cards
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["issuing_card.created", "issuing_card.updated"]}}'

    external_account_cards:
      type: StateDelegatingStream
      $parameters:
        name: external_account_cards
      full_refresh_stream:
        $ref: "#/definitions/entity_restricted_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: accounts/{{ config["account_id"] }}/external_accounts
          requester:
            $ref: "#/definitions/base_requester"
            request_parameters:
              object: "card"
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["account.external_account.created", "account.external_account.updated", "account.external_account.deleted"]}}'
            record_filter:
              condition: "{{ record['object'] == 'card' }}"

    external_account_bank_accounts:
      type: StateDelegatingStream
      $parameters:
        name: external_account_bank_accounts
      full_refresh_stream:
        $ref: "#/definitions/entity_restricted_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: accounts/{{ config["account_id"] }}/external_accounts
          requester:
            $ref: "#/definitions/base_requester"
            request_parameters:
              object: "bank_account"
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["account.external_account.created", "account.external_account.updated", "account.external_account.deleted"]}}'
            record_filter:
              condition: "{{ record['object'] == 'bank_account' }}"

    early_fraud_warnings:
      type: StateDelegatingStream
      $parameters:
        name: early_fraud_warnings
      full_refresh_stream:
        $ref: "#/definitions/entity_restricted_stream"
        retriever:
          $ref: "#/definitions/base_retriever"
          $parameters:
            path: radar/early_fraud_warnings
      incremental_stream:
        $ref: "#/definitions/events_based_stream"
        retriever:
          $ref: "#/definitions/events_objects_retriever"
          $parameters:
            request_parameters:
              types[]: '{{["radar.early_fraud_warning.created", "radar.early_fraud_warning.updated"]}}'

streams:
  # These streams are base incremental streams
  - $ref: "#/definitions/streams/events"
  - $ref: "#/definitions/streams/shipping_rates"
  - $ref: "#/definitions/streams/balance_transactions"
  - $ref: "#/definitions/streams/files"
  - $ref: "#/definitions/streams/file_links"

  ## These streams are state condition streams and have two behaviors depending on whether the state is set:
  # - No State: Runs the base stream.
  # - State: Uses the event stream to call events related to streams (event types provided by params).
  - $ref: "#/definitions/streams/application_fees"
  - $ref: "#/definitions/streams/authorizations"
  - $ref: "#/definitions/streams/cardholders"
  - $ref: "#/definitions/streams/cards"

  ## These streams are state condition streams with stricter behavior:
  # - No State: Runs the base stream (endpoints strictly define allowed query params and return an error if unexpected params are present).
  # - State: Uses the event stream to call events related to streams (event types provided by params).
  - $ref: "#/definitions/streams/early_fraud_warnings"
  - $ref: "#/definitions/streams/external_account_bank_accounts"
  - $ref: "#/definitions/streams/external_account_cards"

spec:
  type: Spec
  documentation_url: https://docs.airbyte.com/integrations/sources/stripe
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Stripe Source Spec
    type: object
    required:
      - client_secret
      - account_id
    properties:
      account_id:
        type: string
        title: Account ID
        description: >-
          Your Stripe account ID (starts with 'acct_', find yours <a
          href="https://dashboard.stripe.com/settings/account">here</a>).
        order: 0
      client_secret:
        type: string
        title: Secret Key
        description: >-
          Stripe API key (usually starts with 'sk_live_'; find yours <a
          href="https://dashboard.stripe.com/apikeys">here</a>).
        airbyte_secret: true
        order: 1
      start_date:
        type: string
        title: Replication start date
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        description: >-
          UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated
          after this date will be replicated.
        default: "2017-01-25T00:00:00Z"
        examples:
          - "2017-01-25T00:00:00Z"
        format: date-time
        order: 2
      lookback_window_days:
        type: integer
        title: Lookback Window in days
        default: 0
        minimum: 0
        description: >-
          When set, the connector will always re-export data from the past N days,
          where N is the value set here. This is useful if your data is frequently updated
          after creation. The Lookback Window only applies to streams that do not support event-based incremental syncs: Events,
          SetupAttempts, ShippingRates, BalanceTransactions, Files, FileLinks, Refunds. More info <a
          href="https://docs.airbyte.com/integrations/sources/stripe#requirements">here</a>
        order: 3
      slice_range:
        type: integer
        title: Data request time increment in days
        default: 365
        minimum: 1
        examples: [1, 3, 10, 30, 180, 360]
        description: >-
          The time increment used by the connector when requesting data from the Stripe API. The bigger the value is,
          the less requests will be made and faster the sync will be. On the other hand, the more seldom
          the state is persisted.
        order: 4
      num_workers:
        type: integer
        title: Number of concurrent workers
        minimum: 1
        maximum: 20
        default: 10
        examples: [1, 2, 3]
        description: >-
          The number of worker thread to use for the sync.
          The performance upper boundary depends on call_rate_limit setting and type of account.
        order: 5
      call_rate_limit:
        type: integer
        title: Max number of API calls per second
        examples: [25, 100]
        description: >-
          The number of API calls per second that you allow connector to make. This value can not be bigger than real
          API call rate limit (https://stripe.com/docs/rate-limits). If not specified the default maximum is 25 and 100
          calls per second for test and production tokens respectively.

api_budget:
  type: HTTPAPIBudget
  policies:
    - type: MovingWindowCallRatePolicy
      rates:
        - limit: 20
          interval: PT1S
      matchers:
        - method: GET
          url_path_pattern: "^/v1/files($|/)" # matches '/files'
        - method: GET
          url_path_pattern: "^/v1/file_links($|/)" # matches '/file_links'

    - type: MovingWindowCallRatePolicy
      rates:
        - limit: "{{ 100 if 'sk_test_' in config['client_secret'] else 25 }}"
          interval: PT1S
      matchers: []
