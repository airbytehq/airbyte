version: 0.77.2

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - Tags

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_zendesk_support/schemas/{{ parameters['name'] }}.json"

  bearer_authenticator:
    type: BearerAuthenticator
    api_token: "{{ config['credentials']['access_token'] }}"
  basic_authenticator:
    type: BasicHttpAuthenticator
    username: "{{ config['credentials']['email'] + '/token' }}"
    password: "{{ config['credentials']['api_token'] }}"

  base_requester:
    type: HttpRequester
    url_base: https://{{ config['subdomain'] }}.zendesk.com/api/v2/
    authenticator:
      type: SelectiveAuthenticator
      authenticator_selection_path: [ "credentials", "credentials" ]
      authenticators:
        oauth2.0: "#/definitions/bearer_authenticator"
        api_token: "#/definitions/basic_authenticator"

  base_stream:
    type: DeclarativeStream
    schema_loader:
      $ref: "#/definitions/schema_loader"

    retriever:
      type: SimpleRetriever
      requester:
        $ref: '#/definitions/base_requester'
        path: "{{ parameters.get('path') or parameters.get('name') }}"
        http_method: GET
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: [ "{{ parameters.get('data_path') or parameters.get('name') }}" ]
      paginator:
        type: DefaultPaginator
        page_size_option:
          type: RequestOption
          field_name: "per_page"
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 1
          cursor_value: '{{ response.get("next_page", {}) }}'
          stop_condition: '{{ not response.get("next_page", {}) }}'
        page_token_option:
          type: RequestPath

  # Semi-incremental streams for endpoints that doesn't support filtering or sorting but include updated and created fields
  semi_incremental_stream:
    $ref: "#/definitions/base_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      record_selector:
        $ref: "#/definitions/base_stream/retriever/record_selector"
        record_filter:
          condition: "{{ record[parameters['cursor_field']] > stream_state.get(parameters['cursor_field'], '') }}"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      cursor_field: "{{ parameters.get('cursor_field',  'updated_at') }}"
      start_datetime:
        datetime: "{{ config.get('start_date') or day_delta(-3650, '%Y-%m-%dT%H:%M:%SZ') }}"

  cursor_incremental_sync:
    type: DatetimeBasedCursor
    cursor_datetime_formats:
      - "%s"
      - "%Y-%m-%dT%H:%M:%SZ"
    datetime_format: "%s"
    cursor_field: "{{ parameters.get('cursor_field',  'updated_at') }}"
    start_datetime:
      datetime: "{{ timestamp(config.get('start_date')) | int or day_delta(-3650, '%Y-%m-%dT%H:%M:%SZ') }}"
#    start_time_option:
#      inject_into: request_parameter
#      field_name: "{{ parameters['cursor_filter'] }}"
#      type: RequestOption

  base_incremental_stream:
    $ref: "#/definitions/base_stream"
    incremental_sync:
      $ref: "#/definitions/cursor_incremental_sync"

  # Full-refresh streams
  account_attributes_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "account_attributes"
      path: "routing/attributes"
      data_path: "attributes"
      primary_key: "id"

  attribute_definitions_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "attribute_definitions"
      path: "routing/attributes/definitions"
      data_path: "attributes"
      primary_key: "id"

  brands_stream:
    # ToDo: add incremental sync
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "brands"
      primary_key: "id"

  custom_roles_stream:
    # The data have updated and created fields but does not support filtering and sorting
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "custom_roles"
      primary_key: "id"

  user_fields_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "user_fields"
      primary_key: "name"

  user_settings_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "user_fields"
      path: "account/settings.json"
      primary_key: "name"

  schedules_stream:
    # The data have updated and created fields but does not support filtering and sorting
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "schedules"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  sla_policies_stream:
    # The data have updated and created fields but does not support filtering and sorting
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "slas/policies.json"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  tags_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "tags"
      primary_key: "name"

  # Incremental cursor-based streams
  articles_stream:
    $ref: "#/definitions/base_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      ignore_stream_slicer_parameters_on_paginated_requests: true
    incremental_sync:
      $ref: "#/definitions/cursor_incremental_sync"
      type: CustomIncrementalSync
      class_name: source_zendesk_support.components.ZendeskSupportArticlesIncrementalSync
      start_time_option:
        inject_into: request_parameter
        field_name: "start_time"
        type: RequestOption
    $parameters:
      name: "articles"
      path: "help_center/incremental/articles"
      cursor_field: "updated_at"
      primary_key: "id"

  audit_logs_stream:
    $ref: "#/definitions/base_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/base_stream/retriever/requester"
        request_parameters:
          sort: "created_at"
          page[size]: "10"
    incremental_sync:
      class_name: source_zendesk_support.components.ZendeskSupportAuditLogsIncrementalSync
      type: CustomIncrementalSync
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      cursor_field: "{{ parameters.get('cursor_field',  'updated_at') }}"
      start_datetime:
        datetime: "{{ config.get('start_date') or day_delta(-3650, '%Y-%m-%dT%H:%M:%SZ') }}"
      start_time_option:
        inject_into: request_parameter
        field_name: "filter[created_at][]"
        type: RequestOption
      end_time_option:
        inject_into: request_parameter
        field_name: "filter[created_at][]"
        type: RequestOption
    $parameters:
      name: "audit_logs"
      cursor_field: "created_at"
      cursor_filter: "filter[created_at][]"
      primary_key: "id"

  group_memberships_stream:
    $ref: "#/definitions/semi_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        type: DefaultPaginator
        page_size_option:
          type: RequestOption
          field_name: "page[size]"
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 10
          cursor_value: "{{ response['links']['next'] }}"
          stop_condition: "{{ not response['meta']['has_more'] }}"
        page_token_option:
          type: RequestPath
    $parameters:
      name: "group_memberships"
      cursor_field: "updated_at"
      primary_key: "id"

  groups_stream:
    $ref: "#/definitions/semi_incremental_stream"
    $parameters:
      name: "groups"
      cursor_field: "updated_at"
      primary_key: "id"

  macros_stream:
    $ref: "#/definitions/base_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      paginator:
        type: DefaultPaginator
        page_size_option:
          type: RequestOption
          field_name: "page[size]"
          inject_into: request_parameter
        pagination_strategy:
          type: CursorPagination
          page_size: 1
          cursor_value: "{{ response['links']['next'] }}"
          stop_condition: "{{ not response['meta']['has_more'] }}"
        page_token_option:
          type: RequestPath
    incremental_sync:
      $ref: "#/definitions/semi_incremental_stream/incremental_sync"
    $parameters:
      name: "macros"
      cursor_field: "updated_at"
      cursor_filter: "start_time"
      primary_key: "id"

  organization_fields_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "organization_fields"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  organization_memberships_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "organization_memberships"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  organizations_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "organizations"
      cursor_field: "updated_at"
      cursor_filter: "start_time"
      primary_key: "id"

  posts_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "posts"
      path: "community/posts"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  satisfaction_ratings_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "satisfaction_ratings"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_audits_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_audits"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_comments_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_comments"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_fields_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_fields"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_forms_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_forms"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_metric_events_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_metric_events"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_metrics_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_metrics"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  ticket_skips_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_skips"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  tickets_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "tickets"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  topics_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "topics"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  users_stream:
    $ref: "#/definitions/base_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/base_stream/retriever/requester"
        request_parameters:
          page_size: "5"

      paginator:
        type: DefaultPaginator
        pagination_strategy:
          type: CursorPagination
          cursor_value: '{{ response.get("after_url") }}'
          stop_condition: '{{ response.get("end_of_stream") }}'
        page_token_option:
          type: RequestPath
    incremental_sync:
      class_name: source_zendesk_support.components.ZendeskSupportAuditLogsIncrementalSync
      type: CustomIncrementalSync
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
        - "%s"
      datetime_format: "%s"
      cursor_field: "{{ parameters.get('cursor_field',  'updated_at') }}"
      start_datetime:
        datetime: "{{ timestamp(config.get('start_date')) | int or day_delta(-3650, '%Y-%m-%dT%H:%M:%SZ') }}"
      start_time_option:
        inject_into: request_parameter
        field_name: "start_time"
        type: RequestOption

    $parameters:
      name: "users"
      path: "incremental/users/cursor.json"
      cursor_field: "created_at"
      cursor_filter: "filter[created_at][]"
      primary_key: "id"

  # Incremental substreams
  article_comments_stream:
    $ref: "#/definitions/base_incremental_stream"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      requester:
        $ref: "#/definitions/base_stream/retriever/requester"
        path: "help_center/articles/{{ stream_slice.id }}/comments"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/articles_stream"
            parent_key: id
            partition_field: id
    $parameters:
      name: "article_comments"
      data_path: "comments"
      cursor_field: "updated_at"
      cursor_filter: "start_time"
      primary_key: "id"

  article_comment_votes_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "article_comment_votes"
      cursor_field: "updated_at"
      cursor_filter: "start_time"
      primary_key: "id"

  article_votes_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "article_votes"
      cursor_field: "updated_at"
      cursor_filter: "start_time"
      primary_key: "id"

  post_comments_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "posts"
      path: "community/posts"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  post_comment_votes_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "satisfaction_ratings"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

  post_votes_stream:
    $ref: "#/definitions/base_incremental_stream"
    $parameters:
      name: "ticket_comments"
      cursor_field: "created_at"
      cursor_filter: "start_time"
      primary_key: "id"

streams:
  # Full refresh streams
  - $ref: '#/definitions/account_attributes_stream'
  - $ref: '#/definitions/attribute_definitions_stream'
  - $ref: '#/definitions/brands_stream'
  - $ref: '#/definitions/custom_roles_stream'
  - $ref: '#/definitions/schedules_stream'
  - $ref: '#/definitions/sla_policies_stream'
  - $ref: '#/definitions/tags_stream'
  - $ref: '#/definitions/ticket_fields_stream'
  - $ref: '#/definitions/ticket_forms_stream'
  - $ref: '#/definitions/topics_stream'
  - $ref: '#/definitions/user_fields_stream'
  - $ref: '#/definitions/user_settings_stream'
  # Incremental streams
  - $ref: '#/definitions/articles_stream'
  - $ref: '#/definitions/audit_logs_stream'
  - $ref: '#/definitions/groups_stream'
  - $ref: '#/definitions/group_memberships_stream'
  - $ref: '#/definitions/macros_stream'
  - $ref: '#/definitions/organization_fields_stream'
  - $ref: '#/definitions/organization_memberships_stream'
  - $ref: '#/definitions/organizations_stream'
  - $ref: '#/definitions/satisfaction_ratings_stream'
  - $ref: '#/definitions/ticket_audits_stream'
  - $ref: '#/definitions/ticket_comments_stream'
  - $ref: '#/definitions/ticket_metric_events_stream'
  - $ref: '#/definitions/ticket_metrics_stream'
  - $ref: '#/definitions/ticket_skips_stream'
  - $ref: '#/definitions/tickets_stream'
  - $ref: '#/definitions/users_stream'
  # Incremental substreams
  - $ref: '#/definitions/article_comment_votes_stream'
  - $ref: '#/definitions/article_comments_stream'
  - $ref: '#/definitions/article_votes_stream'
  - $ref: '#/definitions/post_comments_stream'
  - $ref: '#/definitions/post_comment_votes_stream'
  - $ref: '#/definitions/post_votes_stream'