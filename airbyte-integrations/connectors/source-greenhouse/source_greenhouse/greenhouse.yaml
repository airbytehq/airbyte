schema_loader:
  type: JsonSchema
  file_path: "./source_greenhouse/schemas/{{ options['name'] }}.json"
selector:
  type: RecordSelector
  extractor:
    type: JelloExtractor
    transform: "_"
requester:
  type: HttpRequester
  name: "{{ options['name'] }}"
  url_base: "https://harvest.greenhouse.io/v1/"
  http_method: "GET"
  authenticator:
    type: BasicHttpAuthenticator
    username: "{{ config['api_key'] }}"
retriever:
  type: SimpleRetriever
  name: "{{ options['name'] }}"
  primary_key: "{{ options['primary_key'] }}"
  record_selector:
    $ref: "*ref(selector)"
  paginator:
    type: LimitPaginator
    page_size: 100
    pagination_strategy:
      type: "CursorPagination"
      cursor_value: "{{ headers['link']['next']['url'] }}"
      stop_condition: "{{ 'next' not in headers['link'] }}"
    limit_option:
      field_name: "per_page"
      inject_into: "request_parameter"
    page_token_option:
      inject_into: "path"
    url_base: "*ref(requester.url_base)"
applications_stream:
  type: DeclarativeStream
  $options:
    name: "applications"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "applications"
candidates_stream:
  type: DeclarativeStream
  $options:
    name: "candidates"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "candidates"
close_reasons_stream:
  type: DeclarativeStream
  $options:
    name: "close_reasons"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "close_reasons"
degrees_stream:
  type: DeclarativeStream
  $options:
    name: "degrees"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "degrees"
departments_stream:
  type: DeclarativeStream
  $options:
    name: "departments"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "departments"
jobs_stream:
  type: DeclarativeStream
  $options:
    name: "jobs"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "jobs"
jobs_openings_stream:
  type: DeclarativeStream
  $options:
    name: "jobs_openings"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "jobs/{{ stream_slice.parent_id }}/openings"
    stream_slicer:
      type: SubstreamSlicer
      parent_stream_configs:
        - stream: "*ref(jobs_stream)"
          parent_key: "id"
          stream_slice_field: "parent_id"
applications_demographics_answers_stream:
  type: DeclarativeStream
  $options:
    name: "applications_demographics_answers"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    requester:
      $ref: "*ref(requester)"
      path: "applications/{{ stream_slice.parent_id }}/demographics/answers"
    stream_slicer:
      type: SubstreamSlicer
      parent_stream_configs:
        - stream: "*ref(applications_stream)"
          parent_key: "id"
          stream_slice_field: "parent_id"
streams:
  - "*ref(applications_stream)"
  - "*ref(candidates_stream)"
  - "*ref(close_reasons_stream)"
  - "*ref(degrees_stream)"
  - "*ref(departments_stream)"
  - "*ref(jobs_stream)"
  - "*ref(jobs_openings_stream)"
  - "*ref(applications_demographics_answers_stream)"
check:
  type: CheckStream
  stream_names: ["applications_stream"]
