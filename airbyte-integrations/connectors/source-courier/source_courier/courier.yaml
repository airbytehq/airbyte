version: "0.1.0"

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_courier/schemas/{{ options['name'] }}.json"

  root_selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: []

  results_selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer:
        - results

  requester:
    type: HttpRequester
    name: "{{ options['name'] }}"
    url_base: "https://api.courier.com"
    http_method: "GET"
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['api_key'] }}"

  cursor_paginator:
    type: DefaultPaginator
    url_base: "*ref(definitions.requester.url_base)"
    page_token_option:
      field_name: cursor
      inject_into: request_parameter
    page_size_option:
      inject_into: request_parameter
      field_name: page_size
    pagination_strategy:
      type: "CursorPagination"
      cursor_value: "{{ response.paging.cursor }}"
      page_size: 1

  retriever:
    type: SimpleRetriever
    name: "{{ options['name'] }}"
    primary_key: "{{ options['primary_key'] }}"
    record_selector:
      $ref: "*ref(definitions.results_selector)"

  base_stream:
    type: DeclarativeStream
    primary_key: "id"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
      record_selector:
        $ref: "*ref(definitions.root_selector)"

  ## MESSAGES API ##
  messages_stream:
    $ref: "*ref(definitions.base_stream)"
    primary_key: id
    $options:
      name: "messages"
      path: "/messages"
    retriever:
      $ref: "*ref(definitions.retriever)"
      record_selector:
        $ref: "*ref(definitions.results_selector)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/messages"
      paginator:
        $ref: "*ref(definitions.cursor_paginator)"

  ## MESSAGE INFO / HISTORY / OUTPUT STREAMS ##
  message_id_transformer:
    type: AddFields
    fields:
      - path: ["message_id"]
        value: "{{ stream_slice.id }}"
  message_stream_slicer:
    type: SubstreamSlicer
    parent_stream_configs:
      - stream: "*ref(definitions.messages_stream)"
        parent_key: id
        stream_slice_field: id

  message_info_stream:
    $ref: "*ref(definitions.base_stream)"
    type: DeclarativeStream
    primary_key: id
    $options:
      name: message_info
    retriever:
      $ref: "*ref(definitions.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/messages/{{ stream_slice.id }}"
      stream_slicer:
        $ref: "*ref(definitions.message_stream_slicer)"
      record_selector:
        $ref: "*ref(definitions.root_selector)"

  message_history_stream:
    type: DeclarativeStream
    $options:
      name: message_history
    primary_key: message_id
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      record_selector:
        $ref: "*ref(definitions.results_selector)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/messages/{{ stream_slice.id }}/history"
      stream_slicer:
        $ref: "*ref(definitions.message_stream_slicer)"
    transformations:
      - $ref: "*ref(definitions.message_id_transformer)"

  message_output_stream:
    type: DeclarativeStream
    $options:
      name: message_output
    primary_key: message_id
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
    retriever:
      $ref: "*ref(definitions.retriever)"
      record_selector:
        $ref: "*ref(definitions.results_selector)"
      requester:
        $ref: "*ref(definitions.requester)"
        path: "/messages/{{ stream_slice.id }}/output"
      stream_slicer:
        $ref: "*ref(definitions.message_stream_slicer)"
    transformations:
      - $ref: "*ref(definitions.message_id_transformer)"

streams:
  - "*ref(definitions.messages_stream)"
  - "*ref(definitions.message_info_stream)"
  - "*ref(definitions.message_history_stream)"
  - "*ref(definitions.message_output_stream)"

check:
  type: CheckStream
  stream_names: ["messages"]
