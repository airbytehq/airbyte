version: 0.51.2
type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - boards

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: []
  boards_selector:
    $ref: "#/definitions/selector"
    record_filter:
      condition: "{{ record.id in config.board_ids or not config.board_ids }}"
  requester:
    type: HttpRequester
    url_base: https://api.trello.com/1/
    http_method: GET
    request_headers: {}
    authenticator:
      type: ApiKeyAuthenticator
      api_token: 'OAuth oauth_consumer_key="{{ config[''key''] }}", oauth_token="{{ config[''token''] }}"'
      inject_into:
        type: RequestOption
        field_name: Authorization
        inject_into: header
    error_handler:
      type: CompositeErrorHandler
      error_handlers:
        - type: DefaultErrorHandler
          backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 10
    request_body_json: {}
  paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: before
    page_size_option:
      type: RequestOption
      field_name: limit
      inject_into: request_parameter
    pagination_strategy:
      type: CursorPagination
      page_size: 500
      cursor_value: "{{ (last_records|last)['id'] }}"
      stop_condition: "{{ not last_records }}"
  board_id_partition_router:
    - type: CustomPartitionRouter
      class_name: source_trello.components.OrderIdsPartitionRouter
      parent_stream_configs:
        - type: ParentStreamConfig
          parent_key: id
          partition_field: id
          stream:
            $ref: "#/definitions/boards_stream"
        - type: ParentStreamConfig
          parent_key: idBoards
          partition_field: id
          stream:
            $ref: "#/definitions/organizations_stream"
  boards_stream:
    type: DeclarativeStream
    name: boards
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: members/me/boards
        request_parameters:
          since: "{{ config['start_date'] }}"
      record_selector:
        $ref: "#/definitions/boards_selector"
  organizations_stream:
    type: DeclarativeStream
    name: organizations
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: members/me/organizations
        request_parameters:
          since: "{{ config['start_date'] }}"
      record_selector:
        $ref: "#/definitions/selector"
  actions_stream:
    type: DeclarativeStream
    name: actions
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: boards/{{ stream_partition.id }}/actions
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        $ref: "#/definitions/board_id_partition_router"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%S.%fZ"
      datetime_format: "%Y-%m-%dT%H:%M:%S.%fZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_time_option:
        type: RequestOption
        field_name: since
        inject_into: request_parameter
      end_datetime:
        type: MinMaxDatetime
        datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
  cards_stream:
    type: DeclarativeStream
    name: cards
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: boards/{{ stream_partition.id }}/cards/all
        request_parameters:
          list: "true"
          sort: "-id"
          since: "{{ config['start_date'] }}"
          members: "true"
          pluginData: "true"
          actions_display: "true"
          customFieldItems: "true"
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        $ref: "#/definitions/board_id_partition_router"
  checklists_stream:
    type: DeclarativeStream
    name: checklists
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: boards/{{ stream_partition.id }}/checklists
        request_parameters:
          since: "{{ config['start_date'] }}"
          fields: all
          checkItem_fields: all
      record_selector:
        $ref: "#/definitions/selector"
      partition_router:
        $ref: "#/definitions/board_id_partition_router"
  lists_stream:
    type: DeclarativeStream
    name: lists
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: boards/{{ stream_partition.id }}/lists
        request_parameters:
          since: "{{ config['start_date'] }}"
      record_selector:
        $ref: "#/definitions/selector"
      partition_router:
        $ref: "#/definitions/board_id_partition_router"
  users_stream:
    type: DeclarativeStream
    name: users
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: boards/{{ stream_partition.id }}/members
        request_parameters:
          since: "{{ config['start_date'] }}"
      record_selector:
        $ref: "#/definitions/selector"
      partition_router:
        $ref: "#/definitions/board_id_partition_router"

streams:
  - "#/definitions/boards_stream"
  - "#/definitions/organizations_stream"
  - "#/definitions/actions_stream"
  - "#/definitions/cards_stream"
  - "#/definitions/checklists_stream"
  - "#/definitions/lists_stream"
  - "#/definitions/users_stream"

spec:
  type: Spec
  documentation_url: https://docs.airbyte.com/integrations/sources/trello
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    additionalProperties: true
    required:
      - key
      - token
      - start_date
    properties:
      key:
        type: string
        title: API key
        description: Trello API key. See the <a href="https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth">docs</a> for instructions on how to generate it.
        airbyte_secret: true
        order: 0
      token:
        type: string
        title: API token
        description: Trello API token. See the <a href="https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth">docs</a> for instructions on how to generate it.
        airbyte_secret: true
        order: 1
      start_date:
        type: string
        title: Start Date
        pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        description: UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
        examples:
          - "2021-03-01T00:00:00Z"
        format: date-time
        order: 2
      board_ids:
        type: array
        items:
          type: string
          pattern: "^[0-9a-fA-F]{24}$"
        title: Trello Board IDs
        description: IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated. Please note that this is not the 8-character ID in the board's shortLink (URL of the board). Rather, what is required here is the 24-character ID usually returned by the API
        order: 3
  advanced_auth:
    auth_flow_type: oauth2.0
    oauth_config_specification:
      complete_oauth_output_specification:
        type: object
        additionalProperties: false
        properties:
          token:
            type: string
            path_in_connector_config:
              - token
          key:
            type: string
            path_in_connector_config:
              - key
      complete_oauth_server_input_specification:
        type: object
        additionalProperties: false
        properties:
          client_id:
            type: string
          client_secret:
            type: string
