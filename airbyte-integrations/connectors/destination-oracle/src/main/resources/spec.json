{
  "documentationUrl": "https://docs.airbyte.io/integrations/destinations/oracle",
  "supportsIncremental": true,
  "supportsNormalization": false,
  "supportsDBT": true,
  "supported_destination_sync_modes": ["overwrite", "append"],
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Oracle Destination Spec",
    "type": "object",
    "required": ["host", "port", "username", "sid"],
    "additionalProperties": true,
    "properties": {
      "host": {
        "title": "Host",
        "description": "Hostname of the database.",
        "type": "string",
        "order": 0
      },
      "port": {
        "title": "Port",
        "description": "Port of the database.",
        "type": "integer",
        "minimum": 0,
        "maximum": 65536,
        "default": 1521,
        "examples": ["1521"],
        "order": 1
      },
      "sid": {
        "title": "SID",
        "description": "SID",
        "type": "string",
        "order": 2
      },
      "username": {
        "title": "User",
        "description": "Username to use to access the database.  This user must have CREATE USER privileges in the database.",
        "type": "string",
        "order": 3
      },
      "password": {
        "title": "Password",
        "description": "Password associated with the username.",
        "type": "string",
        "airbyte_secret": true,
        "order": 4
      },
      "schema": {
        "title": "Default Schema",
        "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"airbyte\".  In Oracle, schemas and users are the same thing, so the \"user\" parameter is used as the login credentials and this is used for the default Airbyte message schema.",
        "type": "string",
        "examples": ["airbyte"],
        "default": "airbyte",
        "order": 5
      },
      "encryption": {
        "title": "Encryption",
        "type": "object",
        "description": "Encryption method to use when communicating with the database",
        "order": 6,
        "oneOf": [
          {
            "title": "Unencrypted",
            "additionalProperties": false,
            "description": "Data transfer will not be encrypted.",
            "required": ["encryption_method"],
            "properties": {
              "encryption_method": {
                "type": "string",
                "const": "unencrypted",
                "enum": ["unencrypted"],
                "default": "unencrypted"
              }
            }
          },
          {
            "title": "Native Network Ecryption (NNE)",
            "additionalProperties": false,
            "description": "Native network encryption gives you the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.",
            "required": ["encryption_method"],
            "properties": {
              "encryption_method": {
                "type": "string",
                "const": "client_nne",
                "enum": ["client_nne"],
                "default": "client_nne"
              },
              "encryption_algorithm": {
                "type": "string",
                "description": "This parameter defines the encryption algorithm to be used",
                "title": "Encryption Algorithm",
                "default": "AES256",
                "enum": ["AES256", "RC4_56", "3DES168"]
              }
            }
          },
          {
            "title": "TLS Encrypted (verify certificate)",
            "additionalProperties": false,
            "description": "Verify and use the cert provided by the server.",
            "required": ["encryption_method", "ssl_certificate"],
            "properties": {
              "encryption_method": {
                "type": "string",
                "const": "encrypted_verify_certificate",
                "enum": ["encrypted_verify_certificate"],
                "default": "encrypted_verify_certificate"
              },
              "ssl_certificate": {
                "title": "SSL PEM file",
                "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations",
                "type": "string",
                "airbyte_secret": true,
                "multiline": true
              }
            }
          }
        ]
      }
    }
  }
}
