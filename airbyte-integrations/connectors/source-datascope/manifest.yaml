version: 4.3.0
type: DeclarativeSource
check:
  type: CheckStream
  stream_names:
    - locations
definitions:
  streams:
    locations:
      type: DeclarativeStream
      name: locations
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          type: HttpRequester
          url_base: https://www.mydatascope.com/api/external/
          authenticator:
            type: ApiKeyAuthenticator
            api_token: "{{ config['api_key'] }}"
            inject_into:
              type: RequestOption
              field_name: Authorization
              inject_into: header
          path: /locations
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: offset
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: limit
          pagination_strategy:
            type: OffsetIncrement
            page_size: 200
      schema_loader:
        type: InlineSchemaLoader
        schema:
          "$schema": http://json-schema.org/draft-04/schema#
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            description:
              type:
                - string
                - "null"
            code:
              type:
                - string
                - "null"
            address:
              type:
                - string
                - "null"
            city:
              type:
                - string
                - "null"
            country:
              type:
                - string
                - "null"
            latitude:
              type:
                - number
                - "null"
            longitude:
              type:
                - number
                - "null"
            region:
              type:
                - string
                - "null"
            phone:
              type:
                - string
                - "null"
            company_code:
              type:
                - string
                - "null"
            company_name:
              type:
                - string
                - "null"
    answers:
      type: DeclarativeStream
      name: answers
      primary_key:
        - form_answer_id
      retriever:
        type: SimpleRetriever
        requester:
          type: HttpRequester
          url_base: https://www.mydatascope.com/api/external/
          authenticator:
            type: ApiKeyAuthenticator
            api_token: "{{ config['api_key'] }}"
            inject_into:
              type: RequestOption
              field_name: Authorization
              inject_into: header
          path: /v2/answers
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: offset
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: limit
          pagination_strategy:
            type: OffsetIncrement
            page_size: 200
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: created_at
        name: answers
        primary_key: form_answer_id
        path: /v2/answers
        cursor_datetime_formats:
          - "%d/%m/%Y %H:%M"
        datetime_format: "%d/%m/%Y %H:%M"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config['start_date'] }}"
          datetime_format: "%d/%m/%Y %H:%M"
        start_time_option:
          type: RequestOption
          field_name: start
          inject_into: request_parameter
        end_time_option:
          type: RequestOption
          field_name: end
          inject_into: request_parameter
        end_datetime:
          type: MinMaxDatetime
          datetime: "{{ now_utc().strftime('%d/%m/%Y %H:%M') }}"
          datetime_format: "%d/%m/%Y %H:%M"
        step: P1D
        cursor_granularity: P1D
      schema_loader:
        type: InlineSchemaLoader
        schema:
          "$schema": http://json-schema.org/draft-07/schema#
          type: object
          properties:
            form_name:
              type: string
            form_state:
              type:
                - string
                - "null"
            user_name:
              type: string
            user_identifier:
              type: string
            code:
              type: string
            form_id:
              type: integer
            created_at:
              type: string
            form_answer_id:
              type: integer
            latitude:
              type:
                - number
                - "null"
            longitude:
              type:
                - number
                - "null"
            "[question_name1]":
              type: string
            "[question_name2]":
              type: string
            "[question_name3]":
              type: string
    lists:
      type: DeclarativeStream
      name: lists
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          type: HttpRequester
          url_base: https://www.mydatascope.com/api/external/
          authenticator:
            type: ApiKeyAuthenticator
            api_token: "{{ config['api_key'] }}"
            inject_into:
              type: RequestOption
              field_name: Authorization
              inject_into: header
          path: /metadata_objects
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: offset
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: limit
          pagination_strategy:
            type: OffsetIncrement
            page_size: 200
      schema_loader:
        type: InlineSchemaLoader
        schema:
          "$schema": http://json-schema.org/draft-07/schema#
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            description:
              type: string
            attribute1:
              type: string
            attribute2:
              type: string
            list_id:
              type: integer
            account_id:
              type: integer
            code:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
    notifications:
      type: DeclarativeStream
      name: notifications
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          type: HttpRequester
          url_base: https://www.mydatascope.com/api/external/
          authenticator:
            type: ApiKeyAuthenticator
            api_token: "{{ config['api_key'] }}"
            inject_into:
              type: RequestOption
              field_name: Authorization
              inject_into: header
          path: /notifications
          http_method: GET
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: offset
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: limit
          pagination_strategy:
            type: OffsetIncrement
            page_size: 200
      incremental_sync:
        type: DatetimeBasedCursor
        cursor_field: created_at
        name: notifications
        primary_key: id
        path: /notifications
        cursor_datetime_formats:
          - "%d/%m/%Y %H:%M"
        datetime_format: "%d/%m/%Y %H:%M"
        start_datetime:
          type: MinMaxDatetime
          datetime: "{{ config['start_date'] }}"
          datetime_format: "%d/%m/%Y %H:%M"
        start_time_option:
          type: RequestOption
          field_name: start
          inject_into: request_parameter
        end_time_option:
          type: RequestOption
          field_name: end
          inject_into: request_parameter
        end_datetime:
          type: MinMaxDatetime
          datetime: "{{ now_utc().strftime('%d/%m/%Y %H:%M') }}"
          datetime_format: "%d/%m/%Y %H:%M"
        step: P1D
        cursor_granularity: P1D
      schema_loader:
        type: InlineSchemaLoader
        schema:
          "$schema": http://json-schema.org/draft-04/schema#
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
            url:
              type: string
            form_name:
              type: string
            form_code:
              type: string
            user:
              type: string
            created_at:
              type: string
  base_requester:
    type: HttpRequester
    url_base: https://www.mydatascope.com/api/external/
    authenticator:
      type: ApiKeyAuthenticator
      api_token: "{{ config['api_key'] }}"
      inject_into:
        type: RequestOption
        field_name: Authorization
        inject_into: header
streams:
  - type: DeclarativeStream
    name: locations
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://www.mydatascope.com/api/external/
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config['api_key'] }}"
          inject_into:
            type: RequestOption
            field_name: Authorization
            inject_into: header
        path: /locations
        http_method: GET
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: limit
        pagination_strategy:
          type: OffsetIncrement
          page_size: 200
    schema_loader:
      type: InlineSchemaLoader
      schema:
        "$schema": http://json-schema.org/draft-04/schema#
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          description:
            type:
              - string
              - "null"
          code:
            type:
              - string
              - "null"
          address:
            type:
              - string
              - "null"
          city:
            type:
              - string
              - "null"
          country:
            type:
              - string
              - "null"
          latitude:
            type:
              - number
              - "null"
          longitude:
            type:
              - number
              - "null"
          region:
            type:
              - string
              - "null"
          phone:
            type:
              - string
              - "null"
          company_code:
            type:
              - string
              - "null"
          company_name:
            type:
              - string
              - "null"
  - type: DeclarativeStream
    name: answers
    primary_key:
      - form_answer_id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://www.mydatascope.com/api/external/
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config['api_key'] }}"
          inject_into:
            type: RequestOption
            field_name: Authorization
            inject_into: header
        path: /v2/answers
        http_method: GET
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: limit
        pagination_strategy:
          type: OffsetIncrement
          page_size: 200
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: created_at
      name: answers
      primary_key: form_answer_id
      path: /v2/answers
      cursor_datetime_formats:
        - "%d/%m/%Y %H:%M"
      datetime_format: "%d/%m/%Y %H:%M"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%d/%m/%Y %H:%M"
      start_time_option:
        type: RequestOption
        field_name: start
        inject_into: request_parameter
      end_time_option:
        type: RequestOption
        field_name: end
        inject_into: request_parameter
      end_datetime:
        type: MinMaxDatetime
        datetime: "{{ now_utc().strftime('%d/%m/%Y %H:%M') }}"
        datetime_format: "%d/%m/%Y %H:%M"
      step: P1D
      cursor_granularity: P1D
    schema_loader:
      type: InlineSchemaLoader
      schema:
        "$schema": http://json-schema.org/draft-07/schema#
        type: object
        properties:
          form_name:
            type: string
          form_state:
            type:
              - string
              - "null"
          user_name:
            type: string
          user_identifier:
            type: string
          code:
            type: string
          form_id:
            type: integer
          created_at:
            type: string
          form_answer_id:
            type: integer
          latitude:
            type:
              - number
              - "null"
          longitude:
            type:
              - number
              - "null"
          "[question_name1]":
            type: string
          "[question_name2]":
            type: string
          "[question_name3]":
            type: string
  - type: DeclarativeStream
    name: lists
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://www.mydatascope.com/api/external/
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config['api_key'] }}"
          inject_into:
            type: RequestOption
            field_name: Authorization
            inject_into: header
        path: /metadata_objects
        http_method: GET
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: limit
        pagination_strategy:
          type: OffsetIncrement
          page_size: 200
    schema_loader:
      type: InlineSchemaLoader
      schema:
        "$schema": http://json-schema.org/draft-07/schema#
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          description:
            type: string
          attribute1:
            type: string
          attribute2:
            type: string
          list_id:
            type: integer
          account_id:
            type: integer
          code:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
  - type: DeclarativeStream
    name: notifications
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://www.mydatascope.com/api/external/
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config['api_key'] }}"
          inject_into:
            type: RequestOption
            field_name: Authorization
            inject_into: header
        path: /notifications
        http_method: GET
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: limit
        pagination_strategy:
          type: OffsetIncrement
          page_size: 200
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: created_at
      name: notifications
      primary_key: id
      path: /notifications
      cursor_datetime_formats:
        - "%d/%m/%Y %H:%M"
      datetime_format: "%d/%m/%Y %H:%M"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%d/%m/%Y %H:%M"
      start_time_option:
        type: RequestOption
        field_name: start
        inject_into: request_parameter
      end_time_option:
        type: RequestOption
        field_name: end
        inject_into: request_parameter
      end_datetime:
        type: MinMaxDatetime
        datetime: "{{ now_utc().strftime('%d/%m/%Y %H:%M') }}"
        datetime_format: "%d/%m/%Y %H:%M"
      step: P1D
      cursor_granularity: P1D
    schema_loader:
      type: InlineSchemaLoader
      schema:
        "$schema": http://json-schema.org/draft-04/schema#
        type: object
        properties:
          id:
            type: integer
          type:
            type: string
          url:
            type: string
          form_name:
            type: string
          form_code:
            type: string
          user:
            type: string
          created_at:
            type: string
spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
      - start_date
    properties:
      api_key:
        type: string
        title: Authorization
        airbyte_secret: true
        description: API Key
        order: 0
      start_date:
        type: string
        title: Start Date
        description: Start date for the data to be replicated
        examples:
          - dd/mm/YYYY HH:MM
        pattern: ^[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}$
        order: 1
    additionalProperties: true
metadata:
  autoImportSchema:
    locations: false
    answers: false
    lists: false
    notifications: false
schemas:
  locations:
    "$schema": http://json-schema.org/draft-04/schema#
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type:
          - string
          - "null"
      code:
        type:
          - string
          - "null"
      address:
        type:
          - string
          - "null"
      city:
        type:
          - string
          - "null"
      country:
        type:
          - string
          - "null"
      latitude:
        type:
          - number
          - "null"
      longitude:
        type:
          - number
          - "null"
      region:
        type:
          - string
          - "null"
      phone:
        type:
          - string
          - "null"
      company_code:
        type:
          - string
          - "null"
      company_name:
        type:
          - string
          - "null"
  answers:
    "$schema": http://json-schema.org/draft-07/schema#
    type: object
    properties:
      form_name:
        type: string
      form_state:
        type:
          - string
          - "null"
      user_name:
        type: string
      user_identifier:
        type: string
      code:
        type: string
      form_id:
        type: integer
      created_at:
        type: string
      form_answer_id:
        type: integer
      latitude:
        type:
          - number
          - "null"
      longitude:
        type:
          - number
          - "null"
      "[question_name1]":
        type: string
      "[question_name2]":
        type: string
      "[question_name3]":
        type: string
  lists:
    "$schema": http://json-schema.org/draft-07/schema#
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      attribute1:
        type: string
      attribute2:
        type: string
      list_id:
        type: integer
      account_id:
        type: integer
      code:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  notifications:
    "$schema": http://json-schema.org/draft-04/schema#
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      url:
        type: string
      form_name:
        type: string
      form_code:
        type: string
      user:
        type: string
      created_at:
        type: string
