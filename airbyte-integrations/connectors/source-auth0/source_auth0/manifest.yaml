version: "0.29.0"

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: []

  oauth_authenticator:
    type: OAuthAuthenticator
    token_refresh_endpoint: "{{ config['base_url'] }}oauth/token"
    client_id: "{{ config['credentials']['client_id'] }}"
    client_secret: "{{ config['credentials']['client_secret'] }}"
    refresh_token: ""

  bearer_authenticator:
    type: BearerAuthenticator
    api_token: "{{ config['credentials']['access_token'] }}"

  requester:
    type: HttpRequester
    url_base: "{{ config['base_url'] }}/api/v2"
    http_method: "GET"
    authenticator:
      class_name: source_auth0.components.AuthenticatorAuth0
      bearer: "#/definitions/bearer_authenticator"
      oauth: "#/definitions/oauth_authenticator"

  paginator:
    type: "DefaultPaginator"
    page_size_option:
      type: "RequestOption"
      inject_into: "request_parameter"
      field_name: "per_page"
    pagination_strategy:
      type: "PageIncrement"
      page_size: 50
    page_token_option:
      type: "RequestOption"
      inject_into: "request_parameter"
      field_name: "page"

  retriever:
    type: SimpleRetriever
    record_selector:
      $ref: "#/definitions/selector"
    paginator:
      $ref: "#/definitions/paginator"
    requester:
      $ref: "#/definitions/requester"

  base_stream:
    type: DeclarativeStream
    retriever:
      $ref: "#/definitions/retriever"

  clients_stream:
    $ref: "#/definitions/base_stream"
    name: "clients"
    primary_key: "client_id"
    $parameters:
      path: "clients"

  users_stream:
    type: DeclarativeStream
    $parameters:
      name: "users"
      primary_key: "user_id"
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
      requester:
        type: HttpRequester
        url_base: "{{ config['base_url'] }}/api/v2"
        path: "users"
        http_method: "GET"
        authenticator:
          class_name: source_auth0.components.AuthenticatorAuth0
          bearer: "#/definitions/bearer_authenticator"
          oauth: "#/definitions/oauth_authenticator"
        request_parameters:
          sort: "updated_at:1"
          include_totals: "false"
          q: "updated_at:{{ '{' }}{{stream_interval.start_time ~ '  TO ' ~ stream_interval.end_time ~ ']' if stream_interval.start_time else config['start_date'] ~ ' TO *]'}}"
        request_headers: {}
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: "updated_at"
      datetime_format: "%Y-%m-%dT%H:%M:%S.%fZ"
      cursor_granularity: "PT0.001S"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config.get('start_date', '2013-01-01T00:00:00.000Z') }}"
        datetime_format: "%Y-%m-%dT%H:%M:%S.%fZ"
        min_datetime: "2013-01-01T00:00:00.000Z"
      end_datetime:
        type: MinMaxDatetime
        datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%S.%fZ') }}"
        max_datetime: "2013-01-01T00:00:00.000Z"
      step: "P1Y"

  organizations_stream:
    $ref: "#/definitions/base_stream"
    name: "organizations"
    primary_key: "id"
    $parameters:
      path: "organizations"

  organization_members_partition_router:
    type: SubstreamPartitionRouter
    parent_stream_configs:
      - stream: "#/definitions/organizations_stream"
        parent_key: "id"
        partition_field: "parent_id"

  organization_members_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "organization_members"
      primary_key: "user_id"
      path: "organizations/{{ stream_partition.parent_id }}/members"
    retriever:
      $ref: "#/definitions/retriever"
      partition_router:
        $ref: "#/definitions/organization_members_partition_router"

  organization_member_roles_partition_router:
    type: SubstreamPartitionRouter
    parent_stream_configs:
      - stream: "#/definitions/organization_members_stream"
        parent_key: "user_id"
        partition_field: "parent_user_id"

  organization_member_roles_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "organization_member_roles"
      primary_key: "id"
      path: "organizations/{{ stream_partition.parent_slice.parent_id }}/members/{{ stream_partition.parent_user_id }}/roles"
    retriever:
      $ref: "#/definitions/retriever"
      partition_router:
        $ref: "#/definitions/organization_member_roles_partition_router"

streams:
  - "#/definitions/clients_stream"
  - "#/definitions/users_stream"
  - "#/definitions/organizations_stream"
  - "#/definitions/organization_member_roles_stream"
  - "#/definitions/organization_members_stream"

check:
  type: CheckStream
  stream_names:
    # - "clients"
    - "users"
    # - "organizations"
    # - "organization_member_roles"
    # - "organization_members"
spec:
  documentationUrl: https://auth0.com/docs/api/management/v2/
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Auth0 Management API Spec
    type: object
    required:
      - base_url
      - credentials
    additionalProperties: true
    properties:
      base_url:
        type: string
        title: Base URL
        examples:
          - "https://dev-yourOrg.us.auth0.com/"
        description: The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`
      credentials:
        title: Authentication Method
        type: object
        oneOf:
          - type: object
            title: OAuth2 Confidential Application
            required:
              - auth_type
              - client_id
              - client_secret
              - audience
            properties:
              auth_type:
                type: string
                title: Authentication Method
                const: oauth2_confidential_application
                order: 0
              client_id:
                title: Client ID
                description: >-
                  Your application's Client ID. You can find this value on the <a
                  href="https://manage.auth0.com/#/applications">application's settings tab</a>
                  after you login the admin portal.
                type: string
                examples:
                  - "Client_ID"
              client_secret:
                title: Client Secret
                description: >-
                  Your application's Client Secret. You can find this value on the <a
                  href="https://manage.auth0.com/#/applications">application's settings tab</a>
                  after you login the admin portal.
                type: string
                examples:
                  - "Client_Secret"
                airbyte_secret: true
              audience:
                title: Audience
                description: >-
                  The audience for the token, which is your API. You can find this in the Identifier field on your  <a
                  href="https://manage.auth0.com/#/apis">API's settings tab</a>
                type: string
                examples:
                  - https://dev-yourOrg.us.auth0.com/api/v2/
          - type: object
            title: OAuth2 Access Token
            required:
              - access_token
              - auth_type
            properties:
              auth_type:
                type: string
                title: Authentication Method
                const: oauth2_access_token
                examples:
                  - "oauth2_access_token"
                order: 0
              access_token:
                title: OAuth2 Access Token
                description: >-
                  Also called <a
                  href="https://auth0.com/docs/secure/tokens/access-tokens/get-management-api-access-tokens-for-testing">API Access Token </a>
                  The access token used to call the Auth0 Management API Token. It's a JWT that contains specific grant permissions knowns as scopes.
                type: string
                airbyte_secret: true
      start_date:
        type: string
        title: Start Date
        description:
          UTC date and time in the format 2017-01-25T00:00:00Z. Any data
          before this date will not be replicated.
        examples:
          - "2023-08-05T00:43:59.244Z"
        default: "2023-08-05T00:43:59.244Z"
        airbyte_secret: false
