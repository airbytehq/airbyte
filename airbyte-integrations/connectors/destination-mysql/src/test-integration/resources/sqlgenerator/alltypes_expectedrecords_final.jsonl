// Note that our JDBC interface is returning nested json as strings.
// This is because we're not passing a JdbcCompatibleSourceOperations to the DefaultJdbcDatabase in our integration test.
{"id1": 1, "id2": 100, "updated_at": "2023-01-01T01:00:00Z", "array": "[\"foo\"]", "struct": "{\"foo\": \"bar\"}", "string": "foo", "number": 42.1, "integer": 42, "boolean": true, "timestamp_with_timezone": "2023-01-23T12:34:56Z", "timestamp_without_timezone": "2023-01-23T12:34:56", "time_with_timezone": "12:34:56Z", "time_without_timezone": "12:34:56", "date": "2023-01-23", "unknown": "{}", "_airbyte_extracted_at": "2023-01-01T00:00:00Z", "_airbyte_meta": "{}"}
{"id1": 2, "id2": 100, "updated_at": "2023-01-01T01:00:00Z", "unknown": "null", "_airbyte_extracted_at": "2023-01-01T00:00:00Z", "_airbyte_meta": "{}"}
{"id1": 3, "id2": 100, "updated_at": "2023-01-01T01:00:00Z", "_airbyte_extracted_at": "2023-01-01T00:00:00Z", "_airbyte_meta": "{}"}
// MySQL cast errors use non-null default values
{"id1": 4, "id2": 100, "updated_at": "2023-01-01T01:00:00Z", "boolean": false, "integer": 0, "number": 0, "unknown": "null", "_airbyte_extracted_at": "2023-01-01T00:00:00Z", "_airbyte_meta": "{}"}
// Note that for numbers where we parse the value to JSON (struct, array, unknown) we lose precision.
// But for numbers where we create a NUMBER column, we do not lose precision (see the `number` column).
{"id1": 5, "id2": 100, "updated_at": "2023-01-01T01:00:00Z", "number": 67.174118, "struct": "{\"nested_number\": 67.174118}", "array": "[67.174118]", "unknown": "67.174118", "_airbyte_extracted_at": "2023-01-01T00:00:00Z", "_airbyte_meta": "{}"}
