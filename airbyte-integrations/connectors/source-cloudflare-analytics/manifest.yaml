version: 6.48.15

type: DeclarativeSource

description: >-
  Connects to Cloudflare to retrieve some basic traffic analytics, including
  Core Web Vitals measurements.

check:
  type: CheckStream
  stream_names:
    - daily_analytics
    - browser_usage
    - country_traffic
    - response_status_codes

streams:
  - type: DeclarativeStream
    name: daily_analytics
    primary_key:
      - date
    cursor_field: date
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: https://api.cloudflare.com/client/v4
        path: /graphql
        http_method: POST
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config['api_token'] }}"
        request_headers:
          Content-Type: application/json
        request_body:
          type: RequestBodyJsonObject
          value:
            query: |
              query {
                viewer {
                  zones(filter: {zoneTag: "{{ config['zone_id'] }}"}) {
                    httpRequests1dGroups(
                      filter: {
                        date_geq: "{{ config['start_date'] }}",
                        date_leq: "{{ config['end_date'] }}"
                      },
                      limit: 1000,
                      orderBy: [date_ASC]
                    ) {
                      dimensions { date }
                      sum {
                        requests
                        pageViews
                        cachedRequests
                        cachedBytes
                        encryptedRequests
                        encryptedBytes
                        bytes
                        threats
                        responseStatusMap { edgeResponseStatus requests }
                        browserMap { uaBrowserFamily pageViews }
                        countryMap { clientCountryName requests }
                      }
                    }
                  }
                }
              }
      paginator:
        type: NoPagination
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - viewer
            - zones
            - "0"
            - httpRequests1dGroups
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      datetime_format: "%Y-%m-%d"
      start_datetime: "{{ config['start_date'] }}"
      end_datetime: "{{ config['end_date'] }}"
    transformations:
      - type: AddFields
        fields:
          - path:
              - date
            value: "{{ record.dimensions.date }}"
          - path:
              - requests
            value: "{{ record.sum.requests }}"
          - path:
              - pageViews
            value: "{{ record.sum.pageViews }}"
          - path:
              - cachedRequests
            value: "{{ record.sum.cachedRequests }}"
          - path:
              - cachedBytes
            value: "{{ record.sum.cachedBytes }}"
          - path:
              - encryptedRequests
            value: "{{ record.sum.encryptedRequests }}"
          - path:
              - encryptedBytes
            value: "{{ record.sum.encryptedBytes }}"
          - path:
              - bytes
            value: "{{ record.sum.bytes }}"
          - path:
              - threats
            value: "{{ record.sum.threats }}"
          - path:
              - responseStatusMap
            value: "{{ record.sum.responseStatusMap }}"
          - path:
              - browserMap
            value: "{{ record.sum.browserMap }}"
          - path:
              - countryMap
            value: "{{ record.sum.countryMap }}"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        properties:
          date:
            type: string
            format: date
          requests:
            type: integer
          pageViews:
            type: integer
          cachedRequests:
            type: integer
          cachedBytes:
            type: integer
          encryptedRequests:
            type: integer
          encryptedBytes:
            type: integer
          bytes:
            type: integer
          threats:
            type: integer
          responseStatusMap:
            type: array
            items:
              type: object
              properties:
                edgeResponseStatus:
                  type: integer
                requests:
                  type: integer
          browserMap:
            type: array
            items:
              type: object
              properties:
                uaBrowserFamily:
                  type: string
                pageViews:
                  type: integer
          countryMap:
            type: array
            items:
              type: object
              properties:
                clientCountryName:
                  type: string
                requests:
                  type: integer
        additionalProperties: true
  - type: DeclarativeStream
    name: browser_usage
    primary_key:
      - date
    cursor_field: date
    retriever:
      type: SimpleRetriever
      requester:
        url_base: https://api.cloudflare.com/client/v4
        path: /graphql
        http_method: POST
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config['api_token'] }}"
        request_headers:
          Content-Type: application/json
        request_body:
          type: RequestBodyJsonObject
          value:
            query: |
              query {
                viewer {
                  zones(filter: {zoneTag: "{{ config['zone_id'] }}"}) {
                    httpRequests1dGroups(
                      filter: {
                        date_geq: "{{ config['start_date'] }}",
                        date_leq: "{{ config['end_date'] }}"
                      },
                      limit: 1000,
                      orderBy: [date_ASC]
                    ) {
                      dimensions { date }
                      sum {
                        browserMap { uaBrowserFamily pageViews }
                      }
                    }
                  }
                }
              }
      paginator:
        type: NoPagination
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - viewer
            - zones
            - "0"
            - httpRequests1dGroups
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      datetime_format: "%Y-%m-%d"
      start_datetime: "{{ config['start_date'] }}"
      end_datetime: "{{ config['end_date'] }}"
    transformations:
      - type: AddFields
        fields:
          - path:
              - date
            value: "{{ record.dimensions.date }}"
          - path:
              - browserMap
            value: "{{ record.sum.browserMap }}"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        properties:
          date:
            type: string
            format: date
          browserMap:
            type: array
            items:
              type: object
              properties:
                uaBrowserFamily:
                  type: string
                pageViews:
                  type: integer
        additionalProperties: true
  - type: DeclarativeStream
    name: country_traffic
    primary_key:
      - date
    cursor_field: date
    retriever:
      type: SimpleRetriever
      requester:
        url_base: https://api.cloudflare.com/client/v4
        path: /graphql
        http_method: POST
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config['api_token'] }}"
        request_headers:
          Content-Type: application/json
        request_body:
          type: RequestBodyJsonObject
          value:
            query: |
              query {
                viewer {
                  zones(filter: {zoneTag: "{{ config['zone_id'] }}"}) {
                    httpRequests1dGroups(
                      filter: {
                        date_geq: "{{ config['start_date'] }}",
                        date_leq: "{{ config['end_date'] }}"
                      },
                      limit: 1000,
                      orderBy: [date_ASC]
                    ) {
                      dimensions { date }
                      sum {
                        countryMap { clientCountryName requests }
                      }
                    }
                  }
                }
              }
      paginator:
        type: NoPagination
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - viewer
            - zones
            - "0"
            - httpRequests1dGroups
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      datetime_format: "%Y-%m-%d"
      start_datetime: "{{ config['start_date'] }}"
      end_datetime: "{{ config['end_date'] }}"
    transformations:
      - type: AddFields
        fields:
          - path:
              - date
            value: "{{ record.dimensions.date }}"
          - path:
              - countryMap
            value: "{{ record.sum.countryMap }}"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        properties:
          date:
            type: string
            format: date
          countryMap:
            type: array
            items:
              type: object
              properties:
                clientCountryName:
                  type: string
                requests:
                  type: integer
        additionalProperties: true
  - type: DeclarativeStream
    name: response_status_codes
    primary_key:
      - date
    cursor_field: date
    retriever:
      type: SimpleRetriever
      requester:
        url_base: https://api.cloudflare.com/client/v4
        path: /graphql
        http_method: POST
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config['api_token'] }}"
        request_headers:
          Content-Type: application/json
        request_body:
          type: RequestBodyJsonObject
          value:
            query: |
              query {
                viewer {
                  zones(filter: {zoneTag: "{{ config['zone_id'] }}"}) {
                    httpRequests1dGroups(
                      filter: {
                        date_geq: "{{ config['start_date'] }}",
                        date_leq: "{{ config['end_date'] }}"
                      },
                      limit: 1000,
                      orderBy: [date_ASC]
                    ) {
                      dimensions { date }
                      sum {
                        responseStatusMap { edgeResponseStatus requests }
                      }
                    }
                  }
                }
              }
      paginator:
        type: NoPagination
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - viewer
            - zones
            - "0"
            - httpRequests1dGroups
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      datetime_format: "%Y-%m-%d"
      start_datetime: "{{ config['start_date'] }}"
      end_datetime: "{{ config['end_date'] }}"
    transformations:
      - type: AddFields
        fields:
          - path:
              - date
            value: "{{ record.dimensions.date }}"
          - path:
              - responseStatusMap
            value: "{{ record.sum.responseStatusMap }}"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        properties:
          date:
            type: string
            format: date
          responseStatusMap:
            type: array
            items:
              type: object
              properties:
                edgeResponseStatus:
                  type: integer
                requests:
                  type: integer
        additionalProperties: true
  - type: DeclarativeStream
    name: core_web_vitals
    primary_key:
      - date
      - requestPath
      - deviceType
      - userAgentBrowser
      - userAgentOS
      - countryName
    cursor_field: date
    retriever:
      type: SimpleRetriever
      requester:
        url_base: https://api.cloudflare.com/client/v4
        path: /graphql
        http_method: POST
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config['api_token'] }}"
        request_headers:
          Content-Type: application/json
        request_body:
          type: RequestBodyJsonObject
          value:
            query: |
              query {
                viewer {
                  accounts(filter: { accountTag: "{{ config['account_id'] }}" }) {
                    rumWebVitalsEventsAdaptiveGroups(
                      filter: {
                        date_geq: "{{ config['start_date'] }}",
                        date_leq: "{{ config['end_date'] }}",
                        siteTag: "{{ config['site_id'] }}"
                      },
                      limit: 1000,
                      orderBy: [date_ASC]
                    ) {
                      dimensions {
                        date
                        requestPath
                        deviceType
                        userAgentBrowser
                        userAgentOS
                        countryName
                      }
                      quantiles {
                        largestContentfulPaintP75
                        firstInputDelayP75
                        cumulativeLayoutShiftP75
                        interactionToNextPaintP75
                      }
                    }
                  }
                }
              }
      paginator:
        type: NoPagination
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - viewer
            - accounts
            - "0"
            - rumWebVitalsEventsAdaptiveGroups
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      datetime_format: "%Y-%m-%d"
      start_datetime: "{{ config['start_date'] }}"
      end_datetime: "{{ config['end_date'] }}"
    transformations:
      - type: AddFields
        fields:
          - path:
              - date
            value: "{{ record.dimensions.date }}"
          - path:
              - requestPath
            value: "{{ record.dimensions.requestPath }}"
          - path:
              - deviceType
            value: "{{ record.dimensions.deviceType }}"
          - path:
              - userAgentBrowser
            value: "{{ record.dimensions.userAgentBrowser }}"
          - path:
              - userAgentOS
            value: "{{ record.dimensions.userAgentOS }}"
          - path:
              - countryName
            value: "{{ record.dimensions.countryName }}"
          - path:
              - largestContentfulPaintP75
            value: "{{ record.quantiles.largestContentfulPaintP75 }}"
          - path:
              - firstInputDelayP75
            value: "{{ record.quantiles.firstInputDelayP75 }}"
          - path:
              - cumulativeLayoutShiftP75
            value: "{{ record.quantiles.cumulativeLayoutShiftP75 }}"
          - path:
              - interactionToNextPaintP75
            value: "{{ record.quantiles.interactionToNextPaintP75 }}"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        properties:
          date:
            type: string
            format: date
          requestPath:
            type: string
          deviceType:
            type: string
          userAgentBrowser:
            type: string
          userAgentOS:
            type: string
          countryName:
            type: string
          largestContentfulPaintP75:
            type: number
          firstInputDelayP75:
            type: number
          cumulativeLayoutShiftP75:
            type: number
          interactionToNextPaintP75:
            type: number
        additionalProperties: true

spec:
  type: Spec
  connection_specification:
    type: object
    required:
      - api_token
      - zone_id
      - start_date
      - end_date
      - account_id
      - site_id
    properties:
      api_token:
        type: string
        description: Cloudflare token with Analytics Read access
        title: API Token
        airbyte_secret: true
      zone_id:
        type: string
        description: Your Cloudflare zone identifier
        title: Zone ID
      start_date:
        type: string
        format: date
        title: Start Date
      end_date:
        type: string
        format: date
        title: End Date
      account_id:
        type: string
        description: Your Cloudflare account identifier
        title: Account ID
      site_id:
        type: string
        description: The site tag used for Web Vitals tracking
        title: Site Tag

metadata:
  testedStreams:
    core_web_vitals:
      streamHash: 41d668ac584fcbb2ea63f9bf321979d04b948534
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    response_status_codes:
      streamHash: d7cd2d8c4e643973db568009418732352b5f3096
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    browser_usage:
      streamHash: 158b632602dbb6a0a509d418ffb19c6b8319cbac
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    country_traffic:
      streamHash: 6dbae4143893b182cf851f6ed32d2a6cf08cc278
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    daily_analytics:
      streamHash: d3fe78d0d2a608e31801f5d0ebe9b40f425a374e
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
