{
  "documentationUrl": "https://docs.airbyte.io/integrations/sources/e2e-test",
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "E2E Test Source Spec",
    "type": "object",
    "required": ["type"],
    "oneOf": [
      {
        "title": "Continuous Feed",
        "required": ["type", "max_messages", "mock_catalog"],
        "description": "A mock mode that will emit random messages based on the input schema.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "const": "CONTINUOUS_FEED",
            "default": "CONTINUOUS_FEED",
            "order": 10
          },
          "max_messages": {
            "title": "Max Records",
            "description": "Number of records to emit per stream. Min 1. Max 100 billion.",
            "type": "integer",
            "default": 100,
            "min": 1,
            "max": 100000000000,
            "order": 20
          },
          "seed": {
            "title": "Random Seed",
            "description": "When the seed is unspecified, the current time millis will be used as the seed. Range: [0, 1000000].",
            "type": "integer",
            "default": 0,
            "examples": [42],
            "min": 0,
            "max": 1000000,
            "order": 30
          },
          "message_interval_ms": {
            "title": "Message Interval (ms)",
            "description": "Interval between messages in ms. Min 0 ms. Max 60000 ms (1 minute).",
            "type": "integer",
            "min": 0,
            "max": 60000,
            "default": 0,
            "order": 40
          },
          "mock_catalog": {
            "title": "Mock Catalog",
            "type": "object",
            "order": 50,
            "oneOf": [
              {
                "title": "Single Stream",
                "description": "A catalog with one stream.",
                "required": ["type", "stream_name", "stream_schema"],
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "SINGLE_STREAM",
                    "default": "SINGLE_STREAM"
                  },
                  "stream_name": {
                    "title": "Stream Name",
                    "description": "Name of the data stream.",
                    "type": "string",
                    "default": "data_stream"
                  },
                  "stream_schema": {
                    "title": "Stream Schema",
                    "description": "A Json schema for the stream. The schema should be compatible with <a href=\"https://json-schema.org/draft-07/json-schema-release-notes.html\">draft-07</a>. See <a href=\"https://cswr.github.io/JsonSchema/spec/introduction/\">this doc</a> for examples.",
                    "type": "string",
                    "default": "{ \"type\": \"object\", \"properties\": { \"column1\": { \"type\": \"string\" } } }"
                  }
                }
              },
              {
                "title": "Multi-Stream",
                "description": "A catalog with multiple data streams.",
                "required": ["type", "stream_schemas"],
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "MULTI_STREAM",
                    "default": "MULTI_STREAM"
                  },
                  "stream_schemas": {
                    "title": "Streams and Schemas",
                    "description": "A Json object specifying multiple data streams and their schemas. Each key in this object is one stream name. Each value is the schema for that stream. The schema should be compatible with <a href=\"https://json-schema.org/draft-07/json-schema-release-notes.html\">draft-07</a>. See <a href=\"https://cswr.github.io/JsonSchema/spec/introduction/\">this doc</a> for examples.",
                    "type": "string",
                    "default": "{ \"stream1\": { \"type\": \"object\", \"properties\": { \"field1\": { \"type\": \"string\" } } }, \"stream2\": { \"type\": \"object\", \"properties\": { \"field1\": { \"type\": \"boolean\" } } } }"
                  }
                }
              }
            ]
          }
        }
      },
      {
        "title": "Legacy Exception After N",
        "required": ["type", "throw_after_n_records"],
        "description": "A legacy mode from v0.1.1 mainly for unit tests. The catalog has one \"data\" stream, which has one string field \"column1\". This mode will throw an exception after N messages.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "const": "EXCEPTION_AFTER_N",
            "default": "EXCEPTION_AFTER_N"
          },
          "throw_after_n_records": {
            "title": "Throw After N Records",
            "description": "Number of records to emit before throwing an exception. Min 1.",
            "type": "integer",
            "min": 1
          }
        }
      },
      {
        "title": "Legacy Infinite Feed",
        "required": ["type", "max_records"],
        "description": "A legacy mode from v0.1.1 mainly for unit tests. The catalog has one \"data\" stream, which has one string field \"column1\". This mode will emit messages infinitely.",
        "additionalProperties": true,
        "properties": {
          "type": {
            "type": "string",
            "const": "INFINITE_FEED",
            "default": "INFINITE_FEED"
          },
          "max_records": {
            "title": "Max Records",
            "description": "Number of records to emit. If not set, defaults to infinity.",
            "type": "integer"
          },
          "message_interval": {
            "title": "Message Interval",
            "description": "Interval between messages in ms.",
            "type": "integer"
          }
        }
      }
    ]
  }
}
