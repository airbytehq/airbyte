version: 0.47.2
type: DeclarativeSource
definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_klaviyo/schemas/{{ parameters.name }}.json"

  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: [data]

  legacy_api_requester:
    type: HttpRequester
    url_base: https://a.klaviyo.com/api/v1/
    http_method: GET
    request_headers: {}
    authenticator:
      type: ApiKeyAuthenticator
      api_token: '{{ config[''api_key''] }}'
      inject_into:
        type: RequestOption
        inject_into: request_parameter
        field_name: api_key
    request_body_json: {}

  revised_api_requester:
    type: HttpRequester
    url_base: https://a.klaviyo.com/api/
    http_method: GET
    request_headers:
      revision: "{{ parameters.revision }}"
      Accept: application/json
      Content-Type: application/json
    authenticator:
      type: ApiKeyAuthenticator
      api_token: 'Klaviyo-API-Key {{ config[''api_key''] }}'
      inject_into:
        type: RequestOption
        inject_into: header
        field_name: Authorization
    request_body_json: {}

  base_retriever:
    type: SimpleRetriever
    record_selector:
      $ref: "#/definitions/selector"

  base_stream:
    type: DeclarativeStream
    schema_loader:
      $ref: "#/definitions/schema_loader"

  page_increment_paginator:
    type: DefaultPaginator
    page_size_option:
      type: RequestOption
      field_name: count
      inject_into: request_parameter
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: page
    pagination_strategy:
      type: PageIncrement
      start_from_page: 0
      page_size: 100

  cursor_paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestPath
    page_size_option:
      inject_into: request_parameter
      type: RequestOption
      field_name: page[size]
    pagination_strategy:
      type: CursorPagination
      page_size: 100
      cursor_value: '{{ response.get("links", {}).get("next", {}) }}'
      stop_condition: '{{ not response.get("links", {}).get("next", {}) }}'
  
  base_incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: "{{ parameters.cursor_field }}"
    cursor_datetime_formats:
      - "{{ parameters.cursor_datetime_formats }}"
    start_datetime:
      type: MinMaxDatetime
      datetime: '{{ config[''start_date''] }}'
      datetime_format: '%Y-%m-%dT%H:%M:%SZ'
    end_datetime:
      type: MinMaxDatetime
      datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
      datetime_format: '%Y-%m-%dT%H:%M:%SZ'

  legacy_api_incremental_sync:
    $ref: "#/definitions/base_incremental_sync"
    datetime_format: '%s'
    start_time_option:
      type: RequestOption
      field_name: since
      inject_into: request_parameter

  campaigns_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "campaigns"
        request_parameters: {}
    $parameters:
      name: "campaigns"

  events_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "metrics/timeline"
        request_parameters:
          sort: asc
          count: '100'
    transformations:
      - type: AddFields
        fields:
          - path:
              - flow_id
            value: '{{ record[''event_properties''][''$flow''] }}'
      - type: AddFields
        fields:
          - path:
              - flow_message_id
            value: '{{ record[''event_properties''][''$message''] }}'
      - type: AddFields
        fields:
          - path:
              - campaign_id
            value: >-
              {{ record['event_properties']['$message'] if not record['event_properties']['$flow'] }}
    incremental_sync:
      $ref: "#/definitions/legacy_api_incremental_sync"
    $parameters:
      name: "events"
      cursor_field: timestamp
      cursor_datetime_formats: '%s'

  globalexclusions_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "email"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        type: DefaultPaginator
        page_size_option:
          type: RequestOption
          field_name: count
          inject_into: request_parameter
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: page
        pagination_strategy:
          type: PageIncrement
          start_from_page: 0
          page_size: 500
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "people/exclusions"
        request_parameters:
          sort: desc
    incremental_sync:
      $ref: "#/definitions/legacy_api_incremental_sync"
    $parameters:
      name: "global_exclusions"
      cursor_field: timestamp
      cursor_datetime_formats: '%s'

  lists_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "lists"
        request_parameters: {}
    $parameters:
      name: "lists"

  metrics_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "metrics"
        request_parameters: {}
    $parameters:
      name: "metrics"

  flows_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "flows"
        request_parameters:
          sort: desc
        request_headers: {}
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: created
      end_datetime:
        type: MinMaxDatetime
        datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'
      start_datetime:
        type: MinMaxDatetime
        datetime: '{{ config[''start_date''] }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'
      datetime_format: '%s'
      start_time_option:
        type: RequestOption
        field_name: since
        inject_into: request_parameter
      cursor_datetime_formats:
        - '%Y-%m-%d %H:%M:%S'
    $parameters:
      name: "flows"
      cursor_field: created
      cursor_datetime_formats: '%Y-%m-%d %H:%M:%S'

  profiles_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      requester:
        $ref: "#/definitions/revised_api_requester"
        path: "profiles/"
        request_parameters:
          sort: updated
          filter: greater-than(updated,{{ stream_interval.start_time }})
    incremental_sync:
      $ref: "#/definitions/base_incremental_sync"
      datetime_format: '%Y-%m-%dT%H:%M:%S.%f%z'
    transformations:
      - type: AddFields
        fields:
          - path:
              - updated
            value: >-
              {{ format_datetime(record['attributes']['updated'], '%Y-%m-%dT%H:%M:%S.%f+00:00') }}
    $parameters:
      name: "profiles"
      revision: '2023-02-22'
      cursor_field: updated
      cursor_datetime_formats: '%Y-%m-%dT%H:%M:%S.%f%z'

  email_templates_stream:
    $ref: "#/definitions/base_stream"
    primary_key: "id"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/legacy_api_requester"
        path: "email-templates"
        request_parameters: {}
        request_headers: {}
    $parameters:
      name: "email_templates"

# Streams
streams:
  - "#/definitions/campaigns_stream"
  - "#/definitions/events_stream"
  - "#/definitions/globalexclusions_stream"
  - "#/definitions/lists_stream"
  - "#/definitions/metrics_stream"
  - "#/definitions/flows_stream"
  - "#/definitions/profiles_stream"
  - "#/definitions/email_templates_stream"

# Check
check:
  type: CheckStream
  stream_names:
    - "metrics"

# Connection Specification
spec:
  documentation_url: https://docs.airbyte.com/integrations/sources/klaviyo
  changelogUrl: "https://docs.airbyte.com/integrations/sources/klaviyo"
  type: Spec
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    required:
      - api_key
      - start_date
    properties:
      api_key:
        type: string
        title: API Key
        description: "Klaviyo API Key. See our <a href=\"https://docs.airbyte.com/integrations/sources/klaviyo\">docs</a> if you need help finding this key."
        airbyte_secret: true
        order: 0
      start_date:
        type: string
        order: 1
        title: start_date
        description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated."
        pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        examples: ["2017-01-25T00:00:00Z"]
        format: date-time
