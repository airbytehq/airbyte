version: 0.47.2
type: DeclarativeSource
definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_klaviyo/schemas/{{ parameters.name }}.json"

  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: [data]

  page_increment_paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: page
    page_size_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: count
    pagination_strategy:
      type: PageIncrement
      start_from_page: 0
      page_size: 500

  cursor_paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: page[cursor]
    pagination_strategy:
      type: CursorPagination
      page_size: 100
      cursor_value: '{{ response.get("links", {}).get("next", {}) }}'
      stop_condition: '{{ not response.get("links", {}).get("next", {}) }}'

  cursor_with_page_size_paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: page[cursor]
    page_size_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: page[size]
    pagination_strategy:
      type: CursorPagination
      page_size: '{{ parameters.page_size }}'
      cursor_value: '{{ response.get("links", {}).get("next", {}) }}'
      stop_condition: '{{ not response.get("links", {}).get("next", {}) }}'
  
  requester:
    type: HttpRequester
    url_base: https://a.klaviyo.com/api/
    path: "{{ parameters.path }}"
    http_method: GET
    authenticator:
      type: ApiKeyAuthenticator
      api_token: '{{ config.api_key }}'
      inject_into:
        type: RequestOption
        field_name: Authorization
        inject_into: header
    request_body_json: {}

  base_retriever:
    type: SimpleRetriever
    record_selector:
      $ref: "#/definitions/selector"

  campaigns_stream:
    type: DeclarativeStream
    name: Campaigns
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          sort: '{{ config[''sort''] }}'
          filter: '{{ config[''filter''] }}'
          include: '{{ config[''include''] }}'
          fields[tag]: '{{ config[''fields_tag_''] }}'
          fields[campaign]: '{{ config[''fields_campaign_''] }}'
          fields[campaign-message]: '{{ config[''fields_campaign_message_''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "campaigns"
      path: "campaigns/"

  events_stream:
    type: DeclarativeStream
    name: Events
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields[event]: '{{ config[''fields_event_''] }}'
          fields[metric]: '{{ config[''fields_metric_''] }}'
          fields[profile]: '{{ config[''fields_profile_''] }}'
          filter: '{{ config[''filter''] }}'
          include: '{{ config[''include''] }}'
          sort: '{{ config[''sort''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "events"
      path: "events"

  globalexclusions_stream:
    type: DeclarativeStream
    name: GlobalExclusions
    primary_key:
      - email
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/page_increment_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          reason: '{{ config[''reason''] }}'
          sort: '{{ config[''sort_order''] }}'
          api_key: '{{ config[''api_key''] }}'
        request_headers: {}
    $parameters:
      name: "global_exclusions"
      path: "v1/people/exclusions"

  lists_stream:
    type: DeclarativeStream
    name: Lists
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields[list]: '{{ config[''fields_list_''] }}'
          fields[tag]: '{{ config[''fields_tag_''] }}'
          filter: '{{ config[''filter''] }}'
          include: '{{ config[''include''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "lists"
      path: "lists/"

  metrics_stream:
    type: DeclarativeStream
    name: Metrics
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields[metric]: '{{ config[''fields_metric_''] }}'
          filter: '{{ config[''filter''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "metrics"
      path: "metrics/"

  flows_stream:
    type: DeclarativeStream
    name: Flows
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_with_page_size_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields[flow-action]: '{{ config[''fields_flow_action_''] }}'
          fields[flow]: '{{ config[''fields_flow_''] }}'
          fields[tag]: '{{ config[''fields_tag_''] }}'
          filter: '{{ config[''filter''] }}'
          include: '{{ config[''include''] }}'
          sort: '{{ config[''sort''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "flows"
      path: "flows/"
      page_size: 50

  profiles_stream:
    type: DeclarativeStream
    name: Profiles
    primary_key:
      - id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_retriever"
      paginator:
        $ref: "#/definitions/cursor_with_page_size_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          additional-fields[profile]: '{{ config[''additional_fields_profile_''] }}'
          fields[profile]: '{{ config[''fields_profile_''] }}'
          filter: '{{ config[''filter''] }}'
          sort: '{{ config[''sort''] }}'
        request_headers:
          revision: '{{ config[''revision''] }}'
    $parameters:
      name: "profiles"
      path: "profiles/"
      page_size: 20

# Streams
streams:
  - "#/definitions/campaigns_stream"
  - "#/definitions/events_stream"
  - "#/definitions/globalexclusions_stream"
  - "#/definitions/lists_stream"
  - "#/definitions/metrics_stream"
  - "#/definitions/flows_stream"
  - "#/definitions/profiles_stream"

# Check
check:
  type: CheckStream
  stream_names:
    - Campaigns

# Connection Specification
spec:
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    required:
      - api_key
      - filter
      - revision
    properties:
      api_key:
        type: string
        title: API Key
        airbyte_secret: true
        order: 0

      fields_campaign_:
        type: array
        order: 1
        title: fields[campaign]

      fields_campaign_message_:
        type: array
        order: 2
        title: fields[campaign-message]

      fields_event_:
        title: fields[event]
        type: array
        order: 3

      fields_metric_:
        title: fields[metric]
        type: array
        order: 4

      fields_profile_:
        title: fields[profile]
        type: array
        order: 5

      fields_tag_:
        type: array
        order: 6
        title: fields[tag]

      filter:
        type: string
        order: 7
        title: filter

      include:
        type: array
        order: 8
        title: include

      reason:
        title: reason
        type: string
        order: 9

      revision:
        type: string
        order: 10
        title: revision
        default: '2023-07-15'

      sort:
        type: string
        order: 11
        title: sort

      sort_order:
        title: sort order
        description: asc or desc
        default: asc
        type: string
        order: 12

      fields_list_:
        title: fields[list]
        type: array
        order: 13

      fields_flow_:
        title: fields[flow]
        type: array
        order: 14

      fields_flow_action_:
        title: fields[flow-action]
        type: array
        order: 15

      additional_fields_profile_:
        title: additional-fields[profile]
        type: array
        order: 16
        
    additionalProperties: true
  documentation_url: https://example.org
  type: Spec
