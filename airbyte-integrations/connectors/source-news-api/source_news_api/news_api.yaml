version: "0.1.0"

definitions:
  selector:
    extractor:
      field_pointer: ["articles"]
  requester:
    url_base: "https://newsapi.org/v2"
    http_method: "GET"
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['api_key'] }}"
    request_options_provider:
      request_parameters:
        q: "{{ config['search_query'] }}"
        searchIn: "{{ ','.join(config['search_in']) }}"
        sources: "{{ ','.join(config['sources']) }}"
        domains: "{{ ','.join(config['domains']) }}"
        excludeDomains: "{{ ','.join(config['exclude_domains']) }}"
        from: "{{ config['from_date'] }}"
        to: "{{ config['to_date'] }}"
        language: "{{ config['language'] }}"
        sortBy: "{{ config['sort_by'] }}"
        country: "{{ config['country'] if options['use_country'] is defined else None }}"
        category: "{{ config['category'] if options['use_category'] is defined else None }}"
  retriever:
    record_selector:
      $ref: "*ref(definitions.selector)"
    paginator:
      type: DefaultPaginator
      url_base: "*ref(definitions.requester.url_base)"
      page_size_option:
        inject_into: "request_parameter"
        field_name: "pageSize"
      pagination_strategy:
        type: PageIncrement
        page_size: 100
      page_token_option:
        inject_into: "request_parameter"
        field_name: "page"
    requester:
      $ref: "*ref(definitions.requester)"
  base_stream:
    retriever:
      $ref: "*ref(definitions.retriever)"
  everything_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "everything"
      primary_key: "publishedAt"
      path: "/everything"
  top_headlines_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "top_headlines"
      primary_key: "publishedAt"
      path: "/top-headlines"
      use_country: true
      use_category: true

streams:
  - "*ref(definitions.everything_stream)"
  - "*ref(definitions.top_headlines_stream)"

check:
  stream_names:
    - "everything"
    - "top_headlines"
