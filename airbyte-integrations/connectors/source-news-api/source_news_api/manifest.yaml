version: 0.78.1

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - everything
    - top_headlines

definitions:
  streams:
    everything:
      type: DeclarativeStream
      name: everything
      primary_key:
        - publishedAt
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /everything
          http_method: GET
          request_parameters:
            q: "{{ config['search_query'] }}"
            searchIn: "{{ ','.join(config.get('search_in', [])) }}"
            sources: "{{ ','.join(config.get('sources', [])) }}"
            domains: "{{ ','.join(config.get('domains', [])) }}"
            excludeDomains: "{{ ','.join(config.get('exclude_domains', [])) }}"
            from: "{{ config['start_date'] }}"
            to: "{{ config['end_date'] }}"
            language: "{{ config['language'] }}"
            sortBy: "{{ config['sort_by'] }}"
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 426
                    error_message_contains: requested too many results
                    error_message: >-
                      Number of requests exceeded. Please upgrade your plan to
                      get more number of requests per sync.
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - articles
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: page
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: pageSize
          pagination_strategy:
            type: PageIncrement
            page_size: 100
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/everything"
    top_headlines:
      type: DeclarativeStream
      name: top_headlines
      primary_key:
        - publishedAt
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /top-headlines
          http_method: GET
          request_parameters:
            q: "{{ config['search_query'] }}"
            searchIn: "{{ ','.join(config.get('search_in', [])) }}"
            sources: "{{ ','.join(config.get('sources', [])) }}"
            domains: "{{ ','.join(config.get('domains', [])) }}"
            excludeDomains: "{{ ','.join(config.get('exclude_domains', [])) }}"
            from: "{{ config['start_date'] }}"
            to: "{{ config['end_date'] }}"
            language: "{{ config['language'] }}"
            sortBy: "{{ config['sort_by'] }}"
            country: "{{ config['country'] if not config.get('sources') else None }}"
            category: "{{ config['category'] if not config.get('sources') else None }}"
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    http_codes:
                      - 426
                    error_message_contains: requested too many results
                    error_message: >-
                      Number of requests exceeded. Please upgrade your plan to
                      get more number of requests per sync.
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - articles
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: page
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: pageSize
          pagination_strategy:
            type: PageIncrement
            page_size: 100
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/top_headlines"
  base_requester:
    type: HttpRequester
    url_base: https://newsapi.org/v2
    authenticator:
      type: ApiKeyAuthenticator
      api_token: "{{ config['api_key'] }}"
      inject_into:
        type: RequestOption
        field_name: X-Api-Key
        inject_into: header

streams:
  - $ref: "#/definitions/streams/everything"
  - $ref: "#/definitions/streams/top_headlines"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
      - country
      - category
      - sort_by
    properties:
      api_key:
        type: string
        title: API Key
        airbyte_secret: true
        description: API Key
        order: 0
      search_query:
        type: string
        description: |
          Search query. See https://newsapi.org/docs/endpoints/everything for 
          information.
        examples:
          - +bitcoin OR +crypto
          - sunak AND (truss OR johnson)
        order: 1
      search_in:
        type: array
        description: |
          Where to apply search query. Possible values are: title, description,
          content.
        items:
          type: string
          enum:
            - title
            - description
            - content
        order: 2
      sources:
        type: array
        description: |
          Identifiers (maximum 20) for the news sources or blogs you want
          headlines from. Use the `/sources` endpoint to locate these
          programmatically or look at the sources index:
          https://newsapi.com/sources. Will override both country and category.
        items:
          type: string
        order: 3
      domains:
        type: array
        description: |
          A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com,
          engadget.com) to restrict the search to.
        items:
          type: string
        order: 4
      exclude_domains:
        type: array
        description: |
          A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com,
          engadget.com) to remove from the results.
        items:
          type: string
        order: 5
      start_date:
        type: string
        description: |
          A date and optional time for the oldest article allowed. This should
          be in ISO 8601 format.
        examples:
          - "2021-01-01"
          - "2021-01-01T12:00:00"
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2})?$
        order: 6
      end_date:
        type: string
        description: |
          A date and optional time for the newest article allowed. This should
          be in ISO 8601 format.
        examples:
          - "2021-01-01"
          - "2021-01-01T12:00:00"
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2})?$
        order: 7
      language:
        type: string
        description: |
          The 2-letter ISO-639-1 code of the language you want to get headlines
          for. Possible options: ar de en es fr he it nl no pt ru se ud zh.
        enum:
          - ar
          - de
          - en
          - es
          - fr
          - he
          - it
          - nl
          - "no"
          - pt
          - ru
          - se
          - ud
          - zh
        order: 8
      country:
        type: string
        description: |
          The 2-letter ISO 3166-1 code of the country you want to get headlines
          for. You can't mix this with the sources parameter.
        enum:
          - ae
          - ar
          - at
          - au
          - be
          - bg
          - br
          - ca
          - ch
          - cn
          - co
          - cu
          - cz
          - de
          - eg
          - fr
          - gb
          - gr
          - hk
          - hu
          - id
          - ie
          - il
          - in
          - it
          - jp
          - kr
          - lt
          - lv
          - ma
          - mx
          - my
          - ng
          - nl
          - "no"
          - nz
          - ph
          - pl
          - pt
          - ro
          - rs
          - ru
          - sa
          - se
          - sg
          - si
          - sk
          - th
          - tr
          - tw
          - ua
          - us
          - ve
          - za
        default: us
        order: 9
      category:
        type: string
        description: The category you want to get top headlines for.
        enum:
          - business
          - entertainment
          - general
          - health
          - science
          - sports
          - technology
        default: business
        order: 10
      sort_by:
        type: string
        description: |
          The order to sort the articles in. Possible options: relevancy,
          popularity, publishedAt.
        enum:
          - relevancy
          - popularity
          - publishedAt
        default: publishedAt
        order: 11
    additionalProperties: true

metadata:
  autoImportSchema:
    everything: false
    top_headlines: false

schemas:
  everything:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      author:
        type:
          - "null"
          - string
      publishedAt:
        type:
          - "null"
          - string
        format: date-time
      source:
        type: object
        properties:
          Id:
            type:
              - "null"
              - string
          Name:
            type:
              - "null"
              - string
      title:
        type:
          - "null"
          - string
      url:
        type:
          - "null"
          - string
  top_headlines:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      author:
        type:
          - "null"
          - string
      publishedAt:
        type:
          - "null"
          - string
        format: date-time
      source:
        type: object
        properties:
          Id:
            type:
              - "null"
              - string
          Name:
            type:
              - "null"
              - string
      title:
        type:
          - "null"
          - string
      url:
        type:
          - "null"
          - string
