{
  "documentationUrl": "https://docs.airbyte.io/integrations/sources/file",

  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "File Source Spec",
    "type": "object",
    "additionalProperties": false,
    "required": ["filename", "format", "url", "provider"],
    "properties": {
      "filename": {
        "type": "string",
        "description": "Name of the final table where to replicate this file (should include only letters, numbers dash and underscores)"
      },
      "format": {
        "type": "string",
        "enum": [
          "csv",
          "json",
          "html",
          "excel",
          "feather",
          "parquet",
          "orc",
          "pickle"
        ],
        "default": "csv",
        "description": "File Format of the file to be replicated."
      },
      "reader_options": {
        "type": "string",
        "description": "Parsers for File Formats are currently using the `read_*` methods from the Pandas Library. Each of these readers provides additional options that can be specified as part of this JSON string. As an example, it is possible to change the read_csv behavior to a TSV (tab separated instead of comma) when redefining the delimiter character. See documentation of each `read_*` primitive from here: https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html",
        "examples": ["{}", "{'sep': ' '}"]
      },
      "url": {
        "type": "string",
        "description": "URL path to access the file to be replicated"
      },
      "provider": {
        "type": "object",
        "description": "Storage Provider or Location of the file(s) to be replicated.",
        "default": "Public Web",
        "oneOf": [
          {
            "title": "Public Web",
            "required": ["storage"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["HTTPS"],
                "default": "HTTPS"
              }
            }
          },
          {
            "title": "Google Cloud Storage",
            "required": ["storage", "reader_impl"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["GCS"],
                "default": "GCS"
              },
              "service_account_json": {
                "type": "string",
                "description": "In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described here: https://cloud.google.com/iam/docs/service-accounts Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary."
              },
              "reader_impl": {
                "type": "string",
                "enum": ["smart_open", "gcsfs"],
                "default": "gcsfs",
                "description": "This connector provides multiple methods to retrieve data from GCS using either smart-open python libraries or GCSFS"
              }
            }
          },
          {
            "title": "Amazon Web Services",
            "required": ["storage", "reader_impl"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["S3"],
                "default": "S3"
              },
              "aws_access_key_id": {
                "type": "string",
                "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary."
              },
              "aws_secret_access_key": {
                "type": "string",
                "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary."
              },
              "reader_impl": {
                "type": "string",
                "enum": ["smart_open", "s3fs"],
                "default": "s3fs",
                "description": "This connector provides multiple methods to retrieve data from AWS S3 using either smart-open python libraries or S3FS"
              }
            }
          },
          {
            "title": "Secure Shell",
            "required": ["storage", "user", "host"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["SSH"],
                "default": "SSH"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              }
            }
          },
          {
            "title": "Secure File Transfer Protocol",
            "required": ["storage", "user", "host"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["SFTP"],
                "default": "SFTP"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              }
            }
          },
          {
            "title": "WebHDFS",
            "required": ["storage", "host", "port"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["WebHDFS"],
                "default": "WebHDFS"
              },
              "host": {
                "type": "string"
              },
              "port": {
                "type": "number"
              }
            }
          },
          {
            "title": "Local Filesystem",
            "description": "(Note that local storage of directory where csv files will be read must start with the local mount \"/local\" at the moment until we implement more advanced mounting options)",
            "required": ["storage"],
            "properties": {
              "storage": {
                "type": "string",
                "enum": ["local"],
                "default": "local"
              }
            }
          }
        ]
      }
    }
  }
}
