plugins {
    id 'application'
    id 'airbyte-docker'
    id 'airbyte-integration-test-java'
}

application {
    mainClass = 'io.airbyte.integrations.destination.snowflake.SnowflakeDestinationRunner'
// enable when profiling
    applicationDefaultJvmArgs = [
            '-XX:+ExitOnOutOfMemoryError',
            '-XX:MaxRAMPercentage=75.0',
//            '-Xmx2000m',
//            '-XX:NativeMemoryTracking=detail',
//            "-Djava.rmi.server.hostname=localhost",
//            '-Dcom.sun.management.jmxremote=true',
//            '-Dcom.sun.management.jmxremote.port=6000',
//            "-Dcom.sun.management.jmxremote.rmi.port=6000",
//            '-Dcom.sun.management.jmxremote.local.only=false',
//            '-Dcom.sun.management.jmxremote.authenticate=false',
//            '-Dcom.sun.management.jmxremote.ssl=false',
//            '-agentpath:/usr/local/YourKit-JavaProfiler-2021.3/bin/linux-x86-64/libyjpagent.so=port=10001,listen=all'
    ]

}

configurations.all {
    resolutionStrategy {
        force libs.fasterxml, libs.jsonsmart, 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.15.1'
//                'org.apache.sshd:sshd-core:2.10.0', 'org.apache.sshd:sshd-mina:2.10.0', 'org.apache.sshd:sshd-common:2.10.0',
//                'com.fasterxml.jackson:jackson-bom:2.15.1', 'com.fasterxml.jackson.core:jackson-databind:2.15.1',
//                'com.fasterxml.jackson.core:jackson-core:2.15.1', 'io.netty:netty-all:4.1.92.Final'
        force libs.log4j.core, libs.log4j.api, libs.log4j.impl, libs.log4j.web
    }
}


dependencies {
    implementation(libs.appender.log4j2.get()) {
        exclude group: 'org.elasticsearch.client', module: 'elasticsearch-rest-high-level-client'
        // https://nvd.nist.gov/vuln/detail/CVE-2022-23305
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-s3'
    }

    implementation(libs.aws.java.sdk.s3.get()) {
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-cbor'
    }


    implementation 'com.google.cloud:google-cloud-storage:2.22.2'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.17.0'
  // Updating to any newer version (e.g. 3.13.22) is causing a regression with normalization. 
  // See: https://github.com/airbytehq/airbyte/actions/runs/3078146312
    implementation 'net.snowflake:snowflake-jdbc:3.13.30'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'com.github.alexmojaki:s3-stream-upload:2.2.4'
    implementation "io.aesy:datasize:1.0.0"
    implementation 'com.zaxxer:HikariCP:5.0.1'

    implementation project(':airbyte-config-oss:config-models-oss')
    implementation project(':airbyte-db:db-lib')
    implementation project(':airbyte-integrations:bases:base-java')
    implementation project(':airbyte-integrations:bases:bases-destination-jdbc')
//    implementation project(':airbyte-integrations:connectors:destination-gcs')
    implementation project(':airbyte-integrations:bases:base-java-s3')
    implementation libs.airbyte.protocol

//    this is a configuration to make mockito work with final classes
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    integrationTestJavaImplementation project(':airbyte-connector-test-harnesses:acceptance-test-harness')
    integrationTestJavaImplementation project(':airbyte-integrations:bases:standard-destination-test')
    integrationTestJavaImplementation project(':airbyte-integrations:connectors:destination-snowflake')
    integrationTestJavaImplementation 'org.apache.commons:commons-lang3:3.11'

    implementation files(project(':airbyte-integrations:bases:base-java').airbyteDocker.outputs)
    integrationTestJavaImplementation files(project(':airbyte-integrations:bases:base-normalization').airbyteDocker.outputs)
}
