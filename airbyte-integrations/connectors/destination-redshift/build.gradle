plugins {
    id 'application'
    id 'airbyte-docker'
    id 'airbyte-integration-test-java'
}

application {
    mainClass = 'io.airbyte.integrations.destination.redshift.RedshiftDestination'
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

repositories {
    maven {
        url "https://s3.amazonaws.com/redshift-maven-repository/release"
    }
}

dependencies {
    implementation project(':airbyte-db:db-lib')
    implementation project(':airbyte-integrations:bases:base-java')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-integrations:bases:bases-destination-jdbc')
    implementation project(':airbyte-integrations:bases:base-java-s3')
    implementation files(project(':airbyte-integrations:bases:base-java').airbyteDocker.outputs)

    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.978'
    implementation 'com.amazon.redshift:redshift-jdbc42-no-awssdk:1.2.51.1078' // use the no-sdk library to avoid aws classpath conflicts
    implementation 'org.apache.commons:commons-csv:1.4'
    implementation 'com.github.alexmojaki:s3-stream-upload:2.2.2'

    testImplementation project(':airbyte-test-utils')

    testImplementation 'org.apache.commons:commons-text:1.10.0'
    testImplementation 'org.apache.commons:commons-lang3:3.11'
    testImplementation 'org.apache.commons:commons-dbcp2:2.7.0'
    testImplementation "org.mockito:mockito-inline:4.1.0"
    testImplementation project(":airbyte-json-validation")

    integrationTestJavaImplementation project(':airbyte-integrations:bases:standard-destination-test')
    integrationTestJavaImplementation project(':airbyte-integrations:connectors:destination-redshift')
    integrationTestJavaImplementation files(project(':airbyte-integrations:bases:base-normalization').airbyteDocker.outputs)
}

tasks.named("airbyteDocker") {
    // this is really inefficent (because base-normalization:airbyteDocker builds 9 docker images)
    // but it's also just simple to implement.
    // this also goes away once airbyte-ci becomes a reality.
    dependsOn project(':airbyte-integrations:bases:base-normalization').airbyteDockerRedshift
}
