// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	"initializeCommand": ".devcontainer/user_settings.sh",
	"mounts": [
		"source=${localEnv:HOME}/.config/gcloud,target=/.config/gcloud,type=bind,consistency=cached",
		"source=ark-bashhistory,target=/commandhistory,type=volume",
		"source=ark-tenant,target=/tenant,type=volume",
	],


	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	//"remoteUser": "vscode",
	"settings": {
		"files.trimTrailingWhitespace": true,
		"restoreTerminals.artificialDelayMilliseconds": 2000,
		"restoreTerminals.terminals": [
				{
					"splitTerminals": [
						{
							"name": "Terminal",
							"commands": ["git status"],
							"shouldRunCommands": true
						}
					]
				}
		],
		"terminal.integrated.defaultProfile.linux": "bash",
		"terminal.integrated.profiles.linux": {
			"bash": {
				"path": "/bin/bash"
			},
		},
		"python.pythonPath": "/usr/local/bin/python",
		"python.languageServer": "Pylance",
	},
	"extensions": [
		"ms-azuretools.vscode-docker",
		"innoverio.vscode-dbt-power-user",
		"dorzey.vscode-sqlfluff",
		"eamodio.gitlens",
		"redhat.vscode-yaml",
		"samuelcolvin.jinjahtml",
		"visualstudioexptteam.vscodeintellicode",
		"emeraldwalk.RunOnSave",
		"jjuanramos.dbt-bigquery-preview",
		"ethansk.restore-terminals",
		"shd101wyy.markdown-preview-enhanced",
		"bierner.markdown-mermaid",
		"hnw.vscode-auto-open-markdown-preview"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
