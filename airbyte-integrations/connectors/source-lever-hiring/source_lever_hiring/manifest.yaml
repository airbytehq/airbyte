version: 0.65.0
type: DeclarativeSource

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_lever_hiring/schemas/{{ parameters['name'] }}.json"

  oauth_authenticator:
    type: OAuthAuthenticator
    client_id: '{{ config[''credentials''][''client_id''] }}'
    client_secret: '{{ config[''credentials''][''client_secret''] }}'
    refresh_token: '{{ config[''credentials''][''refresh_token''] }}'
    refresh_request_body: { }
    token_refresh_endpoint: '{{ ''https://sandbox-lever.auth0.com/oauth/token'' if config[ ''environment'' ] == ''Sandbox'' else ''https://auth.lever.co/oauth/token'' }}'
    grant_type: refresh_token

  basic_authenticator:
    type: BasicHttpAuthenticator
    username: "{{ config[''credentials''][''api_key''] }}"
    password: ""

  selective_authenticator:
    type: SelectiveAuthenticator
    authenticator_selection_path: [ "credentials", "auth_type" ]
    authenticators:
      Client: "#/definitions/oauth_authenticator"
      Api_Key: "#/definitions/basic_authenticator"

  record_selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
        - data

  requester:
    type: HttpRequester
    url_base: >-
      {{ "https://api.sandbox.lever.co/v1" if config['environment'] ==
      "Sandbox" else "https://api.lever.co/v1" }}
    http_method: GET
    request_headers: { }
    request_body_json: { }
    authenticator:
      $ref: "#/definitions/selective_authenticator"

  paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: offset
    page_size_option:
      inject_into: request_parameter
      field_name: limit
      type: RequestOption
    pagination_strategy:
      type: CursorPagination
      page_size: 50
      cursor_value: '{{ response[''next''] }}'
      stop_condition: '{{ response[''hasNext''] is false }}'

  opportunities_stream:
    type: DeclarativeStream
    $parameters:
      name: "opportunities"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities
        request_parameters:
          include: followers
          confidentiality: all
      paginator:
        $ref: "#/definitions/paginator"
      partition_router: [ ]
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: updatedAt
      cursor_datetime_formats:
        - '%s.%f'
      datetime_format: '%s.%f'
      start_datetime:
        type: MinMaxDatetime
        datetime: '{{ config[''start_date''] }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'
      start_time_option:
        inject_into: request_parameter
        field_name: updated_at_start
        type: RequestOption
      end_datetime:
        type: MinMaxDatetime
        datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
        datetime_format: '%Y-%m-%dT%H:%M:%SZ'

check:
  type: CheckStream
  stream_names:
    - users

streams:
  - name: opportunities
    $ref: "#/definitions/opportunities_stream"

  - type: DeclarativeStream
    name: users
    $parameters:
      name: "users"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /users
        http_method: GET
        request_parameters:
          includeDeactivated: '{{ True }}'
      paginator:
        $ref: "#/definitions/paginator"
      partition_router: [ ]

  - type: DeclarativeStream
    name: applications
    $parameters:
      name: "applications"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities/{{ stream_partition['parent_id'] }}/applications
        http_method: GET
        request_parameters: { }
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: parent_id
              stream:
                name: opportunities
                $ref: "#/definitions/opportunities_stream"

  - type: DeclarativeStream
    name: interviews
    $parameters:
      name: "interviews"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities/{{ stream_partition['parent_id'] }}/interviews
        http_method: GET
        request_parameters: { }
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: parent_id
              stream:
                name: opportunities
                $ref: "#/definitions/opportunities_stream"

  - type: DeclarativeStream
    name: notes
    $parameters:
      name: "notes"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities/{{ stream_partition['parent_id'] }}/notes
        http_method: GET
        request_parameters: { }
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: parent_id
              stream:
                name: opportunities
                $ref: "#/definitions/opportunities_stream"

  - type: DeclarativeStream
    name: offers
    $parameters:
      name: "offers"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities/{{ stream_partition['parent_id'] }}/offers
        http_method: GET
        request_parameters: { }
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: parent_id
              stream:
                name: opportunities
                $ref: "#/definitions/opportunities_stream"

  - type: DeclarativeStream
    name: referrals
    $parameters:
      name: "referrals"
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      record_selector:
        $ref: "#/definitions/record_selector"
      requester:
        $ref: "#/definitions/requester"
        path: /opportunities/{{ stream_partition['parent_id'] }}/referrals
        http_method: GET
        request_parameters: { }
      paginator:
        type: DefaultPaginator
        page_token_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: offset
        page_size_option:
          inject_into: request_parameter
          field_name: limit
          type: RequestOption
        pagination_strategy:
          type: CursorPagination
          page_size: 50
          cursor_value: '{{ response[''next''] }}'
          stop_condition: '{{ response[''hasNext''] is false }}'
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: parent_id
              stream:
                name: opportunities
                $ref: "#/definitions/opportunities_stream"

spec:
  connectionSpecification:
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    required:
      - start_date
    properties:
      start_date:
        type: string
        title: Start Date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        order: 0
        description: >-
          UTC date and time in the format 2017-01-25T00:00:00Z. Any data before
          this date will not be replicated. Note that it will be used only in
          the following incremental streams: comments, commits, and issues.
        examples:
          - '2021-03-01T00:00:00Z'
      environment:
        order: 1
        type: string
        title: Environment
        description: >-
          The environment in which you'd like to replicate data for Lever. This is
          used to determine which Lever API endpoint to use.
        default: Sandbox
        enum:
          - Production
          - Sandbox
      credentials:
        order: 3
        title: Authentication Mechanism
        description: Choose how to authenticate to Lever Hiring.
        type: object
        oneOf:
        - type: object
          title: Authenticate via Lever (OAuth)
          required:
            - refresh_token
          properties:
            auth_type:
              type: string
              const: Client
              order: 0
            client_id:
              title: Client ID
              type: string
              description: The Client ID of your Lever Hiring developer application.
            client_secret:
              title: Client Secret
              type: string
              description: The Client Secret of your Lever Hiring developer application.
              airbyte_secret: true
            refresh_token:
              type: string
              title: Refresh Token
              description: The token for obtaining new access token.
              airbyte_secret: true
        - type: object
          title: Authenticate via Lever (Api Key)
          required:
            - api_key
          properties:
            auth_type:
              type: string
              const: ApiKey
              order: 0
            api_key:
              title: Api key
              type: string
              description: The Api Key of your Lever Hiring account.
              airbyte_secret: true
              order: 1
  additionalProperties: true
  type: Spec
metadata:
  autoImportSchema:
    opportunities: false
    users: false
    applications: false
    interviews: false
    notes: false
    offers: false
    referrals: false
