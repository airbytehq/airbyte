"""An edge connecting aBOM items in a hierarchy."""
type ABomEdge {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  childAbomItemId: Int!
  parentAbomItemId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  childAbomItem(filters: ABomItemsInputFilters): ABomItem
  parentAbomItem(filters: ABomItemsInputFilters): ABomItem

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: ABomEdgeEventFilter): [Timeline]
}

input ABomEdgeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  childAbomItemId: IDFilter
  parentAbomItemId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ABomEdgeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ABomEdge
  newValues: ABomEdge
}

type ABomEdgesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ABomEdgesEdge]!
}

"""A Relay edge containing a `ABomEdges` and its cursor."""
type ABomEdgesEdge {
  """The item at the end of the edge"""
  node: ABomEdge

  """A cursor for use in pagination"""
  cursor: String!
}

input ABomEdgesInputFilters {
  or_: [ABomEdgesInputFilters]
  and_: [ABomEdgesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  childAbomItemId: IDFilter
  parentAbomItemId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  childAbomItem: ABomItemsInputFilters
  parentAbomItem: ABomItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum ABomEdgeSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  CHILD_ABOM_ITEM_ID_ASC
  CHILD_ABOM_ITEM_ID_DESC
  PARENT_ABOM_ITEM_ID_ASC
  PARENT_ABOM_ITEM_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""An item in an ABOM."""
type ABomItem {
  _created: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  partInventoryId: Int
  partId: Int
  originMbomItemId: Int

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int
  _updated: DateTime
  expectedQuantityPer: Float
  expectedFixedQuantity: Float
  quantity: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!
  expectedQuantity: Float

  """
  Get one of possibly many aBOM item parents, to get all parents please use the
  parents or parentEdges field. This field is now deprecated.
  """
  parent: ABomItem @deprecated(reason: "aBOM items can now have multiple parents.")

  """
  Get ID of first aBOM item parent, to get all parents please use the parents field. This field is now deprecated.
  """
  parentId: Int @deprecated(reason: "aBOM items can now have multiple parents.")
  acceptablePartIds: [Int]
  part: Part
  prettyStr: String
  allChildren: [ABomItem]
  allParents: [ABomItem]
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  Part(filters: PartsInputFilters): Part
  parentEdges(filters: ABomEdgesInputFilters, sort: [ABomEdgeSortEnum], before: String, after: String, first: Int, last: Int): ABomEdgesConnection
  childEdges(filters: ABomEdgesInputFilters, sort: [ABomEdgeSortEnum], before: String, after: String, first: Int, last: Int): ABomEdgesConnection
  originMbomItem(filters: MBomItemsInputFilters): MBomItem
  children: [ABomItem]
  parents: [ABomItem]
  referenceDesignator: ABomItemReferenceDesignator

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _AllChildrenCount: Int
  _AllParentsCount: Int
  _ParentEdgesCount: Int
  _ChildEdgesCount: Int
  timeline(filters: ABomItemEventFilter): [Timeline]
}

input ABomItemEventFilter {
  Created: DateTimeFilter
  id: IDFilter
  partInventoryId: IDFilter
  partId: IDFilter
  originMbomItemId: IDFilter
  updatedById: IDFilter
  Updated: DateTimeFilter
  expectedQuantityPer: FloatFilter
  expectedFixedQuantity: FloatFilter
  quantity: FloatFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ABomItemEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ABomItem
  newValues: ABomItem
}

"""An ABOM Item Reference Designator."""
type ABomItemReferenceDesignator {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  abomItemId: Int!
  originMbomReferenceDesignatorId: Int
  value: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  abomItem(filters: ABomItemsInputFilters): ABomItem
  originMbomReferenceDesignator(filters: MBomItemReferenceDesignatorsInputFilters): MBomItemReferenceDesignator

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: ABomItemReferenceDesignatorEventFilter): [Timeline]
}

input ABomItemReferenceDesignatorEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  abomItemId: IDFilter
  originMbomReferenceDesignatorId: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ABomItemReferenceDesignatorEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ABomItemReferenceDesignator
  newValues: ABomItemReferenceDesignator
}

input ABomItemReferenceDesignatorsInputFilters {
  or_: [ABomItemReferenceDesignatorsInputFilters]
  and_: [ABomItemReferenceDesignatorsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  abomItemId: IDFilter
  originMbomReferenceDesignatorId: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  abomItem: ABomItemsInputFilters
  originMbomReferenceDesignator: MBomItemReferenceDesignatorsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

type ABomItemsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ABomItemsEdge]!
}

"""A Relay edge containing a `ABomItems` and its cursor."""
type ABomItemsEdge {
  """The item at the end of the edge"""
  node: ABomItem

  """A cursor for use in pagination"""
  cursor: String!
}

input ABomItemsInputFilters {
  or_: [ABomItemsInputFilters]
  and_: [ABomItemsInputFilters]
  _created: DateTimeFilter
  id: IDFilter
  partInventoryId: IDFilter
  partId: IDFilter
  originMbomItemId: IDFilter
  updatedById: IDFilter
  _updated: DateTimeFilter
  expectedQuantityPer: FloatFilter
  expectedFixedQuantity: FloatFilter
  quantity: FloatFilter
  createdById: IDFilter
  expectedQuantity: FloatFilter
  parentId: IntFilter
  partInventory: PartInventoriesInputFilters
  Part: PartsInputFilters
  parentEdges: ABomEdgesInputFilters
  childEdges: ABomEdgesInputFilters
  originMbomItem: MBomItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  allParents: ABomItemsInputFilters
  allChildren: ABomItemsInputFilters
}

enum ABomItemSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  ORIGIN_MBOM_ITEM_ID_ASC
  ORIGIN_MBOM_ITEM_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  EXPECTED_QUANTITY_PER_ASC
  EXPECTED_QUANTITY_PER_DESC
  EXPECTED_FIXED_QUANTITY_ASC
  EXPECTED_FIXED_QUANTITY_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
}

"""Mutation to add an header to webhook receiver."""
type AddHeaderToWebhookReceiver {
  webhookReceiver: WebhookReceiver
}

type AddInputToPlan {
  planInput: PlanInput
}

input AddInputToPlanInput {
  planId: ID!
  partId: ID!
  dueDate: DateTime!
  quantity: Int!
  completedQuantity: Int
}

"""Add multiple inventories to receipt."""
type AddInventoriesToReceipt {
  receipt: Receipt
}

"""Mutation to add an inventory item to a purchase order line."""
type AddInventoryToPurchaseOrderLine {
  purchaseOrderLine: PurchaseOrderLine
}

"""Add a quantity of inventory to receipt."""
type AddInventoryToReceipt {
  receipt: Receipt
}

"""Input object for adding a quantity of inventory to receipt."""
input AddInventoryToReceiptInput {
  etag: String!
  receiptId: Int!
  partInventoryId: Int!
  purchaseOrderLineId: Int
  quantity: Float!
  lotNumber: String
  serialNumber: String
  locationId: Int
  autogenerateSerialNumber: Boolean
  autogenerateLotNumber: Boolean
}

"""Add multiple items to receipt."""
type AddItemsToReceipt {
  receipt: Receipt
}

"""Input object for adding a quantity of inventory to receipt."""
input AddItemToReceiptInput {
  etag: String!
  receiptId: Int!
  partInventoryId: Int
  purchaseOrderLineId: Int
  quantity: Float!
  lotNumber: String
  serialNumber: String
  locationId: Int
  autogenerateSerialNumber: Boolean
  autogenerateLotNumber: Boolean
}

"""Mutation to add a label to an item which has an entity."""
type AddLabelToItem {
  labelId: Int
  entityId: Int
}

"""
Relates a label to a procedure family given a LabelToProcedureFamilyInput item.
"""
type AddLabelToProcedureFamily {
  labelId: Int
  familyId: Int
}

"""Attach a part inventory to a run step."""
type AddPartInventoryToRunStep {
  runStep: RunStep
}

"""Inputs needed attach a part inventory to a run step."""
input AddPartInventoryToRunStepInput {
  partInventoryId: ID!
  runStepId: ID!

  """Etag of the run step."""
  etag: String!
}

"""Add parts to a kit from an mBOM."""
type AddPartsToKitFromMbom {
  partKit: PartKit
}

"""Inputs needed to add parts to a kit from an mBOM."""
input AddPartsToKitFromMbomInput {
  partKitId: Int!
  partId: Int!
  quantity: Float = 1

  """Etag of the part kit."""
  etag: String!
}

"""Add a plan item to a plan."""
type AddPlanItemToPlan {
  plan: Plan
}

"""Mutation to add a requirement to an item which has an entity."""
type AddRequirementToItem {
  requirementId: Int
  entityId: Int
}

"""Add a result to a plan item."""
type AddResultToPlanItem {
  planItem: PlanItem
}

"""Add a part subtype to a part."""
type AddSubtypeToPart {
  part: Part
}

"""Relates a User to a Team given a TeamToUserInput argument."""
type AddUserToTeam {
  userId: Int
  teamId: Int
}

"""
Aggregates field for calling aggregate functions on graphql connection fields.
"""
type AggregatesField {
  sum: SumField!

  """Count of current query."""
  count: Int!
}

"""Connection for APIKeys."""
type APIKeyConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [APIKeyEdge]!
}

"""A Relay edge containing a `APIKey` and its cursor."""
type APIKeyEdge {
  """The item at the end of the edge"""
  node: APIKeyObject

  """A cursor for use in pagination"""
  cursor: String!
}

"""APIKey input."""
input APIKeyInput {
  _etag: String!
  clientId: String!
  enabled: Boolean
  regenerateSecret: Boolean
}

"""Api Key filterable fields."""
input APIKeyInputFilters {
  id: IntFilter
  clientId: StringFilter
  enabled: BooleanFilter
  createdById: IntFilter
  updatedById: IntFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
}

"""APIKey return type."""
type APIKeyObject {
  id: Int!
  _created: DateTime
  _updated: DateTime
  _etag: String
  clientId: String
  clientSecret: String
  enabled: Boolean
  createdById: Int
  updatedById: Int
}

"""Archives a Run given a ArchiveRunInput argument."""
type ArchiveRun {
  run: Run
}

"""Inputs needed to archive a Run."""
input ArchiveRunInput {
  id: ID!
  archived: Boolean!
  etag: String!
}

"""
Attaches a PermissionGroup to a Role given a PermissionGroupToRoleInput argument.
"""
type AttachPermissionGroupToRole {
  role: Role
}

"""Attaches a Role to a Team given a TeamToRoleInput."""
type AttachRoleToTeam {
  teamId: Int
  roleId: Int
}

"""Attaches a Role to a User given a RoleToUserInput argument."""
type AttachRoleToUser {
  userId: Int
  roleId: Int
}

enum attribute_typesattrtypesenum {
  STRING
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATETIME
  FILE_ATTACHMENT
  ION
}

"""Organization settings for extensible attributes."""
type AttributeSettings {
  key: String
  type: attribute_typesattrtypesenum
  options: [String]
  allowedIonType: organizationiontypeentitytypeenum
}

enum Barcodeentitytypeenum {
  LOCATIONS
  PARTS_KITS
  PARTS_INVENTORY
  RUNS
}

input BarcodeentitytypeenumFilter {
  eq: Barcodeentitytypeenum
  neq: Barcodeentitytypeenum
  like: Barcodeentitytypeenum
  ilike: Barcodeentitytypeenum
  notlike: Barcodeentitytypeenum
  notilike: Barcodeentitytypeenum
  in: [Barcodeentitytypeenum]
  gt: Barcodeentitytypeenum
  gte: Barcodeentitytypeenum
  lt: Barcodeentitytypeenum
  lte: Barcodeentitytypeenum
  isnull: Boolean
}

enum Barcodeformatenum {
  ZPL
}

input BarcodeformatenumFilter {
  eq: Barcodeformatenum
  neq: Barcodeformatenum
  like: Barcodeformatenum
  ilike: Barcodeformatenum
  notlike: Barcodeformatenum
  notilike: Barcodeformatenum
  in: [Barcodeformatenum]
  gt: Barcodeformatenum
  gte: Barcodeformatenum
  lt: Barcodeformatenum
  lte: Barcodeformatenum
  isnull: Boolean
}

"""Barcode Label GraphQL object."""
type BarcodeLabel {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  templateId: Int!
  entityId: Int!
  iuid: String!
  labelPreviewId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  deactivated: Boolean
  qrCode: String
  barcode: String
  prettyStr: String
  template(filters: BarcodeTemplatesInputFilters): BarcodeTemplate
  entity: Entity
  labelPreview(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  subject: BarcodeSubject
  _RunCount: Int
  _LocationCount: Int
  _PartInventoryCount: Int
  _PartKitCount: Int
  timeline(filters: BarcodeLabelEventFilter): [Timeline]
}

input BarcodeLabelEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  templateId: IDFilter
  entityId: IDFilter
  iuid: StringFilter
  labelPreviewId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type BarcodeLabelEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: BarcodeLabel
  newValues: BarcodeLabel
}

type BarcodeLabelsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [BarcodeLabelsEdge]!
}

"""A Relay edge containing a `BarcodeLabels` and its cursor."""
type BarcodeLabelsEdge {
  """The item at the end of the edge"""
  node: BarcodeLabel

  """A cursor for use in pagination"""
  cursor: String!
}

input BarcodeLabelsInputFilters {
  or_: [BarcodeLabelsInputFilters]
  and_: [BarcodeLabelsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  templateId: IDFilter
  entityId: IDFilter
  iuid: StringFilter
  labelPreviewId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  template: BarcodeTemplatesInputFilters
  labelPreview: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  location: LocationsInputFilters
  partInventory: PartInventoriesInputFilters
  partKit: PartKitsInputFilters
  run: RunsInputFilters
}

enum BarcodeLabelSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TEMPLATE_ID_ASC
  TEMPLATE_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  IUID_ASC
  IUID_DESC
  LABEL_PREVIEW_ID_ASC
  LABEL_PREVIEW_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Barcode definition GraphQL object."""
type BarcodePattern {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  expression: String!
  entityType: Barcodeentitytypeenum

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: BarcodePatternEventFilter): [Timeline]
}

input BarcodePatternEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  expression: StringFilter
  entityType: BarcodeentitytypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type BarcodePatternEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: BarcodePattern
  newValues: BarcodePattern
}

type BarcodePatternsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [BarcodePatternsEdge]!
}

"""A Relay edge containing a `BarcodePatterns` and its cursor."""
type BarcodePatternsEdge {
  """The item at the end of the edge"""
  node: BarcodePattern

  """A cursor for use in pagination"""
  cursor: String!
}

input BarcodePatternsInputFilters {
  or_: [BarcodePatternsInputFilters]
  and_: [BarcodePatternsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  expression: StringFilter
  entityType: BarcodeentitytypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum BarcodePatternSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  EXPRESSION_ASC
  EXPRESSION_DESC
  ENTITY_TYPE_ASC
  ENTITY_TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Union of GraphQL objects that can be returned from barcode labels."""
union BarcodeSubject = Location | PartKit | PartInventory | Run

"""Barcode Template GraphQL object."""
type BarcodeTemplate {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  heightInches: Float!
  widthInches: Float!
  dpi: Int!
  template: String
  name: String!
  format: Barcodeformatenum!
  entityType: Barcodeentitytypeenum!
  deactivated: Boolean!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  barcodeLabels(filters: BarcodeLabelsInputFilters): [BarcodeLabel]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _BarcodeLabelsCount: Int
  timeline(filters: BarcodeTemplateEventFilter): [Timeline]
}

input BarcodeTemplateEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  heightInches: FloatFilter
  widthInches: FloatFilter
  dpi: IntFilter
  template: StringFilter
  name: StringFilter
  format: BarcodeformatenumFilter
  entityType: BarcodeentitytypeenumFilter
  deactivated: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type BarcodeTemplateEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: BarcodeTemplate
  newValues: BarcodeTemplate
}

"""Allowed field options for barcode templates by object type."""
type BarcodeTemplateFieldOptions {
  options: [String]
  templateEntityType: Barcodeentitytypeenum
}

type BarcodeTemplatesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [BarcodeTemplatesEdge]!
}

"""A Relay edge containing a `BarcodeTemplates` and its cursor."""
type BarcodeTemplatesEdge {
  """The item at the end of the edge"""
  node: BarcodeTemplate

  """A cursor for use in pagination"""
  cursor: String!
}

input BarcodeTemplatesInputFilters {
  or_: [BarcodeTemplatesInputFilters]
  and_: [BarcodeTemplatesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  heightInches: FloatFilter
  widthInches: FloatFilter
  dpi: IntFilter
  template: StringFilter
  name: StringFilter
  format: BarcodeformatenumFilter
  entityType: BarcodeentitytypeenumFilter
  deactivated: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  barcodeLabels: BarcodeLabelsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum BarcodeTemplateSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  HEIGHT_INCHES_ASC
  HEIGHT_INCHES_DESC
  WIDTH_INCHES_ASC
  WIDTH_INCHES_DESC
  DPI_ASC
  DPI_DESC
  TEMPLATE_ASC
  TEMPLATE_DESC
  NAME_ASC
  NAME_DESC
  FORMAT_ASC
  FORMAT_DESC
  ENTITY_TYPE_ASC
  ENTITY_TYPE_DESC
  DEACTIVATED_ASC
  DEACTIVATED_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

input BooleanFilter {
  eq: Boolean
  neq: Boolean
  like: Boolean
  ilike: Boolean
  notlike: Boolean
  notilike: Boolean
  in: [Boolean]
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  isnull: Boolean
}

"""Cancels a Run given a CancelRunInput argument."""
type CancelRun {
  run: Run
}

"""Inputs needed to cancel a Run."""
input CancelRunInput {
  id: ID!
  etag: String!
}

"""Cancels RunStep redlining given an id."""
type CancelRunStepRedline {
  runStep: RunStep
}

"""Graphql object to track changed columns in a Timeline Event."""
type ChangedAttributes {
  field: String
  oldValue: ScalarValue
  newValue: ScalarValue
}

"""Create session event of type check in."""
type CheckIn {
  checkInEvent: SessionEvent
}

"""Create session event of type check out."""
type CheckOut {
  checkOutEvent: SessionEvent
}

"""Clones a Procedure given it's Id."""
type CloneProcedure {
  procedure: Procedure
}

"""A comment related to Runs and RunSteps."""
type Comment {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  content: String
  slateContent: SlateContent
  entityId: Int
  procedureFeedback: Boolean!
  resolved: Boolean!
  runId: Int
  runStepId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  run: Run
  runStep: RunStep
  batched: Boolean
  batchSiblings: String
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  prettyStr: String
  entity: Entity
  Run: Run
  RunStep: RunStep

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  replies: [Comment]
  parent: Comment
  _RunCount: Int
  _RunStepCount: Int
  timeline(filters: CommentEventFilter): [Timeline]
}

input CommentEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  content: StringFilter
  slateContent: SlateContentFilter
  entityId: IDFilter
  procedureFeedback: BooleanFilter
  resolved: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type CommentEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Comment
  newValues: Comment
}

type CommentsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [CommentsEdge]!
}

"""A Relay edge containing a `Comments` and its cursor."""
type CommentsEdge {
  """The item at the end of the edge"""
  node: Comment

  """A cursor for use in pagination"""
  cursor: String!
}

"""Filters related to Comments."""
input CommentsInputFilters {
  run: RunsInputFilters
  runStep: RunStepsInputFilters
  batched: BooleanFilter
  or_: [CommentsInputFilters]
  and_: [CommentsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  content: StringFilter
  slateContent: SlateContentFilter
  entityId: IDFilter
  procedureFeedback: BooleanFilter
  resolved: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  parentId: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum CommentSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  CONTENT_ASC
  CONTENT_DESC
  SLATE_CONTENT_ASC
  SLATE_CONTENT_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PROCEDURE_FEEDBACK_ASC
  PROCEDURE_FEEDBACK_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  RUN_ID_ASC
  RUN_ID_DESC
  RUN_STEP_ID_ASC
  RUN_STEP_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

"""Contact GraphQL object."""
type Contact {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  email: String
  phoneNumber: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  locations(filters: LocationsInputFilters): [Location]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _LocationsCount: Int
  timeline(filters: ContactEventFilter): [Timeline]
}

input ContactEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  email: StringFilter
  phoneNumber: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ContactEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Contact
  newValues: Contact
}

type ContactsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ContactsEdge]!
}

"""A Relay edge containing a `Contacts` and its cursor."""
type ContactsEdge {
  """The item at the end of the edge"""
  node: Contact

  """A cursor for use in pagination"""
  cursor: String!
}

input ContactsInputFilters {
  or_: [ContactsInputFilters]
  and_: [ContactsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  email: StringFilter
  phoneNumber: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  locations: LocationsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum ContactSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  EMAIL_ASC
  EMAIL_DESC
  PHONE_NUMBER_ASC
  PHONE_NUMBER_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Convert Runs and Purchase Order as results of Plan Item."""
type ConvertResultsFromPlanItem {
  planItem: PlanItem
}

"""Input object to convert result objects from a plan item."""
input ConvertResultsFromPlanItemInput {
  etag: String!
  inventoryIds: [Int]
  planItemId: Int!
}

"""Convert Runs and Purchase Order as results of Plan Items."""
type ConvertResultsFromPlanItems {
  planItems: [PlanItem]
}

"""Input object to convert result objects from multiple plan items."""
input ConvertResultsFromPlanItemsInput {
  batchRuns: Boolean = false
  planItems: [ConvertResultsFromPlanItemInput]!
  separatePurchaseOrders: Boolean = false
  autogenerateRunTitles: Boolean = false
}

"""Copies a field to a new step given a CopyFieldInput."""
type CopyField {
  stepField: StepField
}

"""Inputs needed to copy a field to a step."""
input CopyFieldInput {
  fieldId: ID!
  stepId: ID!
}

"""Copies a step given a CopyStandardStepInput."""
type CopyStandardStep {
  step: Step
}

"""Inputs needed to copy a standard step."""
input CopyStandardStepInput {
  stepId: ID!
}

"""Copies a step given a CopyStepInput."""
type CopyStep {
  step: Step
}

"""Inputs needed to copy a step."""
input CopyStepInput {
  stepId: ID!
  procedureId: ID
  parentId: ID
}

"""Copies a procedure step to a run."""
type CopyStepToRun {
  runStep: RunStep
}

"""Inputs needed to copy a step to a run."""
input CopyStepToRunInput {
  """Parent run step id of copied step."""
  parentId: ID

  """Destination run"""
  runId: ID!

  """id of step to copy"""
  stepId: ID!
}

"""Creates a PartInstance in an ABOM given an id."""
type CreateABomForPartInventory {
  abomItem: ABomItem
}

type CreateABomItem {
  abomItem: ABomItem
}

"""Inputs needed to create an ABomItem."""
input CreateABomItemInput {
  partId: ID!
  parentId: ID!
  quantity: Float
  partInventoryId: ID
  expectedQuantityPer: Float
  expectedFixedQuantity: Float
  referenceDesignator: String
}

"""Create an API Credential Set."""
type CreateAPIKey {
  apikey: APIKeyObject
}

"""Creates an Asset given a CreateFileAttachmentInput argument."""
type CreateAsset {
  fileAttachment: FileAttachment
  uploadUrl: String
}

type CreateBarcodeLabel {
  barcodeLabel: BarcodeLabel
}

input CreateBarcodeLabelInput {
  templateId: ID!
  entityId: ID!
  labelPreviewId: ID
}

type CreateBarcodePattern {
  barcodePattern: BarcodePattern
}

input CreateBarcodePatternInput {
  expression: String!
  entityType: Barcodeentitytypeenum!
}

type CreateBarcodeTemplate {
  barcodeTemplate: BarcodeTemplate
}

input CreateBarcodeTemplateInput {
  heightInches: Float
  widthInches: Float
  dpi: Int
  template: String
  name: String!
  format: Barcodeformatenum
  entityType: Barcodeentitytypeenum!
  deactivated: Boolean
}

type CreateComment {
  comment: Comment
}

input CreateCommentInput {
  content: String
  slateContent: SlateContent
  entityId: ID
  procedureFeedback: Boolean
  resolved: Boolean
  parentId: ID
}

type CreateContact {
  contact: Contact
}

input CreateContactInput {
  name: String!
  email: String
  phoneNumber: String
}

type CreateCurrency {
  currency: Currency
}

input CreateCurrencyInput {
  type: String!
}

type CreateDatagridColumn {
  datagridColumn: DatagridColumn
}

input CreateDatagridColumnInput {
  allowedIonType: datagridiontypeentitytypeenum
  header: String
  index: Int
  options: [String]
  runStepId: ID
  stepId: ID
  type: datagrid_typefieldtypes!
  unit: String
  signoffRoleId: ID
  settable: Boolean
}

type CreateDatagridRow {
  datagridRow: DatagridRow
}

input CreateDatagridRowInput {
  allowNotApplicable: Boolean
  index: Int
  required: Boolean
  runStepId: ID
  stepId: ID
}

"""
Creates a FileAttachment given a CreateFileAttachmentInput argument.

Attaching a file has been deprecated, and will not be supported in the future.
This mutation now returns a signed URL which allows the client to upload the file.
"""
type CreateFileAttachment {
  fileAttachment: FileAttachment
  uploadUrl: String
}

"""Inputs needed to create a FileAttachment."""
input CreateFileAttachmentInput {
  """
  In the future, this mutation will not support uploading files. Pass filename
  and use returned link to upload file on client side.
  """
  file: Upload
  filename: String
  integrationId: String
  integrationFetchUrl: String
  entityId: ID
}

"""Inputs to insert part revision format and restrictions."""
input CreateGlobalUniqueSerialNumberSchemeSettingInput {
  id: Int!
  name: String!
  enabled: Boolean = true
  default: Boolean = false
  serialScheme: String!
  exclude: String
  startAt: Int = 1
  etag: String!
}

type CreateIntegration {
  integration: Integration
}

"""Input object for creating an integration."""
input CreateIntegrationInput {
  templateName: Integrationtemplatesenum!
  keycloakClientId: String!
  keycloakClientSecret: String!
  apiHost: String!
  apiVersion: String!
  apiKey: String!
  customConfig: JSONString!
}

type CreateInvite {
  invite: Invite
}

input CreateInviteInput {
  email: String!
  name: String
  message: String
}

type CreateIssue {
  issue: Issue
}

type CreateIssueApproval {
  approval: IssueApproval
}

"""Inputs needed to create issue approval."""
input CreateIssueApprovalInput {
  comment: String
  content: SlateContent
  parentId: ID
  resolved: Boolean
  status: reviewreviewstatusenum
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum!
  issueId: ID!
}

type CreateIssueApprovalRequest {
  approvalRequest: IssueApprovalRequest
}

"""Inputs needed to create issue approval request."""
input CreateIssueApprovalRequestInput {
  assignedTeamId: ID
  assignedToId: ID
  reviewerId: ID
  roleId: ID!
  status: reviewreviewstatusenum
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum!
  issueId: ID!
}

type CreateIssueDispositionType {
  issueDispositionType: IssueDispositionType
}

input CreateIssueDispositionTypeInput {
  title: String!
  active: Boolean!
  description: String
}

type CreateIssueDispositionTypeRole {
  issueDispositionTypeRole: IssueDispositionTypeRole
}

"""Inputs needed to create issue disposition type roles."""
input CreateIssueDispositionTypeRoleInput {
  issueApprovalGateType: Issueapprovalgatetypeenum!
  issueDispositionTypeId: Int!
  roleId: Int!
  count: Int
}

"""Inputs needed to create an Issue."""
input CreateIssueInput {
  attributes: [ExtensibleAttributeInput]
  assignedTeamId: ID
  assignedToId: ID
  causeCondition: SlateContent
  disposition: SlateContent
  expectedCondition: SlateContent
  createIssueForEachBatchSibling: Boolean
  issueDispositionTypeId: Int
  mustCloseByRunStepId: Int
  partInventoryIds: [Int]
  purchaseOrderLineId: Int
  runStepId: ID
  status: Issuestatusenum
  title: String
  fixPartInventoryId: Int
}

type CreateIssuePartInventory {
  issuePartInventory: IssuePartInventory
}

"""Inputs needed to create IssuePartInventory."""
input CreateIssuePartInventoryInput {
  issueId: Int!
  partInventoryId: Int!
}

type CreateIssueRelation {
  issueRelation: IssueRelation
}

input CreateIssueRelationInput {
  originIssueId: ID!
  relatedIssueId: ID!
}

"""Create part kit based on run abom/mbom."""
type CreateKitForRun {
  partKit: PartKit
}

"""Inputs needed to create new part kit based on run."""
input CreateKitForRunInput {
  runId: ID!
}

type CreateLabel {
  label: Label
}

input CreateLabelInput {
  value: String!
}

type CreateLocation {
  location: Location
}

"""Inputs needed to create object."""
input CreateLocationInput {
  address: String
  attributes: [ExtensibleAttributeInput]
  available: Boolean
  archived: Boolean
  description: String
  imageId: Int
  latitude: Float
  locationSubtypeId: Int
  longitude: Float
  name: String!
  parentId: Int
  supervisorId: Int
  type: Locationtypeenum
  contactId: Int
}

type CreateLocationSubtype {
  locationSubtype: LocationSubtype
}

input CreateLocationSubtypeInput {
  name: String!
  description: String
}

type CreateMBom {
  mbom: MBom
}

type CreateMBomApproval {
  approval: MBomApproval
}

"""Inputs needed to create mBOM approval."""
input CreateMBomApprovalInput {
  comment: String
  content: SlateContent
  parentId: ID
  resolved: Boolean
  status: reviewreviewstatusenum
  gateType: Mbomapprovalgatetypeenum!
  mbomId: ID!
}

type CreateMBomApprovalRequest {
  approvalRequest: MBomApprovalRequest
}

"""Inputs needed to create mBOM approval request."""
input CreateMBomApprovalRequestInput {
  assignedTeamId: ID
  assignedToId: ID
  reviewerId: ID
  roleId: ID!
  status: reviewreviewstatusenum
  gateType: Mbomapprovalgatetypeenum!
  mbomId: ID!
}

type CreateMBomApprovalRole {
  approvalRole: MBomApprovalRole
}

"""Input needed to create an approval role."""
input CreateMBomApprovalRoleInput {
  count: Int!
  roleId: ID!
  gateType: Mbomapprovalgatetypeenum!
}

"""Inputs needed to create an mBOM."""
input CreateMBomInput {
  attributes: [ExtensibleAttributeInput]
  partId: ID!

  """
  If true, the new mBOM will copy from a previous version.Should not be used if mbom_id is included.Defaults to true.
  """
  copyMbom: Boolean

  """
  mBOM to copy from, if supplied. mBOM to copy must be an mBOM for the same partId.
  """
  mbomId: ID
}

type CreateMBomItem {
  mbomItem: MBomItem
}

"""Inputs needed to create an mBOM Item."""
input CreateMBomItemInput {
  madeOnAssembly: Boolean
  mbomId: ID
  parentId: ID
  partId: ID!
  quantity: Float!
}

type CreateMBomItemReferenceDesignator {
  mbomItemReferenceDesignator: MBomItemReferenceDesignator
}

input CreateMBomItemReferenceDesignatorInput {
  mbomItemId: ID!
  value: String
}

type CreateMBomSubstitute {
  mbomSubstitute: MBomSubstitute
}

"""Inputs needed to substitute an mBOM item."""
input CreateMBomSubstituteInput {
  mbomItemId: ID!
  partId: ID!
  parentId: ID
}

"""Creates mBOM substitutes given a list of CreateMBomSubstituteInputs."""
type CreateMBomSubstitutes {
  mbomSubstitutes: [MBomSubstitute]
}

type CreateMRPJob {
  mrpJob: MRPJob
}

input CreateMRPJobInput {
  startTime: DateTime
  endTime: DateTime
}

"""Creates multiple mBOM items given a list of CreateMBomItemInputs."""
type CreateMultipleMBomItems {
  mbomItems: [MBomItem]
}

"""Input to create multiple MBom items."""
input CreateMultipleMBomItemsInput {
  mbomItems: [CreateMBomItemInput]
}

"""Create GlobalUniqueSerialNumber in organization settings."""
type CreateOrganizationGlobalUniqueSerialNumberScheme {
  organization: Organization
}

"""Create part revision format in organization settings."""
type CreateOrganizationPartRevisionScheme {
  organization: Organization
}

"""Create or update multiple parts from an import."""
type CreateOrUpdateMultipleParts {
  parts: [Part]
}

"""Input to create or update multiple parts."""
input CreateOrUpdateMultiplePartsInput {
  parts: [CreatePartInput]
}

"""Create a part."""
type CreatePart {
  part: Part
}

"""Input to create a part."""
input CreatePartInput {
  partNumber: String!
  description: String
  supplierPartNumber: String
  thumbnailId: ID
  trackingType: Trackingtypeenum
  revision: String
  cost: Float
  exportControlled: Boolean
  attributes: [ExtensibleAttributeInput]
  revisionScheme: String
  leadTime: Int
  unitOfMeasureId: Int
  sourcingStrategy: Sourcingstrategyenum
  partType: Parttypeenum
  maintenanceIntervalSeconds: Int
}

"""Create part inventories given a list of CreatePartInventoryInput."""
type CreatePartInventories {
  partInventories: [PartInventory]
}

type CreatePartInventory {
  partInventory: PartInventory
}

"""Inputs needed to create a PartInventory."""
input CreatePartInventoryInput {
  attributes: [ExtensibleAttributeInput]
  autogenerateLotNumber: Boolean
  autogenerateSerialType: SerialGeneratorType

  """
  In the future, this input will not support a boolean
  'autogenerate_serial_type'. Use autogenerate_serial_type field with
  SerialGeneratorType.REVISIONS
  """
  autogenerateSerialNumber: Boolean
  cost: Decimal
  estimatedArrival: DateTime
  lastMaintainedDate: DateTime
  locationId: ID
  lotNumber: String
  needDate: DateTime
  partId: ID!
  quantity: Float
  quantityScrapped: Float
  serialNumber: String
  supplierId: ID
  unitOfMeasureId: ID
  uri: String
}

type CreatePartKit {
  partKit: PartKit
}

"""Inputs needed to create object."""
input CreatePartKitInput {
  assignedTeamId: Int
  assignedToId: Int
  attributes: [ExtensibleAttributeInput]
  locationId: Int
  deliveryLocationId: Int
  runId: Int
  status: Partkitstatusenum
}

type CreatePartKitItem {
  partKitItem: PartKitItem
}

"""Inputs needed to create object."""
input CreatePartKitItemInput {
  attributes: [ExtensibleAttributeInput]
  originMbomItemId: Int
  partId: Int
  partKitId: Int
  quantity: Float
}

type CreatePartProcedure {
  partProcedure: PartProcedure
}

input CreatePartProcedureInput {
  partId: ID!
  procedureId: ID!
  required: Boolean
}

"""Create a revision for a part."""
type CreatePartRevision {
  part: Part
}

"""Inputs to create a new revision for a part."""
input CreatePartRevisionInput {
  id: ID!
  etag: String!
  description: String
  thumbnailId: ID
  supplierPartNumber: String
  revisionScheme: String
  trackingType: Trackingtypeenum
}

"""Inputs to insert part revision format and restrictions."""
input CreatePartRevisionSchemeSettingInput {
  name: String!
  allowOverflow: Boolean = false
  default: Boolean = false
  format: [String]!
  id: ID!
  etag: String!
}

type CreatePartSubtype {
  partSubtype: PartSubtype
}

input CreatePartSubtypeInput {
  name: String!
  description: String
}

type CreatePlan {
  plan: Plan
}

input CreatePlanInput {
  description: String
  includeInMrp: Boolean
  name: String!
}

type CreatePlanItem {
  planItem: PlanItem
}

type CreatePlanItemAllocation {
  planItemAllocation: PlanItemAllocation
}

input CreatePlanItemAllocationInput {
  childPlanItemId: ID!
  parentPlanItemId: ID!
  mrpJobId: ID
  quantity: Float!
}

input CreatePlanItemInput {
  assignedToId: ID
  endTime: DateTime
  explode: Boolean
  forecastedEndTime: DateTime
  forecastedStartTime: DateTime
  mrpJobId: ID
  name: String!
  partId: ID
  procedureId: ID
  quantity: Float
  startTime: DateTime
  supplierId: ID
}

type CreatePlanReservation {
  planReservation: PlanReservation
}

input CreatePlanReservationInput {
  partInventoryId: ID
  planId: ID
  quantity: Float!
}

"""Creates a new Procedure."""
type CreateProcedure {
  procedure: Procedure
}

"""Inputs required to create a Procedure Attribute."""
input CreateProcedureInput {
  title: String
  type: Proceduretypeenum
  description: String
  exportControlled: Boolean
  attributes: [ExtensibleAttributeInput]
}

"""
Create a new version of a Procedure given a familyId.

(optionally) Create a new version of a Procedure within
the family by specifying its familyId and procedureId.
"""
type CreateProcedureVersion {
  procedure: Procedure
}

type CreatePurchaseOrder {
  purchaseOrder: PurchaseOrder
}

type CreatePurchaseOrderApproval {
  approval: PurchaseOrderApproval
}

input CreatePurchaseOrderApprovalInput {
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  purchaseOrderId: ID!
  parentId: ID
}

type CreatePurchaseOrderApprovalRequest {
  approvalRequest: PurchaseOrderApprovalRequest
}

input CreatePurchaseOrderApprovalRequestInput {
  status: reviewreviewstatusenum
  purchaseOrderId: ID!
  reviewerId: ID!
}

type CreatePurchaseOrderFee {
  purchaseOrderFee: PurchaseOrderFee
}

input CreatePurchaseOrderFeeInput {
  purchaseOrderId: ID!
  name: String!
  value: Float!
  type: Feetypeenum
}

"""Inputs needed to create object."""
input CreatePurchaseOrderInput {
  assignedToId: Int
  attributes: [ExtensibleAttributeInput]
  billToLocationId: Int
  cost: Float
  currencyId: Int
  description: String
  orderedAt: DateTime
  paid: Boolean
  shipToLocationId: Int
  supplierId: Int
  supplierInstructions: SlateContent
  status: Purchaseorderstatusenum
}

type CreatePurchaseOrderLine {
  purchaseOrderLine: PurchaseOrderLine
}

"""Inputs needed to create object."""
input CreatePurchaseOrderLineInput {
  attributes: [ExtensibleAttributeInput]
  cost: Float
  description: String
  estimatedArrivalDate: DateTime
  needDate: DateTime
  paid: Boolean
  partId: Int
  position: Int
  purchaseOrderId: Int!
  quantity: Float
}

type CreateReceipt {
  receipt: Receipt
}

"""Custom inputs to create receipt."""
input CreateReceiptInput {
  attributes: [ExtensibleAttributeInput]
  receivedAt: DateTime
  receivedById: Int
}

type CreateRedlineApproval {
  approval: RedlineApproval
}

input CreateRedlineApprovalInput {
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  redlineId: ID!
  parentId: ID
}

type CreateRedlineApprovalRequest {
  approvalRequest: RedlineApprovalRequest
}

input CreateRedlineApprovalRequestInput {
  status: reviewreviewstatusenum
  redlineId: ID!
  reviewerId: ID!
}

type CreateRequirement {
  requirement: Requirement
}

input CreateRequirementInput {
  referenceName: String
  title: String!
  content: SlateContent!
  requirementType: Requirementtypeenum!
}

type CreateReview {
  review: Review
}

input CreateReviewInput {
  status: reviewreviewstatusenum
  procedureId: ID
  comment: String
  content: SlateContent
  resolved: Boolean
  stepId: ID
  parentId: ID
}

"""Creates a ReviewRequest given a ReviewRequestInput argument."""
type CreateReviewRequest {
  reviewRequest: ReviewRequest
}

type CreateRole {
  role: Role
}

input CreateRoleInput {
  name: String!
}

type CreateRule {
  rule: Rule
}

"""Inputs needed to create a rule."""
input CreateRuleInput {
  title: String
  version: Int = 1
  enabled: Boolean
  target: RuleTargetEnum
  eventType: RuleEventType
  ruleType: RuleType
  code: String
  context: String
  errorState: RuleErrorState
}

type CreateRun {
  run: Run
}

type CreateRunBatch {
  runBatch: RunBatch
}

input CreateRunBatchInput {
  title: String
}

"""Inputs needed to create a Run."""
input CreateRunInput {
  addToNewBatch: Boolean
  assignedTeamId: ID
  assignedToId: ID
  attributes: [ExtensibleAttributeInput]
  autogenerateTitle: Boolean
  description: String
  dueDate: DateTime
  exportControlled: Boolean
  partId: ID
  partInventoryId: ID
  procedureId: ID
  quantity: Int
  runBatchId: Int
  runBatchTitle: String
  title: String
}

"""Creates Runs given a list of CreateRunInput argument."""
type CreateRuns {
  runs: [Run]
}

"""Creates a RunStep given a CreateRunStepInput argument."""
type CreateRunStep {
  step: RunStep
}

type CreateRunStepEdge {
  stepEdge: RunStepsEdge
}

type CreateRunStepField {
  runStepField: RunStepField
}

input CreateRunStepFieldInput {
  allowNotApplicable: Boolean
  allowedIonType: runstepfieldiontypeentitytypeenum
  display: String
  helpText: String
  name: String!
  options: [String]
  peerReviewRequired: Boolean
  position: Int
  required: Boolean
  type: runstepfieldfieldtypes!
  unit: String
  originFieldId: ID
  runStepId: ID!
  assignedToId: ID
  assignedTeamId: ID
  partSubtypeId: ID
  partId: ID
  signoffRoleId: ID
  partInventoryId: ID
  fileAttachmentId: ID
  value: ScalarValue
}

type CreateRunStepFieldValidation {
  runStepFieldValidation: RunStepFieldValidation
}

input CreateRunStepFieldValidationInput {
  position: Int
  value: Float
  runStepFieldId: ID!
  functionId: ID!
}

"""Inputs needed to create a RunStep."""
input CreateRunStepInput {
  runId: ID!
  assignedTeamId: Int
  assignedToId: Int
  attributes: [ExtensibleAttributeInput]
  content: String
  datagrid: DataGridInput
  locationId: ID
  parentId: ID

  """
  This field is not supported for setting a run step's "position". Use
  ReorderRunSteps to change the "position" of a run step.
  """
  position: Int
  slateContent: SlateContent
  title: String!
  type: runstepsteptypes
}

"""Create a new version of a Standard Step given a family_id."""
type CreateStandardStepVersion {
  step: Step
}

"""Inputs needed to create a standard step version."""
input CreateStandardStepVersionInput {
  familyId: Int!
}

"""Creates a step given a CreateStepInput."""
type CreateStep {
  step: Step
}

type CreateStepApproval {
  approval: StepApproval
}

input CreateStepApprovalInput {
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  stepId: ID!
  parentId: ID
}

type CreateStepApprovalRequest {
  approvalRequest: StepApprovalRequest
}

input CreateStepApprovalRequestInput {
  status: reviewreviewstatusenum
  stepId: ID!
  reviewerId: ID!
}

type CreateStepEdge {
  stepEdge: StepsEdge
}

input CreateStepEdgeInput {
  stepId: ID!
  upstreamStepId: ID
}

"""Creates a StepField given a CreateStepFieldInput."""
type CreateStepField {
  stepField: StepField
}

"""Inputs needed to create a StepField."""
input CreateStepFieldInput {
  allowNotApplicable: Boolean
  allowedIonType: stepfieldiontypeentitytypeenum
  display: String
  helpText: String
  name: String!
  options: [String]
  partId: Int
  partSubtypeId: Int
  peerReviewRequired: Boolean
  required: Boolean
  signoffRoleId: Int
  stepId: ID!
  type: Fieldtypes
  unit: String
}

type CreateStepFieldValidation {
  stepFieldValidation: StepFieldValidation
}

input CreateStepFieldValidationInput {
  position: Int
  value: Float
  fieldId: ID!
  functionId: ID!
}

"""Inputs needed to create a StepField."""
input CreateStepInput {
  """
  This field is not supported for setting a step's "position". Use ReorderSteps to change the "position" of a step.
  """
  position: Int
  content: String
  slateContent: SlateContent
  datagrid: DataGridInput
  title: String!
  procedureId: ID
  parentId: ID
  locationId: ID
  locationSubtypeId: ID
  leadTime: Int
  type: Steptypes
  attributes: [ExtensibleAttributeInput]
}

type CreateStepMBomItemAssociation {
  stepMbomItemAssociation: StepMBomItemAssociation
}

input CreateStepMBomItemAssociationInput {
  mbomItemId: ID!
  mbomItemReferenceDesignatorId: ID
  quantity: Float!
  stepId: ID!
}

type CreateSupplier {
  supplier: Supplier
}

"""Inputs needed to create object."""
input CreateSupplierInput {
  address: String
  attributes: [ExtensibleAttributeInput]
  contactName: String
  description: String
  email: String
  name: String!
  phoneNumber: String
}

type CreateTeam {
  team: Team
}

input CreateTeamInput {
  name: String!
  supervisorId: ID
}

type CreateUnitOfMeasurement {
  unitOfMeasurement: UnitOfMeasurement
}

input CreateUnitOfMeasurementInput {
  type: String!
}

"""Subscribe to updates to an entity."""
type CreateUserSubscription {
  userSubscription: UserSubscription
}

"""Create user subscription input."""
input CreateUserSubscriptionInput {
  entityId: ID!
  userId: ID!
}

type CreateWebhookHeader {
  webhookHeader: WebhookHeader
}

input CreateWebhookHeaderInput {
  key: String!
  value: String!
}

type CreateWebhookReceiver {
  webhookReceiver: WebhookReceiver
}

input CreateWebhookReceiverInput {
  name: String!
  description: String
  webhookUri: String!
  sharedSecret: String
  contentType: Webhookcontenttypesenum
  expectedResponseCode: Int
  active: Boolean
}

type CreateWebhookSubscription {
  webhookSubscription: WebhookSubscription
}

input CreateWebhookSubscriptionInput {
  resource: ResourceEnum!
  action: WebhookSubscriptionActions!
  receiverId: ID
  active: Boolean
}

type CurrenciesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [CurrenciesEdge]!
}

"""A Relay edge containing a `Currencies` and its cursor."""
type CurrenciesEdge {
  """The item at the end of the edge"""
  node: Currency

  """A cursor for use in pagination"""
  cursor: String!
}

input CurrenciesInputFilters {
  or_: [CurrenciesInputFilters]
  and_: [CurrenciesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  type: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""Currency GraphQL object from SQLAlchemy model class."""
type Currency {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  type: String!

  """
  
          User id of creator related to Enum.
  
          Returns: int of id
          
  """
  createdById: Int

  """
  
          User id of updater related to Enum.
  
          Returns: int of id
          
  """
  updatedById: Int
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: CurrencyEventFilter): [Timeline]
}

input CurrencyEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  type: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type CurrencyEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Currency
  newValues: Currency
}

enum CurrencySortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TYPE_ASC
  TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Datagrid with column info in metadata and grid rows in data."""
type DataGrid {
  columns: [DataGridColumnInfo]
  rows: [DataGridRowInfo]
}

enum datagrid_typefieldtypes {
  STRING
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATETIME
  FILE_ATTACHMENT
  ION
  SIGNOFF
  TOOL
}

input datagrid_typefieldtypesFilter {
  eq: datagrid_typefieldtypes
  neq: datagrid_typefieldtypes
  like: datagrid_typefieldtypes
  ilike: datagrid_typefieldtypes
  notlike: datagrid_typefieldtypes
  notilike: datagrid_typefieldtypes
  in: [datagrid_typefieldtypes]
  gt: datagrid_typefieldtypes
  gte: datagrid_typefieldtypes
  lt: datagrid_typefieldtypes
  lte: datagrid_typefieldtypes
  isnull: Boolean
}

"""Graphene sqlalchemy object type for datagrid column model."""
type DatagridColumn {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  allowedIonType: datagridiontypeentitytypeenum
  header: String
  id: Int!
  index: Int!
  options: [String]
  runStepId: Int
  stepId: Int
  type: datagrid_typefieldtypes
  unit: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  signoffRoleId: Int
  readOnly: Boolean
  settable: Boolean
  parent: String
  editable: Boolean
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  batched: String
  batchSiblings: String
  prettyStr: String
  runStep(filters: RunStepsInputFilters): RunStep
  step(filters: StepsFilters): Step
  values(filters: DatagridValuesInputFilters): [DatagridValue]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User

  """
  Get Role for signoff.
  
          Returns: relationship object
  """
  signoffRole(filters: RolesInputFilters): Role
  _ValuesCount: Int
  timeline(filters: DatagridColumnEventFilter): [Timeline]
}

input DatagridColumnEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  allowedIonType: datagridiontypeentitytypeenumFilter
  header: StringFilter
  id: IDFilter
  index: IntFilter
  runStepId: IDFilter
  stepId: IDFilter
  type: datagrid_typefieldtypesFilter
  unit: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  signoffRoleId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type DatagridColumnEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: DatagridColumn
  newValues: DatagridColumn
}

"""Column info in a datagrid."""
type DataGridColumnInfo {
  id: ID
  prevId: ID
  editable: Boolean
  header: String
  signoffRoleId: Int
  unit: String
  options: [String]
  type: DataGridTypeValidationsEnum
}

"""Input to create/update/delete column in a datagrid."""
input DataGridColumnInfoInput {
  id: ID
  prevId: ID
  editable: Boolean
  header: String
  signoffRoleId: Int
  unit: String
  options: [String]
  type: DataGridTypeValidationsEnum
  allowedIonType: datagridiontypeentitytypeenum
}

type DatagridColumnsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [DatagridColumnsEdge]!
}

"""A Relay edge containing a `DatagridColumns` and its cursor."""
type DatagridColumnsEdge {
  """The item at the end of the edge"""
  node: DatagridColumn

  """A cursor for use in pagination"""
  cursor: String!
}

input DatagridColumnsInputFilters {
  or_: [DatagridColumnsInputFilters]
  and_: [DatagridColumnsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  allowedIonType: datagridiontypeentitytypeenumFilter
  header: StringFilter
  id: IDFilter
  index: IntFilter
  runStepId: IDFilter
  stepId: IDFilter
  type: datagrid_typefieldtypesFilter
  unit: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  signoffRoleId: IDFilter
  settable: BooleanFilter
  editable: BooleanFilter
  runStep: RunStepsInputFilters
  step: StepsFilters
  values: DatagridValuesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  signoffRole: RolesInputFilters
}

enum DatagridColumnSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _SETTABLE_ASC
  _SETTABLE_DESC
  ALLOWED_ION_TYPE_ASC
  ALLOWED_ION_TYPE_DESC
  HEADER_ASC
  HEADER_DESC
  ID_ASC
  ID_DESC
  INDEX_ASC
  INDEX_DESC
  OPTIONS_ASC
  OPTIONS_DESC
  RUN_STEP_ID_ASC
  RUN_STEP_ID_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  TYPE_ASC
  TYPE_DESC
  UNIT_ASC
  UNIT_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  SIGNOFF_ROLE_ID_ASC
  SIGNOFF_ROLE_ID_DESC
}

"""
Datagrid input type with column info in metadata and grid rows in data.
"""
input DataGridInput {
  columns: [DataGridColumnInfoInput]
  rows: [DataGridRowInfoInput]
}

enum datagridiontypeentitytypeenum {
  PARTS
  USERS
}

input datagridiontypeentitytypeenumFilter {
  eq: datagridiontypeentitytypeenum
  neq: datagridiontypeentitytypeenum
  like: datagridiontypeentitytypeenum
  ilike: datagridiontypeentitytypeenum
  notlike: datagridiontypeentitytypeenum
  notilike: datagridiontypeentitytypeenum
  in: [datagridiontypeentitytypeenum]
  gt: datagridiontypeentitytypeenum
  gte: datagridiontypeentitytypeenum
  lt: datagridiontypeentitytypeenum
  lte: datagridiontypeentitytypeenum
  isnull: Boolean
}

"""Input for an operation on a datagrid."""
input DataGridOperationInput {
  op: DataGridOperations
  column: DataGridColumnInfoInput
  row: DataGridRowInfoInput
}

"""Enum for operations on a datagrid."""
enum DataGridOperations {
  ADD_ROW
  UPDATE_ROW
  DELETE_ROW
  ADD_COLUMN
  UPDATE_COLUMN
  DELETE_COLUMN
  REORDER_COLUMN
  REORDER_ROW
}

"""List of operation inputs to effect a datagrid."""
input DataGridOperationsInput {
  operations: [DataGridOperationInput]!
  id: ID!
  etag: String!
}

"""Graphene sqlalchemy object type for datagrid row model."""
type DatagridRow {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  allowNotApplicable: Boolean!
  id: Int!
  index: Int!
  required: Boolean!
  runStepId: Int
  stepId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  complete: Boolean
  parent: String
  editable: Boolean
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  batched: String
  batchSiblings: String
  prettyStr: String
  runStep(filters: RunStepsInputFilters): RunStep
  step(filters: StepsFilters): Step
  values(filters: DatagridValuesInputFilters): [DatagridValue]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _ValuesCount: Int
  timeline(filters: DatagridRowEventFilter): [Timeline]
}

"""Mapping of column id to column value for a particular row."""
scalar DataGridRow

input DatagridRowEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  allowNotApplicable: BooleanFilter
  id: IDFilter
  index: IntFilter
  required: BooleanFilter
  runStepId: IDFilter
  stepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type DatagridRowEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: DatagridRow
  newValues: DatagridRow
}

"""Column info in a datagrid."""
type DataGridRowInfo {
  id: ID
  prevId: ID
  data: DataGridRow
}

"""Input to create/update/delete column in a datagrid."""
input DataGridRowInfoInput {
  id: ID
  prevId: ID
  data: DataGridRow
}

type DatagridRowsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [DatagridRowsEdge]!
}

"""A Relay edge containing a `DatagridRows` and its cursor."""
type DatagridRowsEdge {
  """The item at the end of the edge"""
  node: DatagridRow

  """A cursor for use in pagination"""
  cursor: String!
}

input DatagridRowsInputFilters {
  or_: [DatagridRowsInputFilters]
  and_: [DatagridRowsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  allowNotApplicable: BooleanFilter
  id: IDFilter
  index: IntFilter
  required: BooleanFilter
  runStepId: IDFilter
  stepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  complete: BooleanFilter
  editable: BooleanFilter
  runStep: RunStepsInputFilters
  step: StepsFilters
  values: DatagridValuesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum DatagridRowSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ALLOW_NOT_APPLICABLE_ASC
  ALLOW_NOT_APPLICABLE_DESC
  ID_ASC
  ID_DESC
  INDEX_ASC
  INDEX_DESC
  REQUIRED_ASC
  REQUIRED_DESC
  RUN_STEP_ID_ASC
  RUN_STEP_ID_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

enum DataGridTypeValidationsEnum {
  NUMBER
  STRING
  BOOLEAN
  DATETIME
  SELECT
  MULTISELECT
  SIGNOFF
  ARRAY
  MAP
}

"""Graphene sqlalchemy object type for datagrid value model."""
type DatagridValue {
  id: String
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  notApplicable: Boolean!
  rowId: Int!
  columnId: Int!
  type: datagrid_typefieldtypes

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return part inventory foreign key relation."""
  partInventoryId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int
  batched: String
  batchSiblings: String
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  assignees: [User]
  prettyStr: String
  value: ScalarValue
  ionValue: IonType
  row(filters: DatagridRowsInputFilters): DatagridRow
  column(filters: DatagridColumnsInputFilters): DatagridColumn

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User

  """Return part inventory relationship."""
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment
  _AssigneesCount: Int
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: DatagridValueEventFilter): [Timeline]
}

input DatagridValueEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  notApplicable: BooleanFilter
  rowId: IDFilter
  columnId: IDFilter
  type: datagrid_typefieldtypesFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type DatagridValueEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: DatagridValue
  newValues: DatagridValue
}

type DatagridValuesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [DatagridValuesEdge]!
}

"""A Relay edge containing a `DatagridValues` and its cursor."""
type DatagridValuesEdge {
  """The item at the end of the edge"""
  node: DatagridValue

  """A cursor for use in pagination"""
  cursor: String!
}

"""Additional filterable fields."""
input DatagridValuesInputFilters {
  assignees: UserInputFilters
  ionValue: IonTypeFilterInput
  or_: [DatagridValuesInputFilters]
  and_: [DatagridValuesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  notApplicable: BooleanFilter
  rowId: IDFilter
  columnId: IDFilter
  type: datagrid_typefieldtypesFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  value: ScalarValueFilter
  row: DatagridRowsInputFilters
  column: DatagridColumnsInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  partInventory: PartInventoriesInputFilters
  fileAttachment: FileAttachmentsInputFilters
}

enum DatagridValueSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _STRING_VALUE_ASC
  _STRING_VALUE_DESC
  _NUMBER_VALUE_ASC
  _NUMBER_VALUE_DESC
  _DATETIME_VALUE_ASC
  _DATETIME_VALUE_DESC
  _BOOLEAN_VALUE_ASC
  _BOOLEAN_VALUE_DESC
  _SELECT_VALUE_ASC
  _SELECT_VALUE_DESC
  _MULTISELECT_VALUES_ASC
  _MULTISELECT_VALUES_DESC
  NOT_APPLICABLE_ASC
  NOT_APPLICABLE_DESC
  ROW_ID_ASC
  ROW_ID_DESC
  COLUMN_ID_ASC
  COLUMN_ID_DESC
  TYPE_ASC
  TYPE_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  FILE_ATTACHMENT_ID_ASC
  FILE_ATTACHMENT_ID_DESC
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input DateTimeFilter {
  eq: DateTime
  neq: DateTime
  like: DateTime
  ilike: DateTime
  notlike: DateTime
  notilike: DateTime
  in: [DateTime]
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  isnull: Boolean
}

"""The `Decimal` scalar type represents a python Decimal."""
scalar Decimal

type DeleteABomItem {
  id: Int
}

"""Delete an API Credential Set."""
type DeleteAPIKey {
  apikey: APIKeyObject
}

"""Delete an asset."""
type DeleteAsset {
  fileAttachmentId: Int
  entityId: Int
}

"""Input to delete part attributes from organization settings."""
input DeleteAttributeSettingsInput {
  key: String!
  id: ID!
  etag: String!
}

type DeleteBarcodePattern {
  id: Int
}

type DeleteComment {
  id: Int
}

type DeleteContact {
  id: Int
}

type DeleteCurrency {
  id: Int
}

type DeleteDatagridColumn {
  id: Int
}

type DeleteDatagridRow {
  id: Int
}

"""Delete a FileAttachment."""
type DeleteFileAttachment {
  fileAttachmentId: Int
  entityId: Int
}

"""Inputs needed to delete a FileAttachment."""
input DeleteFileAttachmentInput {
  fileAttachmentId: ID!
  entityId: ID!
}

"""Input to delete part revision from organization settings."""
input DeleteGlobalUniqueSerialNumberSchemeSettingInput {
  id: Int!
  name: String!
  deleteType: DeleteType
  etag: String!
}

type DeleteIntegration {
  id: Int
}

type DeleteIssueApprovalRequest {
  id: Int
}

type DeleteIssueDispositionType {
  id: Int
}

"""Deletes an Issue Disposition Type Role given an input object."""
type DeleteIssueDispositionTypeRole {
  issueDispositionTypeRole: IssueDispositionTypeRole
}

"""Input needed to delete issue disposition type roles."""
input DeleteIssueDispositionTypeRoleInput {
  etag: String!
  issueDispositionTypeId: Int!
  issueApprovalGateType: Issueapprovalgatetypeenum!
  roleId: Int!
}

"""Deletes an Issue Part Inventory given an input object."""
type DeleteIssuePartInventory {
  issuePartInventory: IssuePartInventory
}

"""Input needed to delete IssuePartInventory."""
input DeleteIssuePartInventoryInput {
  etag: String!
  issueId: Int!
  partInventoryId: Int!
}

type DeleteIssueRelation {
  originIssueId: Int
  relatedIssueId: Int
}

type DeleteLabel {
  id: Int
}

type DeleteLocation {
  id: Int
}

type DeleteLocationSubtype {
  id: Int
}

type DeleteMBom {
  id: Int
}

type DeleteMBomApprovalRequest {
  id: Int
}

"""Delete an MBomApprovalRole given an input object."""
type DeleteMBomApprovalRole {
  approvalRole: MBomApprovalRole
}

"""Input needed to delete mBOM approval roles."""
input DeleteMBomApprovalRoleInput {
  etag: String!
  gateType: Mbomapprovalgatetypeenum!
  roleId: Int!
}

type DeleteMBomItem {
  id: Int
}

type DeleteMBomItemReferenceDesignator {
  id: Int
}

type DeleteMBomSubstitute {
  id: Int
}

"""Delete GlobalUniqueSerialNumber in organization settings."""
type DeleteOrganizationGlobalUniqueSerialNumberScheme {
  organization: Organization
}

"""Delete issue attribute from organization settings."""
type DeleteOrganizationIssueAttributes {
  organization: Organization
}

"""Delete location attribute from organization settings."""
type DeleteOrganizationLocationAttributes {
  organization: Organization
}

"""Delete mbom attribute from organization settings."""
type DeleteOrganizationMbomAttributes {
  organization: Organization
}

"""Delete a part attribute from organization settings."""
type DeleteOrganizationPartAttributes {
  organization: Organization
}

"""Delete a part inventory attribute from organization settings."""
type DeleteOrganizationPartInventoryAttributes {
  organization: Organization
}

"""Delete a part kit attribute from organization settings."""
type DeleteOrganizationPartKitAttributes {
  organization: Organization
}

"""Delete a part kit item attribute from organization settings."""
type DeleteOrganizationPartKitItemAttributes {
  organization: Organization
}

"""Delete part revision format in organization settings."""
type DeleteOrganizationPartRevisionScheme {
  organization: Organization
}

"""Delete Procedure attribute from organization settings."""
type DeleteOrganizationProcedureAttributes {
  organization: Organization
}

"""Delete purchase order attribute from organization settings."""
type DeleteOrganizationPurchaseOrderAttributes {
  organization: Organization
}

"""Delete purchase order line attribute from organization settings."""
type DeleteOrganizationPurchaseOrderLineAttributes {
  organization: Organization
}

"""Delete a receipt attribute from organization settings."""
type DeleteOrganizationReceiptAttributes {
  organization: Organization
}

"""Delete a run attribute from organization settings."""
type DeleteOrganizationRunAttributes {
  organization: Organization
}

"""Delete RunStep attribute from organization settings."""
type DeleteOrganizationRunStepAttributes {
  organization: Organization
}

"""Delete Step attribute from organization settings."""
type DeleteOrganizationStepAttributes {
  organization: Organization
}

"""Delete supplier attribute from organization settings."""
type DeleteOrganizationSupplierAttributes {
  organization: Organization
}

type DeletePart {
  id: Int
}

type DeletePartInventory {
  id: Int
}

type DeletePartKit {
  id: Int
}

type DeletePartKitItem {
  id: Int
}

type DeletePartProcedure {
  partId: Int
  procedureId: Int
}

"""Input to delete part revision from organization settings."""
input DeletePartRevisionSchemeSettingInput {
  name: String!
  id: ID!
  etag: String!
}

type DeletePartSubtype {
  id: Int
}

type DeletePlan {
  id: Int
}

type DeletePlanItem {
  id: Int
}

type DeletePlanItemAllocation {
  childPlanItemId: Int
  parentPlanItemId: Int
}

type DeletePlanReservation {
  id: Int
}

"""Delete an unused procedure in draft."""
type DeleteProcedure {
  id: Int
}

"""Deletes a PurchaseOrder given an id."""
type DeletePurchaseOrder {
  id: Int
}

type DeletePurchaseOrderApprovalRequest {
  id: Int
}

type DeletePurchaseOrderFee {
  id: Int
}

type DeletePurchaseOrderLine {
  id: Int
}

type DeleteReceipt {
  id: Int
}

type DeleteRedlineApprovalRequest {
  id: Int
}

type DeleteRequirement {
  id: Int
}

type DeleteReviewRequest {
  id: Int
}

"""Deletes a role given an id."""
type DeleteRole {
  id: Int
}

type DeleteRule {
  id: Int
}

type DeleteRunStep {
  id: Int
}

type DeleteRunStepEdge {
  id: Int
}

type DeleteRunStepField {
  id: Int
}

type DeleteRunStepFieldValidation {
  id: Int
}

"""Deletes a step by Id."""
type DeleteStep {
  id: Int
}

type DeleteStepApprovalRequest {
  id: Int
}

type DeleteStepEdge {
  id: Int
}

"""Deletes a StepField given an id."""
type DeleteStepField {
  id: Int
}

type DeleteStepFieldValidation {
  id: Int
}

type DeleteStepMBomItemAssociation {
  id: Int
}

type DeleteSupplier {
  id: Int
}

"""Deletes a team given an id."""
type DeleteTeam {
  id: Int
}

"""For multiple types of delete, typically hard/soft."""
enum DeleteType {
  HARD
  SOFT
}

type DeleteUnitOfMeasurement {
  id: Int
}

type DeleteUserSubscription {
  id: Int
}

type DeleteWebhookHeader {
  id: Int
}

type DeleteWebhookReceiver {
  id: Int
}

type DeleteWebhookSubscription {
  id: Int
}

"""Detaches a Permission Group from a Role."""
type DetachPermissionGroupFromRole {
  role: Role
}

"""Detaches a Role from a Team given a TeamToRoleInput argument."""
type DetachRoleFromTeam {
  teamId: Int
  roleId: Int
}

"""Detaches a Role from a User."""
type DetachRoleFromUser {
  userId: Int
  roleId: Int
}

"""Sends a notification to a particular user."""
type DispatchNotification {
  response: MessageResponse
}

"""Dispatch notification input."""
input DispatchNotificationInput {
  userId: ID!
  notificationType: DispatchNotificationType!
  title: String!
  description: String!
  linkText: String!
  path: String!
  payload: JSONString
}

"""Dispatchable notification types."""
enum DispatchNotificationType {
  SIGNOFF
}

"""Embedded analytics object."""
type EmbeddedAnalytics {
  url: String
}

"""Entity relationship type."""
type Entity {
  id: Float!
  type: Entitytypeenum!
  assets(filters: FileAttachmentsInputFilters): [FileAttachment]
  barcodeLabels(filters: BarcodeLabelsInputFilters): [BarcodeLabel]
  comments(filters: CommentsInputFilters): [Comment]
  fileAttachments(filters: FileAttachmentsInputFilters): [FileAttachment]
  labels(filters: LabelsInputFilters): [Label]
  locations(filters: LocationsInputFilters): [Location]
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  partKits(filters: PartKitsInputFilters): [PartKit]
  planItems(filters: PlanItemsInputFilters): [PlanItem]
  requirements(filters: RequirementsInputFilters): [Requirement]
  reviewRequest(filters: ReviewRequestsInputFilters): [ReviewRequest]
  subscriptions(filters: UserSubscriptionsInputFilters): [UserSubscription]
  _AssetsCount: Int
  _BarcodeLabelsCount: Int
  _CommentsCount: Int
  _FileAttachmentsCount: Int
  _LabelsCount: Int
  _LocationsCount: Int
  _PartInventoriesCount: Int
  _PartKitsCount: Int
  _PlanItemsCount: Int
  _RequirementsCount: Int
  _ReviewRequestCount: Int
  _SubscriptionsCount: Int
  timeline(filters: EntityEventFilter): [Timeline]
}

input EntityEventFilter {
  id: FloatFilter
  type: EntitytypeenumFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type EntityEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Entity
  newValues: Entity
}

input EntitysInputFilters {
  or_: [EntitysInputFilters]
  and_: [EntitysInputFilters]
  id: FloatFilter
  type: EntitytypeenumFilter
  assets: FileAttachmentsInputFilters
  barcodeLabels: BarcodeLabelsInputFilters
  comments: CommentsInputFilters
  fileAttachments: FileAttachmentsInputFilters
  labels: LabelsInputFilters
  locations: LocationsInputFilters
  partInventories: PartInventoriesInputFilters
  partKits: PartKitsInputFilters
  planItems: PlanItemsInputFilters
  requirements: RequirementsInputFilters
  reviewRequest: ReviewRequestsInputFilters
  subscriptions: UserSubscriptionsInputFilters
}

enum Entitytypeenum {
  ISSUE_APPROVALS
  ISSUE_APPROVAL_REQUESTS
  ISSUES
  LOCATIONS
  MBOMS
  MBOM_APPROVALS
  MBOM_APPROVAL_REQUESTS
  MRP_JOBS
  PARTS
  PARTS_INVENTORY
  PARTS_KITS
  PART_KIT_ITEMS
  PLAN_INPUTS
  PLAN_ITEMS
  PLANS
  PROCEDURES
  PURCHASE_ORDER_APPROVALS
  PURCHASE_ORDER_APPROVAL_REQUESTS
  PURCHASE_ORDER_LINES
  PURCHASE_ORDERS
  RECEIPTS
  REDLINE_APPROVAL_REQUESTS
  REDLINE_APPROVALS
  REVIEW_REQUESTS
  REVIEWS
  STEP_APPROVAL_REQUESTS
  STEP_APPROVALS
  STEPS
  SUPPLIERS
  RUN_STEPS
  RUNS
  UNATTACHED
  USERS
}

input EntitytypeenumFilter {
  eq: Entitytypeenum
  neq: Entitytypeenum
  like: Entitytypeenum
  ilike: Entitytypeenum
  notlike: Entitytypeenum
  notilike: Entitytypeenum
  in: [Entitytypeenum]
  gt: Entitytypeenum
  gte: Entitytypeenum
  lt: Entitytypeenum
  lte: Entitytypeenum
  isnull: Boolean
}

"""Enum class for event types."""
enum EventType {
  CREATE
  UPDATE
  DELETE
  CONNECTED
  DETACHED
}

enum Eventtypeenum {
  CHECK_IN
  CHECK_OUT
}

input EventtypeenumFilter {
  eq: Eventtypeenum
  neq: Eventtypeenum
  like: Eventtypeenum
  ilike: Eventtypeenum
  notlike: Eventtypeenum
  notilike: Eventtypeenum
  in: [Eventtypeenum]
  gt: Eventtypeenum
  gte: Eventtypeenum
  lt: Eventtypeenum
  lte: Eventtypeenum
  isnull: Boolean
}

input EventTypeFilter {
  eq: EventType
  neq: EventType
  like: EventType
  ilike: EventType
  notlike: EventType
  notilike: EventType
  in: [EventType]
  gt: EventType
  gte: EventType
  lt: EventType
  lte: EventType
  isnull: Boolean
}

"""Input to create an attribute on creation."""
input ExtensibleAttributeInput {
  key: String!
  value: ScalarValue
}

enum Feetypeenum {
  PERCENTAGE
  CURRENCY
}

input FeetypeenumFilter {
  eq: Feetypeenum
  neq: Feetypeenum
  like: Feetypeenum
  ilike: Feetypeenum
  notlike: Feetypeenum
  notilike: Feetypeenum
  in: [Feetypeenum]
  gt: Feetypeenum
  gte: Feetypeenum
  lt: Feetypeenum
  lte: Feetypeenum
  isnull: Boolean
}

"""The run step field that represents the diff created in a redline."""
type FieldDiff {
  _created: DateTime
  _etag: String
  LastSessionId: String
  StringValue: String
  NumberValue: Float
  DatetimeValue: DateTime
  BooleanValue: Boolean
  SelectValue: String
  MultiselectValues: [String]
  notApplicable: Boolean!
  allowNotApplicable: Boolean!
  allowedIonType: Iontypeentitytypeenum
  display: String
  helpText: String
  name: String!
  options: [String]
  peerReviewRequired: Boolean!
  position: Int
  required: Boolean!
  type: runstepsteptypes
  unit: String
  _updated: DateTime
  id: Int!
  originFieldId: Int
  runStepId: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """Return part subtype foreign key relation."""
  partSubtypeId: Int

  """Return part foreign key relation."""
  partId: Int

  """
  
          Get signoff role id.
  
          Returns: Column object
          
  """
  signoffRoleId: Int

  """Return part inventory foreign key relation."""
  partInventoryId: Int

  """Return entity foreign key."""
  entityId: Float

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!
  valid: String
  editable: String
  settable: String
  batched: String
  batchSiblings: String
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  assignees: String
  value: String
  ionValue: String
  prettyStr: String
  originField(filters: FieldsInputFilters): StepField
  step: StepDiff
  validations(filters: RunStepFieldValidationsInputFilters): [RunStepFieldValidation]

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """Return part subtype relationship."""
  partSubtype(filters: PartSubtypesInputFilters): PartSubtype

  """Return part relationship."""
  part(filters: PartsInputFilters): Part

  """
  Get Role for signoff.
  
          Returns: relationship object
  """
  signoffRole(filters: RolesInputFilters): Role

  """Return part inventory relationship."""
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _AssigneesCount: Int
  _ValueCount: Int
  _IonValueCount: Int
  _ValidationsCount: Int
  timeline: [Timeline]
}

type FieldsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [FieldsEdge]!
}

"""A Relay edge containing a `Fields` and its cursor."""
type FieldsEdge {
  """The item at the end of the edge"""
  node: StepField

  """A cursor for use in pagination"""
  cursor: String!
}

input FieldsInputFilters {
  or_: [FieldsInputFilters]
  and_: [FieldsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  allowNotApplicable: BooleanFilter
  allowedIonType: stepfieldiontypeentitytypeenumFilter
  display: StringFilter
  helpText: StringFilter
  name: StringFilter
  peerReviewRequired: BooleanFilter
  position: IntFilter
  required: BooleanFilter
  type: FieldtypesFilter
  unit: StringFilter
  id: IDFilter
  stepId: IDFilter
  partSubtypeId: IDFilter
  partId: IDFilter
  signoffRoleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  step: StepsFilters
  validations: StepFieldValidationsInputFilters
  partSubtype: PartSubtypesInputFilters
  part: PartsInputFilters
  signoffRole: RolesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum Fieldtypes {
  STRING
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATETIME
  FILE_ATTACHMENT
  ION
  SIGNOFF
  TOOL
}

input FieldtypesFilter {
  eq: Fieldtypes
  neq: Fieldtypes
  like: Fieldtypes
  ilike: Fieldtypes
  notlike: Fieldtypes
  notilike: Fieldtypes
  in: [Fieldtypes]
  gt: Fieldtypes
  gte: Fieldtypes
  lt: Fieldtypes
  lte: Fieldtypes
  isnull: Boolean
}

"""
A fileAttachment.

Associated with a Step, RunStep, Parts, Runs, Procedures,
StepsFields and RunStepsFields.
"""
type FileAttachment {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  s3Bucket: String
  s3Key: String
  filename: String
  integrationId: String
  integrationFetchUrl: String
  entityId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  contentType: String
  downloadUrl: String

  """
  To prevent confusion between uploadUrl and downloadUrl, renaming from url to downloadUrl.
  """
  url: String @deprecated(reason: "Deprecated in favor of more specific downloadUrl.")
  prettyStr: String
  runStepField(filters: RunStepFieldInputFilters): [RunStepField]
  entity: Entity
  fileAttachmentEntities(filters: EntitysInputFilters): [Entity]
  assetEntities(filters: EntitysInputFilters): [Entity]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _RunStepFieldCount: Int
  _FileAttachmentEntitiesCount: Int
  _AssetEntitiesCount: Int
  timeline(filters: FileAttachmentEventFilter): [Timeline]
}

input FileAttachmentEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  s3Bucket: StringFilter
  s3Key: StringFilter
  filename: StringFilter
  integrationId: StringFilter
  integrationFetchUrl: StringFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type FileAttachmentEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: FileAttachment
  newValues: FileAttachment
}

input FileAttachmentsInputFilters {
  or_: [FileAttachmentsInputFilters]
  and_: [FileAttachmentsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  s3Bucket: StringFilter
  s3Key: StringFilter
  filename: StringFilter
  integrationId: StringFilter
  integrationFetchUrl: StringFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  runStepField: RunStepFieldInputFilters
  fileAttachmentEntities: EntitysInputFilters
  assetEntities: EntitysInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input FloatFilter {
  eq: Float
  neq: Float
  like: Float
  ilike: Float
  notlike: Float
  notilike: Float
  in: [Float]
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  isnull: Boolean
}

enum gateTypeissueapprovalgatetypeenum {
  IN_PROGRESS
  RESOLVED
}

"""Create a Sigma signed url with "viewer" permissions."""
type GenerateReadEmbeddedAnalytics {
  embeddedAnalytics: EmbeddedAnalytics
}

"""
Kicks off a Run summary export given a GenerateRunSummaryInput argument.
"""
type GenerateRunSummary {
  message: String
}

"""Inputs needed to generate Run summary."""
input GenerateRunSummaryInput {
  runIds: [Int]!
  bundle: Boolean = false
  includeAssets: Boolean = false
}

"""Create a Sigma signed url with "explorer" permissions."""
type GenerateWriteEmbeddedAnalytics {
  embeddedAnalytics: EmbeddedAnalytics
}

"""Generate a global unique serial number."""
type GlobalUniqueSerialNumber {
  serialNumber: String
}

"""Organization settings for part revision format and restrictions."""
type GlobalUniqueSerialNumberSchemeSettings {
  name: String
  enabled: Boolean
  default: Boolean
  serialScheme: String
  exclude: String
  startAt: Int
}

enum Gqltypeenum {
  INPUT
  MUTATION
  QUERY
  TYPE
}

input GqltypeenumFilter {
  eq: Gqltypeenum
  neq: Gqltypeenum
  like: Gqltypeenum
  ilike: Gqltypeenum
  notlike: Gqltypeenum
  notilike: Gqltypeenum
  in: [Gqltypeenum]
  gt: Gqltypeenum
  gte: Gqltypeenum
  lt: Gqltypeenum
  lte: Gqltypeenum
  isnull: Boolean
}

input IDFilter {
  eq: ID
  neq: ID
  like: ID
  ilike: ID
  notlike: ID
  notilike: ID
  in: [ID]
  gt: ID
  gte: ID
  lt: ID
  lte: ID
  isnull: Boolean
}

"""Import a step from a PDF."""
type ImportStepsFromPDF {
  steps: [Step]
}

"""Inputs needed to create a step from a PDF."""
input ImportStepsFromPDFInput {
  procedureId: ID!
  pdfAssetId: ID!
  stepPages: [StepPagesInput]
  parseContent: Boolean = false
}

"""Installs kit on aBOM children mutation."""
type InstallKitOnAbomItemChildren {
  abomItems: [ABomItem]
}

"""Inputs needed to install from kit on inventory."""
input InstallKitOnAbomItemChildrenInput {
  partKitId: Int!
  abomItemId: Int!
  etag: String!
}

"""External integrations."""
type Integration {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  integrationId: String!
  templateName: Integrationtemplatesenum!
  webhookId: String
  enabled: Boolean!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: IntegrationEventFilter): [Timeline]
}

input IntegrationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  integrationId: StringFilter
  templateName: IntegrationtemplatesenumFilter
  webhookId: StringFilter
  enabled: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IntegrationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Integration
  newValues: Integration
}

type IntegrationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IntegrationsEdge]!
}

"""A Relay edge containing a `Integrations` and its cursor."""
type IntegrationsEdge {
  """The item at the end of the edge"""
  node: Integration

  """A cursor for use in pagination"""
  cursor: String!
}

input IntegrationsInputFilters {
  or_: [IntegrationsInputFilters]
  and_: [IntegrationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  integrationId: StringFilter
  templateName: IntegrationtemplatesenumFilter
  webhookId: StringFilter
  enabled: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IntegrationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  INTEGRATION_ID_ASC
  INTEGRATION_ID_DESC
  TEMPLATE_NAME_ASC
  TEMPLATE_NAME_DESC
  WEBHOOK_ID_ASC
  WEBHOOK_ID_DESC
  ENABLED_ASC
  ENABLED_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

enum Integrationtemplatesenum {
  DURO_CHANGE_ORDER_APPROVED
}

input IntegrationtemplatesenumFilter {
  eq: Integrationtemplatesenum
  neq: Integrationtemplatesenum
  like: Integrationtemplatesenum
  ilike: Integrationtemplatesenum
  notlike: Integrationtemplatesenum
  notilike: Integrationtemplatesenum
  in: [Integrationtemplatesenum]
  gt: Integrationtemplatesenum
  gte: Integrationtemplatesenum
  lt: Integrationtemplatesenum
  lte: Integrationtemplatesenum
  isnull: Boolean
}

input IntFilter {
  eq: Int
  neq: Int
  like: Int
  ilike: Int
  notlike: Int
  notilike: Int
  in: [Int]
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  isnull: Boolean
}

"""Enum for inventory statuses."""
enum InventoryStatus {
  AVAILABLE
  INSTALLED
  KITTED
  ON_ORDER
  SCRAPPED
  UNAVAILABLE
  WIP
}

input InventoryStatusFilter {
  eq: InventoryStatus
  neq: InventoryStatus
  like: InventoryStatus
  ilike: InventoryStatus
  notlike: InventoryStatus
  notilike: InventoryStatus
  in: [InventoryStatus]
  gt: InventoryStatus
  gte: InventoryStatus
  lt: InventoryStatus
  lte: InventoryStatus
  isnull: Boolean
}

"""Input needed to issue item to kit or move item to inventory."""
input InventoryToKitInput {
  etag: String!
  partInventoryId: ID!
  quantity: Float = 1
  partKitItemId: ID!
}

"""
An invitation delivered via email to join an organization in the Ion platform.
"""
type Invite {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  resendCount: Int
  email: String
  name: String
  message: String
  status: InvitesStatusEnum

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: InviteEventFilter): [Timeline]
}

input InviteEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  resendCount: IntFilter
  email: StringFilter
  name: StringFilter
  message: StringFilter
  status: InvitesStatusEnumFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type InviteEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Invite
  newValues: Invite
}

type InvitesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [InvitesEdge]!
}

"""A Relay edge containing a `Invites` and its cursor."""
type InvitesEdge {
  """The item at the end of the edge"""
  node: Invite

  """A cursor for use in pagination"""
  cursor: String!
}

input InvitesInputFilters {
  or_: [InvitesInputFilters]
  and_: [InvitesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  resendCount: IntFilter
  email: StringFilter
  name: StringFilter
  message: StringFilter
  status: InvitesStatusEnumFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum InviteSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  RESEND_COUNT_ASC
  RESEND_COUNT_DESC
  EMAIL_ASC
  EMAIL_DESC
  NAME_ASC
  NAME_DESC
  MESSAGE_ASC
  MESSAGE_DESC
  STATUS_ASC
  STATUS_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

enum InvitesStatusEnum {
  PENDING
  REVOKED
  COMPLETE
}

input InvitesStatusEnumFilter {
  eq: InvitesStatusEnum
  neq: InvitesStatusEnum
  like: InvitesStatusEnum
  ilike: InvitesStatusEnum
  notlike: InvitesStatusEnum
  notilike: InvitesStatusEnum
  in: [InvitesStatusEnum]
  gt: InvitesStatusEnum
  gte: InvitesStatusEnum
  lt: InvitesStatusEnum
  lte: InvitesStatusEnum
  isnull: Boolean
}

"""
The Relay compliant `IonPageInfo` type, containing data necessary to paginate this connection.
"""
type IonPageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """Count of paginated objects returned"""
  count: Int!

  """Total count of query objects available"""
  totalCount: Int!
}

"""The union of types which can be linked via extensible attributes."""
union IonType = User | Part

enum Iontypeentitytypeenum {
  PARTS
  USERS
}

"""IonType filterable fields."""
input IonTypeFilterInput {
  part: PartsInputFilters
  user: UserInputFilters
}

"""The graphene sqlalchemy object type for issues."""
type Issue {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  causeCondition: SlateContent
  disposition: SlateContent
  title: String
  issueDispositionTypeId: Int
  runStepId: Int
  expectedCondition: SlateContent
  purchaseOrderLineId: Int
  mustCloseByRunStepId: Int
  status: Issuestatusenum!
  fixPartInventoryId: Int

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """
  Get ID of first part inventory tied to issue. To get all part inventories
  please use the partInventories field. This field is now deprecated.
  """
  partInventoryId: Int @deprecated(reason: "Issues can now have multiple part inventories tied to them.")

  """
  Get first part inventory tied to issue. To get all part inventories please use
  the partInventories field. This field is now deprecated.
  """
  partInventory: PartInventory @deprecated(reason: "Issues can now have multiple part inventories tied to them.")
  relatedIssues: [Issue]
  editable: String
  batched: String
  batchSiblings: [Issue]
  assignees: [User]
  prettyStr: String
  attributes: [IssueAttribute]
  labels: [Label]
  comments: [Comment]
  issueDispositionType(filters: IssueDispositionTypesInputFilters): IssueDispositionType
  runStep(filters: RunStepsInputFilters): RunStep
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  redlines(filters: RedlinesInputFilters): [Redline]
  purchaseOrderLine(filters: PurchaseOrderLinesInputFilters): PurchaseOrderLine
  mustCloseByRunStep(filters: RunStepsInputFilters): RunStep
  originIssues: [Issue]
  siblingIssues: [Issue]
  fixPartInventory(filters: PartInventoriesInputFilters): PartInventory

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: IssueAttributesInputFilters): [IssueAttribute]
  approvals(filters: IssueApprovalsInputFilters): [IssueApproval]
  approvalRequests(filters: IssueApprovalRequestsInputFilters): [IssueApprovalRequest]
  approved: Boolean
  createIssueForEachBatchSibling: Boolean
  fileAttachments: [FileAttachment]
  _RelatedIssuesCount: Int
  _AssigneesCount: Int
  _LabelsCount: Int
  _CommentsCount: Int
  _PartInventoriesCount: Int
  _RedlinesCount: Int
  _AttributesCount: Int
  _ApprovalsCount: Int
  _ApprovalRequestsCount: Int
  timeline(filters: IssueEventFilter): [Timeline]
}

"""An approval related to an issue."""
type IssueApproval {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean!
  issueId: Int!
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum

  """Return the role_id."""
  roleId: Int

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  issue(filters: IssueInputFilters): Issue

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [IssueApproval]
  parent: IssueApproval
  timeline(filters: IssueApprovalEventFilter): [Timeline]
}

input IssueApprovalEventFilter {
  gateType: IssueapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  issueId: IDFilter
  roleId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueApprovalEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueApproval
  newValues: IssueApproval
}

enum Issueapprovalgatetypeenum {
  IN_PROGRESS
  RESOLVED
}

input IssueapprovalgatetypeenumFilter {
  eq: Issueapprovalgatetypeenum
  neq: Issueapprovalgatetypeenum
  like: Issueapprovalgatetypeenum
  ilike: Issueapprovalgatetypeenum
  notlike: Issueapprovalgatetypeenum
  notilike: Issueapprovalgatetypeenum
  in: [Issueapprovalgatetypeenum]
  gt: Issueapprovalgatetypeenum
  gte: Issueapprovalgatetypeenum
  lt: Issueapprovalgatetypeenum
  lte: Issueapprovalgatetypeenum
  isnull: Boolean
}

"""A request to approve an issue."""
type IssueApprovalRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  status: reviewreviewstatusenum
  issueId: Int!
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum

  """Return the role_id."""
  roleId: Int

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int
  entityId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  assignees: [User]
  prettyStr: String
  issue(filters: IssueInputFilters): Issue

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team
  entity: Entity

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  reviewer: User @deprecated(reason: "The field reviewer has been replaced in favor of assignedTo.")
  reviewerId: Int @deprecated(reason: "The field reviewerId has been replaced in favor of assignedToId.")
  _AssigneesCount: Int
  timeline(filters: IssueApprovalRequestEventFilter): [Timeline]
}

input IssueApprovalRequestEventFilter {
  gateType: IssueapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  issueId: IDFilter
  roleId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueApprovalRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueApprovalRequest
  newValues: IssueApprovalRequest
}

type IssueApprovalRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssueApprovalRequestsEdge]!
}

"""A Relay edge containing a `IssueApprovalRequests` and its cursor."""
type IssueApprovalRequestsEdge {
  """The item at the end of the edge"""
  node: IssueApprovalRequest

  """A cursor for use in pagination"""
  cursor: String!
}

"""IssueApprovalRequest filterable fields."""
input IssueApprovalRequestsInputFilters {
  assignees: UserInputFilters
  reviewer: UserInputFilters
  reviewerId: IntFilter
  issueApprovalGateType: IssueapprovalgatetypeenumFilter
  or_: [IssueApprovalRequestsInputFilters]
  and_: [IssueApprovalRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  issueId: IDFilter
  roleId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  issue: IssueInputFilters
  role: RolesInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IssueApprovalRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  ISSUE_ID_ASC
  ISSUE_ID_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type IssueApprovalsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssueApprovalsEdge]!
}

"""A Relay edge containing a `IssueApprovals` and its cursor."""
type IssueApprovalsEdge {
  """The item at the end of the edge"""
  node: IssueApproval

  """A cursor for use in pagination"""
  cursor: String!
}

"""IssueApproval filterable fields."""
input IssueApprovalsInputFilters {
  issueApprovalGateType: IssueapprovalgatetypeenumFilter
  or_: [IssueApprovalsInputFilters]
  and_: [IssueApprovalsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  issueId: IDFilter
  roleId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  issue: IssueInputFilters
  role: RolesInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IssueApprovalSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  ISSUE_ID_ASC
  ISSUE_ID_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

type IssueAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  issueId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  issue(filters: IssueInputFilters): Issue
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: IssueAttributeEventFilter): [Timeline]
}

input IssueAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  issueId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueAttribute
  newValues: IssueAttribute
}

input IssueAttributesInputFilters {
  or_: [IssueAttributesInputFilters]
  and_: [IssueAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  issueId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  issue: IssueInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""The graphene sqlalchemy object type for issue disposition type."""
type IssueDispositionType {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  title: String!
  active: Boolean!
  description: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int
  prettyStr: String
  issues(filters: IssueInputFilters): [Issue]
  issueDispositionTypeRoles(filters: IssueDispositionTypeRolesInputFilters): [IssueDispositionTypeRole]
  roles(filters: RolesInputFilters): [Role]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _IssuesCount: Int
  _IssueDispositionTypeRolesCount: Int
  _RolesCount: Int
  timeline(filters: IssueDispositionTypeEventFilter): [Timeline]
}

input IssueDispositionTypeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  active: BooleanFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueDispositionTypeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueDispositionType
  newValues: IssueDispositionType
}

"""The graphene sqlalchemy object type for issue disposition type role."""
type IssueDispositionTypeRole {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  count: Int!
  issueDispositionTypeId: Int
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum
  roleId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int
  prettyStr: String
  issueDispositionType(filters: IssueDispositionTypesInputFilters): IssueDispositionType

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: IssueDispositionTypeRoleEventFilter): [Timeline]
}

input IssueDispositionTypeRoleEventFilter {
  gateType: IssueapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  count: IntFilter
  issueDispositionTypeId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueDispositionTypeRoleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueDispositionTypeRole
  newValues: IssueDispositionTypeRole
}

type IssueDispositionTypeRolesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssueDispositionTypeRolesEdge]!
}

"""A Relay edge containing a `IssueDispositionTypeRoles` and its cursor."""
type IssueDispositionTypeRolesEdge {
  """The item at the end of the edge"""
  node: IssueDispositionTypeRole

  """A cursor for use in pagination"""
  cursor: String!
}

"""IssueDispositionTypeRoles filterable fields."""
input IssueDispositionTypeRolesInputFilters {
  issueApprovalGateType: IssueapprovalgatetypeenumFilter
  or_: [IssueDispositionTypeRolesInputFilters]
  and_: [IssueDispositionTypeRolesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  count: IntFilter
  issueDispositionTypeId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  issueDispositionType: IssueDispositionTypesInputFilters
  role: RolesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IssueDispositionTypeRoleSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  COUNT_ASC
  COUNT_DESC
  ISSUE_DISPOSITION_TYPE_ID_ASC
  ISSUE_DISPOSITION_TYPE_ID_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type IssueDispositionTypesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssueDispositionTypesEdge]!
}

"""A Relay edge containing a `IssueDispositionTypes` and its cursor."""
type IssueDispositionTypesEdge {
  """The item at the end of the edge"""
  node: IssueDispositionType

  """A cursor for use in pagination"""
  cursor: String!
}

input IssueDispositionTypesInputFilters {
  or_: [IssueDispositionTypesInputFilters]
  and_: [IssueDispositionTypesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  active: BooleanFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  issues: IssueInputFilters
  issueDispositionTypeRoles: IssueDispositionTypeRolesInputFilters
  roles: RolesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IssueDispositionTypeSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TITLE_ASC
  TITLE_DESC
  ACTIVE_ASC
  ACTIVE_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""
Part Inventory attached to part kit with added field for issued quantity.
"""
type IssuedPartInventory {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  Cost: Float
  Status: OldInventorystatusenum

  """PO-specific property."""
  estimatedArrival: DateTime @deprecated(reason: "Moved to related purchaseOrderLines.")
  id: Int!
  lastMaintainedDate: DateTime
  locationId: Int
  lotNumber: String

  """PO-specific property."""
  needDate: DateTime @deprecated(reason: "Moved to related purchaseOrderLines.")
  originPartInventoryId: Int
  partId: Int!
  quantityScrapped: Float!
  serialNumber: String
  supplierId: Int
  unitOfMeasureId: Int
  uri: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  partKits: [PartKit]
  abomChildren: [ABomItem]
  abomParents: [ABomItem]
  status: InventoryStatus

  """PO-specific property."""
  cost: Float @deprecated(reason: "Moved to related purchaseOrderLines.")
  estimatedTotalCost: Float
  maintenanceStatus: MaintenanceStatus
  kitted: Boolean
  installed: Boolean
  QuantityKitted: String
  quantityKitted: Float
  quantityIssued: Float
  quantityInstalled: Float
  quantityAvailable: Float
  received: Boolean
  trackingType: Trackingtypeenum
  usageType: String
  identity: String
  identifiable: Boolean
  serviceDueDate: DateTime
  mergeCandidateIds: [Int]
  attributes: [PartInventoryAttribute]
  labels: [Label]
  comments: [Comment]
  abomItems(filters: ABomItemsInputFilters): [ABomItem]
  issues(filters: IssueInputFilters): [Issue]
  location(filters: LocationsInputFilters): Location
  originRuns(filters: RunsInputFilters): [Run]
  part(filters: PartsInputFilters): Part
  partInventories: [PartInventory]
  partKitItems(filters: PartKitItemsInputFilters): [PartKitItem]
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters): [PurchaseOrderLine]
  receiptItems(filters: ReceiptItemsInputFilters): [ReceiptItem]
  receipts(filters: ReceiptsInputFilters): [Receipt]
  runSteps(filters: RunStepsInputFilters): [RunStep]
  runs(filters: RunsInputFilters): [Run]
  supplier(filters: SuppliersInputFilters): Supplier
  unitOfMeasure(filters: UnitsOfMeasurementInputFilters): UnitOfMeasurement

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  Attributes(filters: PartInventoryAttributesInputFilters): [PartInventoryAttribute]
  entity: Entity
  originPartInventory: PartInventory
  fileAttachments: [FileAttachment]
  parentLocations: [Location]
  _PartKitsCount: Int
  _LabelsCount: Int
  _CommentsCount: Int
  _AbomItemsCount: Int
  _IssuesCount: Int
  _OriginRunsCount: Int
  _PartKitInventoriesCount: Int
  _PartKitItemsCount: Int
  _PurchaseOrderLinesCount: Int
  _ReceiptItemsCount: Int
  _ReceiptsCount: Int
  _RunStepsCount: Int
  _RunsCount: Int
  _AttributesCount: Int
  timeline: [Timeline]
  issuedQuantity: Float
}

input IssueEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  issueDispositionTypeId: IDFilter
  runStepId: IDFilter
  purchaseOrderLineId: IDFilter
  mustCloseByRunStepId: IDFilter
  status: IssuestatusenumFilter
  fixPartInventoryId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Issue
  newValues: Issue
}

"""Issue filterable fields."""
input IssueInputFilters {
  assignees: UserInputFilters
  comments: CommentsInputFilters
  editable: BooleanFilter
  labels: LabelsInputFilters
  relatedIssues: IssueInputFilters
  runId: IDFilter
  issueDispositionType: IssueDispositionTypesInputFilters
  runStep: RunStepsInputFilters
  partInventories: PartInventoriesInputFilters
  redlines: RedlinesInputFilters
  purchaseOrderLine: PurchaseOrderLinesInputFilters
  mustCloseByRunStep: RunStepsInputFilters
  fixPartInventory: PartInventoriesInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: IssueAttributesInputFilters
  approvals: IssueApprovalsInputFilters
  approvalRequests: IssueApprovalRequestsInputFilters
  or_: [IssueInputFilters]
  and_: [IssueInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  issueDispositionTypeId: IDFilter
  runStepId: IDFilter
  purchaseOrderLineId: IDFilter
  mustCloseByRunStepId: IDFilter
  status: IssuestatusenumFilter
  fixPartInventoryId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  partInventoryId: IntFilter
}

"""
Issues an item to a PartKitItem given its inventory and part kit item ids.
"""
type IssueItemToKit {
  partInventory: PartInventory
  splitInventory: PartInventory
}

type IssuePartInventoriesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssuePartInventoriesEdge]!
}

"""A Relay edge containing a `IssuePartInventories` and its cursor."""
type IssuePartInventoriesEdge {
  """The item at the end of the edge"""
  node: IssuePartInventory

  """A cursor for use in pagination"""
  cursor: String!
}

input IssuePartInventoriesInputFilters {
  or_: [IssuePartInventoriesInputFilters]
  and_: [IssuePartInventoriesInputFilters]
  _updated: DateTimeFilter
  _created: DateTimeFilter
  fromSplitInventory: BooleanFilter
  issueId: IDFilter
  partInventoryId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  issue: IssueInputFilters
  partInventory: PartInventoriesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""The graphene sqlalchemy object type for."""
type IssuePartInventory {
  _updated: DateTime
  _etag: String
  LastSessionId: String
  _created: DateTime
  fromSplitInventory: Boolean!
  issueId: Int
  partInventoryId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int
  prettyStr: String
  issue(filters: IssueInputFilters): Issue
  partInventory(filters: PartInventoriesInputFilters): PartInventory

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: IssuePartInventoryEventFilter): [Timeline]
}

input IssuePartInventoryEventFilter {
  Updated: DateTimeFilter
  Created: DateTimeFilter
  fromSplitInventory: BooleanFilter
  issueId: IDFilter
  partInventoryId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssuePartInventoryEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssuePartInventory
  newValues: IssuePartInventory
}

enum IssuePartInventorySortEnum {
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _CREATED_ASC
  _CREATED_DESC
  FROM_SPLIT_INVENTORY_ASC
  FROM_SPLIT_INVENTORY_DESC
  ISSUE_ID_ASC
  ISSUE_ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""The graphene sqlalchemy object type for issue relations."""
type IssueRelation {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  originIssueId: Int!
  relatedIssueId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  originIssue(filters: IssueInputFilters): Issue
  relatedIssue(filters: IssueInputFilters): Issue

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: IssueRelationEventFilter): [Timeline]
}

input IssueRelationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  originIssueId: IDFilter
  relatedIssueId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type IssueRelationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: IssueRelation
  newValues: IssueRelation
}

type IssueRelationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssueRelationsEdge]!
}

"""A Relay edge containing a `IssueRelations` and its cursor."""
type IssueRelationsEdge {
  """The item at the end of the edge"""
  node: IssueRelation

  """A cursor for use in pagination"""
  cursor: String!
}

input IssueRelationsInputFilters {
  or_: [IssueRelationsInputFilters]
  and_: [IssueRelationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  originIssueId: IDFilter
  relatedIssueId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  originIssue: IssueInputFilters
  relatedIssue: IssueInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum IssueRelationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ORIGIN_ISSUE_ID_ASC
  ORIGIN_ISSUE_ID_DESC
  RELATED_ISSUE_ID_ASC
  RELATED_ISSUE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type IssuesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [IssuesEdge]!
}

"""A Relay edge containing a `Issues` and its cursor."""
type IssuesEdge {
  """The item at the end of the edge"""
  node: Issue

  """A cursor for use in pagination"""
  cursor: String!
}

"""Settings related to issues."""
type IssueSettings {
  attributes: [AttributeSettings]
  causeConditionAlias: String
  createIssueOnStepFailure: Boolean
  dispositionAlias: String
  enforceIssuesResolvedBeforeStepContinuation: Boolean
  expectedConditionAlias: String
  numApproversRequired: Int
}

"""Input settings related to issues."""
input IssueSettingsInput {
  causeConditionAlias: String
  createIssueOnStepFailure: Boolean
  dispositionAlias: String
  enforceIssuesResolvedBeforeStepContinuation: Boolean
  expectedConditionAlias: String
  numApproversRequired: Int
}

enum IssueSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  CAUSE_CONDITION_ASC
  CAUSE_CONDITION_DESC
  DISPOSITION_ASC
  DISPOSITION_DESC
  TITLE_ASC
  TITLE_DESC
  ISSUE_DISPOSITION_TYPE_ID_ASC
  ISSUE_DISPOSITION_TYPE_ID_DESC
  RUN_STEP_ID_ASC
  RUN_STEP_ID_DESC
  EXPECTED_CONDITION_ASC
  EXPECTED_CONDITION_DESC
  PURCHASE_ORDER_LINE_ID_ASC
  PURCHASE_ORDER_LINE_ID_DESC
  MUST_CLOSE_BY_RUN_STEP_ID_ASC
  MUST_CLOSE_BY_RUN_STEP_ID_DESC
  STATUS_ASC
  STATUS_DESC
  FIX_PART_INVENTORY_ID_ASC
  FIX_PART_INVENTORY_ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Issuestatusenum {
  PENDING
  IN_PROGRESS
  IN_REVIEW
  RESOLVED
}

input IssuestatusenumFilter {
  eq: Issuestatusenum
  neq: Issuestatusenum
  like: Issuestatusenum
  ilike: Issuestatusenum
  notlike: Issuestatusenum
  notilike: Issuestatusenum
  in: [Issuestatusenum]
  gt: Issuestatusenum
  gte: Issuestatusenum
  lt: Issuestatusenum
  lte: Issuestatusenum
  isnull: Boolean
}

"""The union of items which can be changed in a redline."""
union ItemDiff = DatagridColumn | DatagridRow | DatagridValue | FieldDiff | StepDiff | RunStepFieldValidation

enum Jobstatusenum {
  QUEUED
  IN_PROGRESS
  COMPLETE
  FAILED
}

input JobstatusenumFilter {
  eq: Jobstatusenum
  neq: Jobstatusenum
  like: Jobstatusenum
  ilike: Jobstatusenum
  notlike: Jobstatusenum
  notilike: Jobstatusenum
  in: [Jobstatusenum]
  gt: Jobstatusenum
  gte: Jobstatusenum
  lt: Jobstatusenum
  lte: Jobstatusenum
  isnull: Boolean
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString

input JSONStringFilter {
  eq: JSONString
  neq: JSONString
  like: JSONString
  ilike: JSONString
  notlike: JSONString
  notilike: JSONString
  in: [JSONString]
  gt: JSONString
  gte: JSONString
  lt: JSONString
  lte: JSONString
  isnull: Boolean
}

"""A graphql label object."""
type Label {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  value: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: LabelEventFilter): [Timeline]
}

input LabelEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type LabelEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Label
  newValues: Label
}

type LabelsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [LabelsEdge]!
}

"""A Relay edge containing a `Labels` and its cursor."""
type LabelsEdge {
  """The item at the end of the edge"""
  node: Label

  """A cursor for use in pagination"""
  cursor: String!
}

input LabelsInputFilters {
  or_: [LabelsInputFilters]
  and_: [LabelsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum LabelSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  VALUE_ASC
  VALUE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Inputs to attach a label to an object through its entity id."""
input LabelToItemInput {
  entityId: Int!
  labelId: Int!
}

"""Inputs needed to relate a label to a procedure family."""
input LabelToProcedureFamilyInput {
  familyId: Int!
  labelId: Int!
}

"""The Location of a Part in the PartsInventory."""
type Location {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  address: String
  available: Boolean!
  archived: Boolean!
  contactId: Int
  description: String
  imageId: Int
  latitude: Float
  locationSubtypeId: Int
  longitude: Float
  name: String!
  parentId: Int
  supervisorId: Int
  type: Locationtypeenum

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  attributes: [LocationAttribute]
  allChildren: [Location]
  allParents: [Location]
  contact(filters: ContactsInputFilters): Contact
  expectedPartKits(filters: PartKitsInputFilters): [PartKit]
  image(filters: FileAttachmentsInputFilters): FileAttachment
  locationSubtype(filters: LocationSubtypesInputFilters): LocationSubtype
  locations: [Location]
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  partKits(filters: PartKitsInputFilters): [PartKit]
  runSteps(filters: RunStepsInputFilters): [RunStep]
  steps(filters: StepsFilters): [Step]
  supervisor(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  Attributes(filters: LocationAttributesInputFilters): [LocationAttribute]
  entity: Entity
  parent: Location
  _AllChildrenCount: Int
  _AllParentsCount: Int
  _ExpectedPartKitsCount: Int
  _PartInventoriesCount: Int
  _PartKitsCount: Int
  _RunStepsCount: Int
  _StepsCount: Int
  _AttributesCount: Int
  timeline(filters: LocationEventFilter): [Timeline]
}

type LocationAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  locationId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  location(filters: LocationsInputFilters): Location
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: LocationAttributeEventFilter): [Timeline]
}

input LocationAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  locationId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type LocationAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: LocationAttribute
  newValues: LocationAttribute
}

input LocationAttributesInputFilters {
  or_: [LocationAttributesInputFilters]
  and_: [LocationAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  locationId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  location: LocationsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input LocationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  address: StringFilter
  available: BooleanFilter
  archived: BooleanFilter
  contactId: IDFilter
  description: StringFilter
  imageId: IDFilter
  latitude: FloatFilter
  locationSubtypeId: IDFilter
  longitude: FloatFilter
  name: StringFilter
  parentId: IDFilter
  supervisorId: IDFilter
  type: LocationtypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type LocationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Location
  newValues: Location
}

type LocationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [LocationsEdge]!
}

"""A Relay edge containing a `Locations` and its cursor."""
type LocationsEdge {
  """The item at the end of the edge"""
  node: Location

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to locations."""
type LocationSettings {
  attributes: [AttributeSettings]
}

input LocationsInputFilters {
  or_: [LocationsInputFilters]
  and_: [LocationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  address: StringFilter
  available: BooleanFilter
  archived: BooleanFilter
  contactId: IDFilter
  description: StringFilter
  imageId: IDFilter
  latitude: FloatFilter
  locationSubtypeId: IDFilter
  longitude: FloatFilter
  name: StringFilter
  parentId: IDFilter
  supervisorId: IDFilter
  type: LocationtypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  contact: ContactsInputFilters
  expectedPartKits: PartKitsInputFilters
  image: FileAttachmentsInputFilters
  locationSubtype: LocationSubtypesInputFilters
  partInventories: PartInventoriesInputFilters
  partKits: PartKitsInputFilters
  runSteps: RunStepsInputFilters
  steps: StepsFilters
  supervisor: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: LocationAttributesInputFilters
  allParents: LocationsInputFilters
  allChildren: LocationsInputFilters
}

enum LocationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  ADDRESS_ASC
  ADDRESS_DESC
  AVAILABLE_ASC
  AVAILABLE_DESC
  ARCHIVED_ASC
  ARCHIVED_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  IMAGE_ID_ASC
  IMAGE_ID_DESC
  LATITUDE_ASC
  LATITUDE_DESC
  LOCATION_SUBTYPE_ID_ASC
  LOCATION_SUBTYPE_ID_DESC
  LONGITUDE_ASC
  LONGITUDE_DESC
  NAME_ASC
  NAME_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
  SUPERVISOR_ID_ASC
  SUPERVISOR_ID_DESC
  TYPE_ASC
  TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Subtype of locations."""
type LocationSubtype {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  description: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  locations(filters: LocationsInputFilters): [Location]
  steps(filters: StepsFilters): [Step]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _LocationsCount: Int
  _StepsCount: Int
  timeline(filters: LocationSubtypeEventFilter): [Timeline]
}

input LocationSubtypeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type LocationSubtypeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: LocationSubtype
  newValues: LocationSubtype
}

type LocationSubtypesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [LocationSubtypesEdge]!
}

"""A Relay edge containing a `LocationSubtypes` and its cursor."""
type LocationSubtypesEdge {
  """The item at the end of the edge"""
  node: LocationSubtype

  """A cursor for use in pagination"""
  cursor: String!
}

input LocationSubtypesInputFilters {
  or_: [LocationSubtypesInputFilters]
  and_: [LocationSubtypesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  locations: LocationsInputFilters
  steps: StepsFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum LocationSubtypeSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

enum Locationtypeenum {
  WORKCENTER
  TOTE
  WAREHOUSE
  RACK
  SHELF
}

input LocationtypeenumFilter {
  eq: Locationtypeenum
  neq: Locationtypeenum
  like: Locationtypeenum
  ilike: Locationtypeenum
  notlike: Locationtypeenum
  notilike: Locationtypeenum
  in: [Locationtypeenum]
  gt: Locationtypeenum
  gte: Locationtypeenum
  lt: Locationtypeenum
  lte: Locationtypeenum
  isnull: Boolean
}

"""Log fetch obj."""
type Log {
  serviceName: String
  namespace: String
  level: String
  orgSchema: String
  operationName: String
  message: String
  timestamp: String
}

"""Log connections."""
type LogConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [LogEdge]!
}

"""A Relay edge containing a `Log` and its cursor."""
type LogEdge {
  """The item at the end of the edge"""
  node: Log

  """A cursor for use in pagination"""
  cursor: String!
}

"""Log filterable fields."""
input LogInputFilters {
  serviceName: String
  timestamp: String
}

"""Enum of Inventory maintenance status."""
enum MaintenanceStatus {
  AVAILABLE
  UNAVAILABLE
}

input MaintenanceStatusFilter {
  eq: MaintenanceStatus
  neq: MaintenanceStatus
  like: MaintenanceStatus
  ilike: MaintenanceStatus
  notlike: MaintenanceStatus
  notilike: MaintenanceStatus
  in: [MaintenanceStatus]
  gt: MaintenanceStatus
  gte: MaintenanceStatus
  lt: MaintenanceStatus
  lte: MaintenanceStatus
  isnull: Boolean
}

"""An mBOM."""
type MBom {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  version: Int!
  id: Int!
  partId: Int!
  status: Mbomstatusenum!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """
  
          Entity_id related to object.
  
          Returns: int of entity_id
          
  """
  entityId: Float!
  isLatestVersion: Boolean
  isLatestReleasedVersion: Boolean
  prettyStr: String
  editable: Boolean
  labels: String
  comments: String
  attributes: [MbomAttribute]
  approvals(filters: MBomApprovalsInputFilters): [MBomApproval]
  mbomItems(filters: MBomItemsInputFilters): [MBomItem]
  part(filters: PartsInputFilters): Part

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  approvalRequests(filters: MBomApprovalRequestsInputFilters): [MBomApprovalRequest]
  entity: Entity
  Attributes(filters: MbomAttributesInputFilters): [MbomAttribute]
  _LabelsCount: Int
  _CommentsCount: Int
  _ApprovalsCount: Int
  _MbomItemsCount: Int
  _ApprovalRequestsCount: Int
  _AttributesCount: Int
  timeline(filters: MBomEventFilter): [Timeline]
}

"""An approval related to an mBOM."""
type MBomApproval {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean!
  mbomId: Int!
  gateType: Mbomapprovalgatetypeenum!

  """Return the role_id."""
  roleId: Int

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  mbom(filters: MBomsInputFilters): MBom

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [MBomApproval]
  parent: MBomApproval
  timeline(filters: MBomApprovalEventFilter): [Timeline]
}

input MBomApprovalEventFilter {
  gateType: MbomapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  mbomId: IDFilter
  roleId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomApprovalEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomApproval
  newValues: MBomApproval
}

enum Mbomapprovalgatetypeenum {
  RELEASED
}

input MbomapprovalgatetypeenumFilter {
  eq: Mbomapprovalgatetypeenum
  neq: Mbomapprovalgatetypeenum
  like: Mbomapprovalgatetypeenum
  ilike: Mbomapprovalgatetypeenum
  notlike: Mbomapprovalgatetypeenum
  notilike: Mbomapprovalgatetypeenum
  in: [Mbomapprovalgatetypeenum]
  gt: Mbomapprovalgatetypeenum
  gte: Mbomapprovalgatetypeenum
  lt: Mbomapprovalgatetypeenum
  lte: Mbomapprovalgatetypeenum
  isnull: Boolean
}

"""A request to approve an mbom."""
type MBomApprovalRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  status: reviewreviewstatusenum
  mbomId: Int!
  gateType: Mbomapprovalgatetypeenum!

  """Return the role_id."""
  roleId: Int

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int
  entityId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  assignees: [User]
  prettyStr: String
  mbom(filters: MBomsInputFilters): MBom

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team
  entity: Entity

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  reviewer: User @deprecated(reason: "The field reviewer has been replaced in favor of assignedTo.")
  reviewerId: Int @deprecated(reason: "The field reviewerId has been replaced in favor of assignedToId.")
  _AssigneesCount: Int
  timeline(filters: MBomApprovalRequestEventFilter): [Timeline]
}

input MBomApprovalRequestEventFilter {
  gateType: MbomapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  mbomId: IDFilter
  roleId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomApprovalRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomApprovalRequest
  newValues: MBomApprovalRequest
}

type MBomApprovalRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomApprovalRequestsEdge]!
}

"""A Relay edge containing a `MBomApprovalRequests` and its cursor."""
type MBomApprovalRequestsEdge {
  """The item at the end of the edge"""
  node: MBomApprovalRequest

  """A cursor for use in pagination"""
  cursor: String!
}

"""MBomApprovalRequest filterable fields."""
input MBomApprovalRequestsInputFilters {
  assignees: UserInputFilters
  reviewer: UserInputFilters
  reviewerId: IntFilter
  gateType: MbomapprovalgatetypeenumFilter
  or_: [MBomApprovalRequestsInputFilters]
  and_: [MBomApprovalRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  mbomId: IDFilter
  roleId: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  mbom: MBomsInputFilters
  role: RolesInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MBomApprovalRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  MBOM_ID_ASC
  MBOM_ID_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Approval role type for mBOMs."""
type MBomApprovalRole {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  count: Int!
  gateType: Mbomapprovalgatetypeenum!
  roleId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """Return the role relationship."""
  role(filters: RolesInputFilters): Role

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: MBomApprovalRoleEventFilter): [Timeline]
}

input MBomApprovalRoleEventFilter {
  gateType: MbomapprovalgatetypeenumFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  count: IntFilter
  roleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomApprovalRoleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomApprovalRole
  newValues: MBomApprovalRole
}

type MBomApprovalRolesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomApprovalRolesEdge]!
}

"""A Relay edge containing a `MBomApprovalRoles` and its cursor."""
type MBomApprovalRolesEdge {
  """The item at the end of the edge"""
  node: MBomApprovalRole

  """A cursor for use in pagination"""
  cursor: String!
}

"""MBomApprovalRole filterable fields."""
input MBomApprovalRolesInputFilters {
  gateType: MbomapprovalgatetypeenumFilter
  or_: [MBomApprovalRolesInputFilters]
  and_: [MBomApprovalRolesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  count: IntFilter
  roleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  role: RolesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MBomApprovalRoleSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  COUNT_ASC
  COUNT_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type MBomApprovalsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomApprovalsEdge]!
}

"""A Relay edge containing a `MBomApprovals` and its cursor."""
type MBomApprovalsEdge {
  """The item at the end of the edge"""
  node: MBomApproval

  """A cursor for use in pagination"""
  cursor: String!
}

"""MBomApproval filterable fields."""
input MBomApprovalsInputFilters {
  gateType: MbomapprovalgatetypeenumFilter
  or_: [MBomApprovalsInputFilters]
  and_: [MBomApprovalsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  mbomId: IDFilter
  roleId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  mbom: MBomsInputFilters
  role: RolesInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MBomApprovalSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  MBOM_ID_ASC
  MBOM_ID_DESC
  GATE_TYPE_ASC
  GATE_TYPE_DESC
  ROLE_ID_ASC
  ROLE_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

type MbomAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  mbomId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  mbom(filters: MBomsInputFilters): MBom
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: MbomAttributeEventFilter): [Timeline]
}

input MbomAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  mbomId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MbomAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MbomAttribute
  newValues: MbomAttribute
}

input MbomAttributesInputFilters {
  or_: [MbomAttributesInputFilters]
  and_: [MbomAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  mbomId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  mbom: MBomsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input MBomEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  version: IntFilter
  id: IDFilter
  partId: IDFilter
  status: MbomstatusenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBom
  newValues: MBom
}

"""An mBOM Item."""
type MBomItem {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  _deleted: Boolean
  madeOnAssembly: Boolean!
  mbomId: Int!
  partId: Int!
  quantity: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  parentId: Int
  parent: Part
  mbom(filters: MBomsInputFilters): MBom
  part(filters: PartsInputFilters): Part
  abomItems(filters: ABomItemsInputFilters): [ABomItem]
  partKitItems(filters: PartKitItemsInputFilters): [PartKitItem]
  referenceDesignators(filters: MBomItemReferenceDesignatorsInputFilters): [MBomItemReferenceDesignator]
  stepAssociations(filters: StepMBomItemAssociationsInputFilters): [StepMBomItemAssociation]
  substitutes(filters: MBomSubstituteInputFilters): [MBomSubstitute]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _ParentCount: Int
  _AbomItemsCount: Int
  _PartKitItemsCount: Int
  _ReferenceDesignatorsCount: Int
  _StepAssociationsCount: Int
  _SubstitutesCount: Int
  timeline(filters: MBomItemEventFilter): [Timeline]
}

input MBomItemEventFilter {
  id: IDFilter
  partId: IDFilter
  quantity: FloatFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  Deleted: BooleanFilter
  madeOnAssembly: BooleanFilter
  mbomId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomItemEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomItem
  newValues: MBomItem
}

"""An mBOM Item Reference Designator."""
type MBomItemReferenceDesignator {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  mbomItemId: Int!
  value: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  abomItemReferenceDesignators(filters: ABomItemReferenceDesignatorsInputFilters): [ABomItemReferenceDesignator]
  mbomItem(filters: MBomItemsInputFilters): MBomItem
  stepAssociations(filters: StepMBomItemAssociationsInputFilters): [StepMBomItemAssociation]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _AbomItemReferenceDesignatorsCount: Int
  _StepAssociationsCount: Int
  timeline(filters: MBomItemReferenceDesignatorEventFilter): [Timeline]
}

input MBomItemReferenceDesignatorEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  mbomItemId: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomItemReferenceDesignatorEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomItemReferenceDesignator
  newValues: MBomItemReferenceDesignator
}

type MBomItemReferenceDesignatorsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomItemReferenceDesignatorsEdge]!
}

"""
A Relay edge containing a `MBomItemReferenceDesignators` and its cursor.
"""
type MBomItemReferenceDesignatorsEdge {
  """The item at the end of the edge"""
  node: MBomItemReferenceDesignator

  """A cursor for use in pagination"""
  cursor: String!
}

input MBomItemReferenceDesignatorsInputFilters {
  or_: [MBomItemReferenceDesignatorsInputFilters]
  and_: [MBomItemReferenceDesignatorsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  mbomItemId: IDFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  abomItemReferenceDesignators: ABomItemReferenceDesignatorsInputFilters
  mbomItem: MBomItemsInputFilters
  stepAssociations: StepMBomItemAssociationsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MBomItemReferenceDesignatorSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  MBOM_ITEM_ID_ASC
  MBOM_ITEM_ID_DESC
  VALUE_ASC
  VALUE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type MBomItemsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomItemsEdge]!
}

"""A Relay edge containing a `MBomItems` and its cursor."""
type MBomItemsEdge {
  """The item at the end of the edge"""
  node: MBomItem

  """A cursor for use in pagination"""
  cursor: String!
}

"""mBOM filterable fields."""
input MBomItemsInputFilters {
  id: IDFilter
  parentId: IDFilter
  partId: IDFilter
  quantity: FloatFilter
  parent: PartsInputFilters
  or_: [MBomItemsInputFilters]
  and_: [MBomItemsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  _deleted: BooleanFilter
  madeOnAssembly: BooleanFilter
  mbomId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  mbom: MBomsInputFilters
  part: PartsInputFilters
  abomItems: ABomItemsInputFilters
  partKitItems: PartKitItemsInputFilters
  referenceDesignators: MBomItemReferenceDesignatorsInputFilters
  stepAssociations: StepMBomItemAssociationsInputFilters
  substitutes: MBomSubstituteInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MBomItemSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  _DELETED_ASC
  _DELETED_DESC
  MADE_ON_ASSEMBLY_ASC
  MADE_ON_ASSEMBLY_DESC
  MBOM_ID_ASC
  MBOM_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type MBomsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomsEdge]!
}

"""A Relay edge containing a `MBoms` and its cursor."""
type MBomsEdge {
  """The item at the end of the edge"""
  node: MBom

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to mboms."""
type MBomSettings {
  attributes: [AttributeSettings]
}

input MBomsInputFilters {
  or_: [MBomsInputFilters]
  and_: [MBomsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  version: IntFilter
  id: IDFilter
  partId: IDFilter
  status: MbomstatusenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  approvals: MBomApprovalsInputFilters
  mbomItems: MBomItemsInputFilters
  part: PartsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  approvalRequests: MBomApprovalRequestsInputFilters
  attributes: MbomAttributesInputFilters
}

enum MBomSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  VERSION_ASC
  VERSION_DESC
  ID_ASC
  ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  STATUS_ASC
  STATUS_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Enum for mBOM status."""
enum MBomStatus {
  DRAFT
  IN_REVIEW
  RELEASED
  ARCHIVED
}

enum Mbomstatusenum {
  DRAFT
  IN_REVIEW
  RELEASED
  ARCHIVED
}

input MbomstatusenumFilter {
  eq: Mbomstatusenum
  neq: Mbomstatusenum
  like: Mbomstatusenum
  ilike: Mbomstatusenum
  notlike: Mbomstatusenum
  notilike: Mbomstatusenum
  in: [Mbomstatusenum]
  gt: Mbomstatusenum
  gte: Mbomstatusenum
  lt: Mbomstatusenum
  lte: Mbomstatusenum
  isnull: Boolean
}

"""A Substitute on an mBOM."""
type MBomSubstitute {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  mbomItemId: Int!
  partId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  parentId: Int
  parent: Part
  prettyStr: String
  mbomItem(filters: MBomItemsInputFilters): MBomItem
  part(filters: PartsInputFilters): Part

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _ParentCount: Int
  timeline(filters: MBomSubstituteEventFilter): [Timeline]
}

input MBomSubstituteEventFilter {
  id: IDFilter
  mbomItemId: IDFilter
  partId: IDFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MBomSubstituteEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MBomSubstitute
  newValues: MBomSubstitute
}

"""mBOM Substitute filterable fields."""
input MBomSubstituteInputFilters {
  id: IDFilter
  mbomItemId: IDFilter
  parentId: IDFilter
  parent: PartsInputFilters
  partId: IDFilter
  or_: [MBomSubstituteInputFilters]
  and_: [MBomSubstituteInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  createdById: IDFilter
  updatedById: IDFilter
  mbomItem: MBomItemsInputFilters
  part: PartsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

type MBomSubstitutesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MBomSubstitutesEdge]!
}

"""A Relay edge containing a `MBomSubstitutes` and its cursor."""
type MBomSubstitutesEdge {
  """The item at the end of the edge"""
  node: MBomSubstitute

  """A cursor for use in pagination"""
  cursor: String!
}

enum MBomSubstituteSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  MBOM_ITEM_ID_ASC
  MBOM_ITEM_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""
Merge part inventory list into the oldest id given.

Mutation will fail if *any* ids given are not valid for merge.
"""
type MergePartInventory {
  partInventory: PartInventory
}

"""Input for each inventory output of a split many operation."""
input MergePartInventoryEachInput {
  id: Int!
}

"""Inputs needed to merge PartInventory objects."""
input MergePartInventoryInput {
  partInventories: [MergePartInventoryEachInput]!
}

"""
(Deprecated) Merge run step into procedure step.

This mutation has been deprecated in favor of MergeRunStepToProcedure.
"""
type MergeRunStep {
  step: Step
}

"""
(Deprecated) Inputs to merge run step into procedure.

This input has been deprecated in favor of MergeRunStepToProcedureInput.
"""
input MergeRunStepInput {
  procedureId: ID!

  """Merge target step id (not required)."""
  stepId: ID

  """Merge target step etag (not required)."""
  etag: String

  """Merge source run step id."""
  id: ID!
}

"""Merge run step into procedure step."""
type MergeRunStepToProcedure {
  step: Step
}

"""
Inputs to merge run step into procedure.

If no step_id is passed run step is merged into new step in procedure,
else merged into existing specified step.
"""
input MergeRunStepToProcedureInput {
  procedureId: ID!

  """Merge target step id (not required)."""
  stepId: ID

  """Merge target step etag (not required)."""
  etag: String

  """Merge source run step id."""
  id: ID!
}

"""Inputs to specify target for run step to be merged onto."""
input MergeRunStepToRunInput {
  runId: ID!
  runStepId: ID
  etag: String
}

"""Merge a redlined run step onto other runs/run steps."""
type MergeRunStepToRuns {
  steps: [RunStep]
}

"""Inputs to specify targets for run step to be merged onto."""
input MergeRunStepToRunsInput {
  id: ID!
  runs: [MergeRunStepToRunInput]!
}

"""Event response type."""
type MessageResponse {
  messageId: ID
}

"""Moves an item to inventory given its inventory and part kit ids."""
type MoveItemToInventory {
  partInventory: PartInventory
  splitInventory: PartInventory
}

"""Move all inventory in a kit to one location."""
type MoveKitInventoryToLocation {
  partKit: PartKit
}

"""Inputs needed to move all inventory in a kit to one location."""
input MoveKitInventoryToLocationInput {
  partKitId: ID!
  locationId: ID!

  """Etag of the part kit."""
  etag: String!
}

"""MRP Job GraphQL object."""
type MRPJob {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  startTime: DateTime
  endTime: DateTime
  status: Jobstatusenum!
  failedReason: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  isLatest: Boolean
  prettyStr: String
  comments: [Comment]
  planItems(filters: PlanItemsInputFilters): [PlanItem]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  _CommentsCount: Int
  _PlanItemsCount: Int
  timeline(filters: MRPJobEventFilter): [Timeline]
}

input MRPJobEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  startTime: DateTimeFilter
  endTime: DateTimeFilter
  status: JobstatusenumFilter
  failedReason: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type MRPJobEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: MRPJob
  newValues: MRPJob
}

type MRPJobsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [MRPJobsEdge]!
}

"""A Relay edge containing a `MRPJobs` and its cursor."""
type MRPJobsEdge {
  """The item at the end of the edge"""
  node: MRPJob

  """A cursor for use in pagination"""
  cursor: String!
}

input MRPJobsInputFilters {
  or_: [MRPJobsInputFilters]
  and_: [MRPJobsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  startTime: DateTimeFilter
  endTime: DateTimeFilter
  status: JobstatusenumFilter
  failedReason: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isLatest: BooleanFilter
  planItems: PlanItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum MRPJobSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  START_TIME_ASC
  START_TIME_DESC
  END_TIME_ASC
  END_TIME_DESC
  STATUS_ASC
  STATUS_DESC
  FAILED_REASON_ASC
  FAILED_REASON_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Register all mutations and fields."""
type Mutation {
  """Create an API Credential Set."""
  createApiKey: CreateAPIKey

  """Delete an API Credential Set."""
  deleteApiKey(input: APIKeyInput!): DeleteAPIKey

  """Updates API Credential sets."""
  updateApiKey(input: APIKeyInput!): UpdateAPIKey

  """Creates a new Procedure."""
  createProcedure(attributes: [ExtensibleAttributeInput], description: String, exportControlled: Boolean, input: CreateProcedureInput, title: String!, type: Proceduretypeenum): CreateProcedure

  """Updates a Procedure given an UpdateProcedureInput argument."""
  updateProcedure(input: UpdateProcedureInput!): UpdateProcedure

  """Delete an unused procedure in draft."""
  deleteProcedure(etag: String!, id: ID!): DeleteProcedure

  """Clones a Procedure given it's Id."""
  cloneProcedure(etag: String!, procedureId: ID!): CloneProcedure
  updateProcedureAttribute(input: UpdateProcedureAttributeInput!): UpdateProcedureAttribute

  """
  Create a new version of a Procedure given a familyId.
  
  (optionally) Create a new version of a Procedure within
  the family by specifying its familyId and procedureId.
  """
  createProcedureVersion(familyId: ID!, procedureId: ID): CreateProcedureVersion

  """
  Relates a label to a procedure family given a LabelToProcedureFamilyInput item.
  """
  addLabelToProcedureFamily(input: LabelToProcedureFamilyInput!): AddLabelToProcedureFamily

  """Removes a label from a procedure family given family and label ids."""
  removeLabelFromProcedureFamily(input: LabelToProcedureFamilyInput!): RemoveLabelFromProcedureFamily

  """Copies a step given a CopyStandardStepInput."""
  copyStandardStep(input: CopyStandardStepInput!): CopyStandardStep

  """Create a new version of a Standard Step given a family_id."""
  createStandardStepVersion(input: CreateStandardStepVersionInput!): CreateStandardStepVersion

  """Creates mBOM substitutes given a list of CreateMBomSubstituteInputs."""
  createMbomSubstitutes(input: [CreateMBomSubstituteInput]): CreateMBomSubstitutes

  """Creates multiple mBOM items given a list of CreateMBomItemInputs."""
  createMultipleMbomItems(input: CreateMultipleMBomItemsInput!): CreateMultipleMBomItems

  """Creates a PartInstance in an ABOM given an id."""
  createAbomForPartInventory(etag: String!, id: ID!): CreateABomForPartInventory

  """Installs kit on aBOM children mutation."""
  installKitOnAbomItemChildren(input: InstallKitOnAbomItemChildrenInput!): InstallKitOnAbomItemChildren

  """Creates a step given a CreateStepInput."""
  createStep(input: CreateStepInput!): CreateStep

  """Updates a step given a UpdateStepInput."""
  updateStep(input: UpdateStepInput!): UpdateStep

  """Deletes a step by Id."""
  deleteStep(etag: String!, id: ID!): DeleteStep

  """Copies a step given a CopyStepInput."""
  copyStep(input: CopyStepInput!): CopyStep

  """Reorders Steps given a ReorderStepInput."""
  reorderSteps(input: ReorderStepsInput!): ReorderSteps

  """Import a step from a PDF."""
  importStepsFromPdf(input: ImportStepsFromPDFInput!): ImportStepsFromPDF

  """Operations against a datagrid in a step."""
  stepDatagridOperations(input: DataGridOperationsInput!): StepDataGridOperations

  """Creates a StepField given a CreateStepFieldInput."""
  createStepField(input: CreateStepFieldInput!): CreateStepField

  """Updates a StepField given a UpdateStepField argument."""
  updateStepField(input: UpdateStepFieldInput!): UpdateStepField

  """Deletes a StepField given an id."""
  deleteStepField(etag: String!, id: ID!): DeleteStepField

  """Reorders stepfields given a ReorderStepFieldsInput argument."""
  reorderStepFields(input: ReorderStepFieldsInput!): ReorderStepFields
  updateStepAttribute(input: UpdateStepAttributeInput!): UpdateStepAttribute

  """Creates a RunStep given a CreateRunStepInput argument."""
  createRunStep(input: CreateRunStepInput!): CreateRunStep

  """Updates a RunStep given a UpdateRunStepInput argument."""
  updateRunStep(input: UpdateRunStepInput!): UpdateRunStep

  """Reorders RunStep(s) given a ReorderRunStepInput argument."""
  reorderRunSteps(input: ReorderRunStepsInput!): ReorderRunSteps
  updateRunStepAttribute(input: UpdateRunStepAttributeInput!): UpdateRunStepAttribute

  """Updates RunStepFields during redlining."""
  updateRunStepField(input: UpdateRunStepFieldInput!): UpdateRunStepField

  """
  Updates a RunStepField value given UpdateRunStepFieldValue Input argument.
  """
  updateRunStepFieldValue(input: UpdateRunStepFieldValueInput!): UpdateRunStepFieldValue

  """Cancels RunStep redlining given an id."""
  cancelRunStepRedline(etag: String!, id: ID!): CancelRunStepRedline

  """Operations against a datagrid in a run step."""
  runStepDatagridOperations(input: DataGridOperationsInput!): RunStepDataGridOperations

  """Creates Runs given a list of CreateRunInput argument."""
  createRuns(input: [CreateRunInput]): CreateRuns

  """Cancels a Run given a CancelRunInput argument."""
  cancelRun(input: CancelRunInput!): CancelRun

  """Archives a Run given a ArchiveRunInput argument."""
  archiveRun(input: ArchiveRunInput!): ArchiveRun

  """Updates Runs given a list of UpdateRunInput argument."""
  updateRuns(input: [UpdateRunInput]): UpdateRuns
  updateRunAttribute(input: UpdateRunAttributeInput!): UpdateRunAttribute

  """
  Kicks off a Run summary export given a GenerateRunSummaryInput argument.
  """
  generateRunSummary(input: GenerateRunSummaryInput!): GenerateRunSummary

  """Copies a procedure step to a run."""
  copyStepToRun(input: CopyStepToRunInput!): CopyStepToRun

  """
  Creates a FileAttachment given a CreateFileAttachmentInput argument.
  
  Attaching a file has been deprecated, and will not be supported in the future.
  This mutation now returns a signed URL which allows the client to upload the file.
  """
  createFileAttachment(input: CreateFileAttachmentInput!): CreateFileAttachment

  """Delete a FileAttachment."""
  deleteFileAttachment(input: DeleteFileAttachmentInput!): DeleteFileAttachment

  """Resend an invite to Ion given an id."""
  resendInvite(etag: String!, id: ID!): ResendInvite

  """Revokes an invite to Ion given an id."""
  revokeInvite(etag: String!, id: ID!): RevokeInvite

  """Attaches a Role to a User given a RoleToUserInput argument."""
  attachRoleToUser(input: RoleToUserInput!): AttachRoleToUser

  """Detaches a Role from a User."""
  detachRoleFromUser(input: RoleToUserInput!): DetachRoleFromUser

  """Deletes a role given an id."""
  deleteRole(id: Int!): DeleteRole

  """Deletes a team given an id."""
  deleteTeam(id: Int!): DeleteTeam

  """Relates a User to a Team given a TeamToUserInput argument."""
  addUserToTeam(input: TeamToUserInput!): AddUserToTeam

  """Attaches a Role to a Team given a TeamToRoleInput."""
  attachRoleToTeam(input: TeamToRoleInput!): AttachRoleToTeam

  """Detaches a Role from a Team given a TeamToRoleInput argument."""
  detachRoleFromTeam(input: TeamToRoleInput!): DetachRoleFromTeam

  """Removes a User from a Team given an Id."""
  removeUserFromTeam(input: TeamToUserInput!): RemoveUserFromTeam

  """Creates an Asset given a CreateFileAttachmentInput argument."""
  createAsset(input: CreateFileAttachmentInput!): CreateAsset

  """Delete an asset."""
  deleteAsset(input: DeleteFileAttachmentInput!): DeleteAsset

  """Create a part."""
  createPart(input: CreatePartInput!): CreatePart

  """Update a part and its attributes."""
  updatePart(input: UpdatePartInput!): UpdatePart

  """Create or update multiple parts from an import."""
  createOrUpdateMultipleParts(input: CreateOrUpdateMultiplePartsInput!): CreateOrUpdateMultipleParts
  updatePartAttribute(input: UpdatePartAttributeInput!): UpdatePartAttribute

  """Create a revision for a part."""
  createPartRevision(input: CreatePartRevisionInput!): CreatePartRevision

  """Moves an item to inventory given its inventory and part kit ids."""
  moveItemToInventory(input: InventoryToKitInput): MoveItemToInventory

  """Create session event of type check in."""
  checkIn(input: SessionEventInput!): CheckIn

  """Create session event of type check out."""
  checkOut(input: SessionEventInput!): CheckOut

  """Create part inventories given a list of CreatePartInventoryInput."""
  createPartInventories(input: [CreatePartInventoryInput]): CreatePartInventories

  """
  Issues an item to a PartKitItem given its inventory and part kit item ids.
  """
  issueItemToKit(input: InventoryToKitInput): IssueItemToKit

  """Sends a notification to a particular user."""
  dispatchNotification(input: DispatchNotificationInput!): DispatchNotification

  """Subscribe to updates to an entity."""
  createUserSubscription(input: CreateUserSubscriptionInput!): CreateUserSubscription

  """Creates a ReviewRequest given a ReviewRequestInput argument."""
  createReviewRequest(input: ReviewRequestInput!): CreateReviewRequest

  """Copies a field to a new step given a CopyFieldInput."""
  copyField(input: CopyFieldInput!): CopyField

  """
  (Deprecated) Merge run step into procedure step.
  
  This mutation has been deprecated in favor of MergeRunStepToProcedure.
  """
  mergeRunStep(input: MergeRunStepInput!): MergeRunStep @deprecated(reason: "Renamed MergeRunStepToProcedure to avoid confusion with a new merging mutation: MergeRunStepToRuns.")

  """Merge run step into procedure step."""
  mergeRunStepToProcedure(input: MergeRunStepToProcedureInput!): MergeRunStepToProcedure

  """Merge a redlined run step onto other runs/run steps."""
  mergeRunStepToRuns(input: MergeRunStepToRunsInput!): MergeRunStepToRuns

  """Mutation to add an inventory item to a purchase order line."""
  addInventoryToPurchaseOrderLine(input: PurchaseOrderLineToInventoryInput): AddInventoryToPurchaseOrderLine

  """Mutation to remove an inventory item from a purchase order line."""
  removeInventoryFromPurchaseOrderLine(input: PurchaseOrderLineToInventoryInput): RemoveInventoryFromPurchaseOrderLine

  """Mutation to add a label to an item which has an entity."""
  addLabelToItem(input: LabelToItemInput!): AddLabelToItem

  """Mutation to remove a label from an item which has an entity."""
  removeLabelFromItem(input: LabelToItemInput!): RemoveLabelFromItem

  """Reorders runStepfields given a ReorderRunStepFieldsInput argument."""
  reorderRunStepFields(input: ReorderRunStepFieldsInput!): ReorderRunStepFields

  """Add a plan item to a plan."""
  addPlanItemToPlan(input: PlanItemToPlanInput): AddPlanItemToPlan

  """Remove plan item from plan."""
  removePlanItemFromPlan(input: PlanItemToPlanInput): RemovePlanItemFromPlan

  """Add a result to a plan item."""
  addResultToPlanItem(input: ResultToPlanItemInput): AddResultToPlanItem

  """Remove result from plan item."""
  removeResultFromPlanItem(input: ResultToPlanItemInput): RemoveResultFromPlanItem

  """Convert Runs and Purchase Order as results of Plan Item."""
  convertResultsFromPlanItem(input: ConvertResultsFromPlanItemInput): ConvertResultsFromPlanItem

  """Mutation to add an header to webhook receiver."""
  addHeaderToWebhookReceiver(input: WebhookReceiverHeaderInput): AddHeaderToWebhookReceiver

  """Mutation to remove a header from a webhook receiver."""
  removeHeaderFromWebhookReceiver(input: WebhookReceiverHeaderInput): RemoveHeaderFromWebhookReceiver

  """Add multiple inventories to receipt."""
  addInventoriesToReceipt(input: [AddInventoryToReceiptInput]): AddInventoriesToReceipt @deprecated(reason: "Use AddItemsToReceipt instead, which allows for both part and non-part items to be added to a receipt.")

  """Add a quantity of inventory to receipt."""
  addInventoryToReceipt(input: AddInventoryToReceiptInput): AddInventoryToReceipt @deprecated(reason: "Use AddItemsToReceipt instead, which allows for multiple items to be added.")

  """Add multiple items to receipt."""
  addItemsToReceipt(input: [AddItemToReceiptInput]): AddItemsToReceipt

  """Remove inventory from receipt."""
  removeInventoryFromReceipt(input: RemoveInventoryFromReceiptInput): RemoveInventoryFromReceipt @deprecated(reason: "Use RemoveItemFromReceipt instead, which allows for both part and non-part items to be removed from a receipt.")

  """Remove item from receipt."""
  removeItemFromReceipt(input: RemoveItemFromReceiptInput): RemoveItemFromReceipt

  """Reorder a purchase order line to a new index."""
  reorderPurchaseOrderLine(input: ReorderPurchaseOrderLineInput!): ReorderPurchaseOrderLine

  """Reorder a datagrid row to a new index."""
  reorderDatagridRow(input: ReorderDatagridInput!): ReorderDatagridRow

  """Reorder a datagrid column to a new index."""
  reorderDatagridColumn(input: ReorderDatagridInput!): ReorderDatagridColumn

  """Set a datagrid value."""
  setDatagridValue(input: SetDatagridValueInput!): SetDatagridValue

  """Add a part subtype to a part."""
  addSubtypeToPart(input: PartSubtypeToPartInput): AddSubtypeToPart

  """Remove part subtype from part."""
  removeSubtypeFromPart(input: PartSubtypeToPartInput): RemoveSubtypeFromPart
  updateIssueAttribute(input: UpdateIssueAttributeInput!): UpdateIssueAttribute
  updateLocationAttribute(input: UpdateLocationAttributeInput!): UpdateLocationAttribute
  updateMbomAttribute(input: UpdateMbomAttributeInput!): UpdateMbomAttribute
  updatePartInventoryAttribute(input: UpdatePartInventoryAttributeInput!): UpdatePartInventoryAttribute
  updatePurchaseOrderAttribute(input: UpdatePurchaseOrderAttributeInput!): UpdatePurchaseOrderAttribute
  updatePurchaseOrderLineAttribute(input: UpdatePurchaseOrderLineAttributeInput!): UpdatePurchaseOrderLineAttribute
  updateSupplierAttribute(input: UpdateSupplierAttributeInput!): UpdateSupplierAttribute
  updateReceiptAttribute(input: UpdateReceiptAttributeInput!): UpdateReceiptAttribute

  """Mutation to add a requirement to an item which has an entity."""
  addRequirementToItem(input: RequirementToItemInput!): AddRequirementToItem

  """Mutation to remove a requirement from an item which has an entity."""
  removeRequirementFromItem(input: RequirementToItemInput!): RemoveRequirementFromItem

  """Create part kit based on run abom/mbom."""
  createKitForRun(input: CreateKitForRunInput!): CreateKitForRun

  """Split unfulfilled part kit items into new part kit."""
  splitUnfulfilledPartKit(input: SplitUnfulfilledPartKitInput!): SplitUnfulfilledPartKit
  updatePartKitAttribute(input: UpdatePartKitAttributeInput!): UpdatePartKitAttribute
  updatePartKitItemAttribute(input: UpdatePartKitItemAttributeInput!): UpdatePartKitItemAttribute

  """Move all inventory in a kit to one location."""
  moveKitInventoryToLocation(input: MoveKitInventoryToLocationInput!): MoveKitInventoryToLocation

  """Add parts to a kit from an mBOM."""
  addPartsToKitFromMbom(input: AddPartsToKitFromMbomInput!): AddPartsToKitFromMbom

  """Attach a part inventory to a run step."""
  addPartInventoryToRunStep(input: AddPartInventoryToRunStepInput!): AddPartInventoryToRunStep

  """Remove a part inventory from a run step."""
  removePartInventoryFromRunStep(input: RemovePartInventoryFromRunStepInput!): RemovePartInventoryFromRunStep

  """Update a PartInventory given an UpdatePartInventoryInput."""
  updatePartInventory(input: UpdatePartInventoryInput): UpdatePartInventory

  """
  Split inventory in two and return new inventory with specified quantity.
  """
  splitPartInventory(input: SplitPartInventoryInput): SplitPartInventory

  """
  Merge part inventory list into the oldest id given.
  
  Mutation will fail if *any* ids given are not valid for merge.
  """
  mergePartInventory(input: MergePartInventoryInput): MergePartInventory

  """
  Split inventory in many inventories with specified quantities and return all.
  """
  splitManyPartInventory(input: SplitManyPartInventoryInput): SplitManyPartInventory

  """Convert Runs and Purchase Order as results of Plan Items."""
  convertResultsFromPlanItems(input: ConvertResultsFromPlanItemsInput): ConvertResultsFromPlanItems

  """Updates an Organization given a UpdateOrganizationInput argument."""
  updateOrganization(input: UpdateOrganizationInput!): UpdateOrganization

  """Create part revision format in organization settings."""
  createOrganizationPartRevisionScheme(input: CreatePartRevisionSchemeSettingInput!): CreateOrganizationPartRevisionScheme

  """Update part revision format in organization settings."""
  updateOrganizationPartRevisionScheme(input: UpdatePartRevisionSchemeSettingInput!): UpdateOrganizationPartRevisionScheme

  """Delete part revision format in organization settings."""
  deleteOrganizationPartRevisionScheme(input: DeletePartRevisionSchemeSettingInput!): DeleteOrganizationPartRevisionScheme

  """Create GlobalUniqueSerialNumber in organization settings."""
  createOrganizationGlobalUniqueSerialNumberScheme(input: CreateGlobalUniqueSerialNumberSchemeSettingInput!): CreateOrganizationGlobalUniqueSerialNumberScheme

  """Update GlobalUniqueSerialNumber in organization settings."""
  updateOrganizationGlobalUniqueSerialNumberScheme(input: UpdateGlobalUniqueSerialNumberSchemeSettingInput!): UpdateOrganizationGlobalUniqueSerialNumberScheme

  """Delete GlobalUniqueSerialNumber in organization settings."""
  deleteOrganizationGlobalUniqueSerialNumberScheme(input: DeleteGlobalUniqueSerialNumberSchemeSettingInput!): DeleteOrganizationGlobalUniqueSerialNumberScheme

  """Update or insert part attribute in organization settings."""
  updateOrganizationPartAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPartAttributes

  """Delete a part attribute from organization settings."""
  deleteOrganizationPartAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPartAttributes

  """Update or insert part inventory attribute in organization settings."""
  updateOrganizationPartInventoryAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPartInventoryAttributes

  """Delete a part inventory attribute from organization settings."""
  deleteOrganizationPartInventoryAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPartInventoryAttributes

  """Update or insert location attribute in organization settings."""
  updateOrganizationLocationAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationLocationAttributes

  """Delete location attribute from organization settings."""
  deleteOrganizationLocationAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationLocationAttributes

  """Update or insert mbom attribute in organization settings."""
  updateOrganizationMbomAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationMbomAttributes

  """Delete mbom attribute from organization settings."""
  deleteOrganizationMbomAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationMbomAttributes

  """Update or insert Procedure attribute in organization settings."""
  updateOrganizationProcedureAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationProcedureAttributes

  """Delete Procedure attribute from organization settings."""
  deleteOrganizationProcedureAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationProcedureAttributes

  """Update or insert purchase order attribute in organization settings."""
  updateOrganizationPurchaseOrderAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPurchaseOrderAttributes

  """Delete purchase order attribute from organization settings."""
  deleteOrganizationPurchaseOrderAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPurchaseOrderAttributes

  """Update or insert supplier attribute in organization settings."""
  updateOrganizationSupplierAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationSupplierAttributes

  """Delete supplier attribute from organization settings."""
  deleteOrganizationSupplierAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationSupplierAttributes

  """Update or insert issue attribute in organization settings."""
  updateOrganizationIssueAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationIssueAttributes

  """Delete issue attribute from organization settings."""
  deleteOrganizationIssueAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationIssueAttributes

  """
  Update or insert purchase order line attribute in organization settings.
  """
  updateOrganizationPurchaseOrderLineAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPurchaseOrderLineAttributes

  """Delete purchase order line attribute from organization settings."""
  deleteOrganizationPurchaseOrderLineAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPurchaseOrderLineAttributes

  """Update or insert part kit attribute in organization settings."""
  updateOrganizationPartKitAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPartKitAttributes

  """Delete a part kit attribute from organization settings."""
  deleteOrganizationPartKitAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPartKitAttributes

  """Update or insert part kit item attribute in organization settings."""
  updateOrganizationPartKitItemAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationPartKitItemAttributes

  """Delete a part kit item attribute from organization settings."""
  deleteOrganizationPartKitItemAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationPartKitItemAttributes

  """Update or insert receipt attribute in organization settings."""
  updateOrganizationReceiptAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationReceiptAttributes

  """Delete a receipt attribute from organization settings."""
  deleteOrganizationReceiptAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationReceiptAttributes

  """Update or insert run attribute in organization settings."""
  updateOrganizationRunAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationRunAttributes

  """Delete a run attribute from organization settings."""
  deleteOrganizationRunAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationRunAttributes

  """
  Attaches a PermissionGroup to a Role given a PermissionGroupToRoleInput argument.
  """
  attachPermissionGroupToRole(input: PermissionGroupToRoleInput!): AttachPermissionGroupToRole

  """Detaches a Permission Group from a Role."""
  detachPermissionGroupFromRole(input: PermissionGroupToRoleInput!): DetachPermissionGroupFromRole

  """Update or insert RunStep attribute in organization settings."""
  updateOrganizationRunStepAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationRunStepAttributes

  """Delete RunStep attribute from organization settings."""
  deleteOrganizationRunStepAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationRunStepAttributes

  """Update or insert Step attribute in organization settings."""
  updateOrganizationStepAttributes(input: UpdateAttributeSettingsInput!): UpdateOrganizationStepAttributes

  """Delete Step attribute from organization settings."""
  deleteOrganizationStepAttributes(input: DeleteAttributeSettingsInput!): DeleteOrganizationStepAttributes

  """Deletes a PurchaseOrder given an id."""
  deletePurchaseOrder(etag: String!, id: ID!): DeletePurchaseOrder

  """Deletes an Issue Disposition Type Role given an input object."""
  deleteIssueDispositionTypeRole(deleteInput: DeleteIssueDispositionTypeRoleInput): DeleteIssueDispositionTypeRole

  """Reset issue approvals given a ResetIssueApprovalsInput."""
  resetIssueApprovals(input: ResetIssueApprovalsInput!): ResetIssueApprovals

  """Create a Sigma signed url with "viewer" permissions."""
  generateReadEmbeddedAnalytics: GenerateReadEmbeddedAnalytics

  """Create a Sigma signed url with "explorer" permissions."""
  generateWriteEmbeddedAnalytics: GenerateWriteEmbeddedAnalytics

  """Delete an MBomApprovalRole given an input object."""
  deleteMbomApprovalRole(input: DeleteMBomApprovalRoleInput): DeleteMBomApprovalRole

  """Deletes an Issue Part Inventory given an input object."""
  deleteIssuePartInventory(input: DeleteIssuePartInventoryInput): DeleteIssuePartInventory
  updateAbomItem(input: UpdateABomItemInput!): UpdateABomItem
  createAbomItem(input: CreateABomItemInput!): CreateABomItem
  deleteAbomItem(etag: String!, id: ID!): DeleteABomItem
  updateBarcodePattern(input: UpdateBarcodePatternInput!): UpdateBarcodePattern
  createBarcodePattern(input: CreateBarcodePatternInput!): CreateBarcodePattern
  deleteBarcodePattern(etag: String!, id: ID!): DeleteBarcodePattern
  updateBarcodeLabel(input: UpdateBarcodeLabelInput!): UpdateBarcodeLabel
  createBarcodeLabel(input: CreateBarcodeLabelInput!): CreateBarcodeLabel
  updateBarcodeTemplate(input: UpdateBarcodeTemplateInput!): UpdateBarcodeTemplate
  createBarcodeTemplate(input: CreateBarcodeTemplateInput!): CreateBarcodeTemplate
  updateComment(input: UpdateCommentInput!): UpdateComment
  createComment(input: CreateCommentInput!): CreateComment
  deleteComment(etag: String!, id: ID!): DeleteComment
  updateContact(input: UpdateContactInput!): UpdateContact
  createContact(input: CreateContactInput!): CreateContact
  deleteContact(etag: String!, id: ID!): DeleteContact
  updateCurrency(input: UpdateCurrencyInput!): UpdateCurrency
  createCurrency(input: CreateCurrencyInput!): CreateCurrency
  deleteCurrency(etag: String!, id: ID!): DeleteCurrency
  updateDatagridColumn(input: UpdateDatagridColumnInput!): UpdateDatagridColumn
  createDatagridColumn(input: CreateDatagridColumnInput!): CreateDatagridColumn
  deleteDatagridColumn(etag: String!, id: ID!): DeleteDatagridColumn
  updateDatagridRow(input: UpdateDatagridRowInput!): UpdateDatagridRow
  createDatagridRow(input: CreateDatagridRowInput!): CreateDatagridRow
  deleteDatagridRow(etag: String!, id: ID!): DeleteDatagridRow
  updateIntegration(input: UpdateIntegrationInput!): UpdateIntegration
  createIntegration(input: CreateIntegrationInput!): CreateIntegration
  deleteIntegration(etag: String!, id: ID!): DeleteIntegration
  createInvite(input: CreateInviteInput!): CreateInvite
  updateIssue(input: UpdateIssueInput!): UpdateIssue
  createIssue(input: CreateIssueInput!): CreateIssue
  updateIssueApproval(input: UpdateIssueApprovalInput!): UpdateIssueApproval
  createIssueApproval(input: CreateIssueApprovalInput!): CreateIssueApproval
  updateIssueApprovalRequest(input: UpdateIssueApprovalRequestInput!): UpdateIssueApprovalRequest
  createIssueApprovalRequest(input: CreateIssueApprovalRequestInput!): CreateIssueApprovalRequest
  deleteIssueApprovalRequest(etag: String!, id: ID!): DeleteIssueApprovalRequest
  createIssueRelation(input: CreateIssueRelationInput!): CreateIssueRelation
  deleteIssueRelation(etag: String!, originIssueId: ID!, relatedIssueId: ID!): DeleteIssueRelation
  updateIssueDispositionType(input: UpdateIssueDispositionTypeInput!): UpdateIssueDispositionType
  createIssueDispositionType(input: CreateIssueDispositionTypeInput!): CreateIssueDispositionType
  deleteIssueDispositionType(etag: String!, id: ID!): DeleteIssueDispositionType
  updateIssueDispositionTypeRole(input: UpdateIssueDispositionTypeRoleInput!): UpdateIssueDispositionTypeRole
  createIssueDispositionTypeRole(input: CreateIssueDispositionTypeRoleInput!): CreateIssueDispositionTypeRole
  createIssuePartInventory(input: CreateIssuePartInventoryInput!): CreateIssuePartInventory
  updateLabel(input: UpdateLabelInput!): UpdateLabel
  createLabel(input: CreateLabelInput!): CreateLabel
  deleteLabel(etag: String!, id: ID!): DeleteLabel
  updateLocation(input: UpdateLocationInput!): UpdateLocation
  createLocation(input: CreateLocationInput!): CreateLocation
  deleteLocation(etag: String!, id: ID!): DeleteLocation
  updateLocationSubtype(input: UpdateLocationSubtypeInput!): UpdateLocationSubtype
  createLocationSubtype(input: CreateLocationSubtypeInput!): CreateLocationSubtype
  deleteLocationSubtype(etag: String!, id: ID!): DeleteLocationSubtype
  updateMbom(input: UpdateMBomInput!): UpdateMBom
  createMbom(input: CreateMBomInput!): CreateMBom
  deleteMbom(etag: String!, id: ID!): DeleteMBom
  updateMbomItem(input: UpdateMBomItemInput!): UpdateMBomItem
  createMbomItem(input: CreateMBomItemInput!): CreateMBomItem
  deleteMbomItem(etag: String!, id: ID!): DeleteMBomItem
  createMbomSubstitute(input: CreateMBomSubstituteInput!): CreateMBomSubstitute
  deleteMbomSubstitute(etag: String!, id: ID!): DeleteMBomSubstitute
  updateMbomApproval(input: UpdateMBomApprovalInput!): UpdateMBomApproval
  createMbomApproval(input: CreateMBomApprovalInput!): CreateMBomApproval
  updateMbomApprovalRequest(input: UpdateMBomApprovalRequestInput!): UpdateMBomApprovalRequest
  createMbomApprovalRequest(input: CreateMBomApprovalRequestInput!): CreateMBomApprovalRequest
  deleteMbomApprovalRequest(etag: String!, id: ID!): DeleteMBomApprovalRequest
  updateMbomApprovalRole(input: UpdateMBomApprovalRoleInput!): UpdateMBomApprovalRole
  createMbomApprovalRole(input: CreateMBomApprovalRoleInput!): CreateMBomApprovalRole
  updateMbomItemReferenceDesignator(input: UpdateMBomItemReferenceDesignatorInput!): UpdateMBomItemReferenceDesignator
  createMbomItemReferenceDesignator(input: CreateMBomItemReferenceDesignatorInput!): CreateMBomItemReferenceDesignator
  deleteMbomItemReferenceDesignator(etag: String!, id: ID!): DeleteMBomItemReferenceDesignator
  updateMrpJob(input: UpdateMRPJobInput!): UpdateMRPJob
  createMrpJob(input: CreateMRPJobInput!): CreateMRPJob
  deletePart(etag: String!, id: ID!): DeletePart
  createPartInventory(input: CreatePartInventoryInput!): CreatePartInventory
  deletePartInventory(etag: String!, id: ID!): DeletePartInventory
  updatePartKit(input: UpdatePartKitInput!): UpdatePartKit
  createPartKit(input: CreatePartKitInput!): CreatePartKit
  deletePartKit(etag: String!, id: ID!): DeletePartKit
  updatePartKitItem(input: UpdatePartKitItemInput!): UpdatePartKitItem
  createPartKitItem(input: CreatePartKitItemInput!): CreatePartKitItem
  deletePartKitItem(etag: String!, id: ID!): DeletePartKitItem
  updatePartProcedure(input: UpdatePartProcedureInput!): UpdatePartProcedure
  createPartProcedure(input: CreatePartProcedureInput!): CreatePartProcedure
  deletePartProcedure(etag: String!, partId: ID!, procedureId: ID!): DeletePartProcedure
  updatePartSubtype(input: UpdatePartSubtypeInput!): UpdatePartSubtype
  createPartSubtype(input: CreatePartSubtypeInput!): CreatePartSubtype
  deletePartSubtype(etag: String!, id: ID!): DeletePartSubtype
  updatePlan(input: UpdatePlanInput!): UpdatePlan
  createPlan(input: CreatePlanInput!): CreatePlan
  deletePlan(etag: String!, id: ID!): DeletePlan
  updateInputToPlan(input: UpdateInputToPlanInput!): UpdateInputToPlan
  addInputToPlan(input: AddInputToPlanInput!): AddInputToPlan
  removeInputFromPlan(etag: String!, id: ID!): RemoveInputFromPlan
  updatePlanItem(input: UpdatePlanItemInput!): UpdatePlanItem
  createPlanItem(input: CreatePlanItemInput!): CreatePlanItem
  deletePlanItem(etag: String!, id: ID!): DeletePlanItem
  updatePlanItemAllocation(input: UpdatePlanItemAllocationInput!): UpdatePlanItemAllocation
  createPlanItemAllocation(input: CreatePlanItemAllocationInput!): CreatePlanItemAllocation
  deletePlanItemAllocation(childPlanItemId: ID!, etag: String!, parentPlanItemId: ID!): DeletePlanItemAllocation
  updatePlanReservation(input: UpdatePlanReservationInput!): UpdatePlanReservation
  createPlanReservation(input: CreatePlanReservationInput!): CreatePlanReservation
  deletePlanReservation(etag: String!, id: ID!): DeletePlanReservation
  updatePurchaseOrder(input: UpdatePurchaseOrderInput!): UpdatePurchaseOrder
  createPurchaseOrder(input: CreatePurchaseOrderInput!): CreatePurchaseOrder
  updatePurchaseOrderApproval(input: UpdatePurchaseOrderApprovalInput!): UpdatePurchaseOrderApproval
  createPurchaseOrderApproval(input: CreatePurchaseOrderApprovalInput!): CreatePurchaseOrderApproval
  updatePurchaseOrderApprovalRequest(input: UpdatePurchaseOrderApprovalRequestInput!): UpdatePurchaseOrderApprovalRequest
  createPurchaseOrderApprovalRequest(input: CreatePurchaseOrderApprovalRequestInput!): CreatePurchaseOrderApprovalRequest
  deletePurchaseOrderApprovalRequest(etag: String!, id: ID!): DeletePurchaseOrderApprovalRequest
  updatePurchaseOrderFee(input: UpdatePurchaseOrderFeeInput!): UpdatePurchaseOrderFee
  createPurchaseOrderFee(input: CreatePurchaseOrderFeeInput!): CreatePurchaseOrderFee
  deletePurchaseOrderFee(etag: String!, id: ID!): DeletePurchaseOrderFee
  updatePurchaseOrderLine(input: UpdatePurchaseOrderLineInput!): UpdatePurchaseOrderLine
  createPurchaseOrderLine(input: CreatePurchaseOrderLineInput!): CreatePurchaseOrderLine
  deletePurchaseOrderLine(etag: String!, id: ID!): DeletePurchaseOrderLine
  updateReceipt(input: UpdateReceiptInput!): UpdateReceipt
  createReceipt(input: CreateReceiptInput!): CreateReceipt
  deleteReceipt(etag: String!, id: ID!): DeleteReceipt
  updateReceiptItem(input: UpdateReceiptItemInput!): UpdateReceiptItem
  updateRedline(input: UpdateRedlineInput!): UpdateRedline
  updateRedlineApproval(input: UpdateRedlineApprovalInput!): UpdateRedlineApproval
  createRedlineApproval(input: CreateRedlineApprovalInput!): CreateRedlineApproval
  updateRedlineApprovalRequest(input: UpdateRedlineApprovalRequestInput!): UpdateRedlineApprovalRequest
  createRedlineApprovalRequest(input: CreateRedlineApprovalRequestInput!): CreateRedlineApprovalRequest
  deleteRedlineApprovalRequest(etag: String!, id: ID!): DeleteRedlineApprovalRequest
  updateRequirement(input: UpdateRequirementInput!): UpdateRequirement
  createRequirement(input: CreateRequirementInput!): CreateRequirement
  deleteRequirement(etag: String!, id: ID!): DeleteRequirement
  updateReview(input: UpdateReviewInput!): UpdateReview
  createReview(input: CreateReviewInput!): CreateReview
  updateReviewRequest(input: UpdateReviewRequestInput!): UpdateReviewRequest
  deleteReviewRequest(etag: String!, id: ID!): DeleteReviewRequest
  updateRole(input: UpdateRoleInput!): UpdateRole
  createRole(input: CreateRoleInput!): CreateRole
  updateRule(input: UpdateRuleInput!): UpdateRule
  createRule(input: CreateRuleInput!): CreateRule
  deleteRule(etag: String!, id: ID!): DeleteRule
  updateRun(input: UpdateRunInput!): UpdateRun
  createRun(input: CreateRunInput!): CreateRun
  updateRunBatch(input: UpdateRunBatchInput!): UpdateRunBatch
  createRunBatch(input: CreateRunBatchInput!): CreateRunBatch
  deleteRunStep(etag: String!, id: ID!): DeleteRunStep
  createRunStepField(input: CreateRunStepFieldInput!): CreateRunStepField
  deleteRunStepField(etag: String!, id: ID!): DeleteRunStepField
  updateRunStepFieldValidation(input: UpdateRunStepFieldValidationInput!): UpdateRunStepFieldValidation
  createRunStepFieldValidation(input: CreateRunStepFieldValidationInput!): CreateRunStepFieldValidation
  deleteRunStepFieldValidation(etag: String!, id: ID!): DeleteRunStepFieldValidation
  createRunStepEdge(input: CreateStepEdgeInput!): CreateRunStepEdge
  deleteRunStepEdge(etag: String!, id: ID!): DeleteRunStepEdge
  updateStepApproval(input: UpdateStepApprovalInput!): UpdateStepApproval
  createStepApproval(input: CreateStepApprovalInput!): CreateStepApproval
  updateStepApprovalRequest(input: UpdateStepApprovalRequestInput!): UpdateStepApprovalRequest
  createStepApprovalRequest(input: CreateStepApprovalRequestInput!): CreateStepApprovalRequest
  deleteStepApprovalRequest(etag: String!, id: ID!): DeleteStepApprovalRequest
  updateStepFieldValidation(input: UpdateStepFieldValidationInput!): UpdateStepFieldValidation
  createStepFieldValidation(input: CreateStepFieldValidationInput!): CreateStepFieldValidation
  deleteStepFieldValidation(etag: String!, id: ID!): DeleteStepFieldValidation
  createStepEdge(input: CreateStepEdgeInput!): CreateStepEdge
  deleteStepEdge(etag: String!, id: ID!): DeleteStepEdge
  updateStepMbomItemAssociation(input: UpdateStepMBomItemAssociationInput!): UpdateStepMBomItemAssociation
  createStepMbomItemAssociation(input: CreateStepMBomItemAssociationInput!): CreateStepMBomItemAssociation
  deleteStepMbomItemAssociation(etag: String!, id: ID!): DeleteStepMBomItemAssociation
  updateSupplier(input: UpdateSupplierInput!): UpdateSupplier
  createSupplier(input: CreateSupplierInput!): CreateSupplier
  deleteSupplier(etag: String!, id: ID!): DeleteSupplier
  updateTeam(input: UpdateTeamInput!): UpdateTeam
  createTeam(input: CreateTeamInput!): CreateTeam
  updateUnitOfMeasurement(input: UpdateUnitOfMeasurementInput!): UpdateUnitOfMeasurement
  createUnitOfMeasurement(input: CreateUnitOfMeasurementInput!): CreateUnitOfMeasurement
  deleteUnitOfMeasurement(etag: String!, id: ID!): DeleteUnitOfMeasurement
  updateUser(input: UpdateUserInput!): UpdateUser
  updateUserNotification(input: UpdateUserNotificationInput!): UpdateUserNotification
  deleteUserSubscription(etag: String!, id: ID!): DeleteUserSubscription
  updateWebhookHeader(input: UpdateWebhookHeaderInput!): UpdateWebhookHeader
  createWebhookHeader(input: CreateWebhookHeaderInput!): CreateWebhookHeader
  deleteWebhookHeader(etag: String!, id: ID!): DeleteWebhookHeader
  updateWebhookReceiver(input: UpdateWebhookReceiverInput!): UpdateWebhookReceiver
  createWebhookReceiver(input: CreateWebhookReceiverInput!): CreateWebhookReceiver
  deleteWebhookReceiver(etag: String!, id: ID!): DeleteWebhookReceiver
  updateWebhookSubscription(input: UpdateWebhookSubscriptionInput!): UpdateWebhookSubscription
  createWebhookSubscription(input: CreateWebhookSubscriptionInput!): CreateWebhookSubscription
  deleteWebhookSubscription(etag: String!, id: ID!): DeleteWebhookSubscription
}

"""Input to upsert extensible attributes within a nested mutation."""
input NestedExtensibleAttributeInput {
  key: String!
  value: ScalarValue
  etag: String!
}

enum NotificationTypeEnum {
  APPROVAL_REQUEST
  COMMENT
  DATAGRID_VALUE_ASSIGNED
  EXTERNAL
  ISSUE_APPROVAL_REQUEST_ASSIGNED
  ISSUE_ASSIGNED
  ISSUE_CREATED
  ISSUE_STATUS_CHANGED
  MBOM_APPROVAL_REQUEST_ASSIGNED
  MBOM_RELEASED
  MBOM_STATUS_CHANGED
  MENTION
  PART_KIT_ASSIGNED
  PART_KIT_STATUS_CHANGED
  PROCEDURE_RELEASED
  PROCEDURE_STATUS_CHANGED
  REVIEW
  REVIEW_REQUEST
  RUN_ASSIGNED
  RUN_STEP_ASSIGNED
  RUN_STEP_CHANGE
  RUN_STEP_FIELD_ASSIGNED
  SIGNOFF
}

input NotificationTypeEnumFilter {
  eq: NotificationTypeEnum
  neq: NotificationTypeEnum
  like: NotificationTypeEnum
  ilike: NotificationTypeEnum
  notlike: NotificationTypeEnum
  notilike: NotificationTypeEnum
  in: [NotificationTypeEnum]
  gt: NotificationTypeEnum
  gte: NotificationTypeEnum
  lt: NotificationTypeEnum
  lte: NotificationTypeEnum
  isnull: Boolean
}

enum OldInventorystatusenum {
  REQUESTED
  ORDERED
  CANCELED
  REJECTED
  AVAILABLE
  IN_PROGRESS
  SCRAPPED
}

"""Users and Settings related to the Ion platform."""
type Organization {
  id: Int!
  name: String
  avatar: String
  domain: String!
  orgSchema: String!
  _created: DateTime
  _etag: String
  _updated: DateTime
  settings: OrganizationSettings
  LastSessionId: String
  authField: String
  settingsStructured: String
  users: [User]
  _AnalyticsCredentialsCount: Int
}

enum organizationiontypeentitytypeenum {
  PARTS
  USERS
}

"""Organizational settings."""
type OrganizationSettings {
  numReviewersRequired: Int
  datetimeFormat: String
  issues: IssueSettings
  locations: LocationSettings
  mboms: MBomSettings
  partKitItems: PartKitItemSettings
  partsKits: PartKitSettings
  parts: PartSettings
  partsInventory: PartInventorySettings
  procedures: ProcedureSettings
  purchaseOrderLines: PurchaseOrderLineSettings
  purchaseOrders: PurchaseOrderSettings
  receipts: ReceiptSettings
  redlines: RedlineSettings
  runs: RunSettings
  rules: RuleSettings
  runSteps: RunStepSettings
  steps: StepSettings
  suppliers: SupplierSettings
}

"""Organizational settings input."""
input OrganizationSettingsInput {
  numReviewersRequired: Int
  datetimeFormat: String
  issues: IssueSettingsInput
  procedures: ProcedureSettingsInput
  steps: StepSettingsInput
  runs: RunSettingsInput
  rules: RuleSettingsInput
  redlines: RedlineSettingsInput
  purchaseOrders: PurchaseOrderSettingsInput
  parts: PartsSettingsInput
  partsInventory: PartInventorySettingsInput
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""A Part related to a Run or Procedure."""
type Part {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  cost: Float
  description: String
  id: Int!
  leadTime: Int
  maintenanceIntervalSeconds: Int
  partNumber: String!
  partType: Parttypeenum!
  revisedFromId: Int
  revision: String!
  revisionScheme: String
  sourcingStrategy: Sourcingstrategyenum
  supplierPartNumber: String
  trackingType: Trackingtypeenum
  thumbnailId: Int
  unitOfMeasureId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  latestRevision: String
  isLatestRevision: Boolean
  LatestRevisionScheme: String
  exportControlled: Boolean
  prettyStr: String
  quantity: Int
  latestMbom: MBom
  latestReleasedMbom: MBom
  mbom: [MBomItem]
  SubstituteMbom: String
  attributes: [PartAttribute]
  requirements: [Requirement]
  abomItems(filters: ABomItemsInputFilters): [ABomItem]
  inputs(filters: PlanInputsInputFilters): [PlanInput]
  mboms(filters: MBomsInputFilters): [MBom]
  MbomItemSubstitutes(filters: MBomSubstituteInputFilters): [MBomSubstitute]
  MbomItems(filters: MBomItemsInputFilters): [MBomItem]
  partKitItems(filters: PartKitItemsInputFilters): [PartKitItem]
  partProcedures(filters: PartProceduresInputFilters): [PartProcedure]
  partSubtypes(filters: PartSubtypesInputFilters): [PartSubtype]
  partsInventory(filters: PartInventoriesInputFilters): [PartInventory]
  planItems(filters: PlanItemsInputFilters): [PlanItem]
  procedures(filters: ProceduresInputFilters): [Procedure]
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters): [PurchaseOrderLine]
  revisions: [Part]
  runs(filters: RunsInputFilters): [Run]
  thumbnail(filters: FileAttachmentsInputFilters): FileAttachment
  unitOfMeasure(filters: UnitsOfMeasurementInputFilters): UnitOfMeasurement

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: PartAttributesInputFilters): [PartAttribute]
  revisedFrom: Part
  fileAttachments: [FileAttachment]
  _RequirementsCount: Int
  _AbomItemsCount: Int
  _InputsCount: Int
  _MbomsCount: Int
  _MbomItemSubstitutesCount: Int
  _MbomItemsCount: Int
  _PartKitItemsCount: Int
  _PartProceduresCount: Int
  _PartSubtypesCount: Int
  _PartsInventoryCount: Int
  _PlanItemsCount: Int
  _ProceduresCount: Int
  _PurchaseOrderLinesCount: Int
  _RunsCount: Int
  _AttributesCount: Int
  timeline(filters: PartEventFilter): [Timeline]
}

type PartAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  partId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  part(filters: PartsInputFilters): Part
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PartAttributeEventFilter): [Timeline]
}

input PartAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartAttribute
  newValues: PartAttribute
}

input PartAttributesInputFilters {
  or_: [PartAttributesInputFilters]
  and_: [PartAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  part: PartsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PartEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  cost: FloatFilter
  description: StringFilter
  id: IDFilter
  leadTime: IntFilter
  maintenanceIntervalSeconds: IntFilter
  partNumber: StringFilter
  partType: ParttypeenumFilter
  revisedFromId: IDFilter
  revision: StringFilter
  revisionScheme: StringFilter
  sourcingStrategy: SourcingstrategyenumFilter
  supplierPartNumber: StringFilter
  trackingType: TrackingtypeenumFilter
  thumbnailId: IDFilter
  unitOfMeasureId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  latestRevision: StringFilter
  isLatestRevision: BooleanFilter
  LatestRevisionScheme: StringFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Part
  newValues: Part
}

type PartInventoriesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartInventoriesEdge]!
  aggregates: AggregatesField!
}

"""A Relay edge containing a `PartInventories` and its cursor."""
type PartInventoriesEdge {
  """The item at the end of the edge"""
  node: PartInventory

  """A cursor for use in pagination"""
  cursor: String!
}

"""PartInventory filterable fields."""
input PartInventoriesInputFilters {
  kitted: BooleanFilter
  installed: BooleanFilter
  quantityIssued: FloatFilter
  quantityKitted: FloatFilter
  quantityInstalled: FloatFilter
  quantityAvailable: FloatFilter
  labels: LabelsInputFilters
  or_: [PartInventoriesInputFilters]
  and_: [PartInventoriesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  _cost: FloatFilter
  estimatedArrival: DateTimeFilter
  id: IDFilter
  lastMaintainedDate: DateTimeFilter
  locationId: IDFilter
  lotNumber: StringFilter
  needDate: DateTimeFilter
  originPartInventoryId: IDFilter
  partId: IDFilter
  quantity: FloatFilter
  quantityScrapped: FloatFilter
  serialNumber: StringFilter
  supplierId: IDFilter
  unitOfMeasureId: IDFilter
  uri: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  status: InventoryStatusFilter
  cost: FloatFilter
  estimatedTotalCost: FloatFilter
  maintenanceStatus: MaintenanceStatusFilter
  received: BooleanFilter
  identity: StringFilter
  serviceDueDate: DateTimeFilter
  mergeCandidateIds: IntFilter
  abomItems: ABomItemsInputFilters
  issues: IssueInputFilters
  location: LocationsInputFilters
  originRuns: RunsInputFilters
  part: PartsInputFilters
  partKitItems: PartKitItemsInputFilters
  purchaseOrderLines: PurchaseOrderLinesInputFilters
  receiptItems: ReceiptItemsInputFilters
  receipts: ReceiptsInputFilters
  runSteps: RunStepsInputFilters
  runs: RunsInputFilters
  supplier: SuppliersInputFilters
  unitOfMeasure: UnitsOfMeasurementInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PartInventoryAttributesInputFilters
  parentLocations: LocationsInputFilters
}

"""Inventories related to parts."""
type PartInventory {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  Cost: Float

  """PO-specific property."""
  estimatedArrival: DateTime @deprecated(reason: "Moved to related purchaseOrderLines.")
  id: Int!
  lastMaintainedDate: DateTime
  locationId: Int
  lotNumber: String

  """PO-specific property."""
  needDate: DateTime @deprecated(reason: "Moved to related purchaseOrderLines.")
  originPartInventoryId: Int
  partId: Int!
  quantity: Float!
  quantityScrapped: Float!
  serialNumber: String
  supplierId: Int
  unitOfMeasureId: Int
  uri: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  partKits: [PartKit]
  abomChildren: [ABomItem]
  abomParents: [ABomItem]
  status: InventoryStatus

  """PO-specific property."""
  cost: Float @deprecated(reason: "Moved to related purchaseOrderLines.")
  estimatedTotalCost: Float
  maintenanceStatus: MaintenanceStatus
  kitted: Boolean
  installed: Boolean
  quantityKitted: Float
  quantityIssued: Float
  quantityInstalled: Float
  quantityAvailable: Float
  received: Boolean
  trackingType: Trackingtypeenum
  usageType: String
  identity: String
  identifiable: Boolean
  serviceDueDate: DateTime
  mergeCandidateIds: [Int]
  attributes: [PartInventoryAttribute]
  labels: [Label]
  comments: [Comment]
  abomItems(filters: ABomItemsInputFilters): [ABomItem]
  issues(filters: IssueInputFilters): [Issue]
  location(filters: LocationsInputFilters): Location
  originRuns(filters: RunsInputFilters): [Run]
  part(filters: PartsInputFilters): Part
  partInventories: [PartInventory]
  partKitItems(filters: PartKitItemsInputFilters): [PartKitItem]
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters): [PurchaseOrderLine]
  receiptItems(filters: ReceiptItemsInputFilters): [ReceiptItem]
  receipts(filters: ReceiptsInputFilters): [Receipt]
  runSteps(filters: RunStepsInputFilters): [RunStep]
  runs(filters: RunsInputFilters): [Run]
  supplier(filters: SuppliersInputFilters): Supplier
  unitOfMeasure(filters: UnitsOfMeasurementInputFilters): UnitOfMeasurement

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  Attributes(filters: PartInventoryAttributesInputFilters): [PartInventoryAttribute]
  entity: Entity
  originPartInventory: PartInventory
  fileAttachments: [FileAttachment]
  parentLocations: [Location]
  _PartKitsCount: Int
  _LabelsCount: Int
  _CommentsCount: Int
  _AbomItemsCount: Int
  _IssuesCount: Int
  _OriginRunsCount: Int
  _PartKitInventoriesCount: Int
  _PartKitItemsCount: Int
  _PurchaseOrderLinesCount: Int
  _ReceiptItemsCount: Int
  _ReceiptsCount: Int
  _RunStepsCount: Int
  _RunsCount: Int
  _AttributesCount: Int
  timeline(filters: PartInventoryEventFilter): [Timeline]
}

type PartInventoryAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  partInventoryId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PartInventoryAttributeEventFilter): [Timeline]
}

input PartInventoryAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartInventoryAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartInventoryAttribute
  newValues: PartInventoryAttribute
}

input PartInventoryAttributesInputFilters {
  or_: [PartInventoryAttributesInputFilters]
  and_: [PartInventoryAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  partInventory: PartInventoriesInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PartInventoryEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  Cost: FloatFilter
  estimatedArrival: DateTimeFilter
  id: IDFilter
  lastMaintainedDate: DateTimeFilter
  locationId: IDFilter
  lotNumber: StringFilter
  needDate: DateTimeFilter
  originPartInventoryId: IDFilter
  partId: IDFilter
  quantity: FloatFilter
  quantityScrapped: FloatFilter
  serialNumber: StringFilter
  supplierId: IDFilter
  unitOfMeasureId: IDFilter
  uri: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartInventoryEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartInventory
  newValues: PartInventory
}

"""Organization settings related to parts inventory."""
type PartInventorySettings {
  attributes: [AttributeSettings]
  moveInventoryToStepLocation: Boolean
}

"""Organization settings related to parts inventory."""
input PartInventorySettingsInput {
  moveInventoryToStepLocation: Boolean
}

enum PartInventorySortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _COST_ASC
  _COST_DESC
  _STATUS_ASC
  _STATUS_DESC
  ESTIMATED_ARRIVAL_ASC
  ESTIMATED_ARRIVAL_DESC
  ID_ASC
  ID_DESC
  LAST_MAINTAINED_DATE_ASC
  LAST_MAINTAINED_DATE_DESC
  LOCATION_ID_ASC
  LOCATION_ID_DESC
  LOT_NUMBER_ASC
  LOT_NUMBER_DESC
  NEED_DATE_ASC
  NEED_DATE_DESC
  ORIGIN_PART_INVENTORY_ID_ASC
  ORIGIN_PART_INVENTORY_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  QUANTITY_SCRAPPED_ASC
  QUANTITY_SCRAPPED_DESC
  SERIAL_NUMBER_ASC
  SERIAL_NUMBER_DESC
  SUPPLIER_ID_ASC
  SUPPLIER_ID_DESC
  UNIT_OF_MEASURE_ID_ASC
  UNIT_OF_MEASURE_ID_DESC
  URI_ASC
  URI_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  KITTED_ASC
  KITTED_DESC
}

"""PartKit GraphQL object."""
type PartKit {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!

  """User id that the object is assigned to."""
  assignedToId: Int
  locationId: Int
  deliveryLocationId: Int
  runId: Int
  status: Partkitstatusenum!

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  fulfilled: Boolean
  percentFulfilled: Int
  percentKitted: Int
  partInventories: [IssuedPartInventory]
  assignees: [User]
  prettyStr: String
  attributes: [PartKitAttribute]
  labels: [Label]
  comments: [Comment]
  deliveryLocation(filters: LocationsInputFilters): Location
  location(filters: LocationsInputFilters): Location
  partKitItems(filters: PartKitItemsInputFilters): [PartKitItem]
  run(filters: RunsInputFilters): Run

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: PartKitAttributesInputFilters): [PartKitAttribute]
  fileAttachments: [FileAttachment]
  _AssigneesCount: Int
  _LabelsCount: Int
  _CommentsCount: Int
  _PartKitItemsCount: Int
  _AttributesCount: Int
  timeline(filters: PartKitEventFilter): [Timeline]
}

type PartKitAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  partKitId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  partKit(filters: PartKitsInputFilters): PartKit
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PartKitAttributeEventFilter): [Timeline]
}

input PartKitAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partKitId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartKitAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartKitAttribute
  newValues: PartKitAttribute
}

input PartKitAttributesInputFilters {
  or_: [PartKitAttributesInputFilters]
  and_: [PartKitAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partKitId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  partKit: PartKitsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PartKitEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  assignedToId: IDFilter
  locationId: IDFilter
  deliveryLocationId: IDFilter
  runId: IDFilter
  status: PartkitstatusenumFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartKitEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartKit
  newValues: PartKit
}

"""PartKitItem GraphQL object."""
type PartKitItem {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  originMbomItemId: Int
  partId: Int
  partKitId: Int
  quantity: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  fulfilled: Boolean
  partInventories: [IssuedPartInventory]
  quantityFulfilled: Float
  quantityUnfulfilled: Float
  prettyStr: String
  attributes: [PartKitItemAttribute]
  labels: [Label]
  comments: [Comment]
  originMbomItem(filters: MBomItemsInputFilters): MBomItem
  part(filters: PartsInputFilters): Part
  partKit(filters: PartKitsInputFilters): PartKit

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: PartKitItemAttributesInputFilters): [PartKitItemAttribute]
  fileAttachments: [FileAttachment]

  """
  Get first inventory to display on Kitting page. This is not very performant and should only be used on the Kitting page.
  """
  firstInventoryDisplay(includeOnOrder: Boolean!): String
  _LabelsCount: Int
  _CommentsCount: Int
  _AttributesCount: Int
  timeline(filters: PartKitItemEventFilter): [Timeline]
}

type PartKitItemAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  partKitItemId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  partKitItem(filters: PartKitItemsInputFilters): PartKitItem
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PartKitItemAttributeEventFilter): [Timeline]
}

input PartKitItemAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partKitItemId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartKitItemAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartKitItemAttribute
  newValues: PartKitItemAttribute
}

input PartKitItemAttributesInputFilters {
  or_: [PartKitItemAttributesInputFilters]
  and_: [PartKitItemAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  partKitItemId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  partKitItem: PartKitItemsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PartKitItemEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  originMbomItemId: IDFilter
  partId: IDFilter
  partKitId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartKitItemEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartKitItem
  newValues: PartKitItem
}

type PartKitItemsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartKitItemsEdge]!
}

"""A Relay edge containing a `PartKitItems` and its cursor."""
type PartKitItemsEdge {
  """The item at the end of the edge"""
  node: PartKitItem

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to part kit items."""
type PartKitItemSettings {
  attributes: [AttributeSettings]
}

"""PartKitItem filterable fields."""
input PartKitItemsInputFilters {
  comments: CommentsInputFilters
  labels: LabelsInputFilters
  or_: [PartKitItemsInputFilters]
  and_: [PartKitItemsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  originMbomItemId: IDFilter
  partId: IDFilter
  partKitId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  fulfilled: BooleanFilter
  quantityFulfilled: FloatFilter
  quantityUnfulfilled: FloatFilter
  originMbomItem: MBomItemsInputFilters
  part: PartsInputFilters
  partKit: PartKitsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PartKitItemAttributesInputFilters
}

enum PartKitItemSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  ORIGIN_MBOM_ITEM_ID_ASC
  ORIGIN_MBOM_ITEM_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  PART_KIT_ID_ASC
  PART_KIT_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

type PartKitsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartKitsEdge]!
}

"""A Relay edge containing a `PartKits` and its cursor."""
type PartKitsEdge {
  """The item at the end of the edge"""
  node: PartKit

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to part kits."""
type PartKitSettings {
  attributes: [AttributeSettings]
}

"""PartKit filterable fields."""
input PartKitsInputFilters {
  assignees: UserInputFilters
  comments: CommentsInputFilters
  labels: LabelsInputFilters
  or_: [PartKitsInputFilters]
  and_: [PartKitsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  assignedToId: IDFilter
  locationId: IDFilter
  deliveryLocationId: IDFilter
  runId: IDFilter
  status: PartkitstatusenumFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  fulfilled: BooleanFilter
  percentFulfilled: IntFilter
  percentKitted: IntFilter
  deliveryLocation: LocationsInputFilters
  location: LocationsInputFilters
  partKitItems: PartKitItemsInputFilters
  run: RunsInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PartKitAttributesInputFilters
}

enum PartKitSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  LOCATION_ID_ASC
  LOCATION_ID_DESC
  DELIVERY_LOCATION_ID_ASC
  DELIVERY_LOCATION_ID_DESC
  RUN_ID_ASC
  RUN_ID_DESC
  STATUS_ASC
  STATUS_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Partkitstatusenum {
  CANCELED
  COMPLETED
  DELIVERED
  DRAFT
  IN_PROGRESS
  REQUESTED
}

input PartkitstatusenumFilter {
  eq: Partkitstatusenum
  neq: Partkitstatusenum
  like: Partkitstatusenum
  ilike: Partkitstatusenum
  notlike: Partkitstatusenum
  notilike: Partkitstatusenum
  in: [Partkitstatusenum]
  gt: Partkitstatusenum
  gte: Partkitstatusenum
  lt: Partkitstatusenum
  lte: Partkitstatusenum
  isnull: Boolean
}

"""A Part related to a Run or Procedure."""
type PartProcedure {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  partId: ID!
  procedureId: ID!
  status: partprocedurestatusreviewstatusenum
  required: Boolean!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  part(filters: PartsInputFilters): Part
  procedure(filters: ProceduresInputFilters): Procedure

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  id: Int!
  timeline(filters: PartProcedureEventFilter): [Timeline]
}

input PartProcedureEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  partId: IDFilter
  procedureId: IDFilter
  status: partprocedurestatusreviewstatusenumFilter
  required: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartProcedureEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartProcedure
  newValues: PartProcedure
}

type PartProceduresConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartProceduresEdge]!
}

"""A Relay edge containing a `PartProcedures` and its cursor."""
type PartProceduresEdge {
  """The item at the end of the edge"""
  node: PartProcedure

  """A cursor for use in pagination"""
  cursor: String!
}

input PartProceduresInputFilters {
  or_: [PartProceduresInputFilters]
  and_: [PartProceduresInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  partId: IDFilter
  procedureId: IDFilter
  status: partprocedurestatusreviewstatusenumFilter
  required: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  part: PartsInputFilters
  procedure: ProceduresInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PartProcedureSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  STATUS_ASC
  STATUS_DESC
  REQUIRED_ASC
  REQUIRED_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

enum partprocedurestatusreviewstatusenum {
  PENDING
  APPROVED
  REJECTED
  OUTDATED
}

input partprocedurestatusreviewstatusenumFilter {
  eq: partprocedurestatusreviewstatusenum
  neq: partprocedurestatusreviewstatusenum
  like: partprocedurestatusreviewstatusenum
  ilike: partprocedurestatusreviewstatusenum
  notlike: partprocedurestatusreviewstatusenum
  notilike: partprocedurestatusreviewstatusenum
  in: [partprocedurestatusreviewstatusenum]
  gt: partprocedurestatusreviewstatusenum
  gte: partprocedurestatusreviewstatusenum
  lt: partprocedurestatusreviewstatusenum
  lte: partprocedurestatusreviewstatusenum
  isnull: Boolean
}

"""Organization settings for part revision format and restrictions."""
type PartRevisionSchemeSettings {
  name: String
  allowOverflow: Boolean
  format: [String]
  default: Boolean
}

type PartsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartsEdge]!
}

"""A Relay edge containing a `Parts` and its cursor."""
type PartsEdge {
  """The item at the end of the edge"""
  node: Part

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to parts."""
type PartSettings {
  attributes: [AttributeSettings]
  revisionSchemes: [PartRevisionSchemeSettings]
  globalUniqueSerialNumbers: [GlobalUniqueSerialNumberSchemeSettings]
  partInterchangeability: Boolean
}

"""Additional filterable fields."""
input PartsInputFilters {
  requirements: RequirementsInputFilters
  or_: [PartsInputFilters]
  and_: [PartsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  cost: FloatFilter
  description: StringFilter
  id: IDFilter
  leadTime: IntFilter
  maintenanceIntervalSeconds: IntFilter
  partNumber: StringFilter
  partType: ParttypeenumFilter
  revisedFromId: IDFilter
  revision: StringFilter
  revisionScheme: StringFilter
  sourcingStrategy: SourcingstrategyenumFilter
  supplierPartNumber: StringFilter
  trackingType: TrackingtypeenumFilter
  thumbnailId: IDFilter
  unitOfMeasureId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  latestRevision: StringFilter
  isLatestRevision: BooleanFilter
  _latest_revision_scheme: StringFilter
  exportControlled: BooleanFilter
  abomItems: ABomItemsInputFilters
  inputs: PlanInputsInputFilters
  mboms: MBomsInputFilters
  MbomItemSubstitutes: MBomSubstituteInputFilters
  MbomItems: MBomItemsInputFilters
  partKitItems: PartKitItemsInputFilters
  partProcedures: PartProceduresInputFilters
  partSubtypes: PartSubtypesInputFilters
  partsInventory: PartInventoriesInputFilters
  planItems: PlanItemsInputFilters
  procedures: ProceduresInputFilters
  purchaseOrderLines: PurchaseOrderLinesInputFilters
  runs: RunsInputFilters
  thumbnail: FileAttachmentsInputFilters
  unitOfMeasure: UnitsOfMeasurementInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PartAttributesInputFilters
}

enum PartSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  COST_ASC
  COST_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  _EXPORT_CONTROLLED_ASC
  _EXPORT_CONTROLLED_DESC
  ID_ASC
  ID_DESC
  LEAD_TIME_ASC
  LEAD_TIME_DESC
  MAINTENANCE_INTERVAL_SECONDS_ASC
  MAINTENANCE_INTERVAL_SECONDS_DESC
  PART_NUMBER_ASC
  PART_NUMBER_DESC
  PART_TYPE_ASC
  PART_TYPE_DESC
  REVISED_FROM_ID_ASC
  REVISED_FROM_ID_DESC
  REVISION_ASC
  REVISION_DESC
  REVISION_SCHEME_ASC
  REVISION_SCHEME_DESC
  SOURCING_STRATEGY_ASC
  SOURCING_STRATEGY_DESC
  SUPPLIER_PART_NUMBER_ASC
  SUPPLIER_PART_NUMBER_DESC
  TRACKING_TYPE_ASC
  TRACKING_TYPE_DESC
  THUMBNAIL_ID_ASC
  THUMBNAIL_ID_DESC
  UNIT_OF_MEASURE_ID_ASC
  UNIT_OF_MEASURE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""
Organization settings related to parts.

Some of them. Occasionally.
TODO Normalize org part settings
"""
input PartsSettingsInput {
  partInterchangeability: Boolean
}

"""A PartSubtype related to a Part."""
type PartSubtype {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  description: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  parts(filters: PartsInputFilters): [Part]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _PartsCount: Int
  timeline(filters: PartSubtypeEventFilter): [Timeline]
}

input PartSubtypeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PartSubtypeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PartSubtype
  newValues: PartSubtype
}

type PartSubtypesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PartSubtypesEdge]!
}

"""A Relay edge containing a `PartSubtypes` and its cursor."""
type PartSubtypesEdge {
  """The item at the end of the edge"""
  node: PartSubtype

  """A cursor for use in pagination"""
  cursor: String!
}

input PartSubtypesInputFilters {
  or_: [PartSubtypesInputFilters]
  and_: [PartSubtypesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  parts: PartsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PartSubtypeSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""
Input object relating a part subtype to a part through part subtype id.
"""
input PartSubtypeToPartInput {
  etag: String!
  partSubtypeId: Int!
  partId: Int!
}

enum Parttypeenum {
  PART
  TOOL
}

input ParttypeenumFilter {
  eq: Parttypeenum
  neq: Parttypeenum
  like: Parttypeenum
  ilike: Parttypeenum
  notlike: Parttypeenum
  notilike: Parttypeenum
  in: [Parttypeenum]
  gt: Parttypeenum
  gte: Parttypeenum
  lt: Parttypeenum
  lte: Parttypeenum
  isnull: Boolean
}

"""GraphQL object."""
type Permission {
  id: Int!
  action: Permissionactionenum!
  resource: String!
  resourceTypeName: Gqltypeenum!
  field: String
  fieldTypeName: String
  isConnection: Boolean!
  prettyStr: String
  permissionGroups(filters: PermissionGroupsInputFilters): [PermissionGroup]
  _created: DateTime
  _updated: DateTime
  _etag: String
  _PermissionGroupsCount: Int
  _PermissionPermissionGroupsCount: Int
  timeline(filters: PermissionEventFilter): [Timeline]
}

enum Permissionactionenum {
  UPDATE
  CREATE
  DELETE
  READ
  UPSERT
}

input PermissionactionenumFilter {
  eq: Permissionactionenum
  neq: Permissionactionenum
  like: Permissionactionenum
  ilike: Permissionactionenum
  notlike: Permissionactionenum
  notilike: Permissionactionenum
  in: [Permissionactionenum]
  gt: Permissionactionenum
  gte: Permissionactionenum
  lt: Permissionactionenum
  lte: Permissionactionenum
  isnull: Boolean
}

input PermissionEventFilter {
  id: IDFilter
  action: PermissionactionenumFilter
  resource: StringFilter
  resourceTypeName: GqltypeenumFilter
  field: StringFilter
  fieldTypeName: StringFilter
  isConnection: BooleanFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PermissionEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Permission
  newValues: Permission
}

"""GraphQL object."""
type PermissionGroup {
  id: Int!
  name: String!
  family: String!
  prettyStr: String
  permissions(filters: PermissionsInputFilters): [Permission]
  roles(filters: RolesInputFilters): [Role]
  _created: DateTime
  _updated: DateTime
  _etag: String
  _PermissionsCount: Int
  _RolesCount: Int
  timeline(filters: PermissionGroupEventFilter): [Timeline]
}

input PermissionGroupEventFilter {
  id: IDFilter
  name: StringFilter
  family: StringFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PermissionGroupEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PermissionGroup
  newValues: PermissionGroup
}

type PermissionGroupsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PermissionGroupsEdge]!
}

"""A Relay edge containing a `PermissionGroups` and its cursor."""
type PermissionGroupsEdge {
  """The item at the end of the edge"""
  node: PermissionGroup

  """A cursor for use in pagination"""
  cursor: String!
}

input PermissionGroupsInputFilters {
  or_: [PermissionGroupsInputFilters]
  and_: [PermissionGroupsInputFilters]
  id: IDFilter
  name: StringFilter
  family: StringFilter
  permissions: PermissionsInputFilters
  roles: RolesInputFilters
}

enum PermissionGroupSortEnum {
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  FAMILY_ASC
  FAMILY_DESC
}

"""Inputs needed to associate a permission group to a role."""
input PermissionGroupToRoleInput {
  permissionGroupId: Int!
  roleId: Int!
}

type PermissionsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PermissionsEdge]!
}

"""A Relay edge containing a `Permissions` and its cursor."""
type PermissionsEdge {
  """The item at the end of the edge"""
  node: Permission

  """A cursor for use in pagination"""
  cursor: String!
}

input PermissionsInputFilters {
  or_: [PermissionsInputFilters]
  and_: [PermissionsInputFilters]
  id: IDFilter
  action: PermissionactionenumFilter
  resource: StringFilter
  resourceTypeName: GqltypeenumFilter
  field: StringFilter
  fieldTypeName: StringFilter
  isConnection: BooleanFilter
  permissionGroups: PermissionGroupsInputFilters
}

enum PermissionSortEnum {
  ID_ASC
  ID_DESC
  ACTION_ASC
  ACTION_DESC
  RESOURCE_ASC
  RESOURCE_DESC
  RESOURCE_TYPE_NAME_ASC
  RESOURCE_TYPE_NAME_DESC
  FIELD_ASC
  FIELD_DESC
  FIELD_TYPE_NAME_ASC
  FIELD_TYPE_NAME_DESC
  IS_CONNECTION_ASC
  IS_CONNECTION_DESC
}

"""Plan GraphQL object."""
type Plan {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  description: String
  id: Int!
  includeInMrp: Boolean!
  name: String!
  status: Plansstatusenum!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  editable: Boolean
  percentComplete: Int
  prettyStr: String
  labels: [Label]
  comments: [Comment]
  inputs(filters: PlanInputsInputFilters): [PlanInput]
  planItems(filters: PlanItemsInputFilters): [PlanItem]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  fileAttachments: [FileAttachment]
  _LabelsCount: Int
  _CommentsCount: Int
  _InputsCount: Int
  _PlanItemsCount: Int
  timeline(filters: PlanEventFilter): [Timeline]
}

input PlanEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  description: StringFilter
  id: IDFilter
  includeInMrp: BooleanFilter
  name: StringFilter
  status: PlansstatusenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PlanEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Plan
  newValues: Plan
}

"""Input objects to plans."""
type PlanInput {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  planId: Int!
  partId: Int!
  dueDate: DateTime!
  quantity: Int!
  completedQuantity: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """
  
          Entity_id related to object.
  
          Returns: int of entity_id
          
  """
  entityId: Float!
  percentComplete: String
  prettyStr: String
  plan(filters: PlansInputFilters): Plan
  part(filters: PartsInputFilters): Part
  planItems(filters: PlanItemsInputFilters): [PlanItem]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  _PlanItemsCount: Int
  timeline(filters: PlanInputEventFilter): [Timeline]
}

input PlanInputEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  planId: IDFilter
  partId: IDFilter
  dueDate: DateTimeFilter
  quantity: IntFilter
  completedQuantity: IntFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PlanInputEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PlanInput
  newValues: PlanInput
}

type PlanInputsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PlanInputsEdge]!
}

"""A Relay edge containing a `PlanInputs` and its cursor."""
type PlanInputsEdge {
  """The item at the end of the edge"""
  node: PlanInput

  """A cursor for use in pagination"""
  cursor: String!
}

input PlanInputsInputFilters {
  or_: [PlanInputsInputFilters]
  and_: [PlanInputsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  planId: IDFilter
  partId: IDFilter
  dueDate: DateTimeFilter
  quantity: IntFilter
  completedQuantity: IntFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  percentComplete: StringFilter
  plan: PlansInputFilters
  part: PartsInputFilters
  planItems: PlanItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PlanInputSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  PLAN_ID_ASC
  PLAN_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  DUE_DATE_ASC
  DUE_DATE_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  COMPLETED_QUANTITY_ASC
  COMPLETED_QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Plan item GraphQL object."""
type PlanItem {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  alteredFromAutoplan: Boolean!
  assignedToId: Int
  endTime: DateTime
  explode: Boolean!
  forecastedEndTime: DateTime
  forecastedStartTime: DateTime
  id: Int!
  mrpJobId: Int
  name: String!
  partId: Int
  procedureId: Int
  quantity: Float
  startTime: DateTime
  supplierId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  ready: Boolean
  editable: Boolean
  status: PlanItemStatus
  percentComplete: Int
  isLatest: Boolean
  results: [PlanItemResult]
  hasResults: Boolean
  runs: [Run]
  purchaseOrderLines: [PurchaseOrderLine]
  issues: [Issue]
  partInventories: [PartInventory]
  prettyStr: String
  assignedTo(filters: UserInputFilters): User
  childAllocations(filters: PlanItemAllocationsInputFilters): [PlanItemAllocation]
  inputs(filters: PlanInputsInputFilters): [PlanInput]
  mrpJob(filters: MRPJobsInputFilters): MRPJob
  parentAllocations(filters: PlanItemAllocationsInputFilters): [PlanItemAllocation]
  part(filters: PartsInputFilters): Part
  plans(filters: PlansInputFilters): [Plan]
  procedure(filters: ProceduresInputFilters): Procedure
  resultEntities(filters: EntitysInputFilters): [Entity]
  supplier(filters: SuppliersInputFilters): Supplier

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _RunsCount: Int
  _PurchaseOrderLinesCount: Int
  _IssuesCount: Int
  _PartInventoriesCount: Int
  _ChildAllocationsCount: Int
  _InputsCount: Int
  _ParentAllocationsCount: Int
  _PlansCount: Int
  _ResultEntitiesCount: Int
  timeline(filters: PlanItemEventFilter): [Timeline]
}

"""A child/parent relationship between plan items."""
type PlanItemAllocation {
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  childPlanItemId: ID!
  parentPlanItemId: ID!
  mrpJobId: Int
  quantity: Float

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  childPlanItem(filters: PlanItemsInputFilters): PlanItem
  parentPlanItem(filters: PlanItemsInputFilters): PlanItem
  mrpJob(filters: MRPJobsInputFilters): MRPJob

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: PlanItemAllocationEventFilter): [Timeline]
}

input PlanItemAllocationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  childPlanItemId: IDFilter
  parentPlanItemId: IDFilter
  mrpJobId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PlanItemAllocationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PlanItemAllocation
  newValues: PlanItemAllocation
}

type PlanItemAllocationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PlanItemAllocationsEdge]!
}

"""A Relay edge containing a `PlanItemAllocations` and its cursor."""
type PlanItemAllocationsEdge {
  """The item at the end of the edge"""
  node: PlanItemAllocation

  """A cursor for use in pagination"""
  cursor: String!
}

input PlanItemAllocationsInputFilters {
  or_: [PlanItemAllocationsInputFilters]
  and_: [PlanItemAllocationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  childPlanItemId: IDFilter
  parentPlanItemId: IDFilter
  mrpJobId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  childPlanItem: PlanItemsInputFilters
  parentPlanItem: PlanItemsInputFilters
  mrpJob: MRPJobsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PlanItemAllocationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  CHILD_PLAN_ITEM_ID_ASC
  CHILD_PLAN_ITEM_ID_DESC
  PARENT_PLAN_ITEM_ID_ASC
  PARENT_PLAN_ITEM_ID_DESC
  MRP_JOB_ID_ASC
  MRP_JOB_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

input PlanItemEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  alteredFromAutoplan: BooleanFilter
  assignedToId: IDFilter
  endTime: DateTimeFilter
  explode: BooleanFilter
  forecastedEndTime: DateTimeFilter
  forecastedStartTime: DateTimeFilter
  id: IDFilter
  mrpJobId: IDFilter
  name: StringFilter
  partId: IDFilter
  procedureId: IDFilter
  quantity: FloatFilter
  startTime: DateTimeFilter
  supplierId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PlanItemEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PlanItem
  newValues: PlanItem
}

"""Union of GraphQL objects that can be returned as plan item results."""
union PlanItemResult = Run | PurchaseOrderLine | Issue | PartInventory | PlanInput

type PlanItemsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PlanItemsEdge]!
}

"""A Relay edge containing a `PlanItems` and its cursor."""
type PlanItemsEdge {
  """The item at the end of the edge"""
  node: PlanItem

  """A cursor for use in pagination"""
  cursor: String!
}

input PlanItemsInputFilters {
  or_: [PlanItemsInputFilters]
  and_: [PlanItemsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  alteredFromAutoplan: BooleanFilter
  assignedToId: IDFilter
  endTime: DateTimeFilter
  explode: BooleanFilter
  forecastedEndTime: DateTimeFilter
  forecastedStartTime: DateTimeFilter
  id: IDFilter
  mrpJobId: IDFilter
  name: StringFilter
  partId: IDFilter
  procedureId: IDFilter
  quantity: FloatFilter
  startTime: DateTimeFilter
  supplierId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  ready: BooleanFilter
  editable: BooleanFilter
  status: PlanItemStatusFilter
  percentComplete: IntFilter
  isLatest: BooleanFilter
  hasResults: BooleanFilter
  assignedTo: UserInputFilters
  childAllocations: PlanItemAllocationsInputFilters
  inputs: PlanInputsInputFilters
  mrpJob: MRPJobsInputFilters
  parentAllocations: PlanItemAllocationsInputFilters
  part: PartsInputFilters
  plans: PlansInputFilters
  procedure: ProceduresInputFilters
  resultEntities: EntitysInputFilters
  supplier: SuppliersInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  runs: RunsInputFilters
  purchaseOrderLines: PurchaseOrderLinesInputFilters
  issues: IssueInputFilters
  partInventories: PartInventoriesInputFilters
}

enum PlanItemSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ALTERED_FROM_AUTOPLAN_ASC
  ALTERED_FROM_AUTOPLAN_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  END_TIME_ASC
  END_TIME_DESC
  EXPLODE_ASC
  EXPLODE_DESC
  FORECASTED_END_TIME_ASC
  FORECASTED_END_TIME_DESC
  FORECASTED_START_TIME_ASC
  FORECASTED_START_TIME_DESC
  ID_ASC
  ID_DESC
  MRP_JOB_ID_ASC
  MRP_JOB_ID_DESC
  NAME_ASC
  NAME_DESC
  PART_ID_ASC
  PART_ID_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  START_TIME_ASC
  START_TIME_DESC
  SUPPLIER_ID_ASC
  SUPPLIER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  RESULT_TYPE_ASC
  RESULT_TYPE_DESC
}

"""Enum for plan item statuses."""
enum PlanItemStatus {
  DRAFT
  SCHEDULED
  COMPLETE
}

input PlanItemStatusFilter {
  eq: PlanItemStatus
  neq: PlanItemStatus
  like: PlanItemStatus
  ilike: PlanItemStatus
  notlike: PlanItemStatus
  notilike: PlanItemStatus
  in: [PlanItemStatus]
  gt: PlanItemStatus
  gte: PlanItemStatus
  lt: PlanItemStatus
  lte: PlanItemStatus
  isnull: Boolean
}

"""Input object relating a plan item to a plan through plan item id."""
input PlanItemToPlanInput {
  etag: String!
  planItemId: Int!
  planId: Int!
  planInputId: Int
}

"""Input objects to plan reservations."""
type PlanReservation {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  partInventoryId: Int
  planId: Int
  quantity: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  plan(filters: PlansInputFilters): Plan

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: PlanReservationEventFilter): [Timeline]
}

input PlanReservationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  partInventoryId: IDFilter
  planId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PlanReservationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PlanReservation
  newValues: PlanReservation
}

type PlanReservationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PlanReservationsEdge]!
}

"""A Relay edge containing a `PlanReservations` and its cursor."""
type PlanReservationsEdge {
  """The item at the end of the edge"""
  node: PlanReservation

  """A cursor for use in pagination"""
  cursor: String!
}

input PlanReservationsInputFilters {
  or_: [PlanReservationsInputFilters]
  and_: [PlanReservationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  partInventoryId: IDFilter
  planId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  partInventory: PartInventoriesInputFilters
  plan: PlansInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PlanReservationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  PLAN_ID_ASC
  PLAN_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type PlansConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PlansEdge]!
}

"""A Relay edge containing a `Plans` and its cursor."""
type PlansEdge {
  """The item at the end of the edge"""
  node: Plan

  """A cursor for use in pagination"""
  cursor: String!
}

"""Additional Plan filterable fields."""
input PlansInputFilters {
  labels: LabelsInputFilters
  comments: CommentsInputFilters
  or_: [PlansInputFilters]
  and_: [PlansInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  description: StringFilter
  id: IDFilter
  includeInMrp: BooleanFilter
  name: StringFilter
  status: PlansstatusenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  editable: BooleanFilter
  inputs: PlanInputsInputFilters
  planItems: PlanItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PlanSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  ID_ASC
  ID_DESC
  INCLUDE_IN_MRP_ASC
  INCLUDE_IN_MRP_DESC
  NAME_ASC
  NAME_DESC
  STATUS_ASC
  STATUS_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Plansstatusenum {
  DRAFT
  IN_PROGRESS
  COMPLETE
  ARCHIVED
  SCHEDULED
}

input PlansstatusenumFilter {
  eq: Plansstatusenum
  neq: Plansstatusenum
  like: Plansstatusenum
  ilike: Plansstatusenum
  notlike: Plansstatusenum
  notilike: Plansstatusenum
  in: [Plansstatusenum]
  gt: Plansstatusenum
  gte: Plansstatusenum
  lt: Plansstatusenum
  lte: Plansstatusenum
  isnull: Boolean
}

"""Prismatic Integration data."""
type PrismaticIntegration {
  token: String
}

"""Steps to manufacture."""
type Procedure {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  version: Int!
  id: Int!
  title: String!
  description: String
  status: Procedurestatusenum
  commitMessage: String
  type: Proceduretypeenum!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """
  
          Get column with related family id.
  
          Returns: Column instance
          
  """
  familyId: Int!
  entityId: Int!
  isLatestVersion: Boolean
  isLatestReleasedVersion: Boolean
  exportControlled: Boolean
  family: String
  feedback: [Comment]
  locations: [Location]
  labels: [String]
  editable: String
  attributes: [ProcedureAttribute]
  prettyStr: String
  runs(filters: RunsInputFilters): [Run]
  steps(filters: StepsFilters): [Step]
  reviewRequests(filters: ReviewRequestsInputFilters): [ReviewRequest]
  reviews(filters: ReviewsInputFilters): [Review]
  familyLabels(filters: LabelsInputFilters): [Label]
  planItems(filters: PlanItemsInputFilters): [PlanItem]
  parts(filters: PartsInputFilters): [Part]
  partProcedures(filters: PartProceduresInputFilters): [PartProcedure]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: ProcedureAttributesInputFilters): [ProcedureAttribute]
  _FeedbackCount: Int
  _LocationsCount: Int
  _RunsCount: Int
  _StepsCount: Int
  _ReviewRequestsCount: Int
  _ReviewsCount: Int
  _FamilyLabelsCount: Int
  _PlanItemsCount: Int
  _PartsCount: Int
  _PartProceduresCount: Int
  _AttributesCount: Int
  timeline(filters: ProcedureEventFilter): [Timeline]
}

type ProcedureAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  procedureId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  procedure(filters: ProceduresInputFilters): Procedure
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: ProcedureAttributeEventFilter): [Timeline]
}

input ProcedureAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  procedureId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ProcedureAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ProcedureAttribute
  newValues: ProcedureAttribute
}

input ProcedureAttributesInputFilters {
  or_: [ProcedureAttributesInputFilters]
  and_: [ProcedureAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  procedureId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  procedure: ProceduresInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input ProcedureEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  version: IntFilter
  id: IDFilter
  title: StringFilter
  description: StringFilter
  status: ProcedurestatusenumFilter
  commitMessage: StringFilter
  type: ProceduretypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  familyId: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ProcedureEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Procedure
  newValues: Procedure
}

type ProceduresConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ProceduresEdge]!
}

"""A Relay edge containing a `Procedures` and its cursor."""
type ProceduresEdge {
  """The item at the end of the edge"""
  node: Procedure

  """A cursor for use in pagination"""
  cursor: String!
}

"""Settings related to a procedure."""
type ProcedureSettings {
  attributes: [AttributeSettings]
  numReviewersRequired: Int
}

"""Input settings related to procedures."""
input ProcedureSettingsInput {
  numReviewersRequired: Int
}

"""Procedures filterable fields."""
input ProceduresInputFilters {
  exportControlled: BooleanFilter
  label: StringFilter
  locationId: IDFilter
  locations: LocationsInputFilters
  feedback: CommentsInputFilters
  or_: [ProceduresInputFilters]
  and_: [ProceduresInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  version: IntFilter
  id: IDFilter
  title: StringFilter
  description: StringFilter
  status: ProcedurestatusenumFilter
  commitMessage: StringFilter
  type: ProceduretypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  familyId: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  runs: RunsInputFilters
  steps: StepsFilters
  reviewRequests: ReviewRequestsInputFilters
  reviews: ReviewsInputFilters
  familyLabels: LabelsInputFilters
  planItems: PlanItemsInputFilters
  parts: PartsInputFilters
  partProcedures: PartProceduresInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: ProcedureAttributesInputFilters
}

enum ProcedureSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  VERSION_ASC
  VERSION_DESC
  ID_ASC
  ID_DESC
  TITLE_ASC
  TITLE_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  STATUS_ASC
  STATUS_DESC
  COMMIT_MESSAGE_ASC
  COMMIT_MESSAGE_DESC
  _EXPORT_CONTROLLED_ASC
  _EXPORT_CONTROLLED_DESC
  TYPE_ASC
  TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  FAMILY_ID_ASC
  FAMILY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Procedurestatusenum {
  DRAFT
  RELEASED
  ARCHIVED
  IN_REVIEW
}

input ProcedurestatusenumFilter {
  eq: Procedurestatusenum
  neq: Procedurestatusenum
  like: Procedurestatusenum
  ilike: Procedurestatusenum
  notlike: Procedurestatusenum
  notilike: Procedurestatusenum
  in: [Procedurestatusenum]
  gt: Procedurestatusenum
  gte: Procedurestatusenum
  lt: Procedurestatusenum
  lte: Procedurestatusenum
  isnull: Boolean
}

type ProcedureStepsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ProcedureStepsEdge]!
}

"""A Relay edge containing a `ProcedureSteps` and its cursor."""
type ProcedureStepsEdge {
  """The item at the end of the edge"""
  node: Step

  """A cursor for use in pagination"""
  cursor: String!
}

enum Proceduretypeenum {
  BUILD
  INSPECTION
  MAINTENANCE
}

input ProceduretypeenumFilter {
  eq: Proceduretypeenum
  neq: Proceduretypeenum
  like: Proceduretypeenum
  ilike: Proceduretypeenum
  notlike: Proceduretypeenum
  notilike: Proceduretypeenum
  in: [Proceduretypeenum]
  gt: Proceduretypeenum
  gte: Proceduretypeenum
  lt: Proceduretypeenum
  lte: Proceduretypeenum
  isnull: Boolean
}

"""The graphene sqlalchemy object type for purchase orders."""
type PurchaseOrder {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!

  """
  Recommend use of estimatedCost and estimatedTotalCost since they account for all costs on PO lines.
  """
  cost: Float @deprecated(reason: "Deprecated in favor of calculated costs.")
  description: String
  supplierId: Int
  orderedAt: DateTime
  currencyId: Int
  assignedToId: Int
  shipToLocationId: Int
  billToLocationId: Int
  supplierInstructions: SlateContent

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  editable: String
  isOpen: Boolean
  status: Purchaseorderstatusenum
  paid: Boolean
  estimatedCost: Float
  estimatedTotalCost: Float

  """Name change to be more consistent with needDate."""
  estimatedArrival: DateTime @deprecated(reason: "Deprecated in favor of estimatedArrivalDate.")
  estimatedArrivalDate: DateTime
  needDate: DateTime
  prettyStr: String
  attributes: [PurchaseOrderAttribute]
  labels: [Label]
  requirements: [Requirement]
  approved: Boolean
  supplier(filters: SuppliersInputFilters): Supplier
  currency(filters: CurrenciesInputFilters): Currency
  approvals(filters: PurchaseOrderApprovalsInputFilters): [PurchaseOrderApproval]
  approvalRequests(filters: PurchaseOrderApprovalRequestsInputFilters): [PurchaseOrderApprovalRequest]
  assignedTo(filters: UserInputFilters): User
  shipToLocation(filters: LocationsInputFilters): Location
  billToLocation(filters: LocationsInputFilters): Location
  fees(filters: PurchaseOrderFeesInputFilters): [PurchaseOrderFee]
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters): [PurchaseOrderLine]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: PurchaseOrderAttributesInputFilters): [PurchaseOrderAttribute]
  fileAttachments: [FileAttachment]
  _LabelsCount: Int
  _RequirementsCount: Int
  _ApprovalsCount: Int
  _ApprovalRequestsCount: Int
  _FeesCount: Int
  _PurchaseOrderLinesCount: Int
  _AttributesCount: Int
  timeline(filters: PurchaseOrderEventFilter): [Timeline]
}

"""GraphQL model for an approval request related to a purchase order."""
type PurchaseOrderApproval {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean!
  purchaseOrderId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  purchaseOrder(filters: PurchaseOrdersInputFilters): PurchaseOrder

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [PurchaseOrderApproval]
  parent: PurchaseOrderApproval
  timeline(filters: PurchaseOrderApprovalEventFilter): [Timeline]
}

input PurchaseOrderApprovalEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  purchaseOrderId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderApprovalEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderApproval
  newValues: PurchaseOrderApproval
}

"""GraphQL model for an approval request related to a purchase order."""
type PurchaseOrderApprovalRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  status: reviewreviewstatusenum
  purchaseOrderId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  purchaseOrder(filters: PurchaseOrdersInputFilters): PurchaseOrder

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  timeline(filters: PurchaseOrderApprovalRequestEventFilter): [Timeline]
}

input PurchaseOrderApprovalRequestEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  purchaseOrderId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderApprovalRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderApprovalRequest
  newValues: PurchaseOrderApprovalRequest
}

type PurchaseOrderApprovalRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PurchaseOrderApprovalRequestsEdge]!
}

"""
A Relay edge containing a `PurchaseOrderApprovalRequests` and its cursor.
"""
type PurchaseOrderApprovalRequestsEdge {
  """The item at the end of the edge"""
  node: PurchaseOrderApprovalRequest

  """A cursor for use in pagination"""
  cursor: String!
}

input PurchaseOrderApprovalRequestsInputFilters {
  or_: [PurchaseOrderApprovalRequestsInputFilters]
  and_: [PurchaseOrderApprovalRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  purchaseOrderId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  purchaseOrder: PurchaseOrdersInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PurchaseOrderApprovalRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  PURCHASE_ORDER_ID_ASC
  PURCHASE_ORDER_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

type PurchaseOrderApprovalsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PurchaseOrderApprovalsEdge]!
}

"""A Relay edge containing a `PurchaseOrderApprovals` and its cursor."""
type PurchaseOrderApprovalsEdge {
  """The item at the end of the edge"""
  node: PurchaseOrderApproval

  """A cursor for use in pagination"""
  cursor: String!
}

input PurchaseOrderApprovalsInputFilters {
  or_: [PurchaseOrderApprovalsInputFilters]
  and_: [PurchaseOrderApprovalsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  purchaseOrderId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  purchaseOrder: PurchaseOrdersInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PurchaseOrderApprovalSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  PURCHASE_ORDER_ID_ASC
  PURCHASE_ORDER_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

type PurchaseOrderAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  purchaseOrderId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  purchaseOrder(filters: PurchaseOrdersInputFilters): PurchaseOrder
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PurchaseOrderAttributeEventFilter): [Timeline]
}

input PurchaseOrderAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  purchaseOrderId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderAttribute
  newValues: PurchaseOrderAttribute
}

input PurchaseOrderAttributesInputFilters {
  or_: [PurchaseOrderAttributesInputFilters]
  and_: [PurchaseOrderAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  purchaseOrderId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  purchaseOrder: PurchaseOrdersInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PurchaseOrderEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  cost: FloatFilter
  description: StringFilter
  supplierId: IDFilter
  orderedAt: DateTimeFilter
  currencyId: IDFilter
  assignedToId: IDFilter
  shipToLocationId: IDFilter
  billToLocationId: IDFilter
  supplierInstructions: SlateContentFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrder
  newValues: PurchaseOrder
}

"""The graphene sqlalchemy object type for purchase orders fees."""
type PurchaseOrderFee {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  purchaseOrderId: Int!
  name: String!
  value: Float!
  type: Feetypeenum!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  purchaseOrder(filters: PurchaseOrdersInputFilters): PurchaseOrder

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: PurchaseOrderFeeEventFilter): [Timeline]
}

input PurchaseOrderFeeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  purchaseOrderId: IDFilter
  name: StringFilter
  value: FloatFilter
  type: FeetypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderFeeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderFee
  newValues: PurchaseOrderFee
}

type PurchaseOrderFeesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PurchaseOrderFeesEdge]!
}

"""A Relay edge containing a `PurchaseOrderFees` and its cursor."""
type PurchaseOrderFeesEdge {
  """The item at the end of the edge"""
  node: PurchaseOrderFee

  """A cursor for use in pagination"""
  cursor: String!
}

input PurchaseOrderFeesInputFilters {
  or_: [PurchaseOrderFeesInputFilters]
  and_: [PurchaseOrderFeesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  purchaseOrderId: IDFilter
  name: StringFilter
  value: FloatFilter
  type: FeetypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  purchaseOrder: PurchaseOrdersInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum PurchaseOrderFeeSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  PURCHASE_ORDER_ID_ASC
  PURCHASE_ORDER_ID_DESC
  NAME_ASC
  NAME_DESC
  VALUE_ASC
  VALUE_DESC
  TYPE_ASC
  TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""The graphene sqlalchemy object type for purchase order lines."""
type PurchaseOrderLine {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  purchaseOrderId: Int!
  partId: Int
  status: Purchaseorderstatusenum!
  description: String
  position: Int
  cost: Float
  quantity: Float!
  needDate: DateTime
  estimatedArrivalDate: DateTime
  paid: Boolean!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  editable: String
  isOpen: Boolean
  estimatedCost: Float
  receivedQuantity: Float
  inventoryQuantity: Float
  prettyStr: String
  attributes: [PurchaseOrderLineAttribute]
  labels: [Label]
  comments: [Comment]
  requirements: [Requirement]
  purchaseOrder(filters: PurchaseOrdersInputFilters): PurchaseOrder
  part(filters: PartsInputFilters): Part
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  receipts(filters: ReceiptsInputFilters): [Receipt]
  receivedPartInventories(filters: PartInventoriesInputFilters): [PartInventory]
  receiptItems(filters: ReceiptItemsInputFilters): [ReceiptItem]
  issues(filters: IssueInputFilters): [Issue]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: PurchaseOrderLineAttributesInputFilters): [PurchaseOrderLineAttribute]
  _LabelsCount: Int
  _CommentsCount: Int
  _RequirementsCount: Int
  _PartInventoriesCount: Int
  _ReceiptsCount: Int
  _ReceivedPartInventoriesCount: Int
  _ReceiptItemsCount: Int
  _IssuesCount: Int
  _AttributesCount: Int
  timeline(filters: PurchaseOrderLineEventFilter): [Timeline]
}

type PurchaseOrderLineAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  purchaseOrderLineId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  purchaseOrderLine(filters: PurchaseOrderLinesInputFilters): PurchaseOrderLine
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: PurchaseOrderLineAttributeEventFilter): [Timeline]
}

input PurchaseOrderLineAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  purchaseOrderLineId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderLineAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderLineAttribute
  newValues: PurchaseOrderLineAttribute
}

input PurchaseOrderLineAttributesInputFilters {
  or_: [PurchaseOrderLineAttributesInputFilters]
  and_: [PurchaseOrderLineAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  purchaseOrderLineId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  purchaseOrderLine: PurchaseOrderLinesInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input PurchaseOrderLineEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  purchaseOrderId: IDFilter
  partId: IDFilter
  status: PurchaseorderstatusenumFilter
  description: StringFilter
  position: IntFilter
  cost: FloatFilter
  quantity: FloatFilter
  needDate: DateTimeFilter
  estimatedArrivalDate: DateTimeFilter
  paid: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type PurchaseOrderLineEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: PurchaseOrderLine
  newValues: PurchaseOrderLine
}

type PurchaseOrderLinesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PurchaseOrderLinesEdge]!
}

"""A Relay edge containing a `PurchaseOrderLines` and its cursor."""
type PurchaseOrderLinesEdge {
  """The item at the end of the edge"""
  node: PurchaseOrderLine

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to purchase order lines."""
type PurchaseOrderLineSettings {
  attributes: [AttributeSettings]
}

"""Additional filterable fields."""
input PurchaseOrderLinesInputFilters {
  comments: CommentsInputFilters
  labels: LabelsInputFilters
  requirements: RequirementsInputFilters
  or_: [PurchaseOrderLinesInputFilters]
  and_: [PurchaseOrderLinesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  purchaseOrderId: IDFilter
  partId: IDFilter
  status: PurchaseorderstatusenumFilter
  description: StringFilter
  position: IntFilter
  cost: FloatFilter
  quantity: FloatFilter
  needDate: DateTimeFilter
  estimatedArrivalDate: DateTimeFilter
  paid: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isOpen: BooleanFilter
  estimatedCost: FloatFilter
  receivedQuantity: FloatFilter
  inventoryQuantity: FloatFilter
  purchaseOrder: PurchaseOrdersInputFilters
  part: PartsInputFilters
  partInventories: PartInventoriesInputFilters
  receipts: ReceiptsInputFilters
  receivedPartInventories: PartInventoriesInputFilters
  receiptItems: ReceiptItemsInputFilters
  issues: IssueInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PurchaseOrderLineAttributesInputFilters
}

enum PurchaseOrderLineSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  PURCHASE_ORDER_ID_ASC
  PURCHASE_ORDER_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  STATUS_ASC
  STATUS_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  POSITION_ASC
  POSITION_DESC
  COST_ASC
  COST_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  NEED_DATE_ASC
  NEED_DATE_DESC
  ESTIMATED_ARRIVAL_DATE_ASC
  ESTIMATED_ARRIVAL_DATE_DESC
  PAID_ASC
  PAID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Input which connects purchase order lines to inventory."""
input PurchaseOrderLineToInventoryInput {
  etag: String!
  partInventoryId: ID!
  purchaseOrderLineId: ID!
}

type PurchaseOrdersConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [PurchaseOrdersEdge]!
}

"""A Relay edge containing a `PurchaseOrders` and its cursor."""
type PurchaseOrdersEdge {
  """The item at the end of the edge"""
  node: PurchaseOrder

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to purchase orders."""
type PurchaseOrderSettings {
  attributes: [AttributeSettings]
  billToLocationId: Int
  defaultCurrencyId: Int
  defaultTermsId: Int
  numApproversRequired: Int
  shipToLocationId: Int
}

"""Input settings related to purchase orders."""
input PurchaseOrderSettingsInput {
  billToLocationId: Int
  defaultCurrencyId: Int
  defaultTermsId: Int
  numApproversRequired: Int
  shipToLocationId: Int
}

"""Additional filterable fields."""
input PurchaseOrdersInputFilters {
  labels: LabelsInputFilters
  requirements: RequirementsInputFilters
  or_: [PurchaseOrdersInputFilters]
  and_: [PurchaseOrdersInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  cost: FloatFilter
  description: StringFilter
  supplierId: IDFilter
  orderedAt: DateTimeFilter
  currencyId: IDFilter
  assignedToId: IDFilter
  shipToLocationId: IDFilter
  billToLocationId: IDFilter
  supplierInstructions: SlateContentFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isOpen: BooleanFilter
  status: PurchaseorderstatusenumFilter
  paid: BooleanFilter
  estimatedCost: FloatFilter
  estimatedTotalCost: FloatFilter
  estimatedArrival: DateTimeFilter
  estimatedArrivalDate: DateTimeFilter
  needDate: DateTimeFilter
  supplier: SuppliersInputFilters
  currency: CurrenciesInputFilters
  approvals: PurchaseOrderApprovalsInputFilters
  approvalRequests: PurchaseOrderApprovalRequestsInputFilters
  assignedTo: UserInputFilters
  shipToLocation: LocationsInputFilters
  billToLocation: LocationsInputFilters
  fees: PurchaseOrderFeesInputFilters
  purchaseOrderLines: PurchaseOrderLinesInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: PurchaseOrderAttributesInputFilters
}

enum PurchaseOrderSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  COST_ASC
  COST_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  SUPPLIER_ID_ASC
  SUPPLIER_ID_DESC
  ORDERED_AT_ASC
  ORDERED_AT_DESC
  _STATUS_ASC
  _STATUS_DESC
  CURRENCY_ID_ASC
  CURRENCY_ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  SHIP_TO_LOCATION_ID_ASC
  SHIP_TO_LOCATION_ID_DESC
  BILL_TO_LOCATION_ID_ASC
  BILL_TO_LOCATION_ID_DESC
  SUPPLIER_INSTRUCTIONS_ASC
  SUPPLIER_INSTRUCTIONS_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Purchaseorderstatusenum {
  DRAFT
  REQUESTED
  APPROVED
  ORDERED
  CANCELED
  RECEIVED
}

input PurchaseorderstatusenumFilter {
  eq: Purchaseorderstatusenum
  neq: Purchaseorderstatusenum
  like: Purchaseorderstatusenum
  ilike: Purchaseorderstatusenum
  notlike: Purchaseorderstatusenum
  notilike: Purchaseorderstatusenum
  in: [Purchaseorderstatusenum]
  gt: Purchaseorderstatusenum
  gte: Purchaseorderstatusenum
  lt: Purchaseorderstatusenum
  lte: Purchaseorderstatusenum
  isnull: Boolean
}

"""Generic GraphQL query."""
type Query {
  apiKeys(filters: APIKeyInputFilters, before: String, after: String, first: Int, last: Int): APIKeyConnection
  barcodeTemplateFieldOptions(templateEntityType: Barcodeentitytypeenum!): BarcodeTemplateFieldOptions
  fileAttachment(id: ID!): FileAttachment
  globalUniqueSerialNumber(
    name: String
    lastGeneratedValue: Boolean

    """Predict next serial number without directly calling sequence."""
    unsafePredictNextValue: Boolean
  ): GlobalUniqueSerialNumber
  logs(filters: LogInputFilters, before: String, after: String, first: Int, last: Int): LogConnection
  me: User
  organization(id: ID!): Organization
  prismaticIntegration: PrismaticIntegration
  scanBarcode(barcode: String!): ScanBarcode
  aBomEdges(filters: ABomEdgesInputFilters, distinctOn: [ABomEdgeSortEnum], sort: [ABomEdgeSortEnum], before: String, after: String, first: Int, last: Int): ABomEdgesConnection
  abomItem(id: ID!): ABomItem
  abomItems(filters: ABomItemsInputFilters, distinctOn: [ABomItemSortEnum], sort: [ABomItemSortEnum], before: String, after: String, first: Int, last: Int): ABomItemsConnection
  barcodePattern(id: ID!): BarcodePattern
  barcodePatterns(filters: BarcodePatternsInputFilters, distinctOn: [BarcodePatternSortEnum], sort: [BarcodePatternSortEnum], before: String, after: String, first: Int, last: Int): BarcodePatternsConnection
  barcodeLabel(id: ID!): BarcodeLabel
  barcodeLabels(filters: BarcodeLabelsInputFilters, distinctOn: [BarcodeLabelSortEnum], sort: [BarcodeLabelSortEnum], before: String, after: String, first: Int, last: Int): BarcodeLabelsConnection
  barcodeTemplate(id: ID!): BarcodeTemplate
  barcodeTemplates(filters: BarcodeTemplatesInputFilters, distinctOn: [BarcodeTemplateSortEnum], sort: [BarcodeTemplateSortEnum], before: String, after: String, first: Int, last: Int): BarcodeTemplatesConnection
  comment(id: ID!): Comment
  comments(filters: CommentsInputFilters, distinctOn: [CommentSortEnum], sort: [CommentSortEnum], before: String, after: String, first: Int, last: Int): CommentsConnection
  contact(id: ID!): Contact
  contacts(filters: ContactsInputFilters, distinctOn: [ContactSortEnum], sort: [ContactSortEnum], before: String, after: String, first: Int, last: Int): ContactsConnection
  currency(id: ID!): Currency
  currencies(filters: CurrenciesInputFilters, distinctOn: [CurrencySortEnum], sort: [CurrencySortEnum], before: String, after: String, first: Int, last: Int): CurrenciesConnection
  datagridColumns(filters: DatagridColumnsInputFilters, distinctOn: [DatagridColumnSortEnum], sort: [DatagridColumnSortEnum], before: String, after: String, first: Int, last: Int): DatagridColumnsConnection
  datagridRows(filters: DatagridRowsInputFilters, distinctOn: [DatagridRowSortEnum], sort: [DatagridRowSortEnum], before: String, after: String, first: Int, last: Int): DatagridRowsConnection
  datagridValues(filters: DatagridValuesInputFilters, distinctOn: [DatagridValueSortEnum], sort: [DatagridValueSortEnum], before: String, after: String, first: Int, last: Int): DatagridValuesConnection
  integration(id: ID!): Integration
  integrations(filters: IntegrationsInputFilters, distinctOn: [IntegrationSortEnum], sort: [IntegrationSortEnum], before: String, after: String, first: Int, last: Int): IntegrationsConnection
  invites(filters: InvitesInputFilters, distinctOn: [InviteSortEnum], sort: [InviteSortEnum], before: String, after: String, first: Int, last: Int): InvitesConnection
  issue(id: ID!): Issue
  issues(filters: IssueInputFilters, distinctOn: [IssueSortEnum], sort: [IssueSortEnum], before: String, after: String, first: Int, last: Int): IssuesConnection
  issueApprovals(filters: IssueApprovalsInputFilters, distinctOn: [IssueApprovalSortEnum], sort: [IssueApprovalSortEnum], before: String, after: String, first: Int, last: Int): IssueApprovalsConnection
  issueApprovalRequests(filters: IssueApprovalRequestsInputFilters, distinctOn: [IssueApprovalRequestSortEnum], sort: [IssueApprovalRequestSortEnum], before: String, after: String, first: Int, last: Int): IssueApprovalRequestsConnection
  issueRelations(filters: IssueRelationsInputFilters, distinctOn: [IssueRelationSortEnum], sort: [IssueRelationSortEnum], before: String, after: String, first: Int, last: Int): IssueRelationsConnection
  issueDispositionType(id: ID!): IssueDispositionType
  issueDispositionTypes(filters: IssueDispositionTypesInputFilters, distinctOn: [IssueDispositionTypeSortEnum], sort: [IssueDispositionTypeSortEnum], before: String, after: String, first: Int, last: Int): IssueDispositionTypesConnection
  issueDispositionTypeRole(issueDispositionTypeId: ID!, gateType: gateTypeissueapprovalgatetypeenum!, roleId: ID!): IssueDispositionTypeRole
  issueDispositionTypeRoles(filters: IssueDispositionTypeRolesInputFilters, distinctOn: [IssueDispositionTypeRoleSortEnum], sort: [IssueDispositionTypeRoleSortEnum], before: String, after: String, first: Int, last: Int): IssueDispositionTypeRolesConnection
  issuePartInventory(issueId: ID!, partInventoryId: ID!): IssuePartInventory
  issuePartInventories(filters: IssuePartInventoriesInputFilters, distinctOn: [IssuePartInventorySortEnum], sort: [IssuePartInventorySortEnum], before: String, after: String, first: Int, last: Int): IssuePartInventoriesConnection
  labels(filters: LabelsInputFilters, distinctOn: [LabelSortEnum], sort: [LabelSortEnum], before: String, after: String, first: Int, last: Int): LabelsConnection
  location(id: ID!): Location
  locations(filters: LocationsInputFilters, distinctOn: [LocationSortEnum], sort: [LocationSortEnum], before: String, after: String, first: Int, last: Int): LocationsConnection
  locationSubtype(id: ID!): LocationSubtype
  locationSubtypes(filters: LocationSubtypesInputFilters, distinctOn: [LocationSubtypeSortEnum], sort: [LocationSubtypeSortEnum], before: String, after: String, first: Int, last: Int): LocationSubtypesConnection
  mbom(id: ID!): MBom
  mboms(filters: MBomsInputFilters, distinctOn: [MBomSortEnum], sort: [MBomSortEnum], before: String, after: String, first: Int, last: Int): MBomsConnection
  mbomItem(id: ID!): MBomItem
  mbomItems(filters: MBomItemsInputFilters, distinctOn: [MBomItemSortEnum], sort: [MBomItemSortEnum], before: String, after: String, first: Int, last: Int): MBomItemsConnection
  mbomSubstitute(id: ID!): MBomSubstitute
  mbomSubstitutes(filters: MBomSubstituteInputFilters, distinctOn: [MBomSubstituteSortEnum], sort: [MBomSubstituteSortEnum], before: String, after: String, first: Int, last: Int): MBomSubstitutesConnection
  mbomApprovals(filters: MBomApprovalsInputFilters, distinctOn: [MBomApprovalSortEnum], sort: [MBomApprovalSortEnum], before: String, after: String, first: Int, last: Int): MBomApprovalsConnection
  mbomApprovalRequests(filters: MBomApprovalRequestsInputFilters, distinctOn: [MBomApprovalRequestSortEnum], sort: [MBomApprovalRequestSortEnum], before: String, after: String, first: Int, last: Int): MBomApprovalRequestsConnection
  mbomApprovalRoles(filters: MBomApprovalRolesInputFilters, distinctOn: [MBomApprovalRoleSortEnum], sort: [MBomApprovalRoleSortEnum], before: String, after: String, first: Int, last: Int): MBomApprovalRolesConnection
  mbomItemReferenceDesignator(id: ID!): MBomItemReferenceDesignator
  mbomItemReferenceDesignators(filters: MBomItemReferenceDesignatorsInputFilters, distinctOn: [MBomItemReferenceDesignatorSortEnum], sort: [MBomItemReferenceDesignatorSortEnum], before: String, after: String, first: Int, last: Int): MBomItemReferenceDesignatorsConnection
  mrpJob(id: ID!): MRPJob
  mrpJobs(filters: MRPJobsInputFilters, distinctOn: [MRPJobSortEnum], sort: [MRPJobSortEnum], before: String, after: String, first: Int, last: Int): MRPJobsConnection
  part(id: ID!): Part
  parts(filters: PartsInputFilters, distinctOn: [PartSortEnum], sort: [PartSortEnum], before: String, after: String, first: Int, last: Int): PartsConnection
  partInventory(id: ID!): PartInventory
  partInventories(filters: PartInventoriesInputFilters, distinctOn: [PartInventorySortEnum], sort: [PartInventorySortEnum], before: String, after: String, first: Int, last: Int): PartInventoriesConnection
  partKit(id: ID!): PartKit
  partKits(filters: PartKitsInputFilters, distinctOn: [PartKitSortEnum], sort: [PartKitSortEnum], before: String, after: String, first: Int, last: Int): PartKitsConnection
  partKitItem(id: ID!): PartKitItem
  partKitItems(filters: PartKitItemsInputFilters, distinctOn: [PartKitItemSortEnum], sort: [PartKitItemSortEnum], before: String, after: String, first: Int, last: Int): PartKitItemsConnection
  partProcedure(partId: ID!, procedureId: ID!): PartProcedure
  partProcedures(filters: PartProceduresInputFilters, distinctOn: [PartProcedureSortEnum], sort: [PartProcedureSortEnum], before: String, after: String, first: Int, last: Int): PartProceduresConnection
  partSubtype(id: ID!): PartSubtype
  partSubtypes(filters: PartSubtypesInputFilters, distinctOn: [PartSubtypeSortEnum], sort: [PartSubtypeSortEnum], before: String, after: String, first: Int, last: Int): PartSubtypesConnection
  permission(id: ID!): Permission
  permissions(filters: PermissionsInputFilters, distinctOn: [PermissionSortEnum], sort: [PermissionSortEnum], before: String, after: String, first: Int, last: Int): PermissionsConnection
  permissionGroup(id: ID!): PermissionGroup
  permissionGroups(filters: PermissionGroupsInputFilters, distinctOn: [PermissionGroupSortEnum], sort: [PermissionGroupSortEnum], before: String, after: String, first: Int, last: Int): PermissionGroupsConnection
  plan(id: ID!): Plan
  plans(filters: PlansInputFilters, distinctOn: [PlanSortEnum], sort: [PlanSortEnum], before: String, after: String, first: Int, last: Int): PlansConnection
  planInput(id: ID!): PlanInput
  planInputs(filters: PlanInputsInputFilters, distinctOn: [PlanInputSortEnum], sort: [PlanInputSortEnum], before: String, after: String, first: Int, last: Int): PlanInputsConnection
  planItem(id: ID!): PlanItem
  planItems(filters: PlanItemsInputFilters, distinctOn: [PlanItemSortEnum], sort: [PlanItemSortEnum], before: String, after: String, first: Int, last: Int): PlanItemsConnection
  planItemAllocation(childPlanItemId: ID!, parentPlanItemId: ID!): PlanItemAllocation
  planItemAllocations(filters: PlanItemAllocationsInputFilters, distinctOn: [PlanItemAllocationSortEnum], sort: [PlanItemAllocationSortEnum], before: String, after: String, first: Int, last: Int): PlanItemAllocationsConnection
  planReservation(id: ID!): PlanReservation
  planReservations(filters: PlanReservationsInputFilters, distinctOn: [PlanReservationSortEnum], sort: [PlanReservationSortEnum], before: String, after: String, first: Int, last: Int): PlanReservationsConnection
  purchaseOrder(id: ID!): PurchaseOrder
  purchaseOrders(filters: PurchaseOrdersInputFilters, distinctOn: [PurchaseOrderSortEnum], sort: [PurchaseOrderSortEnum], before: String, after: String, first: Int, last: Int): PurchaseOrdersConnection
  purchaseOrderApprovals(filters: PurchaseOrderApprovalsInputFilters, distinctOn: [PurchaseOrderApprovalSortEnum], sort: [PurchaseOrderApprovalSortEnum], before: String, after: String, first: Int, last: Int): PurchaseOrderApprovalsConnection
  purchaseOrderApprovalRequests(filters: PurchaseOrderApprovalRequestsInputFilters, distinctOn: [PurchaseOrderApprovalRequestSortEnum], sort: [PurchaseOrderApprovalRequestSortEnum], before: String, after: String, first: Int, last: Int): PurchaseOrderApprovalRequestsConnection
  purchaseOrderFee(id: ID!): PurchaseOrderFee
  purchaseOrderFees(filters: PurchaseOrderFeesInputFilters, distinctOn: [PurchaseOrderFeeSortEnum], sort: [PurchaseOrderFeeSortEnum], before: String, after: String, first: Int, last: Int): PurchaseOrderFeesConnection
  purchaseOrderLine(id: ID!): PurchaseOrderLine
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters, distinctOn: [PurchaseOrderLineSortEnum], sort: [PurchaseOrderLineSortEnum], before: String, after: String, first: Int, last: Int): PurchaseOrderLinesConnection
  procedure(id: ID!): Procedure

  """<graphene.types.scalars.String object at 0x7f8eaeabb4d0>"""
  procedures(filters: ProceduresInputFilters, distinctOn: [ProcedureSortEnum], isLatestVersion: Boolean, title: String, status: String, updatedById: ID, createdById: ID, familyId: ID, sort: [ProcedureSortEnum], before: String, after: String, first: Int, last: Int): ProceduresConnection
  receipt(id: ID!): Receipt
  receipts(filters: ReceiptsInputFilters, distinctOn: [ReceiptSortEnum], sort: [ReceiptSortEnum], before: String, after: String, first: Int, last: Int): ReceiptsConnection
  receiptItem(id: ID!): ReceiptItem
  receiptItems(filters: ReceiptItemsInputFilters, distinctOn: [ReceiptItemSortEnum], sort: [ReceiptItemSortEnum], before: String, after: String, first: Int, last: Int): ReceiptItemsConnection
  redlines(filters: RedlinesInputFilters, distinctOn: [RedlineSortEnum], sort: [RedlineSortEnum], before: String, after: String, first: Int, last: Int): RedlinesConnection
  redlineApproval(id: ID!): RedlineApproval
  redlineApprovals(filters: RedlineApprovalsInputFilters, distinctOn: [RedlineApprovalSortEnum], sort: [RedlineApprovalSortEnum], before: String, after: String, first: Int, last: Int): RedlineApprovalsConnection
  redlineApprovalRequest(id: ID!): RedlineApprovalRequest
  redlineApprovalRequests(filters: RedlineApprovalRequestsInputFilters, distinctOn: [RedlineApprovalRequestSortEnum], sort: [RedlineApprovalRequestSortEnum], before: String, after: String, first: Int, last: Int): RedlineApprovalRequestsConnection
  requirement(id: ID!): Requirement
  requirements(filters: RequirementsInputFilters, distinctOn: [RequirementSortEnum], sort: [RequirementSortEnum], before: String, after: String, first: Int, last: Int): RequirementsConnection
  review(id: ID!): Review
  reviews(filters: ReviewsInputFilters, distinctOn: [ReviewSortEnum], sort: [ReviewSortEnum], before: String, after: String, first: Int, last: Int): ReviewsConnection
  reviewRequests(filters: ReviewsInputFilters, distinctOn: [ReviewRequestSortEnum], sort: [ReviewRequestSortEnum], before: String, after: String, first: Int, last: Int): ReviewRequestsConnection
  role(id: ID!): Role
  roles(filters: RolesInputFilters, distinctOn: [RoleSortEnum], sort: [RoleSortEnum], before: String, after: String, first: Int, last: Int): RolesConnection
  rule(id: ID!): Rule
  rules(filters: RulesInputFilters, distinctOn: [RuleSortEnum], sort: [RuleSortEnum], before: String, after: String, first: Int, last: Int): RulesConnection
  run(id: ID!): Run
  runs(filters: RunsInputFilters, distinctOn: [RunSortEnum], sort: [RunSortEnum], before: String, after: String, first: Int, last: Int): RunsConnection
  runBatch(id: ID!): RunBatch
  runBatchs(filters: RunBatchesInputFilters, distinctOn: [RunBatchSortEnum], sort: [RunBatchSortEnum], before: String, after: String, first: Int, last: Int): RunBatchsConnection
  runStep(id: ID!): RunStep
  runSteps(filters: RunStepsInputFilters, distinctOn: [RunStepSortEnum], sort: [RunStepSortEnum], before: String, after: String, first: Int, last: Int): RunsStepsConnection
  runStepField(id: ID!): RunStepField
  runStepFields(filters: RunStepFieldInputFilters, distinctOn: [RunStepFieldSortEnum], sort: [RunStepFieldSortEnum], before: String, after: String, first: Int, last: Int): RunStepFieldsConnection
  runStepFieldValidations(filters: RunStepFieldValidationsInputFilters, distinctOn: [RunStepFieldValidationSortEnum], sort: [RunStepFieldValidationSortEnum], before: String, after: String, first: Int, last: Int): RunStepFieldValidationsConnection
  step(id: ID!): Step
  steps(filters: StepsFilters, distinctOn: [StepSortEnum], sort: [StepSortEnum], before: String, after: String, first: Int, last: Int): ProcedureStepsConnection
  stepApprovals(filters: StepApprovalsInputFilters, distinctOn: [StepApprovalSortEnum], sort: [StepApprovalSortEnum], before: String, after: String, first: Int, last: Int): StepApprovalsConnection
  stepApprovalRequests(filters: StepApprovalRequestsInputFilters, distinctOn: [StepApprovalRequestSortEnum], sort: [StepApprovalRequestSortEnum], before: String, after: String, first: Int, last: Int): StepApprovalRequestsConnection
  stepField(id: ID!): StepField
  fields(filters: FieldsInputFilters, distinctOn: [StepFieldSortEnum], sort: [StepFieldSortEnum], before: String, after: String, first: Int, last: Int): FieldsConnection
  stepFieldValidations(filters: StepFieldValidationsInputFilters, distinctOn: [StepFieldValidationSortEnum], sort: [StepFieldValidationSortEnum], before: String, after: String, first: Int, last: Int): StepFieldValidationsConnection
  stepMbomItemAssociation(id: ID!): StepMBomItemAssociation
  stepMbomItemAssociations(filters: StepMBomItemAssociationsInputFilters, distinctOn: [StepMBomItemAssociationSortEnum], sort: [StepMBomItemAssociationSortEnum], before: String, after: String, first: Int, last: Int): StepMBomItemAssociationsConnection
  supplier(id: ID!): Supplier
  suppliers(filters: SuppliersInputFilters, distinctOn: [SupplierSortEnum], sort: [SupplierSortEnum], before: String, after: String, first: Int, last: Int): SuppliersConnection
  team(id: ID!): Team
  teams(filters: TeamsInputFilters, distinctOn: [TeamSortEnum], sort: [TeamSortEnum], before: String, after: String, first: Int, last: Int): TeamsConnection
  unitOfMeasurement(id: ID!): UnitOfMeasurement
  unitsOfMeasurement(filters: UnitsOfMeasurementInputFilters, distinctOn: [UnitOfMeasurementSortEnum], sort: [UnitOfMeasurementSortEnum], before: String, after: String, first: Int, last: Int): UnitOfMeasurementsConnection
  user(id: ID!): User
  users(filters: UserInputFilters, distinctOn: [UserSortEnum], sort: [UserSortEnum], before: String, after: String, first: Int, last: Int): UsersConnection
  userNotification(id: ID!): UserNotification
  userNotifications(filters: UserNotificationsInputFilters, distinctOn: [UserNotificationSortEnum], sort: [UserNotificationSortEnum], before: String, after: String, first: Int, last: Int): UserNotificationsConnection
  userSubscription(id: ID!): UserSubscription
  userSubscriptions(filters: UserSubscriptionsInputFilters, distinctOn: [UserSubscriptionSortEnum], sort: [UserSubscriptionSortEnum], before: String, after: String, first: Int, last: Int): UserSubscriptionsConnection
  validationFunctions(filters: ValidationFunctionsInputFilters, distinctOn: [ValidationFunctionSortEnum], sort: [ValidationFunctionSortEnum], before: String, after: String, first: Int, last: Int): ValidationFunctionsConnection
  webhookEvent(id: ID!): WebhookEvent
  webhookEvents(filters: WebhookEventsInputFilters, distinctOn: [WebhookEventSortEnum], sort: [WebhookEventSortEnum], before: String, after: String, first: Int, last: Int): WebhookEventsConnection
  webhookHeader(id: ID!): WebhookHeader
  webhookHeaders(filters: WebhookHeadersInputFilters, distinctOn: [WebhookHeaderSortEnum], sort: [WebhookHeaderSortEnum], before: String, after: String, first: Int, last: Int): WebhookHeadersConnection
  webhookReceiver(id: ID!): WebhookReceiver
  webhookReceivers(filters: WebhookReceiversInputFilters, distinctOn: [WebhookReceiverSortEnum], sort: [WebhookReceiverSortEnum], before: String, after: String, first: Int, last: Int): WebhookReceiversConnection
  webhookSubscription(id: ID!): WebhookSubscription
  webhookSubscriptions(filters: WebhookSubscriptionsInputFilters, distinctOn: [WebhookSubscriptionSortEnum], sort: [WebhookSubscriptionSortEnum], before: String, after: String, first: Int, last: Int): WebhookSubscriptionsConnection
}

"""Receipt GraphQL object."""
type Receipt {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  receivedAt: DateTime!
  receivedById: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  receivedParts: [ReceiptItem]
  prettyStr: String
  comments: [Comment]
  labels: [Label]
  attributes: [ReceiptAttribute]
  receivedBy(filters: UserInputFilters): User
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  purchaseOrderLines(filters: PurchaseOrderLinesInputFilters): [PurchaseOrderLine]
  receiptItems(filters: ReceiptItemsInputFilters): [ReceiptItem]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: ReceiptAttributesInputFilters): [ReceiptAttribute]
  fileAttachments: [FileAttachment]
  _CommentsCount: Int
  _LabelsCount: Int
  _PartInventoriesCount: Int
  _PurchaseOrderLinesCount: Int
  _ReceiptItemsCount: Int
  _AttributesCount: Int
  timeline(filters: ReceiptEventFilter): [Timeline]
}

type ReceiptAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  receiptId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  receipt(filters: ReceiptsInputFilters): Receipt
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: ReceiptAttributeEventFilter): [Timeline]
}

input ReceiptAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  receiptId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ReceiptAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ReceiptAttribute
  newValues: ReceiptAttribute
}

input ReceiptAttributesInputFilters {
  or_: [ReceiptAttributesInputFilters]
  and_: [ReceiptAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  receiptId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  receipt: ReceiptsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input ReceiptEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  receivedAt: DateTimeFilter
  receivedById: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ReceiptEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Receipt
  newValues: Receipt
}

"""Receipt Item GraphQL object."""
type ReceiptItem {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  receiptId: Int!
  partInventoryId: Int
  purchaseOrderLineId: Int
  quantity: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  purchaseOrderLine(filters: PurchaseOrderLinesInputFilters): PurchaseOrderLine
  receipt(filters: ReceiptsInputFilters): Receipt

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: ReceiptItemEventFilter): [Timeline]
}

input ReceiptItemEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  receiptId: IDFilter
  partInventoryId: IDFilter
  purchaseOrderLineId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ReceiptItemEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ReceiptItem
  newValues: ReceiptItem
}

type ReceiptItemsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ReceiptItemsEdge]!
}

"""A Relay edge containing a `ReceiptItems` and its cursor."""
type ReceiptItemsEdge {
  """The item at the end of the edge"""
  node: ReceiptItem

  """A cursor for use in pagination"""
  cursor: String!
}

input ReceiptItemsInputFilters {
  or_: [ReceiptItemsInputFilters]
  and_: [ReceiptItemsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  receiptId: IDFilter
  partInventoryId: IDFilter
  purchaseOrderLineId: IDFilter
  quantity: FloatFilter
  createdById: IDFilter
  updatedById: IDFilter
  partInventory: PartInventoriesInputFilters
  purchaseOrderLine: PurchaseOrderLinesInputFilters
  receipt: ReceiptsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum ReceiptItemSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  RECEIPT_ID_ASC
  RECEIPT_ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  PURCHASE_ORDER_LINE_ID_ASC
  PURCHASE_ORDER_LINE_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

type ReceiptsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ReceiptsEdge]!
}

"""A Relay edge containing a `Receipts` and its cursor."""
type ReceiptsEdge {
  """The item at the end of the edge"""
  node: Receipt

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to receipts."""
type ReceiptSettings {
  attributes: [AttributeSettings]
}

input ReceiptsInputFilters {
  or_: [ReceiptsInputFilters]
  and_: [ReceiptsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  receivedAt: DateTimeFilter
  receivedById: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  receivedBy: UserInputFilters
  partInventories: PartInventoriesInputFilters
  purchaseOrderLines: PurchaseOrderLinesInputFilters
  receiptItems: ReceiptItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: ReceiptAttributesInputFilters
}

enum ReceiptSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  RECEIVED_AT_ASC
  RECEIVED_AT_DESC
  RECEIVED_BY_ID_ASC
  RECEIVED_BY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""Changes made to a particular Run, RunSteps or RunStepFields."""
type Redline {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  stepId: Int!
  initialState: JSONString
  finalState: JSONString
  issueId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  diff: JSONString
  typedDiff: TypedDiff
  batched: Boolean
  batchSiblings: [Redline]
  active: String
  prettyStr: String
  approved: Boolean
  step(filters: RunStepsInputFilters): RunStep
  issue: Issue

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  approvals(filters: RedlineApprovalsInputFilters): [RedlineApproval]
  approvalRequests(filters: RedlineApprovalRequestsInputFilters): [RedlineApprovalRequest]
  _ApprovalsCount: Int
  _ApprovalRequestsCount: Int
  timeline(filters: RedlineEventFilter): [Timeline]
}

"""GraphQL model for an approval request related to a redline."""
type RedlineApproval {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean!
  redlineId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  redline(filters: RedlinesInputFilters): Redline

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [RedlineApproval]
  parent: RedlineApproval
  timeline(filters: RedlineApprovalEventFilter): [Timeline]
}

input RedlineApprovalEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  redlineId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RedlineApprovalEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RedlineApproval
  newValues: RedlineApproval
}

"""GraphQL model for an approval request related to a redline."""
type RedlineApprovalRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  status: reviewreviewstatusenum
  redlineId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  redline(filters: RedlinesInputFilters): Redline

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  timeline(filters: RedlineApprovalRequestEventFilter): [Timeline]
}

input RedlineApprovalRequestEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  redlineId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RedlineApprovalRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RedlineApprovalRequest
  newValues: RedlineApprovalRequest
}

type RedlineApprovalRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RedlineApprovalRequestsEdge]!
}

"""A Relay edge containing a `RedlineApprovalRequests` and its cursor."""
type RedlineApprovalRequestsEdge {
  """The item at the end of the edge"""
  node: RedlineApprovalRequest

  """A cursor for use in pagination"""
  cursor: String!
}

input RedlineApprovalRequestsInputFilters {
  or_: [RedlineApprovalRequestsInputFilters]
  and_: [RedlineApprovalRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  redlineId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  redline: RedlinesInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum RedlineApprovalRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  REDLINE_ID_ASC
  REDLINE_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

type RedlineApprovalsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RedlineApprovalsEdge]!
}

"""A Relay edge containing a `RedlineApprovals` and its cursor."""
type RedlineApprovalsEdge {
  """The item at the end of the edge"""
  node: RedlineApproval

  """A cursor for use in pagination"""
  cursor: String!
}

input RedlineApprovalsInputFilters {
  or_: [RedlineApprovalsInputFilters]
  and_: [RedlineApprovalsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  redlineId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  redline: RedlinesInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum RedlineApprovalSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  REDLINE_ID_ASC
  REDLINE_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

"""The union of items which can be added or deleted in a redline."""
union RedlinedItem = DatagridColumn | DatagridRow | DatagridValue | FileAttachment | RunStep | RunStepField | RunStepsEdge | RunStepFieldValidation

input RedlineEventFilter {
  id: IDFilter
  stepId: IDFilter
  issueId: IntFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  initialState: JSONStringFilter
  finalState: JSONStringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RedlineEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Redline
  newValues: Redline
}

type RedlinesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RedlinesEdge]!
}

"""A Relay edge containing a `Redlines` and its cursor."""
type RedlinesEdge {
  """The item at the end of the edge"""
  node: Redline

  """A cursor for use in pagination"""
  cursor: String!
}

"""Settings related to redline."""
type RedlineSettings {
  attributes: [AttributeSettings]
  numApproversRequired: Int
}

"""Input settings related to redline."""
input RedlineSettingsInput {
  numApproversRequired: Int
}

"""Redline filterable fields."""
input RedlinesInputFilters {
  id: IDFilter
  stepId: IDFilter
  runId: IDFilter
  issueId: IntFilter
  step: RunStepsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  approvals: RedlineApprovalsInputFilters
  approvalRequests: RedlineApprovalRequestsInputFilters
  or_: [RedlinesInputFilters]
  and_: [RedlinesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  initialState: JSONStringFilter
  finalState: JSONStringFilter
  createdById: IDFilter
  updatedById: IDFilter
}

enum RedlineSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  INITIAL_STATE_ASC
  INITIAL_STATE_DESC
  FINAL_STATE_ASC
  FINAL_STATE_DESC
  ISSUE_ID_ASC
  ISSUE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Mutation to remove a header from a webhook receiver."""
type RemoveHeaderFromWebhookReceiver {
  webhookReceiver: WebhookReceiver
}

type RemoveInputFromPlan {
  id: Int
}

"""Mutation to remove an inventory item from a purchase order line."""
type RemoveInventoryFromPurchaseOrderLine {
  purchaseOrderLine: PurchaseOrderLine
}

"""Remove inventory from receipt."""
type RemoveInventoryFromReceipt {
  receipt: Receipt
}

"""Input object to remove inventory from receipt."""
input RemoveInventoryFromReceiptInput {
  etag: String!
  receiptId: Int!
  partInventoryId: Int!
}

"""Remove item from receipt."""
type RemoveItemFromReceipt {
  receipt: Receipt
}

"""Input object to remove inventory from receipt."""
input RemoveItemFromReceiptInput {
  etag: String!
  receiptId: Int!
  id: Int!
}

"""Mutation to remove a label from an item which has an entity."""
type RemoveLabelFromItem {
  labelId: Int
  entityId: Int
}

"""Removes a label from a procedure family given family and label ids."""
type RemoveLabelFromProcedureFamily {
  labelId: Int
  familyId: Int
}

"""Remove a part inventory from a run step."""
type RemovePartInventoryFromRunStep {
  runStep: RunStep
}

"""Inputs needed remove a part inventory from a run step."""
input RemovePartInventoryFromRunStepInput {
  partInventoryId: ID!
  runStepId: ID!

  """Etag of the run step."""
  etag: String!
}

"""Remove plan item from plan."""
type RemovePlanItemFromPlan {
  plan: Plan
}

"""Mutation to remove a requirement from an item which has an entity."""
type RemoveRequirementFromItem {
  requirementId: Int
  entityId: Int
}

"""Remove result from plan item."""
type RemoveResultFromPlanItem {
  planItem: PlanItem
}

"""Remove part subtype from part."""
type RemoveSubtypeFromPart {
  part: Part
}

"""Removes a User from a Team given an Id."""
type RemoveUserFromTeam {
  userId: Int
  teamId: Int
}

"""Reorder a datagrid column to a new index."""
type ReorderDatagridColumn {
  datagridColumn: DatagridColumn
}

"""Input needed to reorder a datagrid row or column."""
input ReorderDatagridInput {
  index: Int!
  etag: String!
  id: Int!
}

"""Reorder a datagrid row to a new index."""
type ReorderDatagridRow {
  datagridRow: DatagridRow
}

"""Reorder a purchase order line to a new index."""
type ReorderPurchaseOrderLine {
  purchaseOrderLine: PurchaseOrderLine
}

"""Input needed to reorder a purchase order line."""
input ReorderPurchaseOrderLineInput {
  position: Int!
  etag: String!
  id: Int!
}

"""Reorders runStepfields given a ReorderRunStepFieldsInput argument."""
type ReorderRunStepFields {
  fields: [RunStepField]
}

"""Inputs needed to reorder RunStepFields."""
input ReorderRunStepFieldsInput {
  fields: [UpdateFieldPositionInput]!
  runStepId: ID!
}

"""Reorders RunStep(s) given a ReorderRunStepInput argument."""
type ReorderRunSteps {
  steps: [RunStep]
}

"""Inputs needed to reorder RunSteps."""
input ReorderRunStepsInput {
  runId: ID
  steps: [UpdateStepPositionInput]!
  parentRunStepId: ID
}

"""Reorders stepfields given a ReorderStepFieldsInput argument."""
type ReorderStepFields {
  fields: [StepField]
}

"""Inputs needed to reorder StepFields."""
input ReorderStepFieldsInput {
  stepId: ID!
  fields: [UpdateFieldPositionInput]!
}

"""Reorders Steps given a ReorderStepInput."""
type ReorderSteps {
  steps: [Step]
}

"""Inputs needed to ReorderSteps."""
input ReorderStepsInput {
  procedureId: ID
  steps: [UpdateStepPositionInput]!
  parentStepId: ID
}

"""A graphql requirement object."""
type Requirement {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  referenceName: String
  title: String!
  content: SlateContent
  requirementType: Requirementtypeenum!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: RequirementEventFilter): [Timeline]
}

input RequirementEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  referenceName: StringFilter
  title: StringFilter
  content: SlateContentFilter
  requirementType: RequirementtypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RequirementEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Requirement
  newValues: Requirement
}

type RequirementsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RequirementsEdge]!
}

"""A Relay edge containing a `Requirements` and its cursor."""
type RequirementsEdge {
  """The item at the end of the edge"""
  node: Requirement

  """A cursor for use in pagination"""
  cursor: String!
}

input RequirementsInputFilters {
  or_: [RequirementsInputFilters]
  and_: [RequirementsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  referenceName: StringFilter
  title: StringFilter
  content: SlateContentFilter
  requirementType: RequirementtypeenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum RequirementSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  REFERENCE_NAME_ASC
  REFERENCE_NAME_DESC
  TITLE_ASC
  TITLE_DESC
  CONTENT_ASC
  CONTENT_DESC
  REQUIREMENT_TYPE_ASC
  REQUIREMENT_TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Inputs to attach a requirement to an object through its entity id."""
input RequirementToItemInput {
  entityId: Int!
  requirementId: Int!
}

enum Requirementtypeenum {
  TERMS_AND_CONDITIONS
  QUALITY_CLAUSE
}

input RequirementtypeenumFilter {
  eq: Requirementtypeenum
  neq: Requirementtypeenum
  like: Requirementtypeenum
  ilike: Requirementtypeenum
  notlike: Requirementtypeenum
  notilike: Requirementtypeenum
  in: [Requirementtypeenum]
  gt: Requirementtypeenum
  gte: Requirementtypeenum
  lt: Requirementtypeenum
  lte: Requirementtypeenum
  isnull: Boolean
}

"""Resend an invite to Ion given an id."""
type ResendInvite {
  invite: Invite
}

"""Reset issue approvals given a ResetIssueApprovalsInput."""
type ResetIssueApprovals {
  issueId: Int
}

"""Inputs needed to reset the approvals in an Issue."""
input ResetIssueApprovalsInput {
  issueId: Int!
  etag: String!
}

enum ResourceEnum {
  STEPS_DAGS
  USER_TRANSACTIONS
  DDL_CAPTURE
  USER_SUBSCRIPTIONS
  BARCODE_LABELS
  RUN_STEPS_DAGS
  USER_NOTIFICATIONS
  ISSUE_APPROVAL_REQUESTS
  DATAGRID_COLUMNS
  PART_KIT_ITEM_ATTRIBUTES
  CUSTOM_LOGGED_ACTIONS
  ISSUE_APPROVALS
  MRP_JOBS
  LOCATIONS
  PLAN_ITEMS
  PLAN_RESERVATIONS
  PART_PART_SUBTYPES
  DATAGRID_VALUES
  LOCATION_SUBTYPES
  STEP_APPROVAL_REQUESTS
  INVITES
  PLANS
  PARTS
  PART_KIT_ATTRIBUTES
  ISSUE_DISPOSITION_TYPES
  MBOM_ITEM
  PURCHASE_ORDER_FEES
  COMMENTS
  STEPS
  PROCEDURES
  PART_KIT_ITEMS
  ISSUE_DISPOSITION_TYPE_ROLES
  TEAMS
  MBOM_SUBSTITUTE
  UNITS_OF_MEASUREMENTS
  FILE_ATTACHMENTS
  STEP_APPROVALS
  PROCEDURES_ATTRIBUTES
  ISSUE_PART_INVENTORIES
  CONTACTS
  RECEIPTS_ATTRIBUTES
  TEAM_USERS
  RUN_STEP_FIELD_VALIDATIONS
  BARCODE_TEMPLATES
  STEPS_FIELDS
  REQUIREMENTS
  STEPS_ATTRIBUTES
  PARTS_INVENTORY
  ABOM_ITEM_REFERENCE_DESIGNATORS
  USER_ROLES
  MBOM_APPROVAL_REQUESTS
  USERS
  TEAM_ROLES
  PERMISSIONS
  STEP_MBOM_ITEM_ASSOCIATIONS
  ABOM_ITEMS
  PARTS_KITS
  PURCHASE_ORDER_LINES
  PART_SUBTYPES
  SESSION_EVENTS
  PERMISSION_PERMISSION_GROUPS
  REVIEWS
  ORIGIN_RUNS
  RUN_STEPS_ATTRIBUTES
  PARTS_INVENTORIES_ATTRIBUTES
  LOGGED_ACTIONS
  RECEIPT_ITEMS
  PROCEDURE_FAMILY_LABELS
  MBOM_APPROVAL_ROLES
  LABELS
  PLAN_ITEM_ALLOCATIONS
  ISSUES_ATTRIBUTES
  PERMISSION_GROUP_ROLES
  PART_PROCEDURES
  PART_ATTRIBUTES
  ABOM_EDGES
  RUNS_ATTRIBUTES
  ISSUE_RELATIONS
  REDLINE_APPROVALS
  REVIEW_REQUESTS
  ROLES
  PLAN_INPUTS
  STEP_FIELD_VALIDATIONS
  PURCHASE_ORDER_LINE_INVENTORIES
  API_KEYS
  REDLINE_APPROVAL_REQUESTS
  MBOMS
  PURCHASE_ORDER_APPROVALS
  ANALYTICS_CREDENTIALS
  PURCHASE_ORDER_LINES_ATTRIBUTES
  RUN_BATCHES
  REDLINES
  PLAN_PLAN_ITEMS
  MBOM_ITEM_REFERENCE_DESIGNATORS
  PART_KIT_INVENTORIES
  DATAGRID_ROWS
  MBOMS_ATTRIBUTES
  CURRENCIES
  SUPPLIERS_ATTRIBUTES
  LOCATIONS_ATTRIBUTES
  RUNS
  PURCHASE_ORDERS
  MBOM_APPROVALS
  PURCHASE_ORDERS_ATTRIBUTES
  INTEGRATIONS
  RUN_STEPS
  PERMISSION_GROUPS
  RUN_STEPS_FIELDS
  ISSUES
  RUN_STEP_PART_INVENTORIES
  VALIDATION_FUNCTIONS
  PURCHASE_ORDER_APPROVAL_REQUESTS
  PLAN_ITEM_RESULTS
  BARCODE_PATTERNS
  ORGANIZATIONS
  RECEIPTS
  SUPPLIERS
}

input ResourceEnumFilter {
  eq: ResourceEnum
  neq: ResourceEnum
  like: ResourceEnum
  ilike: ResourceEnum
  notlike: ResourceEnum
  notilike: ResourceEnum
  in: [ResourceEnum]
  gt: ResourceEnum
  gte: ResourceEnum
  lt: ResourceEnum
  lte: ResourceEnum
  isnull: Boolean
}

"""Input object relating a result to a plan item through entity id."""
input ResultToPlanItemInput {
  etag: String!
  entityId: Int!
  planItemId: Int!
}

"""A Review related to a Procedure."""
type Review {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  procedureId: Int
  comment: String @deprecated(reason: "\"comment\" is being             deprecated in favor of \"content\" in order to include rich text content.")
  content: SlateContent
  resolved: Boolean
  stepId: Int

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  procedure(filters: ProceduresInputFilters): Procedure
  step(filters: StepsFilters): Step

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [Review]
  parent: Review
  timeline(filters: ReviewEventFilter): [Timeline]
}

enum reviewattrtypesenum {
  STRING
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATETIME
  FILE_ATTACHMENT
  ION
}

input reviewattrtypesenumFilter {
  eq: reviewattrtypesenum
  neq: reviewattrtypesenum
  like: reviewattrtypesenum
  ilike: reviewattrtypesenum
  notlike: reviewattrtypesenum
  notilike: reviewattrtypesenum
  in: [reviewattrtypesenum]
  gt: reviewattrtypesenum
  gte: reviewattrtypesenum
  lt: reviewattrtypesenum
  lte: reviewattrtypesenum
  isnull: Boolean
}

input ReviewEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  procedureId: IDFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ReviewEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Review
  newValues: Review
}

"""A request to review a Procedure."""
type ReviewRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  status: Reviewstatusenum!
  id: Int!
  procedureId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  procedure(filters: ProceduresInputFilters): Procedure

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  timeline(filters: ReviewRequestEventFilter): [Timeline]
}

input ReviewRequestEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  status: ReviewstatusenumFilter
  id: IDFilter
  procedureId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ReviewRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ReviewRequest
  newValues: ReviewRequest
}

"""Inputs needed for a ReviewRequest."""
input ReviewRequestInput {
  procedureId: ID!
  reviewerId: ID!
  status: Reviewstatusenum
}

type ReviewRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ReviewRequestsEdge]!
}

"""A Relay edge containing a `ReviewRequests` and its cursor."""
type ReviewRequestsEdge {
  """The item at the end of the edge"""
  node: ReviewRequest

  """A cursor for use in pagination"""
  cursor: String!
}

input ReviewRequestsInputFilters {
  or_: [ReviewRequestsInputFilters]
  and_: [ReviewRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  status: ReviewstatusenumFilter
  id: IDFilter
  procedureId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  procedure: ProceduresInputFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum ReviewRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  STATUS_ASC
  STATUS_DESC
  ID_ASC
  ID_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum reviewreviewstatusenum {
  PENDING
  APPROVED
  REJECTED
  OUTDATED
}

input reviewreviewstatusenumFilter {
  eq: reviewreviewstatusenum
  neq: reviewreviewstatusenum
  like: reviewreviewstatusenum
  ilike: reviewreviewstatusenum
  notlike: reviewreviewstatusenum
  notilike: reviewreviewstatusenum
  in: [reviewreviewstatusenum]
  gt: reviewreviewstatusenum
  gte: reviewreviewstatusenum
  lt: reviewreviewstatusenum
  lte: reviewreviewstatusenum
  isnull: Boolean
}

type ReviewsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ReviewsEdge]!
}

"""A Relay edge containing a `Reviews` and its cursor."""
type ReviewsEdge {
  """The item at the end of the edge"""
  node: Review

  """A cursor for use in pagination"""
  cursor: String!
}

input ReviewsInputFilters {
  or_: [ReviewsInputFilters]
  and_: [ReviewsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  procedureId: IDFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  procedure: ProceduresInputFilters
  step: StepsFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum ReviewSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

enum Reviewstatusenum {
  PENDING
  APPROVED
  REJECTED
  OUTDATED
}

input ReviewstatusenumFilter {
  eq: Reviewstatusenum
  neq: Reviewstatusenum
  like: Reviewstatusenum
  ilike: Reviewstatusenum
  notlike: Reviewstatusenum
  notilike: Reviewstatusenum
  in: [Reviewstatusenum]
  gt: Reviewstatusenum
  gte: Reviewstatusenum
  lt: Reviewstatusenum
  lte: Reviewstatusenum
  isnull: Boolean
}

"""Revokes an invite to Ion given an id."""
type RevokeInvite {
  invite: Invite
}

"""Permissions given to Users."""
type Role {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int
  permissions: [Permission]
  prettyStr: String
  issueDispositionTypeRoles(filters: IssueDispositionTypeRolesInputFilters): [IssueDispositionTypeRole]
  issueApprovalRequests(filters: IssueApprovalRequestsInputFilters): [IssueApprovalRequest]
  issueApprovals(filters: IssueApprovalsInputFilters): [IssueApproval]
  permissionGroups(filters: PermissionGroupsInputFilters): [PermissionGroup]
  teamRoles(filters: TeamRolesInputFilters): [TeamRole]
  teams(filters: TeamsInputFilters): [Team]
  userRoles(filters: UserRolesInputFilters): [UserRole]
  users(filters: UserInputFilters): [User]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _IssueDispositionTypeRolesCount: Int
  _IssueApprovalRequestsCount: Int
  _IssueApprovalsCount: Int
  _PermissionGroupRolesCount: Int
  _PermissionGroupsCount: Int
  _TeamRolesCount: Int
  _TeamsCount: Int
  _UserRolesCount: Int
  _UsersCount: Int
  timeline(filters: RoleEventFilter): [Timeline]
}

input RoleEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RoleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Role
  newValues: Role
}

type RolesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RolesEdge]!
}

"""A Relay edge containing a `Roles` and its cursor."""
type RolesEdge {
  """The item at the end of the edge"""
  node: Role

  """A cursor for use in pagination"""
  cursor: String!
}

input RolesInputFilters {
  or_: [RolesInputFilters]
  and_: [RolesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  issueDispositionTypeRoles: IssueDispositionTypeRolesInputFilters
  issueApprovalRequests: IssueApprovalRequestsInputFilters
  issueApprovals: IssueApprovalsInputFilters
  permissionGroups: PermissionGroupsInputFilters
  teamRoles: TeamRolesInputFilters
  teams: TeamsInputFilters
  userRoles: UserRolesInputFilters
  users: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum RoleSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Inputs needed to associate a role to an ION user."""
input RoleToUserInput {
  userId: ID!
  roleId: Int!
}

"""The graphene sqlalchemy object type for rules."""
type Rule {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int
  title: String
  version: Int
  enabled: Boolean
  status: RuleStatus
  target: RuleTargetEnum
  eventType: RuleEventType
  ruleType: RuleType
  code: String
  codeHash: String!
  context: String
  errorState: RuleErrorState

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: RuleEventFilter): [Timeline]
}

"""Enum for rules error states."""
enum RuleErrorState {
  ALLOW
  BLOCK
}

input RuleErrorStateFilter {
  eq: RuleErrorState
  neq: RuleErrorState
  like: RuleErrorState
  ilike: RuleErrorState
  notlike: RuleErrorState
  notilike: RuleErrorState
  in: [RuleErrorState]
  gt: RuleErrorState
  gte: RuleErrorState
  lt: RuleErrorState
  lte: RuleErrorState
  isnull: Boolean
}

input RuleEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  version: IntFilter
  enabled: BooleanFilter
  status: RuleStatusFilter
  target: RuleTargetEnumFilter
  ruleType: RuleTypeFilter
  code: StringFilter
  codeHash: StringFilter
  context: StringFilter
  errorState: RuleErrorStateFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RuleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Rule
  newValues: Rule
}

"""Enum for rule event types."""
enum RuleEventType {
  CREATE
  UPDATE
  DELETE
}

input RuleEventTypeFilter {
  eq: RuleEventType
  neq: RuleEventType
  like: RuleEventType
  ilike: RuleEventType
  notlike: RuleEventType
  notilike: RuleEventType
  in: [RuleEventType]
  gt: RuleEventType
  gte: RuleEventType
  lt: RuleEventType
  lte: RuleEventType
  isnull: Boolean
}

type RulesConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RulesEdge]!
}

"""A Relay edge containing a `Rules` and its cursor."""
type RulesEdge {
  """The item at the end of the edge"""
  node: Rule

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to rules."""
type RuleSettings {
  attributes: [AttributeSettings]
  enabled: Boolean
  errorState: RuleErrorState
  errorStateMessage: String
}

"""Input settings related to rules."""
input RuleSettingsInput {
  enabled: Boolean
  errorState: RuleErrorState
  errorStateMessage: String
}

input RulesInputFilters {
  or_: [RulesInputFilters]
  and_: [RulesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  version: IntFilter
  enabled: BooleanFilter
  status: RuleStatusFilter
  target: RuleTargetEnumFilter
  eventType: RuleEventTypeFilter
  ruleType: RuleTypeFilter
  code: StringFilter
  codeHash: StringFilter
  context: StringFilter
  errorState: RuleErrorStateFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum RuleSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TITLE_ASC
  TITLE_DESC
  VERSION_ASC
  VERSION_DESC
  ENABLED_ASC
  ENABLED_DESC
  STATUS_ASC
  STATUS_DESC
  TARGET_ASC
  TARGET_DESC
  EVENT_TYPE_ASC
  EVENT_TYPE_DESC
  RULE_TYPE_ASC
  RULE_TYPE_DESC
  CODE_ASC
  CODE_DESC
  CODE_HASH_ASC
  CODE_HASH_DESC
  CONTEXT_ASC
  CONTEXT_DESC
  ERROR_STATE_ASC
  ERROR_STATE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Enum for rules event types."""
enum RuleStatus {
  UNINITIALIZED
  VALIDATING
  DISABLED
  ACTIVE
  ERROR
}

input RuleStatusFilter {
  eq: RuleStatus
  neq: RuleStatus
  like: RuleStatus
  ilike: RuleStatus
  notlike: RuleStatus
  notilike: RuleStatus
  in: [RuleStatus]
  gt: RuleStatus
  gte: RuleStatus
  lt: RuleStatus
  lte: RuleStatus
  isnull: Boolean
}

enum RuleTargetEnum {
  ABOMEDGE
  ABOMITEM
  ABOMITEMREFERENCEDESIGNATOR
  BARCODELABEL
  BARCODEPATTERN
  BARCODETEMPLATE
  COMMENT
  CONTACT
  CURRENCY
  DATAGRIDCOLUMN
  DATAGRIDROW
  ENTITY
  FILEATTACHMENT
  INTEGRATION
  INVITE
  ISSUE
  ISSUEAPPROVAL
  ISSUEAPPROVALREQUEST
  ISSUEDISPOSITIONTYPE
  LABEL
  LOCATION
  LOCATIONSUBTYPE
  MBOM
  MBOMAPPROVAL
  MBOMAPPROVALREQUEST
  MBOMITEM
  MBOMITEMREFERENCEDESIGNATOR
  MBOMSUBSTITUTE
  MRPJOB
  PART
  PARTINVENTORY
  PARTKIT
  PARTKITITEM
  PARTSUBTYPE
  PERMISSION
  PERMISSIONGROUP
  PLAN
  PLANINPUT
  PLANITEM
  PLANRESERVATION
  PROCEDURE
  PURCHASEORDER
  PURCHASEORDERAPPROVAL
  PURCHASEORDERAPPROVALREQUEST
  PURCHASEORDERFEE
  PURCHASEORDERLINE
  RECEIPT
  RECEIPTITEM
  REDLINE
  REDLINEAPPROVAL
  REDLINEAPPROVALREQUEST
  REQUIREMENT
  REVIEW
  REVIEWREQUEST
  ROLE
  RUN
  RUNBATCH
  RUNSTEP
  RUNSTEPFIELD
  RUNSTEPFIELDVALIDATION
  RUNSTEPSEDGE
  SESSIONEVENT
  STEP
  STEPAPPROVAL
  STEPAPPROVALREQUEST
  STEPFIELD
  STEPFIELDVALIDATION
  STEPMBOMITEMASSOCIATION
  STEPSEDGE
  SUPPLIER
  TEAM
  UNITOFMEASUREMENT
  USER
  USERNOTIFICATION
  USERSUBSCRIPTION
  VALIDATIONFUNCTION
  WEBHOOKEVENT
  WEBHOOKHEADER
  WEBHOOKRECEIVER
  WEBHOOKSUBSCRIPTION
}

input RuleTargetEnumFilter {
  eq: RuleTargetEnum
  neq: RuleTargetEnum
  like: RuleTargetEnum
  ilike: RuleTargetEnum
  notlike: RuleTargetEnum
  notilike: RuleTargetEnum
  in: [RuleTargetEnum]
  gt: RuleTargetEnum
  gte: RuleTargetEnum
  lt: RuleTargetEnum
  lte: RuleTargetEnum
  isnull: Boolean
}

"""Enum for rule types."""
enum RuleType {
  VALIDATION
}

input RuleTypeFilter {
  eq: RuleType
  neq: RuleType
  like: RuleType
  ilike: RuleType
  notlike: RuleType
  notilike: RuleType
  in: [RuleType]
  gt: RuleType
  gte: RuleType
  lt: RuleType
  lte: RuleType
  isnull: Boolean
}

"""A Run of a given released Procedure."""
type Run {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  archived: Boolean!
  description: String
  dueDate: DateTime
  id: Int!
  jiraIssueKey: String
  partId: Int
  partInventoryId: Int
  procedureId: Int
  quantity: Int
  resultsLink: String
  runBatchId: Int
  title: String!

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  issues: [Issue]
  redlines: [Redline]
  status: RunStatus
  percentComplete: Int
  isOpen: Boolean
  batched: Boolean
  batchSiblings: [Run]
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  startTime: String
  endTime: String
  startedBy: User
  completedBy: User
  scheduledStart: DateTime
  scheduledEnd: DateTime
  locations: [Location]
  calculatedLeadTime: Int
  sessions: [Session]
  assignees: [User]
  prettyStr: String
  comments: [Comment]
  labels: [Label]
  attributes: [RunAttribute]
  Comments(filters: CommentsInputFilters): [Comment]
  originPartInventories(filters: PartInventoriesInputFilters): [PartInventory]
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  partKits(filters: PartKitsInputFilters): [PartKit]
  part(filters: PartsInputFilters): Part
  procedure(filters: ProceduresInputFilters): Procedure
  runBatch(filters: RunBatchesInputFilters): RunBatch
  steps(filters: RunStepsInputFilters): [RunStep]

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  Attributes(filters: RunAttributesInputFilters): [RunAttribute]
  exportControlled: Boolean
  fileAttachments: [FileAttachment]
  _IssuesCount: Int
  _RedlinesCount: Int
  _LocationsCount: Int
  _SessionsCount: Int
  _AssigneesCount: Int
  _LabelsCount: Int
  _CommentsCount: Int
  _OriginPartInventoriesCount: Int
  _PartKitsCount: Int
  _StepsCount: Int
  _AttributesCount: Int
  timeline(filters: RunEventFilter): [Timeline]
}

type RunAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  runId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  run(filters: RunsInputFilters): Run
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: RunAttributeEventFilter): [Timeline]
}

input RunAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  runId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunAttribute
  newValues: RunAttribute
}

input RunAttributesInputFilters {
  or_: [RunAttributesInputFilters]
  and_: [RunAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  runId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  run: RunsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""GraphQL query object."""
type RunBatch {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  title: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  runs: [Run]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: RunBatchEventFilter): [Timeline]
}

"""GraphQL input filters."""
input RunBatchesInputFilters {
  runs: RunsInputFilters
  or_: [RunBatchesInputFilters]
  and_: [RunBatchesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input RunBatchEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  title: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunBatchEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunBatch
  newValues: RunBatch
}

type RunBatchsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RunBatchsEdge]!
}

"""A Relay edge containing a `RunBatchs` and its cursor."""
type RunBatchsEdge {
  """The item at the end of the edge"""
  node: RunBatch

  """A cursor for use in pagination"""
  cursor: String!
}

enum RunBatchSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TITLE_ASC
  TITLE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

input RunEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  archived: BooleanFilter
  description: StringFilter
  dueDate: DateTimeFilter
  id: IDFilter
  jiraIssueKey: StringFilter
  partId: IDFilter
  partInventoryId: IDFilter
  procedureId: IDFilter
  quantity: IntFilter
  resultsLink: StringFilter
  runBatchId: IDFilter
  title: StringFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Run
  newValues: Run
}

type RunsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RunsEdge]!
}

"""A Relay edge containing a `Runs` and its cursor."""
type RunsEdge {
  """The item at the end of the edge"""
  node: Run

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to runs."""
type RunSettings {
  attributes: [AttributeSettings]
  enforcePeerSignoff: Boolean
  enforceValidPartProcedure: Boolean
  enforceTitleTemplate: Boolean
  titleTemplate: String
}

"""Input settings related to runs."""
input RunSettingsInput {
  enforcePeerSignoff: Boolean
  enforceValidPartProcedure: Boolean
  enforceTitleTemplate: Boolean
  titleTemplate: String
}

"""Filters related to Runs."""
input RunsInputFilters {
  assignees: UserInputFilters
  issues: IssueInputFilters
  labels: LabelsInputFilters
  locationId: IDFilter
  locations: LocationsInputFilters
  partNumber: StringFilter
  redlines: RedlinesInputFilters
  sessions: SessionsInputFilters
  Comments: CommentsInputFilters
  originPartInventories: PartInventoriesInputFilters
  partInventory: PartInventoriesInputFilters
  partKits: PartKitsInputFilters
  part: PartsInputFilters
  procedure: ProceduresInputFilters
  runBatch: RunBatchesInputFilters
  steps: RunStepsInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: RunAttributesInputFilters
  or_: [RunsInputFilters]
  and_: [RunsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  archived: BooleanFilter
  description: StringFilter
  dueDate: DateTimeFilter
  id: IDFilter
  jiraIssueKey: StringFilter
  partId: IDFilter
  partInventoryId: IDFilter
  procedureId: IDFilter
  quantity: IntFilter
  resultsLink: StringFilter
  runBatchId: IDFilter
  title: StringFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  status: RunStatusFilter
  percentComplete: IntFilter
  isOpen: BooleanFilter
  batched: BooleanFilter
  startTime: StringFilter
  endTime: StringFilter
  scheduledStart: DateTimeFilter
  scheduledEnd: DateTimeFilter
  calculatedLeadTime: IntFilter
  exportControlled: BooleanFilter
}

enum RunSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _EXPORT_CONTROLLED_ASC
  _EXPORT_CONTROLLED_DESC
  ARCHIVED_ASC
  ARCHIVED_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  DUE_DATE_ASC
  DUE_DATE_DESC
  ID_ASC
  ID_DESC
  JIRA_ISSUE_KEY_ASC
  JIRA_ISSUE_KEY_DESC
  PART_ID_ASC
  PART_ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  RESULTS_LINK_ASC
  RESULTS_LINK_DESC
  RUN_BATCH_ID_ASC
  RUN_BATCH_ID_DESC
  TITLE_ASC
  TITLE_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  STATUS_ASC
  STATUS_DESC
  START_TIME_ASC
  START_TIME_DESC
  END_TIME_ASC
  END_TIME_DESC
}

type RunsStepsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RunsStepsEdge]!
}

"""A Relay edge containing a `RunsSteps` and its cursor."""
type RunsStepsEdge {
  """The item at the end of the edge"""
  node: RunStep

  """A cursor for use in pagination"""
  cursor: String!
}

"""Enum of run statuses."""
enum RunStatus {
  TODO
  IN_PROGRESS
  FAILED
  COMPLETE
  REDLINE
  CANCELED
  HOLD
  PARTIAL_COMPLETE
}

input RunStatusFilter {
  eq: RunStatus
  neq: RunStatus
  like: RunStatus
  ilike: RunStatus
  notlike: RunStatus
  notilike: RunStatus
  in: [RunStatus]
  gt: RunStatus
  gte: RunStatus
  lt: RunStatus
  lte: RunStatus
  isnull: Boolean
}

"""Steps related to a particular Run."""
type RunStep {
  _created: DateTime
  _updated: DateTime
  _etag: String
  content: String
  datagrid: DataGrid
  displayPdf: Boolean!
  leadTime: Int
  pages: [Int]
  slateContent: SlateContent
  title: String!
  type: runstepsteptypes
  id: Int!
  runId: Int!
  status: Statusenum
  scheduledStart: DateTime
  scheduledEnd: DateTime
  resultsS3Bucket: String
  resultsS3Key: String
  position: Int
  startTime: DateTime
  endTime: DateTime
  startedById: Int
  completedById: Int
  isStandardStep: Boolean!
  standardStepVersion: Int
  hashCode: String

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int
  entityId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return pdf foreign key."""
  pdfAssetId: Int

  """Return location foreign key."""
  locationId: Int

  """Return self referential parent foreign key."""
  parentId: Int

  """Return step id from which a copied step originated."""
  originStepId: Int
  Parent: String
  resultsLink: String
  resultsHtmlLink: String
  upstreamStepIds: [Int]
  downstreamStepIds: [Int]
  settable: String
  editable: String
  isChildStandardStep: Boolean
  batched: Boolean
  batchSiblings: [RunStep]
  batchAdoptedSiblings: [RunStep]
  allBatchedSiblings: [RunStep]
  sessions: [Session]
  blockingIssues: [Issue]
  availableToWork: Boolean
  standardStep: Step
  calculatedLeadTime: Int
  assignees: [User]
  prettyStr: String
  comments: [Comment]
  attributes: [RunStepAttribute]
  allChildren: [RunStep]
  allParents: [RunStep]
  run(filters: RunsInputFilters): Run
  fields(filters: RunStepFieldInputFilters): [RunStepField]
  Comments(filters: CommentsInputFilters): [Comment]
  upstream(filters: RunStepsEdgesInputFilters): [RunStepsEdge]
  downstream(filters: RunStepsEdgesInputFilters): [RunStepsEdge]
  startedBy(filters: UserInputFilters): User
  completedBy(filters: UserInputFilters): User
  redlines(filters: RedlinesInputFilters): [Redline]
  SessionEvents(filters: SessionEventsInputFilters): [SessionEvent]
  issues(filters: IssueInputFilters): [Issue]
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  mustCloseByLinkedIssues(filters: IssueInputFilters): [Issue]

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team
  entity: Entity

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  datagridColumns(filters: DatagridColumnsInputFilters, sort: [DatagridColumnSortEnum], before: String, after: String, first: Int, last: Int): DatagridColumnsConnection
  datagridRows(filters: DatagridRowsInputFilters, sort: [DatagridRowSortEnum], before: String, after: String, first: Int, last: Int): DatagridRowsConnection
  Attributes(filters: RunStepAttributesInputFilters): [RunStepAttribute]

  """Return pdf relationship."""
  pdf(filters: FileAttachmentsInputFilters): FileAttachment

  """Return location relationship."""
  location(filters: LocationsInputFilters): Location
  steps: [RunStep]

  """Return step which self was generated from."""
  originStep(filters: StepsFilters): Step
  parent: RunStep
  assets: [FileAttachment]
  fileAttachments: [FileAttachment]
  _SessionsCount: Int
  _BlockingIssuesCount: Int
  _AssigneesCount: Int
  _AllChildrenCount: Int
  _AllParentsCount: Int
  _FieldsCount: Int
  _CommentsCount: Int
  _UpstreamCount: Int
  _DownstreamCount: Int
  _RedlinesCount: Int
  _SessionEventsCount: Int
  _IssuesCount: Int
  _PartInventoriesCount: Int
  _MustCloseByLinkedIssuesCount: Int
  _DatagridColumnsCount: Int
  _DatagridRowsCount: Int
  _AttributesCount: Int
  timeline(filters: RunStepEventFilter): [Timeline]
}

type RunStepAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  runStepId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  runStep(filters: RunStepsInputFilters): RunStep
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: RunStepAttributeEventFilter): [Timeline]
}

input RunStepAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  runStepId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunStepAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunStepAttribute
  newValues: RunStepAttribute
}

input RunStepAttributesInputFilters {
  or_: [RunStepAttributesInputFilters]
  and_: [RunStepAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  runStepId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  runStep: RunStepsInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""Operations against a datagrid in a run step."""
type RunStepDataGridOperations {
  runStep: RunStep
}

input RunStepEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  displayPdf: BooleanFilter
  leadTime: IntFilter
  pages: IntFilter
  title: StringFilter
  type: runstepsteptypesFilter
  id: IDFilter
  runId: IDFilter
  status: StatusenumFilter
  scheduledStart: DateTimeFilter
  scheduledEnd: DateTimeFilter
  resultsS3Bucket: StringFilter
  resultsS3Key: StringFilter
  position: IntFilter
  startTime: DateTimeFilter
  endTime: DateTimeFilter
  startedById: IDFilter
  completedById: IDFilter
  isStandardStep: BooleanFilter
  standardStepVersion: IntFilter
  hashCode: StringFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  pdfAssetId: IDFilter
  locationId: IDFilter
  parentId: IDFilter
  originStepId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunStepEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunStep
  newValues: RunStep
}

"""A StepField related to a particular Run."""
type RunStepField {
  _created: DateTime
  _etag: String
  LastSessionId: String
  notApplicable: Boolean!
  allowNotApplicable: Boolean!
  allowedIonType: runstepfieldiontypeentitytypeenum
  display: String
  helpText: String
  name: String!
  options: [String]
  peerReviewRequired: Boolean!
  position: Int
  required: Boolean!
  type: runstepfieldfieldtypes
  unit: String
  _updated: DateTime
  id: Int!
  originFieldId: Int
  runStepId: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """Return part subtype foreign key relation."""
  partSubtypeId: Int

  """Return part foreign key relation."""
  partId: Int
  signoffRoleId: Int

  """Return part inventory foreign key relation."""
  partInventoryId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!
  valid: Boolean
  editable: Boolean
  settable: Boolean
  batched: Boolean
  batchSiblings: [RunStepField]
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  assignees: [User]
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  originField(filters: FieldsInputFilters): StepField
  step(filters: RunStepsInputFilters): RunStep
  validations(filters: RunStepFieldValidationsInputFilters): [RunStepFieldValidation]

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team

  """Return part subtype relationship."""
  partSubtype(filters: PartSubtypesInputFilters): PartSubtype

  """Return part relationship."""
  part(filters: PartsInputFilters): Part

  """
  Get Role for signoff.
  
          Returns: relationship object
  """
  signoffRole(filters: RolesInputFilters): Role

  """Return part inventory relationship."""
  partInventory(filters: PartInventoriesInputFilters): PartInventory
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _AssigneesCount: Int
  _ValueCount: Int
  _IonValueCount: Int
  _ValidationsCount: Int
  timeline(filters: RunStepFieldEventFilter): [Timeline]
}

input RunStepFieldEventFilter {
  Created: DateTimeFilter
  notApplicable: BooleanFilter
  allowNotApplicable: BooleanFilter
  allowedIonType: runstepfieldiontypeentitytypeenumFilter
  display: StringFilter
  helpText: StringFilter
  name: StringFilter
  peerReviewRequired: BooleanFilter
  position: IntFilter
  required: BooleanFilter
  type: runstepfieldfieldtypesFilter
  unit: StringFilter
  Updated: DateTimeFilter
  id: IDFilter
  originFieldId: IDFilter
  runStepId: IDFilter
  updatedById: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  partSubtypeId: IDFilter
  partId: IDFilter
  signoffRoleId: IDFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunStepFieldEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunStepField
  newValues: RunStepField
}

enum runstepfieldfieldtypes {
  STRING
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATETIME
  FILE_ATTACHMENT
  ION
  SIGNOFF
  TOOL
}

input runstepfieldfieldtypesFilter {
  eq: runstepfieldfieldtypes
  neq: runstepfieldfieldtypes
  like: runstepfieldfieldtypes
  ilike: runstepfieldfieldtypes
  notlike: runstepfieldfieldtypes
  notilike: runstepfieldfieldtypes
  in: [runstepfieldfieldtypes]
  gt: runstepfieldfieldtypes
  gte: runstepfieldfieldtypes
  lt: runstepfieldfieldtypes
  lte: runstepfieldfieldtypes
  isnull: Boolean
}

"""Additional filterable fields."""
input RunStepFieldInputFilters {
  assignees: UserInputFilters
  ionValue: IonTypeFilterInput
  or_: [RunStepFieldInputFilters]
  and_: [RunStepFieldInputFilters]
  _created: DateTimeFilter
  notApplicable: BooleanFilter
  allowNotApplicable: BooleanFilter
  allowedIonType: runstepfieldiontypeentitytypeenumFilter
  display: StringFilter
  helpText: StringFilter
  name: StringFilter
  peerReviewRequired: BooleanFilter
  position: IntFilter
  required: BooleanFilter
  type: runstepfieldfieldtypesFilter
  unit: StringFilter
  _updated: DateTimeFilter
  id: IDFilter
  originFieldId: IDFilter
  runStepId: IDFilter
  updatedById: IDFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  partSubtypeId: IDFilter
  partId: IDFilter
  signoffRoleId: IDFilter
  partInventoryId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  editable: BooleanFilter
  settable: BooleanFilter
  batched: BooleanFilter
  value: ScalarValueFilter
  originField: FieldsInputFilters
  step: RunStepsInputFilters
  validations: RunStepFieldValidationsInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  partSubtype: PartSubtypesInputFilters
  part: PartsInputFilters
  signoffRole: RolesInputFilters
  partInventory: PartInventoriesInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum runstepfieldiontypeentitytypeenum {
  PARTS
  USERS
}

input runstepfieldiontypeentitytypeenumFilter {
  eq: runstepfieldiontypeentitytypeenum
  neq: runstepfieldiontypeentitytypeenum
  like: runstepfieldiontypeentitytypeenum
  ilike: runstepfieldiontypeentitytypeenum
  notlike: runstepfieldiontypeentitytypeenum
  notilike: runstepfieldiontypeentitytypeenum
  in: [runstepfieldiontypeentitytypeenum]
  gt: runstepfieldiontypeentitytypeenum
  gte: runstepfieldiontypeentitytypeenum
  lt: runstepfieldiontypeentitytypeenum
  lte: runstepfieldiontypeentitytypeenum
  isnull: Boolean
}

type RunStepFieldsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RunStepFieldsEdge]!
}

"""A Relay edge containing a `RunStepFields` and its cursor."""
type RunStepFieldsEdge {
  """The item at the end of the edge"""
  node: RunStepField

  """A cursor for use in pagination"""
  cursor: String!
}

enum RunStepFieldSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  _STRING_VALUE_ASC
  _STRING_VALUE_DESC
  _NUMBER_VALUE_ASC
  _NUMBER_VALUE_DESC
  _DATETIME_VALUE_ASC
  _DATETIME_VALUE_DESC
  _BOOLEAN_VALUE_ASC
  _BOOLEAN_VALUE_DESC
  _SELECT_VALUE_ASC
  _SELECT_VALUE_DESC
  _MULTISELECT_VALUES_ASC
  _MULTISELECT_VALUES_DESC
  NOT_APPLICABLE_ASC
  NOT_APPLICABLE_DESC
  ALLOW_NOT_APPLICABLE_ASC
  ALLOW_NOT_APPLICABLE_DESC
  ALLOWED_ION_TYPE_ASC
  ALLOWED_ION_TYPE_DESC
  DISPLAY_ASC
  DISPLAY_DESC
  HELP_TEXT_ASC
  HELP_TEXT_DESC
  NAME_ASC
  NAME_DESC
  OPTIONS_ASC
  OPTIONS_DESC
  PEER_REVIEW_REQUIRED_ASC
  PEER_REVIEW_REQUIRED_DESC
  POSITION_ASC
  POSITION_DESC
  REQUIRED_ASC
  REQUIRED_DESC
  TYPE_ASC
  TYPE_DESC
  UNIT_ASC
  UNIT_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  ID_ASC
  ID_DESC
  ORIGIN_FIELD_ID_ASC
  ORIGIN_FIELD_ID_DESC
  RUN_STEP_ID_ASC
  RUN_STEP_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  PART_SUBTYPE_ID_ASC
  PART_SUBTYPE_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  SIGNOFF_ROLE_ID_ASC
  SIGNOFF_ROLE_ID_DESC
  PART_INVENTORY_ID_ASC
  PART_INVENTORY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  FILE_ATTACHMENT_ID_ASC
  FILE_ATTACHMENT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
}

"""run step field validation GraphQL object."""
type RunStepFieldValidation {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  position: Int
  value: Float
  id: Int!
  validationId: Int
  runStepFieldId: Int!
  result: Validationresultenum

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return foriegn key relation from validation to function."""
  functionId: Int!
  batched: Boolean
  batchSiblings: [RunStepFieldValidation]
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  prettyStr: String
  validation(filters: StepFieldValidationsInputFilters): StepFieldValidation
  runStepField(filters: RunStepFieldInputFilters): RunStepField

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User

  """Return function related to validation object."""
  function(filters: ValidationFunctionsInputFilters): ValidationFunction
  timeline(filters: RunStepFieldValidationEventFilter): [Timeline]
}

input RunStepFieldValidationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  position: IntFilter
  value: FloatFilter
  id: IDFilter
  validationId: IDFilter
  runStepFieldId: IDFilter
  result: ValidationresultenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  functionId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunStepFieldValidationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunStepFieldValidation
  newValues: RunStepFieldValidation
}

type RunStepFieldValidationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [RunStepFieldValidationsEdge]!
}

"""A Relay edge containing a `RunStepFieldValidations` and its cursor."""
type RunStepFieldValidationsEdge {
  """The item at the end of the edge"""
  node: RunStepFieldValidation

  """A cursor for use in pagination"""
  cursor: String!
}

input RunStepFieldValidationsInputFilters {
  or_: [RunStepFieldValidationsInputFilters]
  and_: [RunStepFieldValidationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  position: IntFilter
  value: FloatFilter
  id: IDFilter
  validationId: IDFilter
  runStepFieldId: IDFilter
  result: ValidationresultenumFilter
  createdById: IDFilter
  updatedById: IDFilter
  functionId: IDFilter
  validation: StepFieldValidationsInputFilters
  runStepField: RunStepFieldInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  function: ValidationFunctionsInputFilters
}

enum RunStepFieldValidationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  POSITION_ASC
  POSITION_DESC
  VALUE_ASC
  VALUE_DESC
  ID_ASC
  ID_DESC
  VALIDATION_ID_ASC
  VALIDATION_ID_DESC
  RUN_STEP_FIELD_ID_ASC
  RUN_STEP_FIELD_ID_DESC
  RESULT_ASC
  RESULT_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  FUNCTION_ID_ASC
  FUNCTION_ID_DESC
}

"""A RunStep's relationship to another RunStep."""
type RunStepsEdge {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  stepId: Int!
  upstreamStepId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  batched: Boolean
  batchSiblings: [RunStepsEdge]
  prettyStr: String
  step(filters: RunStepsInputFilters): RunStep
  upstreamStep(filters: RunStepsInputFilters): RunStep

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: RunStepsEdgeEventFilter): [Timeline]
}

input RunStepsEdgeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  stepId: IDFilter
  upstreamStepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type RunStepsEdgeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: RunStepsEdge
  newValues: RunStepsEdge
}

input RunStepsEdgesInputFilters {
  or_: [RunStepsEdgesInputFilters]
  and_: [RunStepsEdgesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  stepId: IDFilter
  upstreamStepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  step: RunStepsInputFilters
  upstreamStep: RunStepsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""Organization settings related to runsteps."""
type RunStepSettings {
  attributes: [AttributeSettings]
}

"""Filters related to Runs."""
input RunStepsInputFilters {
  assignees: UserInputFilters
  sessions: SessionsInputFilters
  or_: [RunStepsInputFilters]
  and_: [RunStepsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  displayPdf: BooleanFilter
  leadTime: IntFilter
  pages: IntFilter
  title: StringFilter
  type: runstepsteptypesFilter
  id: IDFilter
  runId: IDFilter
  status: StatusenumFilter
  scheduledStart: DateTimeFilter
  scheduledEnd: DateTimeFilter
  resultsS3Bucket: StringFilter
  resultsS3Key: StringFilter
  position: IntFilter
  startTime: DateTimeFilter
  endTime: DateTimeFilter
  startedById: IDFilter
  completedById: IDFilter
  isStandardStep: BooleanFilter
  standardStepVersion: IntFilter
  hashCode: StringFilter
  assignedToId: IDFilter
  assignedTeamId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  pdfAssetId: IDFilter
  locationId: IDFilter
  parentId: IDFilter
  originStepId: IDFilter
  isChildStandardStep: BooleanFilter
  batched: BooleanFilter
  availableToWork: BooleanFilter
  run: RunsInputFilters
  fields: RunStepFieldInputFilters
  Comments: CommentsInputFilters
  upstream: RunStepsEdgesInputFilters
  downstream: RunStepsEdgesInputFilters
  startedBy: UserInputFilters
  completedBy: UserInputFilters
  redlines: RedlinesInputFilters
  SessionEvents: SessionEventsInputFilters
  issues: IssueInputFilters
  partInventories: PartInventoriesInputFilters
  mustCloseByLinkedIssues: IssueInputFilters
  assignedTo: UserInputFilters
  assignedTeam: TeamsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  datagridColumns: DatagridColumnsInputFilters
  datagridRows: DatagridRowsInputFilters
  attributes: RunStepAttributesInputFilters
  pdf: FileAttachmentsInputFilters
  location: LocationsInputFilters
  originStep: StepsFilters
  allParents: RunStepsInputFilters
  allChildren: RunStepsInputFilters
}

enum RunStepSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  CONTENT_ASC
  CONTENT_DESC
  DATAGRID_ASC
  DATAGRID_DESC
  DISPLAY_PDF_ASC
  DISPLAY_PDF_DESC
  LEAD_TIME_ASC
  LEAD_TIME_DESC
  PAGES_ASC
  PAGES_DESC
  SLATE_CONTENT_ASC
  SLATE_CONTENT_DESC
  TITLE_ASC
  TITLE_DESC
  TYPE_ASC
  TYPE_DESC
  ID_ASC
  ID_DESC
  RUN_ID_ASC
  RUN_ID_DESC
  STATUS_ASC
  STATUS_DESC
  SCHEDULED_START_ASC
  SCHEDULED_START_DESC
  SCHEDULED_END_ASC
  SCHEDULED_END_DESC
  RESULTS_S3_BUCKET_ASC
  RESULTS_S3_BUCKET_DESC
  RESULTS_S3_KEY_ASC
  RESULTS_S3_KEY_DESC
  POSITION_ASC
  POSITION_DESC
  START_TIME_ASC
  START_TIME_DESC
  END_TIME_ASC
  END_TIME_DESC
  STARTED_BY_ID_ASC
  STARTED_BY_ID_DESC
  COMPLETED_BY_ID_ASC
  COMPLETED_BY_ID_DESC
  IS_STANDARD_STEP_ASC
  IS_STANDARD_STEP_DESC
  STANDARD_STEP_VERSION_ASC
  STANDARD_STEP_VERSION_DESC
  HASH_CODE_ASC
  HASH_CODE_DESC
  ASSIGNED_TO_ID_ASC
  ASSIGNED_TO_ID_DESC
  ASSIGNED_TEAM_ID_ASC
  ASSIGNED_TEAM_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  PDF_ASSET_ID_ASC
  PDF_ASSET_ID_DESC
  LOCATION_ID_ASC
  LOCATION_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
  ORIGIN_STEP_ID_ASC
  ORIGIN_STEP_ID_DESC
}

enum runstepstatusstatusenum {
  TODO
  IN_PROGRESS
  FAILED
  COMPLETE
  REDLINE
  CANCELED
  HOLD
  DAG_MODIFIABLE
}

enum runstepsteptypes {
  CONTENT
  DATAGRID
}

input runstepsteptypesFilter {
  eq: runstepsteptypes
  neq: runstepsteptypes
  like: runstepsteptypes
  ilike: runstepsteptypes
  notlike: runstepsteptypes
  notilike: runstepsteptypes
  in: [runstepsteptypes]
  gt: runstepsteptypes
  gte: runstepsteptypes
  lt: runstepsteptypes
  lte: runstepsteptypes
  isnull: Boolean
}

"""Multi-type scalar value."""
scalar ScalarValue

input ScalarValueFilter {
  eq: ScalarValue
  neq: ScalarValue
  like: ScalarValue
  ilike: ScalarValue
  notlike: ScalarValue
  notilike: ScalarValue
  in: [ScalarValue]
  gt: ScalarValue
  gte: ScalarValue
  lt: ScalarValue
  lte: ScalarValue
  isnull: Boolean
  fuzzyMatch: ScalarValueFuzzyMatchFilter
}

input ScalarValueFuzzyMatchFilter {
  value: ScalarValue

  """
  ('Float value between 0 and 1, with 1 being a direct string ', 'match. The
  higher the similarity value the closer two string ', 'must be in order to be
  considered a match.')
  """
  similarity: Float = 0.5
}

"""List of entities matching barcode."""
type ScanBarcode {
  entities: [Entity]
}

"""Enum for types of serial number generator."""
enum SerialGeneratorType {
  REVISION
  GLOBAL_UNIQUE_SERIAL_NUMBER
}

"""Session class represents groups of session events as a single object."""
type Session {
  id: ID!
  runStepId: Int!
  Created: DateTime!
  createdById: Int!
  eventType: Eventtypeenum!
  checkIn: DateTime!
  checkOut: DateTime
  duration: Float
  isValidGrouping: Boolean
  runStep(filters: RunStepsInputFilters): RunStep
  createdBy(filters: UserInputFilters): User
  timeline(filters: SessionEventFilter): [Timeline]
}

"""Graphql model for session events."""
type SessionEvent {
  id: ID!
  runStepId: Int!
  Created: DateTime!
  createdById: Int!
  eventType: Eventtypeenum!
  prettyStr: String
  runStep(filters: RunStepsInputFilters): RunStep
  createdBy(filters: UserInputFilters): User
  timeline(filters: SessionEventEventFilter): [Timeline]
}

input SessionEventEventFilter {
  id: IDFilter
  runStepId: IDFilter
  Created: DateTimeFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type SessionEventEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: SessionEvent
  newValues: SessionEvent
}

input SessionEventFilter {
  id: IDFilter
  runStepId: IDFilter
  Created: DateTimeFilter
  createdById: IDFilter
  checkIn: DateTimeFilter
  checkOut: DateTimeFilter
  duration: FloatFilter
  isValidGrouping: BooleanFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

"""Common input for all check in and check out events."""
input SessionEventInput {
  runStepId: ID!
  userId: ID
}

input SessionEventsInputFilters {
  or_: [SessionEventsInputFilters]
  and_: [SessionEventsInputFilters]
  id: IDFilter
  runStepId: IDFilter
  _created: DateTimeFilter
  createdById: IDFilter
  eventType: EventtypeenumFilter
  runStep: RunStepsInputFilters
  createdBy: UserInputFilters
}

"""Declare input filters for sessions."""
input SessionsInputFilters {
  runStep: RunStepsInputFilters
  createdBy: UserInputFilters
  or_: [SessionsInputFilters]
  and_: [SessionsInputFilters]
  id: IDFilter
  runStepId: IDFilter
  _created: DateTimeFilter
  createdById: IDFilter
  eventType: EventtypeenumFilter
  checkIn: DateTimeFilter
  checkOut: DateTimeFilter
  duration: FloatFilter
  isValidGrouping: BooleanFilter
}

"""Set a datagrid value."""
type SetDatagridValue {
  datagridValue: DatagridValue
}

"""Input to set datagrid value for a specific column and row."""
input SetDatagridValueInput {
  assignedTeamId: ID
  assignedToId: ID
  etag: String
  rowId: Int!
  columnId: Int!
  value: ScalarValue
  notApplicable: Boolean
}

"""Passthrough JSON type."""
scalar SlateContent

input SlateContentFilter {
  eq: SlateContent
  neq: SlateContent
  like: SlateContent
  ilike: SlateContent
  notlike: SlateContent
  notilike: SlateContent
  in: [SlateContent]
  gt: SlateContent
  gte: SlateContent
  lt: SlateContent
  lte: SlateContent
  isnull: Boolean
}

enum Sourcingstrategyenum {
  MAKE
  BUY
  DUAL_SOURCE
}

input SourcingstrategyenumFilter {
  eq: Sourcingstrategyenum
  neq: Sourcingstrategyenum
  like: Sourcingstrategyenum
  ilike: Sourcingstrategyenum
  notlike: Sourcingstrategyenum
  notilike: Sourcingstrategyenum
  in: [Sourcingstrategyenum]
  gt: Sourcingstrategyenum
  gte: Sourcingstrategyenum
  lt: Sourcingstrategyenum
  lte: Sourcingstrategyenum
  isnull: Boolean
}

"""
Split inventory in many inventories with specified quantities and return all.
"""
type SplitManyPartInventory {
  partInventories: [PartInventory]
}

"""Input for each inventory output of a split many operation."""
input SplitManyPartInventoryEachInput {
  quantity: Float!
}

"""Input to break off many inventory from a lot."""
input SplitManyPartInventoryInput {
  etag: String!
  id: Int!
  partInventories: [SplitManyPartInventoryEachInput]
  sort: Boolean
}

"""
Split inventory in two and return new inventory with specified quantity.
"""
type SplitPartInventory {
  partInventory: PartInventory
}

"""
Input the ID and etag of the inventory to be split and quantity to split.
"""
input SplitPartInventoryInput {
  etag: String!
  id: Int!
  quantity: Float!
}

"""Split unfulfilled part kit items into new part kit."""
type SplitUnfulfilledPartKit {
  partKit: PartKit
}

"""Inputs needed to split unfulfilled items into new kit."""
input SplitUnfulfilledPartKitInput {
  partKitId: ID!

  """Etag of the part kit."""
  etag: String!
}

enum Standardstepstatusenum {
  DRAFT
  RELEASED
  ARCHIVED
  IN_REVIEW
}

input StandardstepstatusenumFilter {
  eq: Standardstepstatusenum
  neq: Standardstepstatusenum
  like: Standardstepstatusenum
  ilike: Standardstepstatusenum
  notlike: Standardstepstatusenum
  notilike: Standardstepstatusenum
  in: [Standardstepstatusenum]
  gt: Standardstepstatusenum
  gte: Standardstepstatusenum
  lt: Standardstepstatusenum
  lte: Standardstepstatusenum
  isnull: Boolean
}

enum Statusenum {
  TODO
  IN_PROGRESS
  FAILED
  COMPLETE
  REDLINE
  CANCELED
  HOLD
  DAG_MODIFIABLE
}

input StatusenumFilter {
  eq: Statusenum
  neq: Statusenum
  like: Statusenum
  ilike: Statusenum
  notlike: Statusenum
  notilike: Statusenum
  in: [Statusenum]
  gt: Statusenum
  gte: Statusenum
  lt: Statusenum
  lte: Statusenum
  isnull: Boolean
}

"""Steps are processes to be done individually in Procedures."""
type Step {
  _created: DateTime
  _updated: DateTime
  _etag: String
  version: Int!
  content: String
  datagrid: DataGrid
  displayPdf: Boolean!
  leadTime: Int
  pages: [Int]
  slateContent: SlateContent
  title: String!
  type: Steptypes!
  id: Int!
  locationSubtypeId: Int
  position: Int
  procedureId: Int
  standardStepFamilyId: Int
  standardStepStatus: Standardstepstatusenum

  """Return pdf foreign key."""
  pdfAssetId: Int

  """Return location foreign key."""
  locationId: Int

  """Return self referential parent foreign key."""
  parentId: Int

  """Return step id from which a copied step originated."""
  originStepId: Int

  """
  
          Get column with related family id.
  
          Returns: Column instance
          
  """
  familyId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  isLatestVersion: Boolean
  isLatestReleasedVersion: Boolean
  mbomItemAssociations: [StepMBomItemAssociation]
  Parent: String
  isStandardStep: Boolean
  isChildStandardStep: Boolean
  isDerivedStep: Boolean
  standardStepProcedures: [Procedure]
  standardStepRuns: [Run]
  standardStepProcedureCount: Int
  standardStepRunCount: Int
  fieldCount: Int
  upstreamStepIds: [Int]
  downstreamStepIds: [Int]
  editable: Boolean
  approved: Boolean
  allChildren: [Step]
  allParents: [Step]
  attributes: [StepAttribute]
  prettyStr: String
  labels: [Label]
  derivedSteps: [Step]
  downstream(filters: StepsEdgesInputFilters): [StepsEdge]
  fields(filters: FieldsInputFilters): [StepField]
  locationSubtype(filters: LocationSubtypesInputFilters): LocationSubtype
  procedure(filters: ProceduresInputFilters): Procedure
  reviews(filters: ReviewsInputFilters): [Review]
  standardStep: Step
  upstream(filters: StepsEdgesInputFilters): [StepsEdge]

  """Return pdf relationship."""
  pdf(filters: FileAttachmentsInputFilters): FileAttachment

  """Return location relationship."""
  location(filters: LocationsInputFilters): Location
  steps: [Step]
  originStep: Step
  approvals(filters: StepApprovalsInputFilters): [StepApproval]
  approvalRequests(filters: StepApprovalRequestsInputFilters): [StepApprovalRequest]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  datagridColumns(filters: DatagridColumnsInputFilters, sort: [DatagridColumnSortEnum], before: String, after: String, first: Int, last: Int): DatagridColumnsConnection
  datagridRows(filters: DatagridRowsInputFilters, sort: [DatagridRowSortEnum], before: String, after: String, first: Int, last: Int): DatagridRowsConnection
  Attributes(filters: StepAttributesInputFilters): [StepAttribute]
  parent: Step
  assets: [FileAttachment]
  _MbomItemAssociationsCount: Int
  _AllChildrenCount: Int
  _AllParentsCount: Int
  _LabelsCount: Int
  _DownstreamCount: Int
  _FieldsCount: Int
  _ReviewsCount: Int
  _UpstreamCount: Int
  _ApprovalsCount: Int
  _ApprovalRequestsCount: Int
  _DatagridColumnsCount: Int
  _DatagridRowsCount: Int
  _AttributesCount: Int
  timeline(filters: StepEventFilter): [Timeline]
}

"""GraphQL model for an approval request related to a step."""
type StepApproval {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  depth: Int!
  id: Int!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean!
  stepId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!

  """Return foreign key referencing the same class."""
  parentId: Int
  prettyStr: String
  step(filters: StepsFilters): Step

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  replies: [StepApproval]
  parent: StepApproval
  timeline(filters: StepApprovalEventFilter): [Timeline]
}

input StepApprovalEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepApprovalEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepApproval
  newValues: StepApproval
}

"""GraphQL model for an approval request related to a step."""
type StepApprovalRequest {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  status: reviewreviewstatusenum
  stepId: Int!

  """Return the reviewer id."""
  reviewerId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  step(filters: StepsFilters): Step

  """Return the reviewer relationship."""
  reviewer(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  entity: Entity
  timeline(filters: StepApprovalRequestEventFilter): [Timeline]
}

input StepApprovalRequestEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepApprovalRequestEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepApprovalRequest
  newValues: StepApprovalRequest
}

type StepApprovalRequestsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [StepApprovalRequestsEdge]!
}

"""A Relay edge containing a `StepApprovalRequests` and its cursor."""
type StepApprovalRequestsEdge {
  """The item at the end of the edge"""
  node: StepApprovalRequest

  """A cursor for use in pagination"""
  cursor: String!
}

input StepApprovalRequestsInputFilters {
  or_: [StepApprovalRequestsInputFilters]
  and_: [StepApprovalRequestsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  step: StepsFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum StepApprovalRequestSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

type StepApprovalsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [StepApprovalsEdge]!
}

"""A Relay edge containing a `StepApprovals` and its cursor."""
type StepApprovalsEdge {
  """The item at the end of the edge"""
  node: StepApproval

  """A cursor for use in pagination"""
  cursor: String!
}

input StepApprovalsInputFilters {
  or_: [StepApprovalsInputFilters]
  and_: [StepApprovalsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  depth: IntFilter
  id: IDFilter
  status: reviewreviewstatusenumFilter
  comment: StringFilter
  content: SlateContentFilter
  resolved: BooleanFilter
  stepId: IDFilter
  reviewerId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  parentId: IDFilter
  step: StepsFilters
  reviewer: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum StepApprovalSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DEPTH_ASC
  DEPTH_DESC
  ID_ASC
  ID_DESC
  STATUS_ASC
  STATUS_DESC
  COMMENT_ASC
  COMMENT_DESC
  CONTENT_ASC
  CONTENT_DESC
  RESOLVED_ASC
  RESOLVED_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  REVIEWER_ID_ASC
  REVIEWER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
}

type StepAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  stepId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  step(filters: StepsFilters): Step
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: StepAttributeEventFilter): [Timeline]
}

input StepAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  stepId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepAttribute
  newValues: StepAttribute
}

input StepAttributesInputFilters {
  or_: [StepAttributesInputFilters]
  and_: [StepAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  stepId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  step: StepsFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""Operations against a datagrid in a step."""
type StepDataGridOperations {
  step: Step
}

"""The run step that represents the diff created in a redline."""
type StepDiff {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  content: String
  datagrid: JSONString
  displayPdf: Boolean!
  leadTime: Int
  pages: [Int]
  slateContent: JSONString
  title: String
  type: runstepsteptypes
  id: Int!
  runId: Int!
  status: runstepstatusstatusenum
  scheduledStart: DateTime
  scheduledEnd: DateTime
  resultsS3Bucket: String
  resultsS3Key: String
  position: Int
  startTime: DateTime
  endTime: DateTime
  startedById: Int
  completedById: Int
  isStandardStep: Boolean!
  standardStepVersion: Int
  hashCode: String

  """User id that the object is assigned to."""
  assignedToId: Int

  """Team id that the object is assigned to."""
  assignedTeamId: Int

  """
  
          Entity_id related to object.
  
          Returns: int of entity_id
          
  """
  entityId: Float!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return pdf foreign key."""
  pdfAssetId: Int

  """Return location foreign key."""
  locationId: Int

  """Return self referential parent foreign key."""
  parentId: Int

  """Return step id from which a copied step originated."""
  originStepId: Int
  Parent: String
  resultsLink: String
  resultsHtmlLink: String
  upstreamStepIds: String
  downstreamStepIds: String
  settable: String
  editable: String
  isChildStandardStep: String
  batched: String
  batchSiblings: String
  batchAdoptedSiblings: String
  allBatchedSiblings: String
  sessions: String
  blockingIssues: String
  availableToWork: String
  standardStep: String
  calculatedLeadTime: String
  assignees: String
  prettyStr: String
  hasDatagrid: String
  comments: String
  attributes: String
  allChildren: [StepDiff]
  allParents: [StepDiff]
  run(filters: RunsInputFilters): Run
  fields: FieldDiff
  Comments(filters: CommentsInputFilters): [Comment]
  upstream(filters: RunStepsEdgesInputFilters): [RunStepsEdge]
  downstream(filters: RunStepsEdgesInputFilters): [RunStepsEdge]
  startedBy(filters: UserInputFilters): User
  completedBy(filters: UserInputFilters): User
  redlines(filters: RedlinesInputFilters): [Redline]
  SessionEvents(filters: SessionEventsInputFilters): [SessionEvent]
  issues(filters: IssueInputFilters): [Issue]
  partInventories(filters: PartInventoriesInputFilters): [PartInventory]
  mustCloseByLinkedIssues(filters: IssueInputFilters): [Issue]

  """User that the object is assigned to."""
  assignedTo(filters: UserInputFilters): User

  """Team that the object is assigned to."""
  assignedTeam(filters: TeamsInputFilters): Team
  entity: Entity

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  datagridColumns(filters: DatagridColumnsInputFilters): [DatagridColumn]
  datagridRows(filters: DatagridRowsInputFilters): [DatagridRow]
  Attributes(filters: RunStepAttributesInputFilters): [RunStepAttribute]

  """Return pdf relationship."""
  pdf(filters: FileAttachmentsInputFilters): FileAttachment

  """Return location relationship."""
  location(filters: LocationsInputFilters): Location
  steps: [StepDiff]

  """Return step which self was generated from."""
  originStep(filters: StepsFilters): Step
  parent: StepDiff
  _SessionsCount: Int
  _BlockingIssuesCount: Int
  _AssigneesCount: Int
  _AllChildrenCount: Int
  _AllParentsCount: Int
  _CommentsCount: Int
  _UpstreamCount: Int
  _DownstreamCount: Int
  _RedlinesCount: Int
  _SessionEventsCount: Int
  _IssuesCount: Int
  _PartInventoriesCount: Int
  _MustCloseByLinkedIssuesCount: Int
  _DatagridColumnsCount: Int
  _DatagridRowsCount: Int
  _AttributesCount: Int
  timeline: [Timeline]
}

input StepEventFilter {
  id: IDFilter
  title: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  version: IntFilter
  displayPdf: BooleanFilter
  leadTime: IntFilter
  pages: IntFilter
  type: SteptypesFilter
  locationSubtypeId: IDFilter
  position: IntFilter
  procedureId: IDFilter
  standardStepFamilyId: IntFilter
  standardStepStatus: StandardstepstatusenumFilter
  pdfAssetId: IDFilter
  locationId: IDFilter
  parentId: IDFilter
  originStepId: IDFilter
  familyId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Step
  newValues: Step
}

"""A field related to a step."""
type StepField {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  allowNotApplicable: Boolean!
  allowedIonType: stepfieldiontypeentitytypeenum
  display: String
  helpText: String
  name: String!
  options: [String]
  peerReviewRequired: Boolean!
  position: Int
  required: Boolean!
  type: Fieldtypes!
  unit: String
  id: Int!
  stepId: Int!

  """Return part subtype foreign key relation."""
  partSubtypeId: Int

  """Return part foreign key relation."""
  partId: Int
  signoffRoleId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  editable: Boolean
  prettyStr: String
  step(filters: StepsFilters): Step
  validations(filters: StepFieldValidationsInputFilters): [StepFieldValidation]

  """Return part subtype relationship."""
  partSubtype(filters: PartSubtypesInputFilters): PartSubtype

  """Return part relationship."""
  part(filters: PartsInputFilters): Part

  """
  Get Role for signoff.
  
          Returns: relationship object
  """
  signoffRole(filters: RolesInputFilters): Role

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _ValidationsCount: Int
  timeline(filters: StepFieldEventFilter): [Timeline]
}

input StepFieldEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  allowNotApplicable: BooleanFilter
  allowedIonType: stepfieldiontypeentitytypeenumFilter
  display: StringFilter
  helpText: StringFilter
  name: StringFilter
  peerReviewRequired: BooleanFilter
  position: IntFilter
  required: BooleanFilter
  type: FieldtypesFilter
  unit: StringFilter
  id: IDFilter
  stepId: IDFilter
  partSubtypeId: IDFilter
  partId: IDFilter
  signoffRoleId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepFieldEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepField
  newValues: StepField
}

enum stepfieldiontypeentitytypeenum {
  PARTS
  USERS
}

input stepfieldiontypeentitytypeenumFilter {
  eq: stepfieldiontypeentitytypeenum
  neq: stepfieldiontypeentitytypeenum
  like: stepfieldiontypeentitytypeenum
  ilike: stepfieldiontypeentitytypeenum
  notlike: stepfieldiontypeentitytypeenum
  notilike: stepfieldiontypeentitytypeenum
  in: [stepfieldiontypeentitytypeenum]
  gt: stepfieldiontypeentitytypeenum
  gte: stepfieldiontypeentitytypeenum
  lt: stepfieldiontypeentitytypeenum
  lte: stepfieldiontypeentitytypeenum
  isnull: Boolean
}

enum StepFieldSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ALLOW_NOT_APPLICABLE_ASC
  ALLOW_NOT_APPLICABLE_DESC
  ALLOWED_ION_TYPE_ASC
  ALLOWED_ION_TYPE_DESC
  DISPLAY_ASC
  DISPLAY_DESC
  HELP_TEXT_ASC
  HELP_TEXT_DESC
  NAME_ASC
  NAME_DESC
  OPTIONS_ASC
  OPTIONS_DESC
  PEER_REVIEW_REQUIRED_ASC
  PEER_REVIEW_REQUIRED_DESC
  POSITION_ASC
  POSITION_DESC
  REQUIRED_ASC
  REQUIRED_DESC
  TYPE_ASC
  TYPE_DESC
  UNIT_ASC
  UNIT_DESC
  ID_ASC
  ID_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  PART_SUBTYPE_ID_ASC
  PART_SUBTYPE_ID_DESC
  PART_ID_ASC
  PART_ID_DESC
  SIGNOFF_ROLE_ID_ASC
  SIGNOFF_ROLE_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""step field validation GraphQL object."""
type StepFieldValidation {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  position: Int
  value: Float
  id: Int!
  fieldId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!

  """Return foriegn key relation from validation to function."""
  functionId: Int!
  prettyStr: String
  field(filters: FieldsInputFilters): StepField

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User

  """Return function related to validation object."""
  function(filters: ValidationFunctionsInputFilters): ValidationFunction
  timeline(filters: StepFieldValidationEventFilter): [Timeline]
}

input StepFieldValidationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  position: IntFilter
  value: FloatFilter
  id: IDFilter
  fieldId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  functionId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepFieldValidationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepFieldValidation
  newValues: StepFieldValidation
}

type StepFieldValidationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [StepFieldValidationsEdge]!
}

"""A Relay edge containing a `StepFieldValidations` and its cursor."""
type StepFieldValidationsEdge {
  """The item at the end of the edge"""
  node: StepFieldValidation

  """A cursor for use in pagination"""
  cursor: String!
}

input StepFieldValidationsInputFilters {
  or_: [StepFieldValidationsInputFilters]
  and_: [StepFieldValidationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  position: IntFilter
  value: FloatFilter
  id: IDFilter
  fieldId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  functionId: IDFilter
  field: FieldsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  function: ValidationFunctionsInputFilters
}

enum StepFieldValidationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  POSITION_ASC
  POSITION_DESC
  VALUE_ASC
  VALUE_DESC
  ID_ASC
  ID_DESC
  FIELD_ID_ASC
  FIELD_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  FUNCTION_ID_ASC
  FUNCTION_ID_DESC
}

"""Steps to manufacture."""
type StepMBomItemAssociation {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  mbomItemId: Int!
  mbomItemReferenceDesignatorId: Int
  quantity: Float!
  stepId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  Deleted: String
  prettyStr: String
  mbomItem(filters: MBomItemsInputFilters): MBomItem
  mbomItemReferenceDesignator(filters: MBomItemReferenceDesignatorsInputFilters): MBomItemReferenceDesignator
  step(filters: StepsFilters): Step

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: StepMBomItemAssociationEventFilter): [Timeline]
}

input StepMBomItemAssociationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  mbomItemId: IDFilter
  mbomItemReferenceDesignatorId: IDFilter
  quantity: FloatFilter
  stepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepMBomItemAssociationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepMBomItemAssociation
  newValues: StepMBomItemAssociation
}

type StepMBomItemAssociationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [StepMBomItemAssociationsEdge]!
}

"""A Relay edge containing a `StepMBomItemAssociations` and its cursor."""
type StepMBomItemAssociationsEdge {
  """The item at the end of the edge"""
  node: StepMBomItemAssociation

  """A cursor for use in pagination"""
  cursor: String!
}

"""StepPartAssociation filterable fields."""
input StepMBomItemAssociationsInputFilters {
  or_: [StepMBomItemAssociationsInputFilters]
  and_: [StepMBomItemAssociationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  mbomItemId: IDFilter
  mbomItemReferenceDesignatorId: IDFilter
  quantity: FloatFilter
  stepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  mbomItem: MBomItemsInputFilters
  mbomItemReferenceDesignator: MBomItemReferenceDesignatorsInputFilters
  step: StepsFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum StepMBomItemAssociationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  MBOM_ITEM_ID_ASC
  MBOM_ITEM_ID_DESC
  MBOM_ITEM_REFERENCE_DESIGNATOR_ID_ASC
  MBOM_ITEM_REFERENCE_DESIGNATOR_ID_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  STEP_ID_ASC
  STEP_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Inputs to map PDF pages to a step."""
input StepPagesInput {
  title: String
  pages: [Int]!
}

"""A Step's relationship to another Step."""
type StepsEdge {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  stepId: Int!
  upstreamStepId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  step(filters: StepsFilters): Step
  upstreamStep(filters: StepsFilters): Step

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: StepsEdgeEventFilter): [Timeline]
}

input StepsEdgeEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  stepId: IDFilter
  upstreamStepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type StepsEdgeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: StepsEdge
  newValues: StepsEdge
}

input StepsEdgesInputFilters {
  or_: [StepsEdgesInputFilters]
  and_: [StepsEdgesInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  stepId: IDFilter
  upstreamStepId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  step: StepsFilters
  upstreamStep: StepsFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

"""Settings related to steps."""
type StepSettings {
  attributes: [AttributeSettings]
  numApproversRequired: Int
}

"""Input settings related to steps."""
input StepSettingsInput {
  numApproversRequired: Int
}

"""StepsFilters are filterable input types for Steps."""
input StepsFilters {
  id: IDFilter
  title: StringFilter
  updatedById: IDFilter
  createdById: IDFilter
  procedureId: IDFilter
  locationId: IDFilter
  locationSubtypeId: IDFilter
  or_: [StepsFilters]
  and_: [StepsFilters]
  labels: LabelsInputFilters
  _created: DateTimeFilter
  _updated: DateTimeFilter
  version: IntFilter
  displayPdf: BooleanFilter
  leadTime: IntFilter
  pages: IntFilter
  type: SteptypesFilter
  position: IntFilter
  standardStepFamilyId: IntFilter
  standardStepStatus: StandardstepstatusenumFilter
  pdfAssetId: IDFilter
  parentId: IDFilter
  originStepId: IDFilter
  familyId: IDFilter
  entityId: IDFilter
  isLatestVersion: BooleanFilter
  isLatestReleasedVersion: BooleanFilter
  isStandardStep: BooleanFilter
  isChildStandardStep: BooleanFilter
  isDerivedStep: BooleanFilter
  editable: BooleanFilter
  downstream: StepsEdgesInputFilters
  fields: FieldsInputFilters
  locationSubtype: LocationSubtypesInputFilters
  procedure: ProceduresInputFilters
  reviews: ReviewsInputFilters
  upstream: StepsEdgesInputFilters
  pdf: FileAttachmentsInputFilters
  location: LocationsInputFilters
  approvals: StepApprovalsInputFilters
  approvalRequests: StepApprovalRequestsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  datagridColumns: DatagridColumnsInputFilters
  datagridRows: DatagridRowsInputFilters
  attributes: StepAttributesInputFilters
  allParents: StepsFilters
  allChildren: StepsFilters
}

enum StepSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  VERSION_ASC
  VERSION_DESC
  CONTENT_ASC
  CONTENT_DESC
  DATAGRID_ASC
  DATAGRID_DESC
  DISPLAY_PDF_ASC
  DISPLAY_PDF_DESC
  LEAD_TIME_ASC
  LEAD_TIME_DESC
  PAGES_ASC
  PAGES_DESC
  SLATE_CONTENT_ASC
  SLATE_CONTENT_DESC
  TITLE_ASC
  TITLE_DESC
  TYPE_ASC
  TYPE_DESC
  ID_ASC
  ID_DESC
  LOCATION_SUBTYPE_ID_ASC
  LOCATION_SUBTYPE_ID_DESC
  POSITION_ASC
  POSITION_DESC
  PROCEDURE_ID_ASC
  PROCEDURE_ID_DESC
  STANDARD_STEP_FAMILY_ID_ASC
  STANDARD_STEP_FAMILY_ID_DESC
  STANDARD_STEP_STATUS_ASC
  STANDARD_STEP_STATUS_DESC
  PDF_ASSET_ID_ASC
  PDF_ASSET_ID_DESC
  LOCATION_ID_ASC
  LOCATION_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
  ORIGIN_STEP_ID_ASC
  ORIGIN_STEP_ID_DESC
  FAMILY_ID_ASC
  FAMILY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

enum Steptypes {
  CONTENT
  DATAGRID
}

input SteptypesFilter {
  eq: Steptypes
  neq: Steptypes
  like: Steptypes
  ilike: Steptypes
  notlike: Steptypes
  notilike: Steptypes
  in: [Steptypes]
  gt: Steptypes
  gte: Steptypes
  lt: Steptypes
  lte: Steptypes
  isnull: Boolean
}

input StringFilter {
  eq: String
  neq: String
  like: String
  ilike: String
  notlike: String
  notilike: String
  in: [String]
  gt: String
  gte: String
  lt: String
  lte: String
  isnull: Boolean
  fuzzyMatch: StringFuzzyMatchFilter
}

input StringFuzzyMatchFilter {
  value: String

  """
  ('Float value between 0 and 1, with 1 being a direct string ', 'match. The
  higher the similarity value the closer two string ', 'must be in order to be
  considered a match.')
  """
  similarity: Float = 0.5
}

"""
Sum field for getting aggregate sums for integer and float fields of a given graphql connection.
"""
type SumField {
  """Sum of field quantity."""
  quantity: Float

  """Sum of field quantityAvailable."""
  quantityAvailable: Float
}

"""A Supplier of parts."""
type Supplier {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  description: String
  phoneNumber: String
  address: String
  email: String
  contactName: String

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  entityId: Int!
  prettyStr: String
  attributes: [SupplierAttribute]
  labels: [Label]
  comments: [Comment]
  partsInventories: [PartInventory]
  purchaseOrders(filters: PurchaseOrdersInputFilters): [PurchaseOrder]
  planItems(filters: PlanItemsInputFilters): [PlanItem]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  Attributes(filters: SupplierAttributesInputFilters): [SupplierAttribute]
  entity: Entity
  fileAttachments: [FileAttachment]
  _LabelsCount: Int
  _CommentsCount: Int
  _PurchaseOrdersCount: Int
  _PlanItemsCount: Int
  _AttributesCount: Int
  timeline(filters: SupplierEventFilter): [Timeline]
}

type SupplierAttribute {
  id: String
  Created: DateTime
  Updated: DateTime
  Etag: String!
  LastSessionId: String
  key: String!
  type: reviewattrtypesenum
  supplierId: Int
  entityId: Int

  """Return fileattachment foreign key relation."""
  fileAttachmentId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  allowedIonType: organizationiontypeentitytypeenum
  value: ScalarValue
  ionValue: IonType
  prettyStr: String
  supplier(filters: SuppliersInputFilters): Supplier
  entity: Entity

  """Return file attachment relationship."""
  fileAttachment(filters: FileAttachmentsInputFilters): FileAttachment

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  options: [String]
  _ValueCount: Int
  _IonValueCount: Int
  timeline(filters: SupplierAttributeEventFilter): [Timeline]
}

input SupplierAttributeEventFilter {
  id: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  supplierId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type SupplierAttributeEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: SupplierAttribute
  newValues: SupplierAttribute
}

input SupplierAttributesInputFilters {
  or_: [SupplierAttributesInputFilters]
  and_: [SupplierAttributesInputFilters]
  id: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  key: StringFilter
  type: reviewattrtypesenumFilter
  supplierId: IDFilter
  entityId: IDFilter
  fileAttachmentId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  value: ScalarValueFilter
  supplier: SuppliersInputFilters
  fileAttachment: FileAttachmentsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

input SupplierEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  phoneNumber: StringFilter
  address: StringFilter
  email: StringFilter
  contactName: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type SupplierEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Supplier
  newValues: Supplier
}

type SuppliersConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [SuppliersEdge]!
}

"""A Relay edge containing a `Suppliers` and its cursor."""
type SuppliersEdge {
  """The item at the end of the edge"""
  node: Supplier

  """A cursor for use in pagination"""
  cursor: String!
}

"""Organization settings related to suppliers."""
type SupplierSettings {
  attributes: [AttributeSettings]
}

input SuppliersInputFilters {
  or_: [SuppliersInputFilters]
  and_: [SuppliersInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  phoneNumber: StringFilter
  address: StringFilter
  email: StringFilter
  contactName: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  entityId: IDFilter
  purchaseOrders: PurchaseOrdersInputFilters
  planItems: PlanItemsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
  attributes: SupplierAttributesInputFilters
}

enum SupplierSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  PHONE_NUMBER_ASC
  PHONE_NUMBER_DESC
  ADDRESS_ASC
  ADDRESS_DESC
  EMAIL_ASC
  EMAIL_DESC
  CONTACT_NAME_ASC
  CONTACT_NAME_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""A specific Group within an organization in Ion."""
type Team {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  supervisorId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  supervisor(filters: UserInputFilters): User
  roles: [Role]
  teamRoles(filters: TeamRolesInputFilters): [TeamRole]
  teamUsers(filters: TeamUsersInputFilters): [TeamUser]
  users(filters: UserInputFilters): [User]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _TeamRolesCount: Int
  _TeamUsersCount: Int
  _UsersCount: Int
  timeline(filters: TeamEventFilter): [Timeline]
}

input TeamEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  supervisorId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type TeamEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: Team
  newValues: Team
}

"""A Role specific to a Team."""
type TeamRole {
  _created: DateTime
  teamId: Int
  roleId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int
  team(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User
  timeline(filters: TeamRoleEventFilter): [Timeline]
}

input TeamRoleEventFilter {
  Created: DateTimeFilter
  teamId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type TeamRoleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: TeamRole
  newValues: TeamRole
}

input TeamRolesInputFilters {
  or_: [TeamRolesInputFilters]
  and_: [TeamRolesInputFilters]
  _created: DateTimeFilter
  teamId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  team: TeamsInputFilters
  createdBy: UserInputFilters
}

type TeamsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [TeamsEdge]!
}

"""A Relay edge containing a `Teams` and its cursor."""
type TeamsEdge {
  """The item at the end of the edge"""
  node: Team

  """A cursor for use in pagination"""
  cursor: String!
}

input TeamsInputFilters {
  or_: [TeamsInputFilters]
  and_: [TeamsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  supervisorId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  supervisor: UserInputFilters
  teamRoles: TeamRolesInputFilters
  teamUsers: TeamUsersInputFilters
  users: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum TeamSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  SUPERVISOR_ID_ASC
  SUPERVISOR_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Inputs needed to relate a Role to a Team."""
input TeamToRoleInput {
  teamId: Int!
  roleId: Int!
}

"""Inputs needed to relate a User to a Team."""
input TeamToUserInput {
  teamId: Int!
  userId: Int!
}

"""User related to a specific Team."""
type TeamUser {
  _created: DateTime
  userId: Int
  teamId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int
  team(filters: TeamsInputFilters): Team

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User
  timeline(filters: TeamUserEventFilter): [Timeline]
}

input TeamUserEventFilter {
  Created: DateTimeFilter
  userId: IDFilter
  teamId: IDFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type TeamUserEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: TeamUser
  newValues: TeamUser
}

input TeamUsersInputFilters {
  or_: [TeamUsersInputFilters]
  and_: [TeamUsersInputFilters]
  _created: DateTimeFilter
  userId: IDFilter
  teamId: IDFilter
  createdById: IDFilter
  team: TeamsInputFilters
  createdBy: UserInputFilters
}

"""Interface defining common fields and functions for timeline events."""
interface Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
}

enum Trackingtypeenum {
  SERIAL
  LOT
}

input TrackingtypeenumFilter {
  eq: Trackingtypeenum
  neq: Trackingtypeenum
  like: Trackingtypeenum
  ilike: Trackingtypeenum
  notlike: Trackingtypeenum
  notilike: Trackingtypeenum
  in: [Trackingtypeenum]
  gt: Trackingtypeenum
  gte: Trackingtypeenum
  lt: Trackingtypeenum
  lte: Trackingtypeenum
  isnull: Boolean
}

"""The types of changes which are captured in redline diff."""
type TypedDiff {
  valuesChanged: [ValueDiffs]
  itemsAdded: [RedlinedItem]
  itemsRemoved: [RedlinedItem]
}

"""A custom unit of measurement to use throughout the Ion Platform."""
type UnitOfMeasurement {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  type: String!

  """
  
          User id of creator related to Enum.
  
          Returns: int of id
          
  """
  createdById: Int

  """
  
          User id of updater related to Enum.
  
          Returns: int of id
          
  """
  updatedById: Int
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: UnitOfMeasurementEventFilter): [Timeline]
}

input UnitOfMeasurementEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  type: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type UnitOfMeasurementEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: UnitOfMeasurement
  newValues: UnitOfMeasurement
}

type UnitOfMeasurementsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [UnitOfMeasurementsEdge]!
}

"""A Relay edge containing a `UnitOfMeasurements` and its cursor."""
type UnitOfMeasurementsEdge {
  """The item at the end of the edge"""
  node: UnitOfMeasurement

  """A cursor for use in pagination"""
  cursor: String!
}

enum UnitOfMeasurementSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  TYPE_ASC
  TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

input UnitsOfMeasurementInputFilters {
  or_: [UnitsOfMeasurementInputFilters]
  and_: [UnitsOfMeasurementInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  type: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

type UpdateABomItem {
  abomItem: ABomItem
}

"""Inputs needed to update an ABomItem."""
input UpdateABomItemInput {
  id: ID!
  parentId: ID
  partInventoryId: ID
  quantity: Float
  etag: String!
  expectedQuantityPer: Float
  expectedFixedQuantity: Float
  referenceDesignator: String
}

"""Updates API Credential sets."""
type UpdateAPIKey {
  apikey: APIKeyObject
}

"""Inputs to update or insert part attribute in org settings."""
input UpdateAttributeSettingsInput {
  key: String!
  type: attribute_typesattrtypesenum!
  id: ID!
  etag: String!
  options: [String]
  allowedIonType: organizationiontypeentitytypeenum
}

type UpdateBarcodeLabel {
  barcodeLabel: BarcodeLabel
}

input UpdateBarcodeLabelInput {
  id: ID!
  labelPreviewId: ID
  etag: String!
}

type UpdateBarcodePattern {
  barcodePattern: BarcodePattern
}

input UpdateBarcodePatternInput {
  id: ID!
  expression: String
  entityType: Barcodeentitytypeenum
  etag: String!
}

type UpdateBarcodeTemplate {
  barcodeTemplate: BarcodeTemplate
}

input UpdateBarcodeTemplateInput {
  id: ID!
  heightInches: Float
  widthInches: Float
  dpi: Int
  template: String
  name: String
  format: Barcodeformatenum
  deactivated: Boolean
  etag: String!
}

type UpdateComment {
  comment: Comment
}

input UpdateCommentInput {
  id: ID!
  content: String
  slateContent: SlateContent
  procedureFeedback: Boolean
  resolved: Boolean
  etag: String!
}

type UpdateContact {
  contact: Contact
}

input UpdateContactInput {
  id: ID!
  name: String
  email: String
  phoneNumber: String
  etag: String!
}

type UpdateCurrency {
  currency: Currency
}

input UpdateCurrencyInput {
  id: ID!
  type: String
  etag: String!
}

type UpdateDatagridColumn {
  datagridColumn: DatagridColumn
}

input UpdateDatagridColumnInput {
  allowedIonType: datagridiontypeentitytypeenum
  header: String
  id: ID!
  options: [String]
  type: datagrid_typefieldtypes
  unit: String
  signoffRoleId: ID
  settable: Boolean
  etag: String!
}

type UpdateDatagridRow {
  datagridRow: DatagridRow
}

input UpdateDatagridRowInput {
  allowNotApplicable: Boolean
  id: ID!
  required: Boolean
  etag: String!
}

"""Inputs needed to update FieldPosition."""
input UpdateFieldPositionInput {
  id: Int!
  position: Int!
  etag: String!
}

"""Input to update part revision from organization settings."""
input UpdateGlobalUniqueSerialNumberSchemeSettingInput {
  id: Int!
  name: String!
  enabled: Boolean
  default: Boolean
  serialScheme: String
  exclude: String
  etag: String!
  startAt: Int
}

type UpdateInputToPlan {
  planInput: PlanInput
}

input UpdateInputToPlanInput {
  id: ID!
  planId: ID
  partId: ID
  dueDate: DateTime
  quantity: Int
  completedQuantity: Int
  etag: String!
}

type UpdateIntegration {
  integration: Integration
}

"""Input object for updating an integration."""
input UpdateIntegrationInput {
  id: ID!
  etag: String!
  webhookId: String
  enabled: Boolean
  keycloakClientId: String
  keycloakClientSecret: String
  apiHost: String
  apiVersion: String
  apiKey: String
  customConfig: JSONString
}

type UpdateIssue {
  issue: Issue
}

type UpdateIssueApproval {
  approval: IssueApproval
}

"""Inputs needed to update issue approval."""
input UpdateIssueApprovalInput {
  etag: String!
  id: ID!
  comment: String
  content: SlateContent
  parentId: ID
  resolved: Boolean
  status: reviewreviewstatusenum
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum
}

type UpdateIssueApprovalRequest {
  approvalRequest: IssueApprovalRequest
}

"""Inputs needed to update issue approval request."""
input UpdateIssueApprovalRequestInput {
  etag: String!
  id: ID!
  assignedTeamId: ID
  assignedToId: ID
  roleId: ID
  status: reviewreviewstatusenum
  issueApprovalGateType: gateTypeissueapprovalgatetypeenum
}

type UpdateIssueAttribute {
  issueAttribute: IssueAttribute
}

input UpdateIssueAttributeInput {
  issueId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

type UpdateIssueDispositionType {
  issueDispositionType: IssueDispositionType
}

input UpdateIssueDispositionTypeInput {
  id: ID!
  title: String
  active: Boolean
  description: String
  etag: String!
}

type UpdateIssueDispositionTypeRole {
  issueDispositionTypeRole: IssueDispositionTypeRole
}

"""Inputs needed to update issue disposition type roles."""
input UpdateIssueDispositionTypeRoleInput {
  etag: String!
  issueDispositionTypeId: Int!
  issueApprovalGateType: Issueapprovalgatetypeenum!
  roleId: Int!
  count: Int
}

"""Inputs needed to update an Issue."""
input UpdateIssueInput {
  id: ID!
  etag: String!
  attributes: [NestedExtensibleAttributeInput]
  assignedTeamId: ID
  assignedToId: ID
  causeCondition: SlateContent
  disposition: SlateContent
  expectedCondition: SlateContent
  issueDispositionTypeId: Int
  mustCloseByRunStepId: Int
  purchaseOrderLineId: Int
  runStepId: ID
  status: Issuestatusenum
  title: String
  fixPartInventoryId: Int
}

type UpdateLabel {
  label: Label
}

input UpdateLabelInput {
  id: ID!
  value: String!
  etag: String!
}

type UpdateLocation {
  location: Location
}

type UpdateLocationAttribute {
  locationAttribute: LocationAttribute
}

input UpdateLocationAttributeInput {
  locationId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update object."""
input UpdateLocationInput {
  address: String
  attributes: [NestedExtensibleAttributeInput]
  available: Boolean
  archived: Boolean
  description: String
  etag: String!
  id: Int!
  imageId: Int
  latitude: Float
  locationSubtypeId: Int
  longitude: Float
  name: String
  parentId: Int
  supervisorId: Int
  type: Locationtypeenum
  contactId: Int
}

type UpdateLocationSubtype {
  locationSubtype: LocationSubtype
}

input UpdateLocationSubtypeInput {
  id: ID!
  name: String
  description: String
  etag: String!
}

type UpdateMBom {
  mbom: MBom
}

type UpdateMBomApproval {
  approval: MBomApproval
}

"""Inputs needed to update mBOM approval."""
input UpdateMBomApprovalInput {
  etag: String!
  id: ID!
  comment: String
  content: SlateContent
  parentId: ID
  resolved: Boolean
  status: reviewreviewstatusenum
  gateType: Mbomapprovalgatetypeenum
}

type UpdateMBomApprovalRequest {
  approvalRequest: MBomApprovalRequest
}

"""Inputs needed to update mBOM approval request."""
input UpdateMBomApprovalRequestInput {
  etag: String!
  id: ID!
  assignedTeamId: ID
  assignedToId: ID
  roleId: ID
  status: reviewreviewstatusenum
  gateType: Mbomapprovalgatetypeenum
}

type UpdateMBomApprovalRole {
  approvalRole: MBomApprovalRole
}

"""Input needed to delete update approval roles."""
input UpdateMBomApprovalRoleInput {
  count: Int
  etag: String!
  roleId: Int!
  gateType: Mbomapprovalgatetypeenum!
}

type UpdateMbomAttribute {
  mbomAttribute: MbomAttribute
}

input UpdateMbomAttributeInput {
  mbomId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update an mBOM."""
input UpdateMBomInput {
  attributes: [NestedExtensibleAttributeInput]
  etag: String!
  id: Int!
  status: MBomStatus
}

type UpdateMBomItem {
  mbomItem: MBomItem
}

"""Inputs needed to update an mBOM item."""
input UpdateMBomItemInput {
  id: ID!
  etag: String!
  madeOnAssembly: Boolean
  partId: ID
  quantity: Float
}

type UpdateMBomItemReferenceDesignator {
  mbomItemReferenceDesignator: MBomItemReferenceDesignator
}

input UpdateMBomItemReferenceDesignatorInput {
  id: ID!
  mbomItemId: ID
  value: String
  etag: String!
}

type UpdateMRPJob {
  mrpJob: MRPJob
}

input UpdateMRPJobInput {
  id: ID!
  startTime: DateTime
  endTime: DateTime
  etag: String!
}

"""Updates an Organization given a UpdateOrganizationInput argument."""
type UpdateOrganization {
  organization: Organization
}

"""Update GlobalUniqueSerialNumber in organization settings."""
type UpdateOrganizationGlobalUniqueSerialNumberScheme {
  organization: Organization
}

"""Inputs needed to update an Organization."""
input UpdateOrganizationInput {
  id: ID!
  etag: String!
  name: String
  avatar: String
  settings: OrganizationSettingsInput
}

"""Update or insert issue attribute in organization settings."""
type UpdateOrganizationIssueAttributes {
  organization: Organization
}

"""Update or insert location attribute in organization settings."""
type UpdateOrganizationLocationAttributes {
  organization: Organization
}

"""Update or insert mbom attribute in organization settings."""
type UpdateOrganizationMbomAttributes {
  organization: Organization
}

"""Update or insert part attribute in organization settings."""
type UpdateOrganizationPartAttributes {
  organization: Organization
}

"""Update or insert part inventory attribute in organization settings."""
type UpdateOrganizationPartInventoryAttributes {
  organization: Organization
}

"""Update or insert part kit attribute in organization settings."""
type UpdateOrganizationPartKitAttributes {
  organization: Organization
}

"""Update or insert part kit item attribute in organization settings."""
type UpdateOrganizationPartKitItemAttributes {
  organization: Organization
}

"""Update part revision format in organization settings."""
type UpdateOrganizationPartRevisionScheme {
  organization: Organization
}

"""Update or insert Procedure attribute in organization settings."""
type UpdateOrganizationProcedureAttributes {
  organization: Organization
}

"""Update or insert purchase order attribute in organization settings."""
type UpdateOrganizationPurchaseOrderAttributes {
  organization: Organization
}

"""
Update or insert purchase order line attribute in organization settings.
"""
type UpdateOrganizationPurchaseOrderLineAttributes {
  organization: Organization
}

"""Update or insert receipt attribute in organization settings."""
type UpdateOrganizationReceiptAttributes {
  organization: Organization
}

"""Update or insert run attribute in organization settings."""
type UpdateOrganizationRunAttributes {
  organization: Organization
}

"""Update or insert RunStep attribute in organization settings."""
type UpdateOrganizationRunStepAttributes {
  organization: Organization
}

"""Update or insert Step attribute in organization settings."""
type UpdateOrganizationStepAttributes {
  organization: Organization
}

"""Update or insert supplier attribute in organization settings."""
type UpdateOrganizationSupplierAttributes {
  organization: Organization
}

"""Update a part and its attributes."""
type UpdatePart {
  part: Part
}

type UpdatePartAttribute {
  partAttribute: PartAttribute
}

input UpdatePartAttributeInput {
  partId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Input to create a part."""
input UpdatePartInput {
  id: ID!
  etag: String!
  partNumber: String
  description: String
  supplierPartNumber: String
  thumbnailId: ID
  trackingType: Trackingtypeenum
  revision: String
  cost: Float
  exportControlled: Boolean
  attributes: [NestedExtensibleAttributeInput]
  revisionScheme: String
  leadTime: Int
  unitOfMeasureId: Int
  sourcingStrategy: Sourcingstrategyenum
  partType: Parttypeenum
  maintenanceIntervalSeconds: Int
}

"""Update a PartInventory given an UpdatePartInventoryInput."""
type UpdatePartInventory {
  partInventory: PartInventory
  splitInventory: PartInventory
}

type UpdatePartInventoryAttribute {
  partInventoryAttribute: PartInventoryAttribute
}

input UpdatePartInventoryAttributeInput {
  partInventoryId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update a PartInventory."""
input UpdatePartInventoryInput {
  attributes: [NestedExtensibleAttributeInput]
  autogenerateLotNumber: Boolean

  """
  In the future, this input will not support a boolean
  'autogenerate_serial_type'. Use autogenerate_serial_type field with
  SerialGeneratorType.REVISION
  """
  autogenerateSerialNumber: Boolean
  autogenerateSerialType: SerialGeneratorType
  cost: Decimal
  estimatedArrival: DateTime
  etag: String!
  id: ID!
  lastMaintainedDate: DateTime
  locationId: ID
  lotNumber: String
  needDate: DateTime
  partId: ID
  quantity: Float
  quantityScrapped: Float
  serialNumber: String
  supplierId: ID
  unitOfMeasureId: ID
  uri: String
}

type UpdatePartKit {
  partKit: PartKit
}

type UpdatePartKitAttribute {
  partKitAttribute: PartKitAttribute
}

input UpdatePartKitAttributeInput {
  partKitId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update object."""
input UpdatePartKitInput {
  assignedTeamId: Int
  assignedToId: Int
  attributes: [NestedExtensibleAttributeInput]
  etag: String!
  locationId: Int
  deliveryLocationId: Int
  id: Int!
  runId: Int
  status: Partkitstatusenum
}

type UpdatePartKitItem {
  partKitItem: PartKitItem
}

type UpdatePartKitItemAttribute {
  partKitItemAttribute: PartKitItemAttribute
}

input UpdatePartKitItemAttributeInput {
  partKitItemId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update object."""
input UpdatePartKitItemInput {
  attributes: [NestedExtensibleAttributeInput]
  etag: String!
  id: Int!
  originMbomItemId: Int
  partId: Int
  quantity: Float
}

type UpdatePartProcedure {
  partProcedure: PartProcedure
}

input UpdatePartProcedureInput {
  partId: ID!
  procedureId: ID!
  status: partprocedurestatusreviewstatusenum
  required: Boolean
  etag: String!
}

"""Input to update part revision from organization settings."""
input UpdatePartRevisionSchemeSettingInput {
  name: String!
  allowOverflow: Boolean
  default: Boolean
  id: ID!
  etag: String!
}

type UpdatePartSubtype {
  partSubtype: PartSubtype
}

input UpdatePartSubtypeInput {
  id: ID!
  name: String
  description: String
  etag: String!
}

type UpdatePlan {
  plan: Plan
}

input UpdatePlanInput {
  description: String
  id: ID!
  includeInMrp: Boolean
  name: String
  status: Plansstatusenum
  etag: String!
}

type UpdatePlanItem {
  planItem: PlanItem
}

type UpdatePlanItemAllocation {
  planItemAllocation: PlanItemAllocation
}

input UpdatePlanItemAllocationInput {
  childPlanItemId: ID!
  parentPlanItemId: ID!
  mrpJobId: ID
  quantity: Float
  etag: String!
}

input UpdatePlanItemInput {
  assignedToId: ID
  endTime: DateTime
  explode: Boolean
  forecastedEndTime: DateTime
  forecastedStartTime: DateTime
  id: ID!
  mrpJobId: ID
  name: String
  partId: ID
  procedureId: ID
  quantity: Float
  startTime: DateTime
  supplierId: ID
  etag: String!
}

type UpdatePlanReservation {
  planReservation: PlanReservation
}

input UpdatePlanReservationInput {
  id: ID!
  partInventoryId: ID
  planId: ID
  quantity: Float
  etag: String!
}

"""Updates a Procedure given an UpdateProcedureInput argument."""
type UpdateProcedure {
  procedure: Procedure
}

type UpdateProcedureAttribute {
  procedureAttribute: ProcedureAttribute
}

input UpdateProcedureAttributeInput {
  procedureId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update a Procedure."""
input UpdateProcedureInput {
  id: ID!
  title: String
  description: String
  status: Procedurestatusenum
  exportControlled: Boolean
  etag: String!
  type: Proceduretypeenum
  attributes: [NestedExtensibleAttributeInput]
}

type UpdatePurchaseOrder {
  purchaseOrder: PurchaseOrder
}

type UpdatePurchaseOrderApproval {
  approval: PurchaseOrderApproval
}

input UpdatePurchaseOrderApprovalInput {
  id: ID!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  parentId: ID
  etag: String!
}

type UpdatePurchaseOrderApprovalRequest {
  approvalRequest: PurchaseOrderApprovalRequest
}

input UpdatePurchaseOrderApprovalRequestInput {
  id: ID!
  status: reviewreviewstatusenum
  purchaseOrderId: ID
  etag: String!
}

type UpdatePurchaseOrderAttribute {
  purchaseOrderAttribute: PurchaseOrderAttribute
}

input UpdatePurchaseOrderAttributeInput {
  purchaseOrderId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

type UpdatePurchaseOrderFee {
  purchaseOrderFee: PurchaseOrderFee
}

input UpdatePurchaseOrderFeeInput {
  id: ID!
  purchaseOrderId: ID
  name: String
  value: Float
  type: Feetypeenum
  etag: String!
}

"""Inputs needed to update object."""
input UpdatePurchaseOrderInput {
  assignedToId: Int
  attributes: [NestedExtensibleAttributeInput]
  billToLocationId: Int
  cost: Float
  currencyId: Int
  description: String
  etag: String!
  id: Int!
  orderedAt: DateTime
  paid: Boolean
  shipToLocationId: Int
  supplierId: Int
  supplierInstructions: SlateContent
  status: Purchaseorderstatusenum
}

type UpdatePurchaseOrderLine {
  purchaseOrderLine: PurchaseOrderLine
}

type UpdatePurchaseOrderLineAttribute {
  purchaseOrderLineAttribute: PurchaseOrderLineAttribute
}

input UpdatePurchaseOrderLineAttributeInput {
  purchaseOrderLineId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update object."""
input UpdatePurchaseOrderLineInput {
  attributes: [NestedExtensibleAttributeInput]
  cost: Float
  description: String
  estimatedArrivalDate: DateTime
  etag: String!
  id: Int!
  needDate: DateTime
  paid: Boolean
  partId: Int
  purchaseOrderId: Int
  quantity: Float
  status: Purchaseorderstatusenum
}

type UpdateReceipt {
  receipt: Receipt
}

type UpdateReceiptAttribute {
  receiptAttribute: ReceiptAttribute
}

input UpdateReceiptAttributeInput {
  receiptId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Custom inputs to update receipt."""
input UpdateReceiptInput {
  attributes: [NestedExtensibleAttributeInput]
  etag: String!
  id: Int!
  receivedAt: DateTime
  receivedById: Int
}

type UpdateReceiptItem {
  receiptItem: ReceiptItem
}

input UpdateReceiptItemInput {
  id: ID!
  receiptId: ID
  partInventoryId: ID
  purchaseOrderLineId: ID
  quantity: Float
  etag: String!
}

type UpdateRedline {
  redline: Redline
}

type UpdateRedlineApproval {
  approval: RedlineApproval
}

input UpdateRedlineApprovalInput {
  id: ID!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  redlineId: ID
  parentId: ID
  etag: String!
}

type UpdateRedlineApprovalRequest {
  approvalRequest: RedlineApprovalRequest
}

input UpdateRedlineApprovalRequestInput {
  id: ID!
  status: reviewreviewstatusenum
  redlineId: ID
  etag: String!
}

"""Inputs needed to update a Redline."""
input UpdateRedlineInput {
  id: ID!
  issueId: Int
  etag: String!
}

type UpdateRequirement {
  requirement: Requirement
}

input UpdateRequirementInput {
  id: ID!
  referenceName: String
  title: String
  content: SlateContent
  etag: String!
}

type UpdateReview {
  review: Review
}

input UpdateReviewInput {
  id: ID!
  status: reviewreviewstatusenum
  procedureId: ID
  comment: String
  content: SlateContent
  resolved: Boolean
  stepId: ID
  parentId: ID
  etag: String!
}

type UpdateReviewRequest {
  reviewRequest: ReviewRequest
}

input UpdateReviewRequestInput {
  status: Reviewstatusenum
  id: ID!
  procedureId: ID
  reviewerId: ID
  etag: String!
}

type UpdateRole {
  role: Role
}

input UpdateRoleInput {
  id: ID!
  name: String
  etag: String!
}

type UpdateRule {
  rule: Rule
}

"""Inputs needed to create a rule."""
input UpdateRuleInput {
  id: Int!
  etag: String!
  title: String
  version: Int = 1
  enabled: Boolean
  target: RuleTargetEnum
  eventType: RuleEventType
  ruleType: RuleType
  code: String
  context: String
  errorState: RuleErrorState
}

type UpdateRun {
  run: Run
}

type UpdateRunAttribute {
  runAttribute: RunAttribute
}

input UpdateRunAttributeInput {
  runId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

type UpdateRunBatch {
  runBatch: RunBatch
}

input UpdateRunBatchInput {
  id: ID!
  title: String
  etag: String!
}

"""Inputs needed to update a Run."""
input UpdateRunInput {
  attributes: [NestedExtensibleAttributeInput]
  id: ID!
  title: String
  assignedTeamId: ID
  assignedToId: ID
  dueDate: DateTime
  jiraIssueKey: String
  description: String
  resultsLink: String
  etag: String!
  partId: ID
  partInventoryId: ID
  scheduledStart: DateTime
  scheduledEnd: DateTime
  quantity: Int
  exportControlled: Boolean
  runBatchId: Int
  addToNewBatch: Boolean
  runBatchTitle: String
}

"""Updates Runs given a list of UpdateRunInput argument."""
type UpdateRuns {
  runs: [Run]
}

"""Updates a RunStep given a UpdateRunStepInput argument."""
type UpdateRunStep {
  runStep: RunStep
}

type UpdateRunStepAttribute {
  runStepAttribute: RunStepAttribute
}

input UpdateRunStepAttributeInput {
  runStepId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Updates RunStepFields during redlining."""
type UpdateRunStepField {
  runStepField: RunStepField
}

"""Inputs needed to update a RunStepField."""
input UpdateRunStepFieldInput {
  allowNotApplicable: Boolean
  allowedIonType: runstepfieldiontypeentitytypeenum
  assignedTeamId: ID
  assignedToId: ID
  display: String
  etag: String!
  helpText: String
  id: ID!
  name: String
  options: [String]
  partId: Int
  partSubtypeId: Int
  peerReviewRequired: Boolean
  required: Boolean
  signoffRoleId: Int
  type: runstepfieldfieldtypes
  unit: String

  """
  In the future, this mutation will not support updating "value". Use
  UpdateRunStepFieldValue to update the "value" for a field.
  """
  value: ScalarValue
}

type UpdateRunStepFieldValidation {
  runStepFieldValidation: RunStepFieldValidation
}

input UpdateRunStepFieldValidationInput {
  position: Int
  value: Float
  id: ID!
  functionId: ID
  etag: String!
}

"""
Updates a RunStepField value given UpdateRunStepFieldValue Input argument.
"""
type UpdateRunStepFieldValue {
  runStepField: RunStepField
}

"""Inputs needed to update a RunStepFieldValue during redlining."""
input UpdateRunStepFieldValueInput {
  etag: String!
  id: ID!
  notApplicable: Boolean
  value: ScalarValue
}

"""Inputs needed to update a RunStep."""
input UpdateRunStepInput {
  assignedTeamId: ID
  assignedToId: ID
  attributes: [NestedExtensibleAttributeInput]
  content: String
  datagrid: DataGridInput
  displayPdf: Boolean
  etag: String!
  id: ID!
  leadTime: Int
  locationId: ID
  parentId: ID
  scheduledEnd: DateTime
  scheduledStart: DateTime
  slateContent: SlateContent
  status: Statusenum
  title: String
  type: runstepsteptypes
}

"""Updates a step given a UpdateStepInput."""
type UpdateStep {
  step: Step
}

type UpdateStepApproval {
  approval: StepApproval
}

input UpdateStepApprovalInput {
  id: ID!
  status: reviewreviewstatusenum
  comment: String
  content: SlateContent
  resolved: Boolean
  parentId: ID
  etag: String!
}

type UpdateStepApprovalRequest {
  approvalRequest: StepApprovalRequest
}

input UpdateStepApprovalRequestInput {
  id: ID!
  status: reviewreviewstatusenum
  stepId: ID
  etag: String!
}

type UpdateStepAttribute {
  stepAttribute: StepAttribute
}

input UpdateStepAttributeInput {
  stepId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Updates a StepField given a UpdateStepField argument."""
type UpdateStepField {
  stepField: StepField
}

"""Inputs needed to update a StepField."""
input UpdateStepFieldInput {
  allowNotApplicable: Boolean
  allowedIonType: stepfieldiontypeentitytypeenum
  display: String
  etag: String!
  helpText: String
  id: ID!
  name: String
  options: [String]
  partId: Int
  partSubtypeId: Int
  peerReviewRequired: Boolean
  required: Boolean
  signoffRoleId: Int
  type: Fieldtypes
  unit: String
}

type UpdateStepFieldValidation {
  stepFieldValidation: StepFieldValidation
}

input UpdateStepFieldValidationInput {
  position: Int
  value: Float
  id: ID!
  fieldId: ID
  functionId: ID
  etag: String!
}

"""Inputs needed to update a step."""
input UpdateStepInput {
  id: ID!
  content: String
  slateContent: SlateContent
  title: String
  procedureId: ID
  parentId: ID
  locationId: ID
  locationSubtypeId: ID
  datagrid: DataGridInput
  leadTime: Int
  displayPdf: Boolean
  etag: String!
  type: Steptypes
  standardStepStatus: Standardstepstatusenum
  attributes: [NestedExtensibleAttributeInput]
  breakStandardStepLink: Boolean
}

type UpdateStepMBomItemAssociation {
  stepMbomItemAssociation: StepMBomItemAssociation
}

input UpdateStepMBomItemAssociationInput {
  id: ID!
  mbomItemReferenceDesignatorId: ID
  quantity: Float
  etag: String!
}

"""Inputs needed to update StepPosition."""
input UpdateStepPositionInput {
  id: Int!
  position: Int!
  etag: String!
}

type UpdateSupplier {
  supplier: Supplier
}

type UpdateSupplierAttribute {
  supplierAttribute: SupplierAttribute
}

input UpdateSupplierAttributeInput {
  supplierId: Int!
  key: String!
  value: ScalarValue
  etag: String!
}

"""Inputs needed to update object."""
input UpdateSupplierInput {
  address: String
  attributes: [NestedExtensibleAttributeInput]
  contactName: String
  description: String
  email: String
  etag: String!
  id: ID!
  name: String
  phoneNumber: String
}

type UpdateTeam {
  team: Team
}

input UpdateTeamInput {
  id: ID!
  name: String
  supervisorId: ID
  etag: String!
}

type UpdateUnitOfMeasurement {
  unitOfMeasurement: UnitOfMeasurement
}

input UpdateUnitOfMeasurementInput {
  id: ID!
  type: String
  etag: String!
}

type UpdateUser {
  user: User
}

input UpdateUserInput {
  avatar: String
  deactivated: Boolean
  enforceMfa: Boolean
  id: ID!
  name: String
  notificationEmailsEnabled: Boolean
  etag: String!
}

type UpdateUserNotification {
  userNotification: UserNotification
}

input UpdateUserNotificationInput {
  description: String
  externalLink: String
  id: ID!
  linkText: String
  read: Boolean
  etag: String!
}

type UpdateWebhookHeader {
  webhookHeader: WebhookHeader
}

input UpdateWebhookHeaderInput {
  id: ID!
  key: String
  value: String
  etag: String!
}

type UpdateWebhookReceiver {
  webhookReceiver: WebhookReceiver
}

input UpdateWebhookReceiverInput {
  id: ID!
  name: String
  description: String
  webhookUri: String
  sharedSecret: String
  contentType: Webhookcontenttypesenum
  expectedResponseCode: Int
  active: Boolean
  etag: String!
}

type UpdateWebhookSubscription {
  webhookSubscription: WebhookSubscription
}

input UpdateWebhookSubscriptionInput {
  id: ID!
  active: Boolean
  etag: String!
}

"""
Create scalar that ignores normal serialization/deserialization, since
that will be handled by the multipart request spec
"""
scalar Upload

"""A User of the ION platform."""
type User {
  _created: DateTime
  _etag: String
  LastSessionId: String
  avatar: String
  deactivated: Boolean!
  email: String
  enforceMfa: Boolean!
  id: Int!
  ionBot: Boolean!
  name: String
  notificationEmailsEnabled: Boolean!
  organizationId: Int!
  _updated: DateTime
  updatedById: Int
  entityId: Int!
  roles: [Role]
  isAdmin: Boolean
  permissionGroups: [PermissionGroup]
  organization: Organization
  prettyStr: String
  Organization: Organization @deprecated(reason: "Use `organization` instead, `Organization` is deprecated.")
  teams(filters: TeamsInputFilters): [Team]
  updatedBy: [User]
  userRoles(filters: UserRolesInputFilters): [UserRole]
  entity: Entity
  _AnalyticsCredentialCount: Int
  _TeamsCount: Int
  _UserRolesCount: Int
  timeline(filters: UserEventFilter): [Timeline]
}

input UserEventFilter {
  Created: DateTimeFilter
  avatar: StringFilter
  deactivated: BooleanFilter
  email: StringFilter
  enforceMfa: BooleanFilter
  id: IDFilter
  ionBot: BooleanFilter
  name: StringFilter
  notificationEmailsEnabled: BooleanFilter
  organizationId: IDFilter
  Updated: DateTimeFilter
  updatedById: IDFilter
  entityId: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type UserEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: User
  newValues: User
}

input UserInputFilters {
  or_: [UserInputFilters]
  and_: [UserInputFilters]
  _created: DateTimeFilter
  avatar: StringFilter
  deactivated: BooleanFilter
  email: StringFilter
  enforceMfa: BooleanFilter
  id: IDFilter
  ionBot: BooleanFilter
  name: StringFilter
  notificationEmailsEnabled: BooleanFilter
  organizationId: IDFilter
  _updated: DateTimeFilter
  updatedById: IDFilter
  entityId: IDFilter
  teams: TeamsInputFilters
  userRoles: UserRolesInputFilters
}

"""A user notification."""
type UserNotification {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  description: String
  entityId: Int
  externalLink: String
  id: Int!
  linkText: String
  path: String
  payload: JSONString
  read: Boolean!
  title: String
  type: NotificationTypeEnum!
  userId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  linkUrl: String
  prettyStr: String

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: UserNotificationEventFilter): [Timeline]
}

input UserNotificationEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  description: StringFilter
  entityId: IDFilter
  externalLink: StringFilter
  id: IDFilter
  linkText: StringFilter
  path: StringFilter
  payload: JSONStringFilter
  read: BooleanFilter
  title: StringFilter
  type: NotificationTypeEnumFilter
  userId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type UserNotificationEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: UserNotification
  newValues: UserNotification
}

type UserNotificationsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [UserNotificationsEdge]!
}

"""A Relay edge containing a `UserNotifications` and its cursor."""
type UserNotificationsEdge {
  """The item at the end of the edge"""
  node: UserNotification

  """A cursor for use in pagination"""
  cursor: String!
}

input UserNotificationsInputFilters {
  or_: [UserNotificationsInputFilters]
  and_: [UserNotificationsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  description: StringFilter
  entityId: IDFilter
  externalLink: StringFilter
  id: IDFilter
  linkText: StringFilter
  path: StringFilter
  payload: JSONStringFilter
  read: BooleanFilter
  title: StringFilter
  type: NotificationTypeEnumFilter
  userId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum UserNotificationSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  EXTERNAL_LINK_ASC
  EXTERNAL_LINK_DESC
  ID_ASC
  ID_DESC
  LINK_TEXT_ASC
  LINK_TEXT_DESC
  PATH_ASC
  PATH_DESC
  PAYLOAD_ASC
  PAYLOAD_DESC
  READ_ASC
  READ_DESC
  TITLE_ASC
  TITLE_DESC
  TYPE_ASC
  TYPE_DESC
  USER_ID_ASC
  USER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""A role a User has within the ION platform."""
type UserRole {
  _created: DateTime
  userId: Int
  roleId: Int

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int
  user(filters: UserInputFilters): User

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User
  timeline(filters: UserRoleEventFilter): [Timeline]
}

input UserRoleEventFilter {
  Created: DateTimeFilter
  userId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type UserRoleEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: UserRole
  newValues: UserRole
}

input UserRolesInputFilters {
  or_: [UserRolesInputFilters]
  and_: [UserRolesInputFilters]
  _created: DateTimeFilter
  userId: IDFilter
  roleId: IDFilter
  createdById: IDFilter
  user: UserInputFilters
  createdBy: UserInputFilters
}

type UsersConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [UsersEdge]!
}

"""A Relay edge containing a `Users` and its cursor."""
type UsersEdge {
  """The item at the end of the edge"""
  node: User

  """A cursor for use in pagination"""
  cursor: String!
}

enum UserSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  AUTH0_SUB_ASC
  AUTH0_SUB_DESC
  AVATAR_ASC
  AVATAR_DESC
  DEACTIVATED_ASC
  DEACTIVATED_DESC
  EMAIL_ASC
  EMAIL_DESC
  ENFORCE_MFA_ASC
  ENFORCE_MFA_DESC
  ID_ASC
  ID_DESC
  ION_BOT_ASC
  ION_BOT_DESC
  NAME_ASC
  NAME_DESC
  NOTIFICATION_EMAILS_ENABLED_ASC
  NOTIFICATION_EMAILS_ENABLED_DESC
  ORGANIZATION_ID_ASC
  ORGANIZATION_ID_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
}

"""A user subscription."""
type UserSubscription {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  userId: Int!
  entityId: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  user(filters: UserInputFilters): User
  entity: Entity

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  timeline(filters: UserSubscriptionEventFilter): [Timeline]
}

input UserSubscriptionEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  userId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type UserSubscriptionEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: UserSubscription
  newValues: UserSubscription
}

type UserSubscriptionsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [UserSubscriptionsEdge]!
}

"""A Relay edge containing a `UserSubscriptions` and its cursor."""
type UserSubscriptionsEdge {
  """The item at the end of the edge"""
  node: UserSubscription

  """A cursor for use in pagination"""
  cursor: String!
}

input UserSubscriptionsInputFilters {
  or_: [UserSubscriptionsInputFilters]
  and_: [UserSubscriptionsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  userId: IDFilter
  entityId: IDFilter
  createdById: IDFilter
  updatedById: IDFilter
  user: UserInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum UserSubscriptionSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  ENTITY_ID_ASC
  ENTITY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""Validation function GraphQL object."""
type ValidationFunction {
  id: Int!
  functionName: String
  displayName: String
  prettyStr: String
  validations(filters: StepFieldValidationsInputFilters): [StepFieldValidation]
  runValidations(filters: RunStepFieldValidationsInputFilters): [RunStepFieldValidation]
  _created: DateTime
  _updated: DateTime
  _etag: String
  _ValidationsCount: Int
  _RunValidationsCount: Int
  timeline(filters: ValidationFunctionEventFilter): [Timeline]
}

input ValidationFunctionEventFilter {
  id: IDFilter
  functionName: StringFilter
  displayName: StringFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type ValidationFunctionEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: ValidationFunction
  newValues: ValidationFunction
}

type ValidationFunctionsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [ValidationFunctionsEdge]!
}

"""A Relay edge containing a `ValidationFunctions` and its cursor."""
type ValidationFunctionsEdge {
  """The item at the end of the edge"""
  node: ValidationFunction

  """A cursor for use in pagination"""
  cursor: String!
}

input ValidationFunctionsInputFilters {
  or_: [ValidationFunctionsInputFilters]
  and_: [ValidationFunctionsInputFilters]
  id: IDFilter
  functionName: StringFilter
  displayName: StringFilter
  validations: StepFieldValidationsInputFilters
  runValidations: RunStepFieldValidationsInputFilters
}

enum ValidationFunctionSortEnum {
  ID_ASC
  ID_DESC
  FUNCTION_NAME_ASC
  FUNCTION_NAME_DESC
  DISPLAY_NAME_ASC
  DISPLAY_NAME_DESC
}

enum Validationresultenum {
  PASS
  FAIL
  PENDING
}

input ValidationresultenumFilter {
  eq: Validationresultenum
  neq: Validationresultenum
  like: Validationresultenum
  ilike: Validationresultenum
  notlike: Validationresultenum
  notilike: Validationresultenum
  in: [Validationresultenum]
  gt: Validationresultenum
  gte: Validationresultenum
  lt: Validationresultenum
  lte: Validationresultenum
  isnull: Boolean
}

"""The collection of new and old values in redline diff."""
type ValueDiffs {
  newValue: ItemDiff
  oldValue: ItemDiff
}

enum Webhookcontenttypesenum {
  JSON
  XML
}

input WebhookcontenttypesenumFilter {
  eq: Webhookcontenttypesenum
  neq: Webhookcontenttypesenum
  like: Webhookcontenttypesenum
  ilike: Webhookcontenttypesenum
  notlike: Webhookcontenttypesenum
  notilike: Webhookcontenttypesenum
  in: [Webhookcontenttypesenum]
  gt: Webhookcontenttypesenum
  gte: Webhookcontenttypesenum
  lt: Webhookcontenttypesenum
  lte: Webhookcontenttypesenum
  isnull: Boolean
}

"""The graphene sqlalchemy object type for webhook events."""
type WebhookEvent {
  id: Int!
  subscriptionId: Int
  responseReceivedAt: DateTime
  responseStatusCode: Int
  status: Webhookeventstatusenum!
  numberOfRetries: Int
  responseData: String
  requestData: String
  _created: DateTime
  _updated: DateTime
  prettyStr: String
  subscription(filters: WebhookSubscriptionsInputFilters): WebhookSubscription
  _etag: String
  timeline(filters: WebhookEventEventFilter): [Timeline]
}

input WebhookEventEventFilter {
  id: IDFilter
  subscriptionId: IDFilter
  responseReceivedAt: DateTimeFilter
  responseStatusCode: IntFilter
  status: WebhookeventstatusenumFilter
  numberOfRetries: IntFilter
  responseData: StringFilter
  requestData: StringFilter
  Created: DateTimeFilter
  Updated: DateTimeFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type WebhookEventEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: WebhookEvent
  newValues: WebhookEvent
}

type WebhookEventsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [WebhookEventsEdge]!
}

"""A Relay edge containing a `WebhookEvents` and its cursor."""
type WebhookEventsEdge {
  """The item at the end of the edge"""
  node: WebhookEvent

  """A cursor for use in pagination"""
  cursor: String!
}

input WebhookEventsInputFilters {
  or_: [WebhookEventsInputFilters]
  and_: [WebhookEventsInputFilters]
  id: IDFilter
  subscriptionId: IDFilter
  responseReceivedAt: DateTimeFilter
  responseStatusCode: IntFilter
  status: WebhookeventstatusenumFilter
  numberOfRetries: IntFilter
  responseData: StringFilter
  requestData: StringFilter
  _created: DateTimeFilter
  _updated: DateTimeFilter
  subscription: WebhookSubscriptionsInputFilters
}

enum WebhookEventSortEnum {
  ID_ASC
  ID_DESC
  SUBSCRIPTION_ID_ASC
  SUBSCRIPTION_ID_DESC
  RESPONSE_RECEIVED_AT_ASC
  RESPONSE_RECEIVED_AT_DESC
  RESPONSE_STATUS_CODE_ASC
  RESPONSE_STATUS_CODE_DESC
  STATUS_ASC
  STATUS_DESC
  NUMBER_OF_RETRIES_ASC
  NUMBER_OF_RETRIES_DESC
  RESPONSE_DATA_ASC
  RESPONSE_DATA_DESC
  REQUEST_DATA_ASC
  REQUEST_DATA_DESC
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
}

enum Webhookeventstatusenum {
  SENDING
  SUCCEEDED
  RETRYING
  FAILED
}

input WebhookeventstatusenumFilter {
  eq: Webhookeventstatusenum
  neq: Webhookeventstatusenum
  like: Webhookeventstatusenum
  ilike: Webhookeventstatusenum
  notlike: Webhookeventstatusenum
  notilike: Webhookeventstatusenum
  in: [Webhookeventstatusenum]
  gt: Webhookeventstatusenum
  gte: Webhookeventstatusenum
  lt: Webhookeventstatusenum
  lte: Webhookeventstatusenum
  isnull: Boolean
}

"""The graphene sqlalchemy object type for webhook headers."""
type WebhookHeader {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  key: String!
  value: String!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  webhookReceivers(filters: WebhookReceiversInputFilters): [WebhookReceiver]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _WebhookReceiversCount: Int
  timeline(filters: WebhookHeaderEventFilter): [Timeline]
}

input WebhookHeaderEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  key: StringFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type WebhookHeaderEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: WebhookHeader
  newValues: WebhookHeader
}

type WebhookHeadersConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [WebhookHeadersEdge]!
}

"""A Relay edge containing a `WebhookHeaders` and its cursor."""
type WebhookHeadersEdge {
  """The item at the end of the edge"""
  node: WebhookHeader

  """A cursor for use in pagination"""
  cursor: String!
}

input WebhookHeadersInputFilters {
  or_: [WebhookHeadersInputFilters]
  and_: [WebhookHeadersInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  key: StringFilter
  value: StringFilter
  createdById: IDFilter
  updatedById: IDFilter
  webhookReceivers: WebhookReceiversInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum WebhookHeaderSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  KEY_ASC
  KEY_DESC
  VALUE_ASC
  VALUE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""The graphene sqlalchemy object type for webhook receiver."""
type WebhookReceiver {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  name: String!
  description: String
  webhookUri: String!
  sharedSecret: String!
  contentType: Webhookcontenttypesenum
  expectedResponseCode: Int!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  active: Boolean
  prettyStr: String
  subscriptions(filters: WebhookSubscriptionsInputFilters): [WebhookSubscription]
  headers(filters: WebhookHeadersInputFilters): [WebhookHeader]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _SubscriptionsCount: Int
  _HeadersCount: Int
  timeline(filters: WebhookReceiverEventFilter): [Timeline]
}

input WebhookReceiverEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  webhookUri: StringFilter
  sharedSecret: StringFilter
  contentType: WebhookcontenttypesenumFilter
  expectedResponseCode: IntFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type WebhookReceiverEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: WebhookReceiver
  newValues: WebhookReceiver
}

"""Input which connects webhook receiver to webhook headers."""
input WebhookReceiverHeaderInput {
  etag: String!
  webhookReceiverId: Int!
  webhookHeaderId: Int!
}

type WebhookReceiversConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [WebhookReceiversEdge]!
}

"""A Relay edge containing a `WebhookReceivers` and its cursor."""
type WebhookReceiversEdge {
  """The item at the end of the edge"""
  node: WebhookReceiver

  """A cursor for use in pagination"""
  cursor: String!
}

input WebhookReceiversInputFilters {
  or_: [WebhookReceiversInputFilters]
  and_: [WebhookReceiversInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  name: StringFilter
  description: StringFilter
  webhookUri: StringFilter
  sharedSecret: StringFilter
  contentType: WebhookcontenttypesenumFilter
  expectedResponseCode: IntFilter
  createdById: IDFilter
  updatedById: IDFilter
  active: BooleanFilter
  subscriptions: WebhookSubscriptionsInputFilters
  headers: WebhookHeadersInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum WebhookReceiverSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  WEBHOOK_URI_ASC
  WEBHOOK_URI_DESC
  SHARED_SECRET_ASC
  SHARED_SECRET_DESC
  CONTENT_TYPE_ASC
  CONTENT_TYPE_DESC
  EXPECTED_RESPONSE_CODE_ASC
  EXPECTED_RESPONSE_CODE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

"""The graphene sqlalchemy object type for webhook subscription."""
type WebhookSubscription {
  _created: DateTime
  _updated: DateTime
  _etag: String
  LastSessionId: String
  id: Int!
  resource: ResourceEnum
  action: WebhookSubscriptionActions
  receiverId: Int
  active: Boolean!

  """
  
          User id that created this object.
  
          Returns: int of user_id
          
  """
  createdById: Int!

  """
  
          User id that updated this object.
  
          Returns: int of user_id
          
  """
  updatedById: Int!
  prettyStr: String
  receiver(filters: WebhookReceiversInputFilters): WebhookReceiver
  events(filters: WebhookEventsInputFilters): [WebhookEvent]

  """
  User associated with creating related attribute.
  
          Returns: relationship object
  """
  createdBy(filters: UserInputFilters): User

  """
  User associated with updating related attribute.
  
          Returns: relationship object
  """
  updatedBy(filters: UserInputFilters): User
  _EventsCount: Int
  timeline(filters: WebhookSubscriptionEventFilter): [Timeline]
}

"""Enum for actions to which a webhook can be subscribed."""
enum WebhookSubscriptionActions {
  UPDATE
  CREATE
  DELETE
}

input WebhookSubscriptionActionsFilter {
  eq: WebhookSubscriptionActions
  neq: WebhookSubscriptionActions
  like: WebhookSubscriptionActions
  ilike: WebhookSubscriptionActions
  notlike: WebhookSubscriptionActions
  notilike: WebhookSubscriptionActions
  in: [WebhookSubscriptionActions]
  gt: WebhookSubscriptionActions
  gte: WebhookSubscriptionActions
  lt: WebhookSubscriptionActions
  lte: WebhookSubscriptionActions
  isnull: Boolean
}

input WebhookSubscriptionEventFilter {
  Created: DateTimeFilter
  Updated: DateTimeFilter
  id: IDFilter
  resource: ResourceEnumFilter
  action: WebhookSubscriptionActionsFilter
  receiverId: IDFilter
  active: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  actor: UserInputFilters
  eventType: EventTypeFilter
  includeSelfSimilarRelationships: Boolean
}

type WebhookSubscriptionEvents implements Timeline {
  actor: User
  eventType: EventType
  timestamp: DateTime
  changedAttributes: [ChangedAttributes]
  oldValues: WebhookSubscription
  newValues: WebhookSubscription
}

type WebhookSubscriptionsConnection {
  """Pagination data for connection."""
  pageInfo: IonPageInfo!

  """Contains the nodes in this connection."""
  edges: [WebhookSubscriptionsEdge]!
}

"""A Relay edge containing a `WebhookSubscriptions` and its cursor."""
type WebhookSubscriptionsEdge {
  """The item at the end of the edge"""
  node: WebhookSubscription

  """A cursor for use in pagination"""
  cursor: String!
}

input WebhookSubscriptionsInputFilters {
  or_: [WebhookSubscriptionsInputFilters]
  and_: [WebhookSubscriptionsInputFilters]
  _created: DateTimeFilter
  _updated: DateTimeFilter
  id: IDFilter
  resource: ResourceEnumFilter
  action: WebhookSubscriptionActionsFilter
  receiverId: IDFilter
  active: BooleanFilter
  createdById: IDFilter
  updatedById: IDFilter
  receiver: WebhookReceiversInputFilters
  events: WebhookEventsInputFilters
  createdBy: UserInputFilters
  updatedBy: UserInputFilters
}

enum WebhookSubscriptionSortEnum {
  _CREATED_ASC
  _CREATED_DESC
  _UPDATED_ASC
  _UPDATED_DESC
  _ETAG_ASC
  _ETAG_DESC
  _LAST_SESSION_ID_ASC
  _LAST_SESSION_ID_DESC
  ID_ASC
  ID_DESC
  RESOURCE_ASC
  RESOURCE_DESC
  ACTION_ASC
  ACTION_DESC
  RECEIVER_ID_ASC
  RECEIVER_ID_DESC
  ACTIVE_ASC
  ACTIVE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  UPDATED_BY_ID_ASC
  UPDATED_BY_ID_DESC
}

