mutation createUnitOfMeasurement($filters: UserInputFilters, $filters1: UserInputFilters, $filters2: UnitOfMeasurementEventFilter, $input: CreateUnitOfMeasurementInput!){
    createUnitOfMeasurement(input: $input){
        unitOfMeasurement{
            _created
            _updated
            _etag
            LastSessionId
            id
            type
            createdById
            updatedById
            prettyStr
            createdBy(filters: $filters){
                _created
                _etag
                LastSessionId
                avatar
                deactivated
                email
                enforceMfa
                id
                ionBot
                name
                notificationEmailsEnabled
                organizationId
                _updated
                updatedById
                entityId
                isAdmin
                prettyStr
                _AnalyticsCredentialCount
                _TeamsCount
                _UserRolesCount
            }
            updatedBy(filters: $filters1){
                _created
                _etag
                LastSessionId
                avatar
                deactivated
                email
                enforceMfa
                id
                ionBot
                name
                notificationEmailsEnabled
                organizationId
                _updated
                updatedById
                entityId
                isAdmin
                prettyStr
                _AnalyticsCredentialCount
                _TeamsCount
                _UserRolesCount
            }
            timeline(filters: $filters2){
                eventType
                timestamp
            }
        }
    }
}