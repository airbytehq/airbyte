mutation createIssueDispositionType($filters: IssueInputFilters, $filters1: IssueDispositionTypeRolesInputFilters, $filters2: RolesInputFilters, $filters3: UserInputFilters, $filters4: UserInputFilters, $filters5: IssueDispositionTypeEventFilter, $input: CreateIssueDispositionTypeInput!){
    createIssueDispositionType(input: $input){
        issueDispositionType{
            _created
            _updated
            _etag
            LastSessionId
            id
            title
            active
            description
            createdById
            updatedById
            prettyStr
            issues(filters: $filters){
                _created
                _updated
                _etag
                LastSessionId
                id
                causeCondition
                disposition
                title
                issueDispositionTypeId
                runStepId
                expectedCondition
                purchaseOrderLineId
                mustCloseByRunStepId
                status
                fixPartInventoryId
                assignedToId
                assignedTeamId
                createdById
                updatedById
                entityId
                editable
                batched
                prettyStr
                approved
                createIssueForEachBatchSibling
                _RelatedIssuesCount
                _AssigneesCount
                _LabelsCount
                _CommentsCount
                _PartInventoriesCount
                _RedlinesCount
                _AttributesCount
                _ApprovalsCount
                _ApprovalRequestsCount
            }
            issueDispositionTypeRoles(filters: $filters1){
                _created
                _updated
                _etag
                LastSessionId
                count
                issueDispositionTypeId
                issueApprovalGateType
                roleId
                createdById
                updatedById
                prettyStr
            }
            roles(filters: $filters2){
                _created
                _updated
                _etag
                LastSessionId
                id
                name
                createdById
                updatedById
                prettyStr
                _IssueDispositionTypeRolesCount
                _IssueApprovalRequestsCount
                _IssueApprovalsCount
                _PermissionGroupRolesCount
                _PermissionGroupsCount
                _TeamRolesCount
                _TeamsCount
                _UserRolesCount
                _UsersCount
            }
            createdBy(filters: $filters3){
                _created
                _etag
                LastSessionId
                avatar
                deactivated
                email
                enforceMfa
                id
                ionBot
                name
                notificationEmailsEnabled
                organizationId
                _updated
                updatedById
                entityId
                isAdmin
                prettyStr
                _AnalyticsCredentialCount
                _TeamsCount
                _UserRolesCount
            }
            updatedBy(filters: $filters4){
                _created
                _etag
                LastSessionId
                avatar
                deactivated
                email
                enforceMfa
                id
                ionBot
                name
                notificationEmailsEnabled
                organizationId
                _updated
                updatedById
                entityId
                isAdmin
                prettyStr
                _AnalyticsCredentialCount
                _TeamsCount
                _UserRolesCount
            }
            _IssuesCount
            _IssueDispositionTypeRolesCount
            _RolesCount
            timeline(filters: $filters5){
                eventType
                timestamp
            }
        }
    }
}