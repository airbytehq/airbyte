{
  "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mongodb",
  "supportsIncremental": true,
  "supportsNormalization": false,
  "supportsDBT": false,
  "supported_destination_sync_modes": ["overwrite", "append"],
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MongoDB Destination Spec",
    "type": "object",
    "required": ["database", "auth_type"],
    "properties": {
      "instance_type": {
        "description": "MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.",
        "title": "MongoDb Instance Type",
        "type": "object",
        "order": 0,
        "oneOf": [
          {
            "title": "Standalone MongoDb Instance",
            "required": ["instance", "host", "port"],
            "properties": {
              "instance": {
                "type": "string",
                "enum": ["standalone"],
                "default": "standalone"
              },
              "host": {
                "title": "Host",
                "type": "string",
                "description": "The Host of a Mongo database to be replicated.",
                "order": 0
              },
              "port": {
                "title": "Port",
                "type": "integer",
                "description": "The Port of a Mongo database to be replicated.",
                "minimum": 0,
                "maximum": 65536,
                "default": 27017,
                "examples": ["27017"],
                "order": 1
              }
            }
          },
          {
            "title": "Replica Set",
            "required": ["instance", "server_addresses"],
            "properties": {
              "instance": {
                "type": "string",
                "enum": ["replica"],
                "default": "replica"
              },
              "server_addresses": {
                "title": "Server addresses",
                "type": "string",
                "description": "The members of a replica set. Please specify `host`:`port` of each member seperated by comma.",
                "examples": ["host1:27017,host2:27017,host3:27017"],
                "order": 0
              },
              "replica_set": {
                "title": "Replica Set",
                "type": "string",
                "description": "A replica set name.",
                "order": 1
              }
            }
          },
          {
            "title": "MongoDB Atlas",
            "required": ["instance", "cluster_url"],
            "properties": {
              "instance": {
                "type": "string",
                "enum": ["atlas"],
                "default": "atlas"
              },
              "cluster_url": {
                "title": "Cluster URL",
                "type": "string",
                "description": "URL of a cluster to connect to.",
                "order": 0
              }
            }
          }
        ]
      },
      "database": {
        "title": "DB Name",
        "description": "Name of the database.",
        "type": "string",
        "order": 2
      },
      "auth_type": {
        "title": "Authorization type",
        "type": "object",
        "description": "Authorization type.",
        "oneOf": [
          {
            "title": "None",
            "description": "None.",
            "required": ["authorization"],
            "type": "object",
            "properties": {
              "authorization": {
                "type": "string",
                "const": "none"
              }
            }
          },
          {
            "title": "Login/Password",
            "description": "Login/Password.",
            "required": ["authorization", "username", "password"],
            "type": "object",
            "properties": {
              "authorization": {
                "type": "string",
                "const": "login/password"
              },
              "username": {
                "title": "User",
                "description": "Username to use to access the database.",
                "type": "string",
                "order": 1
              },
              "password": {
                "title": "Password",
                "description": "Password associated with the username.",
                "type": "string",
                "airbyte_secret": true,
                "order": 2
              }
            }
          }
        ]
      },
      "tunnel_method": {
        "type": "object",
        "title": "SSH Tunnel Method",
        "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
        "oneOf": [
          {
            "title": "No Tunnel",
            "required": ["tunnel_method"],
            "properties": {
              "tunnel_method": {
                "description": "No ssh tunnel needed to connect to database",
                "type": "string",
                "const": "NO_TUNNEL",
                "order": 0
              }
            }
          },
          {
            "title": "SSH Key Authentication",
            "required": [
              "tunnel_method",
              "tunnel_host",
              "tunnel_port",
              "tunnel_user",
              "ssh_key"
            ],
            "properties": {
              "tunnel_method": {
                "description": "Connect through a jump server tunnel host using username and ssh key",
                "type": "string",
                "const": "SSH_KEY_AUTH",
                "order": 0
              },
              "tunnel_host": {
                "title": "SSH Tunnel Jump Server Host",
                "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                "type": "string",
                "order": 1
              },
              "tunnel_port": {
                "title": "SSH Connection Port",
                "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                "type": "integer",
                "minimum": 0,
                "maximum": 65536,
                "default": 22,
                "examples": ["22"],
                "order": 2
              },
              "tunnel_user": {
                "title": "SSH Login Username",
                "description": "OS-level username for logging into the jump server host.",
                "type": "string",
                "order": 3
              },
              "ssh_key": {
                "title": "SSH Private Key",
                "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                "type": "string",
                "airbyte_secret": true,
                "multiline": true,
                "order": 4
              }
            }
          },
          {
            "title": "Password Authentication",
            "required": [
              "tunnel_method",
              "tunnel_host",
              "tunnel_port",
              "tunnel_user",
              "tunnel_user_password"
            ],
            "properties": {
              "tunnel_method": {
                "description": "Connect through a jump server tunnel host using username and password authentication",
                "type": "string",
                "const": "SSH_PASSWORD_AUTH",
                "order": 0
              },
              "tunnel_host": {
                "title": "SSH Tunnel Jump Server Host",
                "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                "type": "string",
                "order": 1
              },
              "tunnel_port": {
                "title": "SSH Connection Port",
                "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                "type": "integer",
                "minimum": 0,
                "maximum": 65536,
                "default": 22,
                "examples": ["22"],
                "order": 2
              },
              "tunnel_user": {
                "title": "SSH Login Username",
                "description": "OS-level username for logging into the jump server host",
                "type": "string",
                "order": 3
              },
              "tunnel_user_password": {
                "title": "Password",
                "description": "OS-level password for logging into the jump server host",
                "type": "string",
                "airbyte_secret": true,
                "order": 4
              }
            }
          }
        ]
      }
    }
  }
}
