version: 7.3.6

type: DeclarativeSource

description: >-
  The Metricool connector enables you to extract comprehensive social media
  analytics data from multiple platforms through Metricoolâ€™s unified API. This
  connector supports data extraction from Facebook, Instagram, TikTok, LinkedIn,
  Twitter (X), and YouTube, providing detailed insights into your social media
  performance.


  Key Features:

  - Multi-Platform Support: Extract data from 6 major social media platforms in
  a single connector

  - Comprehensive Analytics: Access post-level metrics, timeline data,
  competitor analysis, and content performance

  - Flexible Date Range: Configure custom date ranges for data extraction
  (defaults to 60 days if not specified)

  - Multiple Content Types: Supports various content formats including posts,
  reels, stories, and videos


  Supported Data Streams:

  - Brand Information: Basic account and profile data

  - Content Analytics: Posts, reels, stories, and videos with engagement metrics

  - Timeline Data: Historical performance metrics tracked over time

  - Competitor Analysis: Available for Facebook and Instagram

check:
  type: CheckStream
  stream_names:
    - facebook_stories

definitions:
  linked:
    HttpRequester:
      authenticator:
        type: ApiKeyAuthenticator
        api_token: "{{ config[\"user_token\"] }}"
        inject_into:
          type: RequestOption
          field_name: X-Mc-Auth
          inject_into: header
      request_parameters:
        end: >-
          {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
          config['end_date'] else now_utc().strftime('%Y%m%d') }}
        start: >-
          {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
          str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
          config['start_date'] if config['start_date'] else (now_utc() -
          duration('P60D')).strftime('%Y%m%d') ) }}
        userId: "{{ config['user_id'] }}"

streams:
  - type: DeclarativeStream
    name: brands
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        url: https://app.metricool.com/api/admin/simpleProfiles
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
    primary_key:
      - id
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        properties:
          description:
            type:
              - string
              - "null"
          id:
            type:
              - number
              - "null"
          hash:
            type:
              - string
              - "null"
          role:
            type:
              - string
              - "null"
          label:
            type:
              - string
              - "null"
          tiktok:
            type:
              - string
              - "null"
          userId:
            type:
              - number
              - "null"
          deleted:
            type:
              - boolean
              - "null"
          picture:
            type:
              - string
              - "null"
          youtube:
            type:
              - string
              - "null"
          facebook:
            type:
              - string
              - "null"
          isShared:
            type:
              - boolean
              - "null"
          joinDate:
            type:
              - number
              - "null"
          timezone:
            type:
              - string
              - "null"
          instagram:
            type:
              - string
              - "null"
          pinterest:
            type:
              - string
              - "null"
          tiktokads:
            type:
              - string
              - "null"
          facebookAds:
            type:
              - string
              - "null"
          ownerUserId:
            type:
              - number
              - "null"
          fbBusinessId:
            type:
              - string
              - "null"
          ownerUsername:
            type:
              - string
              - "null"
          facebookPageId:
            type:
              - string
              - "null"
          engagementRatio:
            type:
              - number
              - "null"
          linkedinCompany:
            type:
              - string
              - "null"
          firstConnectionDate:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: facebook_competitors
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y-%m-%dT00:00:00')
            if config['end_date'] else now_utc().strftime('%Y-%m-%dT00:00:00')
            }}
          from: >-
            {{ ( (
            str_to_datetime(config['start_date']).strftime('%Y-%m-%dT00:00:00')
            if str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          limit: "100"
          userId: "{{ config[\"user_id\"] }}"
          timezone: Etc/UTC
        url: https://app.metricool.com/api/v2/analytics/competitors/facebook
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - id
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - id
        properties:
          id:
            type: number
          isDemo:
            type:
              - boolean
              - "null"
          picture:
            type:
              - string
              - "null"
          favorite:
            type:
              - boolean
              - "null"
          provider:
            type:
              - string
              - "null"
          providerId:
            type:
              - string
              - "null"
          screenName:
            type:
              - string
              - "null"
          displayName:
            type:
              - string
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: facebook_stories
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ config['end_date'] if config['end_date'] else
            now_utc().strftime('%Y-%m-%dT00:00:00') }}
          from: >-
            {{ ( ( config['start_date'] if str_to_datetime(config['start_date'])
            < str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          userId: "{{ config[\"user_id\"] }}"
        url: https://app.metricool.com/api/v2/analytics/stories/facebook
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config[\"blog_ids\"] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - storyId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - storyId
        properties:
          blogId:
            type: number
          pageId:
            type:
              - string
              - "null"
          created:
            type:
              - object
              - "null"
            properties:
              dateTime:
                type:
                  - string
                  - "null"
              timezone:
                type:
                  - string
                  - "null"
          mediaId:
            type:
              - string
              - "null"
          storyId:
            type: string
          storyUrl:
            type:
              - string
              - "null"
          mediaType:
            type:
              - string
              - "null"
          thumbnailUrl:
            type:
              - string
              - "null"
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}"
  - type: DeclarativeStream
    name: facebook_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config['user_id'] }}"
        url: https://app.metricool.com/api/stats/facebook/posts
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - postId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - postId
        properties:
          type:
            type:
              - string
              - "null"
          link:
            type:
              - string
              - "null"
          text:
            type:
              - string
              - "null"
          spend:
            type:
              - number
              - "null"
          blogId:
            type: number
          clicks:
            type:
              - number
              - "null"
          pageId:
            type:
              - string
              - "null"
          postId:
            type: string
          shares:
            type:
              - number
              - "null"
          created:
            type:
              - number
              - "null"
          picture:
            type:
              - string
              - "null"
          comments:
            type:
              - number
              - "null"
          reactions:
            type:
              - number
              - "null"
          timestamp:
            type:
              - number
              - "null"
          engagement:
            type:
              - number
              - "null"
          linkclicks:
            type:
              - number
              - "null"
          videoViews:
            type:
              - number
              - "null"
          impressions:
            type:
              - number
              - "null"
          videoViewsPaid:
            type:
              - number
              - "null"
          impressionsPaid:
            type:
              - number
              - "null"
          videoTimeWatched:
            type:
              - number
              - "null"
          impressionsUnique:
            type:
              - number
              - "null"
          videoViewsOrganic:
            type:
              - number
              - "null"
          impressionsOrganic:
            type:
              - number
              - "null"
          impressionsUniquePaid:
            type:
              - number
              - "null"
          impressionsUniqueOrganic:
            type:
              - number
              - "null"
          facebookPulicPageIdsCache:
            type:
              - object
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: facebook_reels
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ config['end_date'] if config['end_date'] else
            now_utc().strftime('%Y-%m-%dT00:00:00') }}
          from: >-
            {{ ( ( config['start_date'] if str_to_datetime(config['start_date'])
            < str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          userId: "{{ config[\"user_id\"] }}"
        url: https://app.metricool.com/api/v2/analytics/reels/facebook
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config[\"blog_ids\"] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - reelId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - reelId
        properties:
          description:
            type:
              - string
              - "null"
          blogId:
            type: number
          length:
            type:
              - number
              - "null"
          pageId:
            type:
              - string
              - "null"
          reelId:
            type: string
          created:
            type:
              - object
              - "null"
            properties:
              dateTime:
                type:
                  - string
                  - "null"
              timezone:
                type:
                  - string
                  - "null"
          reelUrl:
            type:
              - string
              - "null"
          videoUrl:
            type:
              - string
              - "null"
          engagement:
            type:
              - number
              - "null"
          thumbnailUrl:
            type:
              - string
              - "null"
          blueReelsPlayCount:
            type:
              - number
              - "null"
          postVideoReactions:
            type:
              - number
              - "null"
          postImpressionsUnique:
            type:
              - number
              - "null"
          postVideoSocialActions:
            type:
              - number
              - "null"
          postVideoViewTimeSeconds:
            type:
              - number
              - "null"
          postVideoAvgTimeWatchedSeconds:
            type:
              - number
              - "null"
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}"
  - type: DeclarativeStream
    name: facebook_stories_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: facebook
          subject: stories
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - count
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: facebook_posts_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: facebook
          subject: posts
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - count
            - reactions
            - interactions
            - engagement
            - clicks
            - likes
            - shares
            - comments
            - impressions
            - impressionspaid
            - impressionsorganic
            - impressionsunique
            - impressionsuniquepaid
            - impressionsuniqueorganic
            - videoviews
            - videoviewspaid
            - videoviewsorganic
            - videoavgtimewatched
            - linkclicks
            - spend
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: facebook_reels_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: facebook
          subject: reels
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - blue_reels_play_count
            - post_impressions_unique
            - post_video_avg_time_watched
            - post_video_view_time
            - post_video_likes_by_reaction_type
            - post_video_social_actions
            - interactions
            - engagement
            - count
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: instagram_competitors
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y-%m-%dT00:00:00')
            if config['end_date'] else now_utc().strftime('%Y-%m-%dT00:00:00')
            }}
          from: >-
            {{ ( (
            str_to_datetime(config['start_date']).strftime('%Y-%m-%dT00:00:00')
            if str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          limit: "100"
          userId: "{{ config[\"user_id\"] }}"
          timezone: Etc/UTC
        url: https://app.metricool.com/api/v2/analytics/competitors/instagram
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - id
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - id
        properties:
          id:
            type: number
          cost:
            type:
              - number
              - "null"
          likes:
            type:
              - number
              - "null"
          posts:
            type:
              - number
              - "null"
          reels:
            type:
              - number
              - "null"
          isDemo:
            type:
              - boolean
              - "null"
          picture:
            type:
              - string
              - "null"
          updated:
            type:
              - number
              - "null"
          comments:
            type:
              - number
              - "null"
          favorite:
            type:
              - boolean
              - "null"
          provider:
            type:
              - string
              - "null"
          followers:
            type:
              - number
              - "null"
          engagement:
            type:
              - number
              - "null"
          providerId:
            type:
              - string
              - "null"
          screenName:
            type:
              - string
              - "null"
          displayName:
            type:
              - string
              - "null"
          costPerInteraction:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: instagram_stories
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config[\"user_id\"] }}"
        url: https://app.metricool.com/api/stats/instagram/stories
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - postId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - postId
        properties:
          type:
            type:
              - string
              - "null"
          exits:
            type:
              - number
              - "null"
          owner:
            type:
              - string
              - "null"
          reach:
            type:
              - number
              - "null"
          blogId:
            type: number
          postId:
            type: string
          content:
            type:
              - string
              - "null"
          replies:
            type:
              - number
              - "null"
          mediaUrl:
            type:
              - string
              - "null"
          tapsBack:
            type:
              - number
              - "null"
          permalink:
            type:
              - string
              - "null"
          timestamp:
            type:
              - number
              - "null"
          businessId:
            type:
              - string
              - "null"
          impressions:
            type:
              - number
              - "null"
          tapsForward:
            type:
              - number
              - "null"
          thumbnailUrl:
            type:
              - string
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: instagram_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config['user_id'] }}"
        url: https://app.metricool.com/api/stats/instagram/posts
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - postId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - postId
        properties:
          type:
            type:
              - string
              - "null"
          url:
            type:
              - string
              - "null"
          likes:
            type:
              - number
              - "null"
          reach:
            type:
              - number
              - "null"
          saved:
            type:
              - number
              - "null"
          views:
            type:
              - number
              - "null"
          blogId:
            type: number
          clicks:
            type:
              - number
              - "null"
          filter:
            type:
              - string
              - "null"
          postId:
            type: string
          shares:
            type:
              - number
              - "null"
          userId:
            type:
              - string
              - "null"
          content:
            type:
              - string
              - "null"
          created:
            type:
              - string
              - "null"
          comments:
            type:
              - number
              - "null"
          imageUrl:
            type:
              - string
              - "null"
          timestamp:
            type:
              - number
              - "null"
          businessId:
            type:
              - string
              - "null"
          engagement:
            type:
              - number
              - "null"
          impressions:
            type:
              - number
              - "null"
          interactions:
            type:
              - number
              - "null"
          videoViewsTotal:
            type:
              - number
              - "null"
          impressionsTotal:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: instagram_reels
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config['user_id'] }}"
        url: https://app.metricool.com/api/stats/instagram/reels
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - reelId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - reelId
        properties:
          type:
            type:
              - string
              - "null"
          url:
            type:
              - string
              - "null"
          likes:
            type:
              - number
              - "null"
          reach:
            type:
              - number
              - "null"
          saved:
            type:
              - number
              - "null"
          spend:
            type:
              - number
              - "null"
          views:
            type:
              - number
              - "null"
          blogId:
            type: number
          clicks:
            type:
              - number
              - "null"
          filter:
            type:
              - string
              - "null"
          reelId:
            type: string
          shares:
            type:
              - number
              - "null"
          userId:
            type:
              - string
              - "null"
          content:
            type:
              - string
              - "null"
          created:
            type:
              - string
              - "null"
          comments:
            type:
              - number
              - "null"
          imageUrl:
            type:
              - string
              - "null"
          reachPaid:
            type:
              - number
              - "null"
          timestamp:
            type:
              - number
              - "null"
          businessId:
            type:
              - string
              - "null"
          engagement:
            type:
              - number
              - "null"
          videoViews:
            type:
              - number
              - "null"
          impressions:
            type:
              - number
              - "null"
          interactions:
            type:
              - number
              - "null"
          postClicksPaid:
            type:
              - number
              - "null"
          videoViewsPaid:
            type:
              - number
              - "null"
          impressionsPaid:
            type:
              - number
              - "null"
          videoViewsTotal:
            type:
              - number
              - "null"
          impressionsTotal:
            type:
              - number
              - "null"
          postInteractionsPaid:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: instagram_stories_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: instagram
          subject: stories
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - count
            - exits
            - impressions
            - reach
            - replies
            - tapsforward
            - tapsback
            - impressionspaid
            - reachpaid
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: instagram_posts_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: instagram
          subject: posts
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - count
            - comments
            - likes
            - saved
            - shares
            - clicks
            - engagement
            - impressions
            - reach
            - interactions
            - videoviews
            - views
            - impressionspaid
            - reachpaid
            - videoviewspaid
            - postclickspaid
            - postinteractionspaid
            - spend
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: instagram_reels_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: instagram
          subject: reels
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - count
            - comments
            - likes
            - saved
            - shares
            - clicks
            - engagement
            - impressions
            - reach
            - interactions
            - videoviews
            - views
            - impressionspaid
            - reachpaid
            - videoviewspaid
            - postclickspaid
            - postinteractionspaid
            - spend
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: tiktok_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ config['end_date'] if config['end_date'] else
            now_utc().strftime('%Y-%m-%dT00:00:00') }}
          from: >-
            {{ ( ( config['start_date'] if str_to_datetime(config['start_date'])
            < str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          userId: "{{ config[\"user_id\"] }}"
        url: https://app.metricool.com/api/v2/analytics/posts/tiktok
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config[\"blog_ids\"] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - blogId
      - videoId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - blogId
          - videoId
        properties:
          type:
            type:
              - string
              - "null"
          reach:
            type:
              - number
              - "null"
          title:
            type:
              - string
              - "null"
          width:
            type:
              - number
              - "null"
          blogId:
            type: number
          height:
            type:
              - number
              - "null"
          openId:
            type:
              - string
              - "null"
          videoId:
            type: string
          duration:
            type:
              - number
              - "null"
          shareUrl:
            type:
              - string
              - "null"
          embedLink:
            type:
              - string
              - "null"
          likeCount:
            type:
              - number
              - "null"
          viewCount:
            type:
              - number
              - "null"
          createTime:
            type:
              - string
              - "null"
          engagement:
            type:
              - number
              - "null"
          shareCount:
            type:
              - number
              - "null"
          commentCount:
            type:
              - number
              - "null"
          coverImageUrl:
            type:
              - string
              - "null"
          totalTimeWatched:
            type:
              - number
              - "null"
          videoDescription:
            type:
              - string
              - "null"
          impressionSources:
            type:
              - object
              - "null"
            properties:
              sound:
                type:
                  - number
                  - "null"
              follow:
                type:
                  - number
                  - "null"
              forYou:
                type:
                  - number
                  - "null"
              search:
                type:
                  - number
                  - "null"
              personalProfile:
                type:
                  - number
                  - "null"
          averageTimeWatched:
            type:
              - number
              - "null"
          fullVideoWatchedRate:
            type:
              - number
              - "null"
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}"
  - type: DeclarativeStream
    name: tiktok_video_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: tiktok
          subject: video
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - videos
            - views
            - comments
            - shares
            - interactions
            - likes
            - reach
            - engagement
            - impressionSources
            - averageVideoViews
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: tiktok_account_timelines
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: tiktok
          subject: account
        url: https://app.metricool.com/api/v2/analytics/timelines
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - video_views
            - profile_views
            - followers_count
            - followers_delta_count
            - likes
            - comments
            - shares
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - datetime
          - blogId
          - metric
        properties:
          value:
            type:
              - number
              - "null"
          blogId:
            type: number
          metric:
            type: string
          datetime:
            type: string
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: linkedin_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config['user_id'] }}"
        url: https://app.metricool.com/api/stats/linkedin/posts
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - postId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - postId
        properties:
          type:
            type:
              - string
              - "null"
          url:
            type:
              - string
              - "null"
          likes:
            type:
              - number
              - "null"
          blogId:
            type:
              - number
              - "null"
          clicks:
            type:
              - number
              - "null"
          postId:
            type: string
          shares:
            type:
              - number
              - "null"
          comment:
            type:
              - string
              - "null"
          created:
            type:
              - number
              - "null"
          picture:
            type:
              - string
              - "null"
          comments:
            type:
              - number
              - "null"
          companyId:
            type:
              - string
              - "null"
          engagement:
            type:
              - number
              - "null"
          impressions:
            type:
              - number
              - "null"
          createdTimestamp:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: twitter_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          end: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y%m%d') if
            config['end_date'] else now_utc().strftime('%Y%m%d') }}
          start: >-
            {{ ( ( str_to_datetime(config['start_date']).strftime('%Y%m%d') if
            str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['start_date'] else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y%m%d') ) if config['end_date'] else (
            config['start_date'] if config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y%m%d') ) }}
          userId: "{{ config['user_id'] }}"
        url: https://app.metricool.com/api/stats/twitter/posts
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path: []
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - id
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - id
        properties:
          id:
            type: number
          lang:
            type:
              - string
              - "null"
          text:
            type:
              - string
              - "null"
          idStr:
            type:
              - string
              - "null"
          blogId:
            type:
              - number
              - "null"
          userId:
            type:
              - number
              - "null"
          created:
            type:
              - number
              - "null"
          hasTags:
            type:
              - boolean
              - "null"
          hasUrls:
            type:
              - boolean
              - "null"
          retweet:
            type:
              - boolean
              - "null"
          tweetId:
            type:
              - string
              - "null"
          hasMedia:
            type:
              - boolean
              - "null"
          hasPhoto:
            type:
              - boolean
              - "null"
          hasVideo:
            type:
              - boolean
              - "null"
          promoted:
            type:
              - boolean
              - "null"
          retweets:
            type:
              - number
              - "null"
          userName:
            type:
              - string
              - "null"
          createdAt:
            type:
              - number
              - "null"
          favorites:
            type:
              - number
              - "null"
          isRetweet:
            type:
              - boolean
              - "null"
          metricsV2:
            type:
              - object
              - "null"
            properties:
              total_likes:
                type:
                  - number
                  - "null"
              organic_likes:
                type:
                  - number
                  - "null"
              total_replies:
                type:
                  - number
                  - "null"
              promoted_likes:
                type:
                  - number
                  - "null"
              organic_replies:
                type:
                  - number
                  - "null"
              promoted_replies:
                type:
                  - number
                  - "null"
              total_engagement:
                type:
                  - number
                  - "null"
              total_impressions:
                type:
                  - number
                  - "null"
              organic_impressions:
                type:
                  - number
                  - "null"
              promoted_impressions:
                type:
                  - number
                  - "null"
          updatedAt:
            type:
              - number
              - "null"
          linkClicks:
            type:
              - number
              - "null"
          retweetCount:
            type:
              - number
              - "null"
          favoriteCount:
            type:
              - number
              - "null"
        additionalProperties: true
  - type: DeclarativeStream
    name: youtube_posts
    retriever:
      type: SimpleRetriever
      decoder:
        type: JsonDecoder
      requester:
        type: HttpRequester
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        http_method: GET
        request_parameters:
          to: >-
            {{ str_to_datetime(config['end_date']).strftime('%Y-%m-%dT00:00:00')
            if config['end_date'] else now_utc().strftime('%Y-%m-%dT00:00:00')
            }}
          from: >-
            {{ ( (
            str_to_datetime(config['start_date']).strftime('%Y-%m-%dT00:00:00')
            if str_to_datetime(config['start_date']) <
            str_to_datetime(config['end_date']) else
            (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['start_date'] else (str_to_datetime(config['end_date']) -
            duration('P1D')).strftime('%Y-%m-%dT00:00:00') ) if
            config['end_date'] else ( config['start_date'] if
            config['start_date'] else (now_utc() -
            duration('P60D')).strftime('%Y-%m-%dT00:00:00') ) }}
          userId: "{{ config['user_id'] }}"
          postsType: publishedInRange
        url: https://app.metricool.com/api/v2/analytics/posts/youtube
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
      partition_router:
        type: ListPartitionRouter
        values: "{{ config['blog_ids'] }}"
        cursor_field: blog_id
        request_option:
          type: RequestOption
          field_name: blogId
          inject_into: request_parameter
    primary_key:
      - videoId
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        required:
          - videoId
        properties:
          likes:
            type:
              - number
              - "null"
          title:
            type:
              - string
              - "null"
          views:
            type:
              - number
              - "null"
          blogId:
            type:
              - number
              - "null"
          shares:
            type:
              - number
              - "null"
          videoId:
            type: string
          comments:
            type:
              - number
              - "null"
          dislikes:
            type:
              - number
              - "null"
          watchUrl:
            type:
              - string
              - "null"
          publishedAt:
            type:
              - object
              - "null"
            properties:
              dateTime:
                type:
                  - string
                  - "null"
              timezone:
                type:
                  - string
                  - "null"
          thumbnailUrl:
            type:
              - string
              - "null"
          watchMinutes:
            type:
              - number
              - "null"
          hasRevenueData:
            type:
              - boolean
              - "null"
          averageViewDuration:
            type:
              - number
              - "null"
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}"
  - type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      requester:
        type: HttpRequester
        http_method: GET
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: facebook
          subject: account
        url: https://app.metricool.com/api/v2/analytics/timelines
      decoder:
        type: JsonDecoder
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - page_posts_impressions
            - postsCount
            - postsInteractions
            - likes
            - pageFollows
            - pageImpressions
            - pageViews
            - page_daily_follows_unique
            - page_daily_unfollows_unique
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    name: facebook_account_timelines
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        properties:
          value:
            type:
              - number
              - "null"
          metric:
            type: string
          blogId:
            type: number
          datetime:
            type: string
        required:
          - datetime
          - blogId
          - metric
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
      partition_field_end: ""
      partition_field_start: ""
  - type: DeclarativeStream
    retriever:
      type: SimpleRetriever
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
            - data
            - "*"
            - values
            - "*"
      requester:
        type: HttpRequester
        http_method: GET
        authenticator:
          type: ApiKeyAuthenticator
          api_token: "{{ config[\"user_token\"] }}"
          inject_into:
            type: RequestOption
            field_name: X-Mc-Auth
            inject_into: header
        request_parameters:
          userId: "{{ config[\"user_id\"] }}"
          network: instagram
          subject: account
        url: https://app.metricool.com/api/v2/analytics/timelines
      decoder:
        type: JsonDecoder
      partition_router:
        - type: ListPartitionRouter
          values: "{{ config[\"blog_ids\"] }}"
          cursor_field: blog_id
          request_option:
            type: RequestOption
            field_name: blogId
            inject_into: request_parameter
        - type: ListPartitionRouter
          values:
            - followers
            - delta_followers
            - friends
            - postsCount
            - postsInteractions
            - views
            - reach
          cursor_field: metric
          request_option:
            type: RequestOption
            field_name: metric
            inject_into: request_parameter
    name: instagram_account_timelines
    primary_key:
      - datetime
      - blogId
      - metric
    schema_loader:
      type: InlineSchemaLoader
      schema:
        type: object
        $schema: http://json-schema.org/schema#
        properties:
          value:
            type:
              - number
              - "null"
          metric:
            type: string
          blogId:
            type: number
          datetime:
            type: string
        required:
          - datetime
          - blogId
          - metric
        additionalProperties: true
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - metric
            value: "{{ stream_partition['metric'] }}"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - blogId
            value: "{{ stream_partition['blog_id'] }}\r\n"
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - datetime
            value: >-
              {{
              str_to_datetime(record['dateTime']).strftime('%Y-%m-%dT%H:00:00Z')
              }}
      - type: RemoveFields
        field_pointers:
          - - dateTime
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: datetime
      end_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ config['end_date'] if config['end_date'] else
          now_utc().strftime('%Y-%m-%dT00:00:00Z') }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_datetime:
        type: MinMaxDatetime
        datetime: >-
          {{ ( ( config['start_date'] if str_to_datetime(config['start_date']) <
          str_to_datetime(config['end_date']) else
          (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['start_date'] else (str_to_datetime(config['end_date']) -
          duration('P1D')).strftime('%Y-%m-%dT00:00:00Z') ) if
          config['end_date'] else ( config['start_date'] if config['start_date']
          else (now_utc() - duration('P60D')).strftime('%Y-%m-%dT00:00:00Z') )
          }}
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      end_time_option:
        type: RequestOption
        field_name: to
        inject_into: request_parameter
      start_time_option:
        type: RequestOption
        field_name: from
        inject_into: request_parameter
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%SZ"
      partition_field_end: ""
      partition_field_start: ""

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - user_token
      - user_id
      - blog_ids
    properties:
      user_id:
        type: string
        description: Account ID
        order: 1
        title: User ID
      blog_ids:
        type: array
        description: Brand IDs
        order: 2
        title: Blog IDs
      end_date:
        type: string
        description: If not set, defaults to current datetime.
        order: 4
        title: End Date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
      start_date:
        type: string
        description: >-
          If not set, defaults to 60 days back. If below "End Date", defaults to
          1 day before "End Date"
        order: 3
        title: Start Date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
      user_token:
        type: string
        description: >-
          User token to authenticate API requests. Find it in the Account
          Settings menu, API section of your Metricool account.
        name: user_token
        order: 0
        title: User Token
        airbyte_secret: true
    additionalProperties: true

metadata:
  assist:
    docsUrl: https://app.metricool.com/resources/apidocs/index.html
    openapiSpecUrl: https://abn-digital.github.io/public-documents/metricool_swagger.json
  testedStreams:
    brands:
      hasRecords: true
      streamHash: 545bcf16c569c8b66493ec57a334991809676a53
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    tiktok_posts:
      hasRecords: true
      streamHash: d754cfb384885c086f7fcb3edb0d82a466603f08
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    twitter_posts:
      hasRecords: true
      streamHash: bd7aae4c12155340081d50197a9504772dba254e
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    youtube_posts:
      hasRecords: true
      streamHash: dde6772c1721f10298c51ea6ff3f54199fc8ccf6
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_posts:
      hasRecords: true
      streamHash: 0196e6875a513bc0802acfce558fbe7b3b9044cd
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_reels:
      hasRecords: true
      streamHash: f403966444d7c5e65219724757b9e7bab379c3dc
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    linkedin_posts:
      hasRecords: true
      streamHash: 7c0ef3460f0dcea804c5d96b9ea14f7cdbe283da
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_posts:
      hasRecords: true
      streamHash: 638cdbf3b0e0dcb9be2498b99e8d6cab7e1dbd11
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_reels:
      hasRecords: true
      streamHash: a158c7e01d6dc4280856e1d955ca8d9fa66d70c2
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_stories:
      hasRecords: true
      streamHash: 8d47c90487e0d69cbdbfe18fe02bd087b0390927
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_stories:
      hasRecords: true
      streamHash: f27860af714c065f7e43524442fcd08c169a5e51
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_competitors:
      hasRecords: true
      streamHash: 61ea3fe77fb2463e21b401a09f031a0024105486
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_competitors:
      hasRecords: true
      streamHash: 62931cae673847edb5d43a65547416e21a517a2f
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    tiktok_video_timelines:
      hasRecords: true
      streamHash: d8e050bbc553a7ed9024a50d496ea117db5f5ca9
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_posts_timelines:
      hasRecords: true
      streamHash: aef36d32dc167816b4567abd047f8194b677280c
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_reels_timelines:
      hasRecords: true
      streamHash: 82802b9f57e160290effd03cc87ee0da5c0c2fb4
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    tiktok_account_timelines:
      hasRecords: true
      streamHash: c3c4257f4cce292e854ac2e5941359b4a5a8fea1
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_posts_timelines:
      hasRecords: true
      streamHash: 7044b76ad6b184830204e07bc785c4e273c991e7
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_reels_timelines:
      hasRecords: true
      streamHash: e5c8a2db0a3ab58347b935a421166d7f64d07cf8
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    facebook_stories_timelines:
      hasRecords: true
      streamHash: 0f51aa3788b9178c869bf794625f53c8c8b24a36
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_stories_timelines:
      hasRecords: true
      streamHash: 0a9a07b9bf59980ed74e0b9ce048c14d2415ecc6
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    instagram_account_timelines:
      streamHash: 0283bdc535d5871028ca015459d5aa4921f691a5
      isStale: false
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    facebook_account_timelines:
      streamHash: 0ebff1fd057930a7bbbd1d6f80e0501ecf0ebbb1
      isStale: false
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  autoImportSchema:
    brands: false
    tiktok_posts: false
    twitter_posts: true
    youtube_posts: true
    facebook_posts: false
    facebook_reels: false
    linkedin_posts: false
    instagram_posts: true
    instagram_reels: true
    facebook_stories: false
    instagram_stories: true
    facebook_competitors: false
    instagram_competitors: false
    tiktok_video_timelines: false
    facebook_posts_timelines: false
    facebook_reels_timelines: false
    tiktok_account_timelines: false
    instagram_posts_timelines: false
    instagram_reels_timelines: false
    facebook_stories_timelines: false
    instagram_stories_timelines: false
    facebook_account_timelines: true
    instagram_account_timelines: true
  applied_migrations:
    - from_version: 6.48.15
      to_version: "*"
      migration: HttpRequesterUrlBaseToUrl
      migrated_at: "2025-10-22T16:06:29.321819+00:00"
    - from_version: 6.48.15
      to_version: "*"
      migration: HttpRequesterPathToUrl
      migrated_at: "2025-10-22T16:06:29.327219+00:00"
