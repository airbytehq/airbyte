version: 1.3.1

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - Api

definitions:
  streams:
    Media:
      type: DeclarativeStream
      name: media
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.account.business_account_id }}/media"
          http_method: GET
          request_parameters:
            fields: >-
              caption,comments_count,id,ig_id,is_comment_enabled,like_count,media_type,media_product_type,media_url,owner,permalink,shortcode,thumbnail_url,timestamp,username,children
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: after
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 100
            cursor_value: >-
              {{ response.get("paging", {}).get("cursors", {}).get("after", {})
              }}
            stop_condition: >-
              {{ not response.get("paging", {}).get("cursors", {}).get("after",
              {}) }}
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: account
              partition_field: account
              stream:
                $ref: "#/definitions/streams/Api"
      transformations:
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - media_insights_info
              value: >-
                {{ {"media_id": record['id'], "media_type":
                record['media_type'], "media_product_type":
                record['media_product_type'], "business_account_id":
                stream_partition.account.business_account_id, "page_id":
                stream_partition.account.page_id} }}
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - page_id
              value: "{{ stream_partition.account.page_id }}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - timestamp
              value: '{% set datetime_str = format_datetime(record["timestamp"], "%Y-%m-%dT%H:%M:%S%z") %}{% set formatted_datetime = datetime_str[:-2] + ":" + datetime_str[-2:] %}{{ formatted_datetime }}'
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - business_account_id
              value: "{{ stream_partition.account.business_account_id }}"
              value_type: string
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramMediaChildrenTransformation
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramClearUrlTransformation
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Media"
    MediaInsights:
      type: DeclarativeStream
      name: media_insights
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.media_insights_info.media_id }}/insights"
          http_method: GET
          request_parameters:
            metric: >-
              {% if stream_partition.media_insights_info.media_product_type ==
              "REELS" %}{{
              'comments,ig_reels_avg_watch_time,ig_reels_video_view_total_time,likes,plays,reach,saved,shares'
              }}{% elif stream_partition.media_insights_info.media_type ==
              "VIDEO" and
              stream_partition.media_insights_info.media_product_type == "FEED"
              %}{{  'impressions,reach,saved,video_views'}}{% elif
              stream_partition.media_insights_info.media_type == "VIDEO" %}{{
              'impressions,reach,saved,video_views,likes,comments,shares'
              }}{%elif stream_partition.media_insights_info.media_type ==
              "CAROUSEL_ALBUM"%}{{ 'impressions,reach,saved,video_views' }}{% else %}{{
              'impressions,reach,saved,video_views,likes,comments,shares' }}{%
              endif %}
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ConstantBackoffStrategy
                    backoff_time_in_seconds: 5
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    predicate: >-
                      {{ 'error' in response and
                      response['error']['error_subcode'] == 2108006 }}
                    http_codes: []
                    error_message: >-
                      Insights error for business_account_id: {{
                      response['error']['message'] }}
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    predicate: >-
                      {{ 'error' in response and ( (response['error']['code'] ==
                      100 and response['error']['error_subcode'] == 33) or
                      (response['error']['code'] == 10 and
                      response['error']['message'] == "(#10) Application does
                      not have permission for this action") ) }}
                    error_message: >-
                      Check provided permissions for: {{
                      response['error']['message'] }}
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: media_insights_info
              partition_field: media_insights_info
              stream:
                $ref: "#/definitions/streams/Media"
      transformations:
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramInsightsTransformation
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - id
              value: "{{ stream_partition.media_insights_info.media_id}}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - page_id
              value: "{{ stream_partition.media_insights_info.page_id}}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - business_account_id
              value: "{{ stream_partition.media_insights_info.business_account_id }}"
              value_type: string
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramClearUrlTransformation
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/MediaInsights"
    Users:
      type: DeclarativeStream
      name: users
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.account.business_account_id }}"
          http_method: GET
          request_parameters:
            fields: >-
              id,biography,ig_id,followers_count,follows_count,media_count,name,profile_picture_url,username,website
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: account
              partition_field: account
              stream:
                $ref: "#/definitions/streams/Api"
      transformations:
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - page_id
              value: "{{ stream_partition.account.page_id }}"
              value_type: string
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramClearUrlTransformation
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Users"
    UserLifetimeInsights:
      type: DeclarativeStream
      name: user_lifetime_insights
      primary_key:
        - business_account_id
        - breakdown
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.account.business_account_id }}/insights"
          http_method: GET
          request_parameters:
            limit: "100"
            metric: follower_demographics
            period: lifetime
            breakdown: "{{ stream_partition.breakdown }}"
            metric_type: total_value
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        partition_router:
          - type: ListPartitionRouter
            values:
              - city
              - country
              - age,gender
            cursor_field: breakdown
          - type: SubstreamPartitionRouter
            parent_stream_configs:
              - type: ParentStreamConfig
                parent_key: account
                partition_field: account
                stream:
                  $ref: "#/definitions/streams/Api"
      transformations:
        - type: AddFields
          fields:
            - path:
                - breakdown
              value: "{{ stream_partition['breakdown'] }}"
        - type: AddFields
          fields:
            - path:
                - business_account_id
              value: "{{ stream_partition.account.business_account_id|string }}"
              value_type: string
        - type: AddFields
          fields:
            - path:
                - page_id
              value: "{{ stream_partition.account.page_id }}"
              value_type: string
        - type: AddFields
          fields:
            - path:
                - metric
              value: "{{ record['name'] }}"
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramBreakDownResultsTransformation
        - type: RemoveFields
          field_pointers:
            - - name
        - type: RemoveFields
          field_pointers:
            - - period
        - type: RemoveFields
          field_pointers:
            - - title
        - type: RemoveFields
          field_pointers:
            - - description
        - type: RemoveFields
          field_pointers:
            - - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/UserLifetimeInsights"
    Stories:
      type: DeclarativeStream
      name: stories
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.account.business_account_id}}/stories"
          http_method: GET
          request_parameters:
            fields: >-
              caption,id,ig_id,like_count,media_type,media_product_type,media_url,owner,permalink,shortcode,thumbnail_url,timestamp,username
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: after
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 100
            cursor_value: >-
              {{ response.get("paging", {}).get("cursors", {}).get("after", {})
              }}
            stop_condition: >-
              {{ not response.get("paging", {}).get("cursors", {}).get("after",
              {}) }}
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: account
              partition_field: account
              stream:
                $ref: "#/definitions/streams/Api"
      transformations:
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - story_insights_info
              value: >-
                {{ {"story_id": record['id'], "business_account_id":
                stream_partition.account.business_account_id, "page_id":
                stream_partition.account.page_id} }}
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - page_id
              value: "{{ stream_partition.account.page_id }}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - business_account_id
              value: "{{ stream_partition.account.business_account_id }}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - timestamp
              value: '{% set datetime_str = format_datetime(record["timestamp"], "%Y-%m-%dT%H:%M:%S%z") %}{% set formatted_datetime = datetime_str[:-2] + ":" + datetime_str[-2:] %}{{ formatted_datetime }}'
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramClearUrlTransformation
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Stories"
    StoryInsights:
      type: DeclarativeStream
      name: story_insights
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: "{{ stream_partition.story_insights_info.story_id }}/insights"
          http_method: GET
          request_parameters:
            metric: impressions,reach,replies
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
                response_filters:
                  - type: HttpResponseFilter
                    action: IGNORE
                    predicate: >-
                      {{ 'error' in response and response['error']['code'] == 10 }}
                    error_message: >-
                      Insights error: {{ response['error']['message'] }}
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path: []
        partition_router:
          type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: story_insights_info
              partition_field: story_insights_info
              stream:
                $ref: "#/definitions/streams/Stories"
      transformations:
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramInsightsTransformation
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - id
              value: "{{ stream_partition.story_insights_info.story_id  }}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - page_id
              value: "{{ stream_partition.story_insights_info.page_id }}"
              value_type: string
        - type: AddFields
          fields:
            - type: AddedFieldDefinition
              path:
                - business_account_id
              value: "{{ stream_partition.story_insights_info.business_account_id }}"
              value_type: string
        - type: CustomTransformation
          class_name: source_instagram.components.InstagramClearUrlTransformation
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/StoryInsights"
    Api:
      type: DeclarativeStream
      name: Api
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: me/accounts
          http_method: GET
          request_parameters:
            fields: id,instagram_business_account
          error_handler:
            type: CompositeErrorHandler
            error_handlers:
              - type: DefaultErrorHandler
                max_retries: 5
                backoff_strategies:
                  - type: ExponentialBackoffStrategy
                    factor: 5
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
          record_filter:
            type: RecordFilter
            condition: '{{ "instagram_business_account" in record }}'
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: after
          page_size_option:
            type: RequestOption
            field_name: limit
            inject_into: request_parameter
          pagination_strategy:
            type: CursorPagination
            page_size: 100
            cursor_value: >-
              {{ response.get("paging", {}).get("cursors", {}).get("after", {})
              }}
            stop_condition: >-
              {{ not response.get("paging", {}).get("cursors", {}).get("after",
              {}) }}
      transformations:
        - type: AddFields
          fields:
            - path:
                - account
              value: >-
                {{ { "business_account_id": record.get("instagram_business_account",
                {}).get("id"), "page_id": record["id"] } }}
        - type: RemoveFields
          field_pointers:
            - - instagram_business_account
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/Api"
  base_requester:
    type: HttpRequester
    url_base: https://graph.facebook.com/v19.0
    authenticator:
      type: BearerAuthenticator
      api_token: '{{ config["access_token"] }}'

streams:
  - $ref: "#/definitions/streams/Media"
  - $ref: "#/definitions/streams/MediaInsights"
  - $ref: "#/definitions/streams/Users"
  - $ref: "#/definitions/streams/UserLifetimeInsights"
  - $ref: "#/definitions/streams/Stories"
  - $ref: "#/definitions/streams/StoryInsights"
  - $ref: "#/definitions/streams/Api"

metadata:
  autoImportSchema:
    Media: true
    MediaInsights: true
    Users: true
    UserLifetimeInsights: true
    Stories: true
    StoryInsights: true
    Api: true
  yamlComponents:
    streams:
      Media:
        - transformations
      MediaInsights:
        - transformations
      Users:
        - transformations
      UserLifetimeInsights:
        - transformations
      Stories:
        - transformations
      StoryInsights:
        - transformations

schemas:
  Media:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      business_account_id:
        description: The unique identifier for the business account associated with the media.
        type:
          - "null"
          - string
      page_id:
        description: The unique identifier for the Instagram page associated with the media.
        type:
          - "null"
          - string
      caption:
        description: The caption or description provided for the media.
        type:
          - "null"
          - string
      comments_count:
        description: The total number of comments received on the media.
        type:
          - "null"
          - integer
      id:
        description: The unique identifier for the media item.
        type:
          - "null"
          - string
      ig_id:
        description: The Instagram-specific identifier for the media item.
        type:
          - "null"
          - string
      is_comment_enabled:
        description: A flag indicating whether comments are enabled for the media.
        type:
          - "null"
          - boolean
      like_count:
        description: The total number of likes received on the media.
        type:
          - "null"
          - integer
      media_type:
        description: The type of media (e.g., image, video) of the media item.
        type:
          - "null"
          - string
      media_product_type:
        description: The product type associated with the media (e.g., shopping product).
        type:
          - "null"
          - string
      media_url:
        description: The URL for accessing the media content of the media item.
        type:
          - "null"
          - string
      owner:
        description: Contains information about the owner of the post.
        type:
          - "null"
          - object
        properties:
          id:
            description: The unique identifier of the owner of the media item.
            type:
              - "null"
              - string
      permalink:
        description: The permanent link to the media item on Instagram.
        type:
          - "null"
          - string
      shortcode:
        description: The unique shortcode assigned to the media item.
        type:
          - "null"
          - string
      thumbnail_url:
        description: The URL for accessing the thumbnail image of the media item.
        type:
          - "null"
          - string
      timestamp:
        description: The date and time when the media item was created.
        type:
          - "null"
          - string
        format: date-time
        airbyte_type: timestamp_with_timezone
      username:
        description: The username of the owner of the media item.
        type:
          - "null"
          - string
      children:
        description: Contains an array of media items that are part of the post.
        type:
          - "null"
          - array
        items:
          description: Properties of each media item like image, caption, etc.
          type: object
          properties:
            id:
              description: The unique identifier for the child media item.
              type:
                - "null"
                - string
            ig_id:
              description: The Instagram-specific identifier for the child media item.
              type:
                - "null"
                - string
            media_type:
              description: The type of media of the child item (e.g., image, video).
              type:
                - "null"
                - string
            media_url:
              description: The URL for accessing the media content of the child item.
              type:
                - "null"
                - string
            owner:
              description: Contains information about the owner of the media item.
              type:
                - "null"
                - object
              properties:
                id:
                  description: The unique identifier of the owner of the child media item.
                  type:
                    - "null"
                    - string
            permalink:
              description: The permanent link to the child media item on Instagram.
              type:
                - "null"
                - string
            shortcode:
              description: The unique shortcode assigned to the child media item.
              type:
                - "null"
                - string
            thumbnail_url:
              description: The URL for accessing the thumbnail image of the child media item.
              type:
                - "null"
                - string
            timestamp:
              description: The date and time when the child media item was created.
              type:
                - "null"
                - string
              format: date-time
              airbyte_type: timestamp_with_timezone
            username:
              description: The username of the owner of the child media item.
              type:
                - "null"
                - string
    required:
      - id
  MediaInsights:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      business_account_id:
        description: The unique identifier of the Instagram business account associated with the media.
        type:
          - "null"
          - string
      page_id:
        description: The unique identifier of the Instagram page where the media is posted.
        type:
          - "null"
          - string
      id:
        description: The unique identifier of the media.
        type:
          - "null"
          - string
      ig_reels_avg_watch_time:
        description: The average watch time of Instagram Reels videos in seconds
        type:
          - "null"
          - number
      ig_reels_video_view_total_time:
        description: The total watch time of Instagram Reels videos in seconds.
        type:
          - "null"
          - number
      impressions:
        description: The number of times the media has been displayed to users.
        type:
          - "null"
          - integer
      reach:
        description: The number of unique users who have seen the media.
        type:
          - "null"
          - integer
      saved:
        description: The number of times users have saved the media.
        type:
          - "null"
          - integer
      video_views:
        description: The total number of views on video media.
        type:
          - "null"
          - integer
      comments:
        description: The number of comments received on the media.
        type:
          - "null"
          - integer
      likes:
        description: The number of likes received on the media.
        type:
          - "null"
          - integer
      shares:
        description: The number of times the media has been shared.
        type:
          - "null"
          - integer
      total_interactions:
        description: The total number of interactions (likes, comments, shares) on the media.
        type:
          - "null"
          - integer
      plays:
        description: The number of times the media has been played.
        type:
          - "null"
          - integer
    required:
      - id
  Users:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      page_id:
        description: The unique identifier for the user's associated Instagram page.
        type:
          - "null"
          - string
      id:
        description: The unique identifier for the user's account.
        type:
          - "null"
          - string
      biography:
        description: The biography or description provided by the user in their profile.
        type:
          - "null"
          - string
      ig_id:
        description: The Instagram ID associated with the user's account.
        type:
          - "null"
          - integer
      followers_count:
        description: The number of followers the user has on Instagram.
        type:
          - "null"
          - integer
      follows_count:
        description: The number of accounts that the user follows on Instagram.
        type:
          - "null"
          - integer
      media_count:
        description: The total number of media items (posts) uploaded by the user.
        type:
          - "null"
          - integer
      name:
        description: The name displayed on the user's Instagram account.
        type:
          - "null"
          - string
      profile_picture_url:
        description: The URL to the user's profile picture.
        type:
          - "null"
          - string
      username:
        description: The username used by the user to log in to their Instagram account.
        type:
          - "null"
          - string
      website:
        description: The website link provided by the user on their Instagram profile.
        type:
          - "null"
          - string
    required:
      - id
  UserLifetimeInsights:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      page_id:
        description: The identifier of the Instagram page associated with the insights
        type:
          - "null"
          - string
      business_account_id:
        description: The identifier of the business account to which the insights belong
        type:
          - "null"
          - string
      breakdown:
        description: The breakdown of the insights data, such as age, gender, location, etc.
        type:
          - "null"
          - string
      metric:
        description: The specific metric or measure tracked in the insights data
        type:
          - "null"
          - string
      value:
        description: The actual value of the metric for the given breakdown and page
        type:
          - "null"
          - object
    required:
      - business_account_id
      - breakdown
  Stories:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      business_account_id:
        description: The ID of the business account associated with the story.
        type:
          - "null"
          - string
      page_id:
        description: ID of the page associated with the story.
        type:
          - "null"
          - string
      caption:
        description: The caption associated with the story.
        type:
          - "null"
          - string
      id:
        description: Unique ID of the story.
        type:
          - "null"
          - string
      ig_id:
        description: Instagram ID of the story.
        type:
          - "null"
          - string
      like_count:
        description: Number of likes on the story.
        type:
          - "null"
          - integer
      media_type:
        description: Type of media in the story (image, video, etc.).
        type:
          - "null"
          - string
      media_product_type:
        description: Product type associated with the media in the story.
        type:
          - "null"
          - string
      media_url:
        description: URL of the media in the story.
        type:
          - "null"
          - string
      owner:
        description: The user who owns the story.
        type:
          - "null"
          - object
        properties:
          id:
            description: ID of the owner of the story.
            type:
              - "null"
              - string
      permalink:
        description: Permanent link to the story.
        type:
          - "null"
          - string
      shortcode:
        description: Shortcode identifier of the story.
        type:
          - "null"
          - string
      thumbnail_url:
        description: URL of the thumbnail of the media in the story.
        type:
          - "null"
          - string
      timestamp:
        description: Timestamp when the story was posted.
        type:
          - "null"
          - string
        format: date-time
        airbyte_type: timestamp_with_timezone
      username:
        description: Username associated with the story.
        type:
          - "null"
          - string
    required:
      - id
  StoryInsights:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      business_account_id:
        description: The unique identifier of the business account associated with the story insights.
        type:
          - "null"
          - string
      page_id:
        description: The unique identifier of the associated page where the story was posted.
        type:
          - "null"
          - string
      id:
        description: The unique identifier of the story insights record.
        type:
          - "null"
          - string
      impressions:
        description: The number of times the story was viewed.
        type:
          - "null"
          - integer
      reach:
        description: The number of unique accounts that viewed the story.
        type:
          - "null"
          - integer
      replies:
        description: The number of replies or interactions generated by the story.
        type:
          - "null"
          - integer
  Api:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      account:
        type:
          - object
          - "null"
        properties:
          business_account_id:
            type:
              - string
              - "null"
          page_id:
            type:
              - string
              - "null"
      id:
        type: string
    required:
      - id
