version: 5.15.0

type: DeclarativeSource

description: Synchronizes Bunny data

check:
  type: CheckStream
  stream_names:
    - accounts
    - account_balances
    - contacts
    - entities
    - invoices
    - invoice_items
    - payments
    - products
    - plans
    - quotes
    - quote_charges
    - subscriptions
    - subscription_charges
    - transactions
    - tenants

definitions:
  streams:
    plans:
      type: DeclarativeStream
      name: plans
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.plans.pageInfo.endCursor + '"}'
              if response.data.plans.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.plans.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { plans(first: 10, after: $after) { nodes {
              id               addon basePrice code contactUsLabel contactUsUrl
              description internalNotes isVisible position pricingDescription
              selfServiceBuy selfServiceCancel selfServiceRenew } pageInfo {
              startCursor endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - plans
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/plans"
    quotes:
      type: DeclarativeStream
      name: quotes
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.quotes.pageInfo.endCursor + '"}'
              if response.data.quotes.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.quotes.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { quotes(first: 10, after: $after) { nodes {
              id               acceptedByName acceptedByTitle amountDue
              applicationDate backdatedPeriods backdatedQuote billingDay
              contactId credits dealId discount evergreen id message name
              netPaymentDays notes number ownerId payableId periodAmount
              poNumber smallUnitAmountDue splitInvoice taxCode } pageInfo {
              startCursor endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - quotes
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/quotes"
    tenants:
      type: DeclarativeStream
      name: tenants
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.tenants.pageInfo.endCursor + '"}'
              if response.data.tenants.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.tenants.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { tenants(first: 10, after: $after) { nodes
              { id               code lastLogin latestProvisioningChangeId
              provisioningRequired provisioningState subdomain userCount
              utilizationMetrics } pageInfo { startCursor endCursor hasNextPage
              hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - tenants
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/tenants"
    accounts:
      type: DeclarativeStream
      name: accounts
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.accounts.pageInfo.endCursor +
              '"}' if response.data.accounts.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.accounts.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { accounts(first: 10, after: $after) { nodes
              { id               annualRevenue billingCity billingContactId
              billingCountry billingDay billingState billingStreet billingZip
              code currencyId description duns employees entityId entityUseCode
              fax groupId industryId invoiceTemplateId linkedinUrl name
              netPaymentDays ownerUserId payingStatus phone shippingCity
              shippingCountry shippingState shippingStreet shippingZip taxNumber
              taxNumberValidated timezone website } pageInfo { startCursor
              endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - accounts
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/accounts"
    contacts:
      type: DeclarativeStream
      name: contacts
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.contacts.pageInfo.endCursor +
              '"}' if response.data.contacts.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.contacts.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { contacts(first: 10, after: $after) { nodes
              { id               accountId code description email entityId
              lastName linkedinUrl mailingCity mailingCountry mailingState
              mailingStreet mailingZip mobile phone portalAccess salutation
              title updatedAt } pageInfo { startCursor endCursor hasNextPage
              hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - contacts
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/contacts"
    entities:
      type: DeclarativeStream
      name: entities
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.entities.pageInfo.endCursor +
              '"}' if response.data.entities.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.entities.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { entities(first: 10, after: $after) { nodes
              { id               accentColor billingCity billingCountry
              billingState billingStreet billingZip brandColor
              customerServiceEmail defaultAccountsReceivableAccountId
              defaultBankingFeesAccountId defaultConversionGainAccountId
              defaultConversionLossAccountId defaultCpcaAccountId
              defaultDeferredRevenueAccountId defaultPaymentAccountId
              defaultRecognizedRevenueAccountId defaultTaxPayableAccountId
              emailSenderName fax fiscalYearStartMonth id invoiceNumberPrefix
              invoiceNumberSeq invoicesImageUrl isDefault name phone privacyUrl
              quoteNumberPrefix quoteNumberSeq quotesImageUrl refundPolicyUrl
              taxId taxType termsUrl timezone topNavImageUrl website } pageInfo
              { startCursor endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - entities
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/entities"
    invoices:
      type: DeclarativeStream
      name: invoices
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.invoices.pageInfo.endCursor +
              '"}' if response.data.invoices.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.invoices.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { invoices(first: 10, after: $after) { nodes
              { id               amountDue amountPaid credits dueAt id number
              paidAt payableId poNumber quoteId smallUnitAmountDue } pageInfo {
              startCursor endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - invoices
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/invoices"
    payments:
      type: DeclarativeStream
      name: payments
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.payments.pageInfo.endCursor +
              '"}' if response.data.payments.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.payments.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { payments(first: 10, after: $after) { nodes
              { id               accountId amountUnapplied baseCurrencyCash
              baseCurrencyId currencyId isLegacy } pageInfo { startCursor
              endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - payments
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/payments"
    products:
      type: DeclarativeStream
      name: products
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.products.pageInfo.endCursor +
              '"}' if response.data.products.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.products.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { products(first: 10, after: $after) { nodes
              { id               code description everythingInPlus internalNotes
              platformId productCategoryId showProductNameOnLineItem } pageInfo
              { startCursor endCursor hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - products
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/products"
    transactions:
      type: DeclarativeStream
      name: transactions
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.transactions.pageInfo.endCursor +
              '"}' if response.data.transactions.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.transactions.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { transactions(first: 10, after: $after) {
              nodes { id               accountId currencyId transactionableId }
              pageInfo { startCursor endCursor hasNextPage hasPreviousPage } }
              } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - transactions
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/transactions"
    invoice_items:
      type: DeclarativeStream
      name: invoice_items
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.invoice_items.pageInfo.endCursor
              + '"}' if response.data.invoice_items.pageInfo.endCursor else ""
              }}
            stop_condition: "{{ response.data.invoice_items.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { invoice_items(first: 10, after: $after) {
              nodes { id               chargeType couponId discount id lineText
              position priceListChargeId priceListChargeName priceListId
              priceListName prorationRate quantity taxAmount taxCode
              unitOfMeasure vatCode } pageInfo { startCursor endCursor
              hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - invoice_items
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/invoice_items"
    quote_charges:
      type: DeclarativeStream
      name: quote_charges
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.quote_charges.pageInfo.endCursor
              + '"}' if response.data.quote_charges.pageInfo.endCursor else ""
              }}
            stop_condition: "{{ response.data.quote_charges.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { quote_charges(first: 10, after: $after) {
              nodes { id               amount billingPeriod chargeType couponId
              currentQuantity discount id invoiceLineText kind name price
              priceDecimals priceListChargeId pricingModel prorationRate
              quantity quantityMax quantityMin subtotal taxAmount taxCode
              tieredAveragePrice vatCode } pageInfo { startCursor endCursor
              hasNextPage hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - quote_charges
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/quote_charges"
    subscriptions:
      type: DeclarativeStream
      name: subscriptions
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' + response.data.subscriptions.pageInfo.endCursor
              + '"}' if response.data.subscriptions.pageInfo.endCursor else ""
              }}
            stop_condition: "{{ response.data.subscriptions.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { subscriptions(first: 10, after: $after) {
              nodes { id               cancelationDate createdAt endDate name
              rampIntervalMonths startDate trialEndDate trialStartDate updatedAt
              } pageInfo { startCursor endCursor hasNextPage hasPreviousPage } }
              } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - subscriptions
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/subscriptions"
    account_balances:
      type: DeclarativeStream
      name: account_balances
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' +
              response.data.account_balances.pageInfo.endCursor + '"}' if
              response.data.account_balances.pageInfo.endCursor else "" }}
            stop_condition: "{{ response.data.account_balances.pageInfo.hasNextPage is false }}"
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { account_balances(first: 10, after: $after)
              { nodes { id  } pageInfo { startCursor endCursor hasNextPage
              hasPreviousPage } } } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - account_balances
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/account_balances"
    subscription_charges:
      type: DeclarativeStream
      name: subscription_charges
      retriever:
        type: SimpleRetriever
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            field_name: variables
            inject_into: body_json
          pagination_strategy:
            type: CursorPagination
            cursor_value: >-
              {{ '{"after": "' +
              response.data.subscription_charges.pageInfo.endCursor + '"}' if
              response.data.subscription_charges.pageInfo.endCursor else "" }}
            stop_condition: >-
              {{ response.data.subscription_charges.pageInfo.hasNextPage is
              false }}
        requester:
          $ref: "#/definitions/base_requester"
          path: /graphql
          http_method: POST
          request_body_json:
            query: >-
              query($after: String) { subscription_charges(first: 10, after:
              $after) { nodes { id               amount billingPeriod chargeType
              discount discountedPrice kind name periodPrice price priceDecimals
              priceListChargeId priceListId pricingModel prorationRate quantity
              quantityMax quantityMin selfServiceQuantity tieredAveragePrice }
              pageInfo { startCursor endCursor hasNextPage hasPreviousPage } }
              } 
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - subscription_charges
              - nodes
              - "*"
      primary_key:
        - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/subscription_charges"
  base_requester:
    type: HttpRequester
    url_base: https://{{ config['subdomain'] }}.bunny.com
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config[\"api_key_2\"] }}"

streams:
  - $ref: "#/definitions/streams/accounts"
  - $ref: "#/definitions/streams/account_balances"
  - $ref: "#/definitions/streams/contacts"
  - $ref: "#/definitions/streams/entities"
  - $ref: "#/definitions/streams/invoices"
  - $ref: "#/definitions/streams/invoice_items"
  - $ref: "#/definitions/streams/payments"
  - $ref: "#/definitions/streams/products"
  - $ref: "#/definitions/streams/plans"
  - $ref: "#/definitions/streams/quotes"
  - $ref: "#/definitions/streams/quote_charges"
  - $ref: "#/definitions/streams/subscriptions"
  - $ref: "#/definitions/streams/subscription_charges"
  - $ref: "#/definitions/streams/transactions"
  - $ref: "#/definitions/streams/tenants"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - subdomain
      - api_key_2
    properties:
      api_key_2:
        type: string
        order: 1
        title: API Key
        airbyte_secret: true
      subdomain:
        type: string
        description: The subdomain specific to your Bunny account or service.
        name: subdomain
        order: 0
        title: Subdomain
      start_date:
        type: string
        order: 2
        title: Start date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
    additionalProperties: true

metadata:
  assist:
    docsUrl: https://docs.bunny.com/developer/api-reference/queries
  testedStreams:
    accounts:
      hasRecords: true
      streamHash: 86d0affe244efe8e5cd3822e0baed6d1125ec08a
      hasResponse: true
      primaryKeysAreUnique: true
      primaryKeysArePresent: true
      responsesAreSuccessful: true
    account_balances:
      streamHash: 1342b6f098bded66d60db0b74d56fe92538d55cc
    contacts:
      streamHash: eaebdfe26c7ba72a4a55473fcc840085b71a419f
    entities:
      streamHash: bc4f5cf1d0d368ef14879e48ba2dea6056b8064d
    invoices:
      streamHash: 57d8fa730e252d799b26f5975037763a48cd071e
    invoice_items:
      streamHash: d8f1c291f225d15472c776c966cf45f7d5c8afe7
    payments:
      streamHash: 5e6e6bb4e41b67ce30579fc8788781ba59cad4c8
    products:
      streamHash: 8c7ea3940eb676ad14cb248d02cd79c27667b8f4
    plans:
      streamHash: 2d2c58b9cb9375668535fb9f425006fde8ef0a67
    quotes:
      streamHash: 80395c07dd94f8bb4a1d9be5352db125f2d2f9af
    quote_charges:
      streamHash: a73b1630cd17805b0083d1be51d9fff6e052e8ba
    subscriptions:
      streamHash: c14830f22723d1ad7f8571db9a4b17f2a1d0c3ef
    subscription_charges:
      streamHash: 91f4b79e9d239d6e6333817a32754e213f844287
    transactions:
      streamHash: 77c0027511e1cc33450a8355021299df323b1913
    tenants:
      streamHash: 19e426488b0064d25348d2ce15a1a83a6338509d
  autoImportSchema:
    plans: false
    quotes: false
    tenants: false
    accounts: true
    contacts: false
    entities: false
    invoices: false
    payments: false
    products: false
    transactions: false
    invoice_items: false
    quote_charges: false
    subscriptions: false
    account_balances: false
    subscription_charges: false

schemas:
  plans:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      description:
        type:
          - string
          - "null"
      code:
        type:
          - string
          - "null"
      addon:
        type:
          - boolean
          - "null"
      position:
        type:
          - int
          - "null"
      basePrice:
        type:
          - number
          - "null"
      isVisible:
        type:
          - boolean
          - "null"
      contactUsUrl:
        type:
          - string
          - "null"
      internalNotes:
        type:
          - string
          - "null"
      contactUsLabel:
        type:
          - string
          - "null"
      selfServiceBuy:
        type:
          - boolean
          - "null"
      selfServiceRenew:
        type:
          - boolean
          - "null"
      selfServiceCancel:
        type:
          - boolean
          - "null"
      pricingDescription:
        type:
          - string
          - "null"
    additionalProperties: true
  quotes:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      id:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      notes:
        type:
          - string
          - "null"
      dealId:
        type:
          - string
          - "null"
      number:
        type:
          - string
          - "null"
      credits:
        type:
          - number
          - "null"
      message:
        type:
          - string
          - "null"
      ownerId:
        type:
          - string
          - "null"
      taxCode:
        type:
          - string
          - "null"
      discount:
        type:
          - number
          - "null"
      poNumber:
        type:
          - string
          - "null"
      amountDue:
        type:
          - number
          - "null"
      contactId:
        type:
          - string
          - "null"
      evergreen:
        type:
          - boolean
          - "null"
      payableId:
        type:
          - string
          - "null"
      billingDay:
        type:
          - int
          - "null"
      periodAmount:
        type:
          - number
          - "null"
      splitInvoice:
        type:
          - boolean
          - "null"
      acceptedByName:
        type:
          - string
          - "null"
      backdatedQuote:
        type:
          - boolean
          - "null"
      netPaymentDays:
        type:
          - int
          - "null"
      acceptedByTitle:
        type:
          - string
          - "null"
      applicationDate:
        type:
          - date
          - "null"
      backdatedPeriods:
        type:
          - boolean
          - "null"
      smallUnitAmountDue:
        type:
          - int
          - "null"
    additionalProperties: true
  tenants:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      code:
        type:
          - string
          - "null"
      lastLogin:
        type:
          - timestamp_without_timezone
          - "null"
      subdomain:
        type:
          - string
          - "null"
      userCount:
        type:
          - int
          - "null"
      provisioningState:
        type:
          - string
          - "null"
      utilizationMetrics:
        type:
          - string
          - "null"
      provisioningRequired:
        type:
          - boolean
          - "null"
      latestProvisioningChangeId:
        type:
          - string
          - "null"
    additionalProperties: true
  accounts:
    type: object
    $schema: http://json-schema.org/schema#
    required:
      - id
    properties:
      description:
        type:
          - string
          - "null"
      id:
        type: string
      code:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      phone:
        type:
          - string
          - "null"
      groupId:
        type:
          - string
          - "null"
      website:
        type:
          - string
          - "null"
      entityId:
        type:
          - string
          - "null"
      timezone:
        type:
          - string
          - "null"
      billingDay:
        type:
          - number
          - "null"
      billingZip:
        type:
          - string
          - "null"
      currencyId:
        type:
          - string
          - "null"
      industryId:
        type:
          - string
          - "null"
      billingCity:
        type:
          - string
          - "null"
      linkedinUrl:
        type:
          - string
          - "null"
      ownerUserId:
        type:
          - string
          - "null"
      billingState:
        type:
          - string
          - "null"
      payingStatus:
        type:
          - string
          - "null"
      billingStreet:
        type:
          - string
          - "null"
      billingCountry:
        type:
          - string
          - "null"
      netPaymentDays:
        type:
          - number
          - "null"
      shippingCountry:
        type:
          - string
          - "null"
      billingContactId:
        type:
          - string
          - "null"
      invoiceTemplateId:
        type:
          - string
          - "null"
      taxNumberValidated:
        type:
          - boolean
          - "null"
    additionalProperties: true
  contacts:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      description:
        type:
          - string
          - "null"
      code:
        type:
          - string
          - "null"
      email:
        type:
          - string
          - "null"
      phone:
        type:
          - string
          - "null"
      title:
        type:
          - string
          - "null"
      mobile:
        type:
          - string
          - "null"
      entityId:
        type:
          - string
          - "null"
      lastName:
        type:
          - string
          - "null"
      accountId:
        type:
          - string
          - "null"
      updatedAt:
        type:
          - timestamp_without_timezone
          - "null"
      mailingZip:
        type:
          - string
          - "null"
      salutation:
        type:
          - string
          - "null"
      linkedinUrl:
        type:
          - string
          - "null"
      mailingCity:
        type:
          - string
          - "null"
      mailingState:
        type:
          - string
          - "null"
      portalAccess:
        type:
          - boolean
          - "null"
      mailingStreet:
        type:
          - string
          - "null"
      mailingCountry:
        type:
          - string
          - "null"
    additionalProperties: true
  entities:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      id:
        type:
          - string
          - "null"
      fax:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      phone:
        type:
          - string
          - "null"
      taxId:
        type:
          - string
          - "null"
      taxType:
        type:
          - string
          - "null"
      website:
        type:
          - string
          - "null"
      termsUrl:
        type:
          - string
          - "null"
      timezone:
        type:
          - string
          - "null"
      isDefault:
        type:
          - boolean
          - "null"
      billingZip:
        type:
          - string
          - "null"
      brandColor:
        type:
          - string
          - "null"
      privacyUrl:
        type:
          - string
          - "null"
      accentColor:
        type:
          - string
          - "null"
      billingCity:
        type:
          - string
          - "null"
      billingState:
        type:
          - string
          - "null"
      billingStreet:
        type:
          - string
          - "null"
      billingCountry:
        type:
          - string
          - "null"
      quoteNumberSeq:
        type:
          - int
          - "null"
      quotesImageUrl:
        type:
          - string
          - "null"
      topNavImageUrl:
        type:
          - string
          - "null"
      emailSenderName:
        type:
          - string
          - "null"
      refundPolicyUrl:
        type:
          - string
          - "null"
      invoiceNumberSeq:
        type:
          - int
          - "null"
      invoicesImageUrl:
        type:
          - string
          - "null"
      quoteNumberPrefix:
        type:
          - string
          - "null"
      invoiceNumberPrefix:
        type:
          - string
          - "null"
      customerServiceEmail:
        type:
          - string
          - "null"
      defaultCpcaAccountId:
        type:
          - string
          - "null"
      fiscalYearStartMonth:
        type:
          - int
          - "null"
      defaultPaymentAccountId:
        type:
          - string
          - "null"
      defaultTaxPayableAccountId:
        type:
          - string
          - "null"
      defaultBankingFeesAccountId:
        type:
          - string
          - "null"
      defaultConversionGainAccountId:
        type:
          - string
          - "null"
      defaultConversionLossAccountId:
        type:
          - string
          - "null"
      defaultDeferredRevenueAccountId:
        type:
          - string
          - "null"
      defaultRecognizedRevenueAccountId:
        type:
          - string
          - "null"
      defaultAccountsReceivableAccountId:
        type:
          - string
          - "null"
    additionalProperties: true
  invoices:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      id:
        type:
          - string
          - "null"
      dueAt:
        type:
          - date
          - "null"
      number:
        type:
          - string
          - "null"
      paidAt:
        type:
          - timestamp_without_timezone
          - "null"
      credits:
        type:
          - number
          - "null"
      quoteId:
        type:
          - string
          - "null"
      poNumber:
        type:
          - string
          - "null"
      amountDue:
        type:
          - number
          - "null"
      payableId:
        type:
          - string
          - "null"
      amountPaid:
        type:
          - number
          - "null"
      smallUnitAmountDue:
        type:
          - int
          - "null"
    additionalProperties: true
  payments:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      isLegacy:
        type:
          - boolean
          - "null"
      accountId:
        type:
          - string
          - "null"
      currencyId:
        type:
          - string
          - "null"
      baseCurrencyId:
        type:
          - string
          - "null"
      amountUnapplied:
        type:
          - number
          - "null"
      baseCurrencyCash:
        type:
          - number
          - "null"
    additionalProperties: true
  products:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      description:
        type:
          - string
          - "null"
      code:
        type:
          - string
          - "null"
      platformId:
        type:
          - string
          - "null"
      internalNotes:
        type:
          - string
          - "null"
      everythingInPlus:
        type:
          - boolean
          - "null"
      productCategoryId:
        type:
          - string
          - "null"
      showProductNameOnLineItem:
        type:
          - boolean
          - "null"
    additionalProperties: true
  transactions:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      accountId:
        type:
          - string
          - "null"
      currencyId:
        type:
          - string
          - "null"
      transactionableId:
        type:
          - string
          - "null"
    additionalProperties: true
  invoice_items:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      id:
        type:
          - string
          - "null"
      taxCode:
        type:
          - string
          - "null"
      vatCode:
        type:
          - string
          - "null"
      couponId:
        type:
          - string
          - "null"
      discount:
        type:
          - number
          - "null"
      lineText:
        type:
          - string
          - "null"
      position:
        type:
          - int
          - "null"
      quantity:
        type:
          - int
          - "null"
      taxAmount:
        type:
          - number
          - "null"
      chargeType:
        type:
          - string
          - "null"
      priceListId:
        type:
          - string
          - "null"
      priceListName:
        type:
          - string
          - "null"
      prorationRate:
        type:
          - number
          - "null"
      unitOfMeasure:
        type:
          - string
          - "null"
      priceListChargeId:
        type:
          - string
          - "null"
      priceListChargeName:
        type:
          - string
          - "null"
    additionalProperties: true
  quote_charges:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      id:
        type:
          - string
          - "null"
      kind:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      price:
        type:
          - number
          - "null"
      amount:
        type:
          - number
          - "null"
      taxCode:
        type:
          - string
          - "null"
      vatCode:
        type:
          - string
          - "null"
      couponId:
        type:
          - string
          - "null"
      discount:
        type:
          - number
          - "null"
      quantity:
        type:
          - int
          - "null"
      subtotal:
        type:
          - number
          - "null"
      taxAmount:
        type:
          - number
          - "null"
      chargeType:
        type:
          - string
          - "null"
      quantityMax:
        type:
          - int
          - "null"
      quantityMin:
        type:
          - int
          - "null"
      pricingModel:
        type:
          - string
          - "null"
      billingPeriod:
        type:
          - string
          - "null"
      priceDecimals:
        type:
          - int
          - "null"
      prorationRate:
        type:
          - number
          - "null"
      currentQuantity:
        type:
          - int
          - "null"
      invoiceLineText:
        type:
          - string
          - "null"
      priceListChargeId:
        type:
          - string
          - "null"
      tieredAveragePrice:
        type:
          - number
          - "null"
    additionalProperties: true
  subscriptions:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      name:
        type:
          - string
          - "null"
      endDate:
        type:
          - date
          - "null"
      createdAt:
        type:
          - timestamp_without_timezone
          - "null"
      startDate:
        type:
          - date
          - "null"
      updatedAt:
        type:
          - timestamp_without_timezone
          - "null"
      trialEndDate:
        type:
          - date
          - "null"
      trialStartDate:
        type:
          - date
          - "null"
      cancelationDate:
        type:
          - date
          - "null"
      rampIntervalMonths:
        type:
          - int
          - "null"
    additionalProperties: true
  account_balances:
    type: object
    $schema: http://json-schema.org/schema
    properties: null
    additionalProperties: true
  subscription_charges:
    type: object
    $schema: http://json-schema.org/schema
    properties:
      kind:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      price:
        type:
          - string
          - "null"
      amount:
        type:
          - number
          - "null"
      discount:
        type:
          - number
          - "null"
      quantity:
        type:
          - int
          - "null"
      chargeType:
        type:
          - string
          - "null"
      periodPrice:
        type:
          - number
          - "null"
      priceListId:
        type:
          - string
          - "null"
      quantityMax:
        type:
          - int
          - "null"
      quantityMin:
        type:
          - int
          - "null"
      pricingModel:
        type:
          - string
          - "null"
      billingPeriod:
        type:
          - string
          - "null"
      priceDecimals:
        type:
          - int
          - "null"
      prorationRate:
        type:
          - number
          - "null"
      discountedPrice:
        type:
          - string
          - "null"
      priceListChargeId:
        type:
          - string
          - "null"
      tieredAveragePrice:
        type:
          - number
          - "null"
      selfServiceQuantity:
        type:
          - boolean
          - "null"
    additionalProperties: true
