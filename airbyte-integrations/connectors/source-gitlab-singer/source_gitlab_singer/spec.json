{
  "documentationUrl": "https://docs.airbyte.io/integrations/sources/gitlab",
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Source Gitlab Singer Spec",
    "type": "object",
    "required": [
      "api_url",
      "private_token",
      "start_date",
      "ultimate_license",
      "fetch_merge_request_commits",
      "fetch_pipelines_extended"
    ],
    "additionalProperties": false,
    "properties": {
      "api_url": {
        "type": "string",
        "examples": ["gitlab.com"],
        "description": "Please enter your basic URL from Gitlab instance",
        "pattern": ["^gitlab[a-zA-Z0-9._-]*\\.com$"]
      },
      "private_token": {
        "type": "string",
        "description": "Log into your Gitlab account and then generate a personal Access Token.",
        "airbyte_secret": true
      },
      "groups": {
        "type": "string",
        "examples": ["airbyte.io"],
        "description": "Space-delimited list of groups. e.g. airbyte.io"
      },
      "projects": {
        "type": "string",
        "examples": ["airbyte.io/documentation"],
        "description": "Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab"
      },
      "start_date": {
        "type": "string",
        "description": "The date from which you'd like to replicate data for Gitlab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
        "examples": ["2021-03-01T00:00:00Z"],
        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
      },
      "ultimate_license": {
        "type": "boolean",
        "description": "If this parameter is set to True, then the GitLab account used has access to the GitLab Ultimate or GitLab.com Gold features. It will enable fetching Epics and Epic Issues.",
        "default": false
      },
      "fetch_merge_request_commits": {
        "type": "boolean",
        "description": "If this parameter is set to True, then for each Merge Request, also fetch the MR's commits and create the join table merge_request_commits with the Merge Request and related Commit IDs.",
        "default": false
      },
      "fetch_pipelines_extended": {
        "type": "boolean",
        "description": "If you enable this option, then for every Pipeline fetched with sync_pipelines (which returns N pages containing all pipelines per project), also fetch extended details of each of these pipelines with sync_pipelines_extended.",
        "default": false
      }
    },
    "anyOf": [
      {
        "required": ["groups"]
      },
      {
        "required": ["projects"]
      }
    ]
  }
}
