version: "0.29.0"

definitions:
  requester:
    type: HttpRequester
    url_base: "https://api.searchads.apple.com/api/v4"
    http_method: "GET"
    authenticator:
      type: "OAuthAuthenticator"
      token_refresh_endpoint: "https://appleid.apple.com/auth/oauth2/token?grant_type=client_credentials&scope=searchadsorg"
      client_id: "{{ config.client_id }}"
      client_secret: "{{ config.client_secret }}"
      refresh_token: ""
    request_headers:
      X-AP-Context: orgId={{ config.org_id }}
    error_handler:
      response_filters:
        - http_codes: [ 500, 429 ]
          action: RETRY
      backoff_strategies:
        - type: "ExponentialBackoffStrategy"
  retriever:
    requester:
      $ref: "#/definitions/requester"

  base_stream:
    selector:
      extractor:
        field_path: ["data"]
    retriever:
      $ref: "#/definitions/retriever"
      record_selector:
        $ref: "#/definitions/base_stream/selector"
      paginator:
        type: DefaultPaginator
        pagination_strategy:
          type: OffsetIncrement
          page_size: 1000
        page_size_option:
          inject_into: request_parameter
          field_name: limit
        page_token_option:
          type: RequestOption
          field_name: offset
          inject_into: request_parameter

  campaigns_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "campaigns"
      primary_key: "id"
      path: "/campaigns"

  adgroups_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "adgroups"
      primary_key: "id"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/campaigns_stream"
            parent_key: "id"
            partition_field: "campaign_id"
      requester:
        $ref: "#/definitions/retriever/requester"
        path: "/campaigns/{{ stream_slice.campaign_id }}/adgroups"

  keywords_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "keywords"
      primary_key: "id"
    retriever:
      $ref: "#/definitions/base_stream/retriever"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/adgroups_stream"
            parent_key: "id"
            partition_field: "adgroup_id"      
      requester:
        $ref: "#/definitions/retriever/requester"
        path: "/campaigns/{{ stream_slice.parent_slice.campaign_id }}/adgroups/{{ stream_slice.adgroup_id }}/targetingkeywords"

  incremental_sync:
    type: "DatetimeBasedCursor"
    start_datetime: "{{ config.start_date }}"
    end_datetime: "{{ config.end_date or today_utc() }}"
    datetime_format: "%Y-%m-%d"
    step: "P1D"
    cursor_granularity: "P1D"
    cursor_field: "date"
    lookback_window: "P30D"
    datetime_format: "%Y-%m-%d"

  report_stream:
    selector:
      extractor:
        field_path: ["data", "reportingDataResponse", "row"]
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
    retriever:
      $ref: "#/definitions/retriever"
      record_selector:
        $ref: "#/definitions/report_stream/selector"
      paginator:
        type: NoPagination
      requester:
        $ref: "#/definitions/retriever/requester"
        http_method: "POST"
        request_body_json:
          startTime: "{{ stream_slice.start_time }}"
          endTime: "{{ stream_slice.end_time }}"
          timeZone: "UTC"
          granularity: "{{ parameters.granularity }}"
          selector: '{
            "orderBy": [
              {
                "field": "countryOrRegion",
                "sortOrder": "ASCENDING"
              }
            ]
          }'
          groupBy: "[ 'countryOrRegion' ]"

  campaigns_report_daily_stream:
    $ref: "#/definitions/report_stream"
    $parameters:
      name: "campaigns_report_daily"
      granularity: "DAILY"
      primary_key: [["date"], ["campaignId"]]
    retriever:
      $ref: "#/definitions/report_stream/retriever"
      requester:
        $ref: "#/definitions/report_stream/retriever/requester"
        path: "/reports/campaigns"
    transformations:
      - type: AddFields
        fields:
          - path: [ "campaignId" ]
            value: "{{ record.metadata.campaignId }}"
          - path: [ "date" ]
            value: "{{ stream_slice.start_time }}"

  adgroups_report_daily_stream:
    $ref: "#/definitions/report_stream"
    $parameters:
      name: "adgroups_report_daily"
      granularity: "DAILY"
      primary_key: [["date"], ["adGroupId"]]
    retriever:
      $ref: "#/definitions/report_stream/retriever"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/campaigns_stream"
            parent_key: "id"
            partition_field: "campaign_id"
      requester:
        $ref: "#/definitions/report_stream/retriever/requester"
        path: "/reports/campaigns/{{ stream_slice.campaign_id }}/adgroups"
    transformations:
      - type: AddFields
        fields:
          - path: [ "adGroupId" ]
            value: "{{ record.metadata.adGroupId }}"
          - path: [ "date" ]
            value: "{{ stream_slice.start_time }}"

  keywords_report_daily_stream:
    $ref: "#/definitions/report_stream"
    $parameters:
      name: "keywords_report_daily"
      granularity: "DAILY"
      primary_key: [["date"], ["keywordId"]]
    retriever:
      $ref: "#/definitions/report_stream/retriever"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - stream: "#/definitions/campaigns_stream"
            parent_key: "id"
            partition_field: "campaign_id"
      requester:
        $ref: "#/definitions/report_stream/retriever/requester"
        path: "/reports/campaigns/{{ stream_slice.campaign_id }}/keywords"
        error_handler:
          $ref: "#/definitions/requester/error_handler"
          response_filters:
            - predicate: "{{ 'CAMPAIGN DOES NOT CONTAIN KEYWORD' in response.error.errors[0].message }}"
              action: IGNORE
            - http_codes: [ 500, 429 ]
              action: RETRY
          backoff_strategies:
            - type: "ExponentialBackoffStrategy"
    transformations:
      - type: AddFields
        fields:
          - path: [ "keywordId" ]
            value: "{{ record.metadata.keywordId }}"
          - path: [ "date" ]
            value: "{{ stream_slice.start_time }}"


streams:
  - "#/definitions/campaigns_stream"
  - "#/definitions/adgroups_stream"
  - "#/definitions/keywords_stream"
  - "#/definitions/campaigns_report_daily_stream"
  - "#/definitions/adgroups_report_daily_stream"
  - "#/definitions/keywords_report_daily_stream"

check:
  stream_names:
    - "campaigns"
