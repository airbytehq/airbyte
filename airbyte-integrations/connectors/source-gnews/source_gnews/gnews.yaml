version: "0.1.0"

definitions:
  selector:
    extractor:
      field_pointer: ["articles"]
  base_requester:
    url_base: "https://gnews.io/api/v4"
    http_method: "GET"
    error_handler:
      type: "CompositeErrorHandler"
      error_handlers:
        - response_filters:
            - http_codes: [429]
              action: RETRY
          backoff_strategies:
            - type: "ConstantBackoffStrategy"
              backoff_time_in_seconds: 1.0
        - response_filters:
            - http_codes: [403]
              action: RETRY
          backoff_strategies:
            - class_name: "source_gnews.WaitUntilMidnightBackoffStrategy"
  base_retriever:
    record_selector:
      $ref: "*ref(definitions.selector)"
    paginator:
      type: NoPagination
    stream_slicer:
      type: "DatetimeStreamSlicer"
      start_datetime:
        datetime: "{{ config['start_date'] or ' '.join(day_delta(-7).split('.')[0].split('T')) }}"
        datetime_format: "%Y-%m-%d %H:%M:%S"
      end_datetime:
        datetime: "{{ config['end_date'] or now_utc().strftime('%Y-%m-%d %H:%M:%S') }}"
        datetime_format: "%Y-%m-%d %H:%M:%S"
      step: 1w
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      cursor_field: "{{ options['stream_cursor_field'] }}"
  common_parameters:
    token: "{{ config['api_key'] }}"
    lang: "{{ config['language'] }}"
    country: "{{ config['country'] }}"
    nullable: "{{ ','.join(config['nullable']) }}"
    from: "{{ stream_slice['start_time'] }}"
    to: "{{ stream_slice['end_time'] }}"
  search_stream:
    $options:
      name: "search"
      primary_key: "url"
      path: "/search"
      stream_cursor_field: "publishedAt"
    retriever:
      $ref: "*ref(definitions.base_retriever)"
      requester:
        $ref: "*ref(definitions.base_requester)"
        request_options_provider:
          request_parameters:
            $ref: "*ref(definitions.common_parameters)"
            q: "{{ config['query'] }}"
            in: "{{ ','.join(config['in']) }}"
            sortby: "{{ config['sortby'] }}"
  top_headlines_stream:
    $options:
      name: "top_headlines"
      primary_key: "url"
      path: "/top-headlines"
      stream_cursor_field: "publishedAt"
    retriever:
      $ref: "*ref(definitions.base_retriever)"
      requester:
        $ref: "*ref(definitions.base_requester)"
        request_options_provider:
          request_parameters:
            $ref: "*ref(definitions.common_parameters)"
            topic: "{{ config['top_headlines_topic'] }}"
            q: "{{ config['top_headlines_query'] }}"

streams:
  - "*ref(definitions.search_stream)"
  - "*ref(definitions.top_headlines_stream)"

check:
  stream_names:
    - "search"
    - "top_headlines"
