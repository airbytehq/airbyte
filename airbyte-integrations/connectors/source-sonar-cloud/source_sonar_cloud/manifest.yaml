version: 0.79.1

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - components

definitions:
  streams:
    components:
      type: DeclarativeStream
      name: components
      primary_key:
        - key
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /components/search
          http_method: GET
          request_parameters:
            organization: "{{ config['organization'] }}"
            createdAfter: "{{ config['start_date'] }}"
            createdBefore: "{{ config['end_date'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - components
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: p
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: ps
          pagination_strategy:
            type: PageIncrement
            page_size: 100
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/components"
    issues:
      type: DeclarativeStream
      name: issues
      primary_key:
        - key
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: >-
            /issues/search?componentKeys={{
            ','.join(config.get('component_keys', [])) }}
          http_method: GET
          request_parameters:
            organization: "{{ config['organization'] }}"
            createdAfter: "{{ config['start_date'] }}"
            createdBefore: "{{ config['end_date'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - issues
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: p
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: ps
          pagination_strategy:
            type: PageIncrement
            page_size: 100
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/issues"
    metrics:
      type: DeclarativeStream
      name: metrics
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /metrics/search
          http_method: GET
          request_parameters:
            organization: "{{ config['organization'] }}"
            createdAfter: "{{ config['start_date'] }}"
            createdBefore: "{{ config['end_date'] }}"
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - metrics
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: p
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: ps
          pagination_strategy:
            type: PageIncrement
            page_size: 100
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/metrics"
  base_requester:
    type: HttpRequester
    url_base: https://sonarcloud.io/api
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['user_token'] }}"

streams:
  - $ref: "#/definitions/streams/components"
  - $ref: "#/definitions/streams/issues"
  - $ref: "#/definitions/streams/metrics"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - component_keys
      - organization
      - user_token
    properties:
      component_keys:
        type: array
        title: Component Keys
        description: Comma-separated list of component keys.
        examples:
          - airbyte-ws-order
          - airbyte-ws-checkout
        order: 0
      end_date:
        type: string
        title: End date
        description: To retrieve issues created before the given date (inclusive).
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
        examples:
          - YYYY-MM-DD
        format: date
        order: 1
      organization:
        type: string
        title: Organization
        description: >-
          Organization key. See <a
          href="https://docs.sonarcloud.io/appendices/project-information/#project-and-organization-keys">here</a>.
        examples:
          - airbyte
        order: 2
      start_date:
        type: string
        title: Start date
        description: To retrieve issues created after the given date (inclusive).
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
        examples:
          - YYYY-MM-DD
        format: date
        order: 3
      user_token:
        type: string
        title: User Token
        description: >-
          Your User Token. See <a
          href="https://docs.sonarcloud.io/advanced-setup/user-accounts/">here</a>.
          The token is case sensitive.
        airbyte_secret: true
        order: 4
    additionalProperties: true

metadata:
  autoImportSchema:
    components: false
    issues: false
    metrics: false

schemas:
  components:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      key:
        type: string
        description: Unique identifier for the component
      name:
        type: string
        description: Name of the component
      organization:
        type: string
        description: Name of the organization to which the component belongs
      project:
        type: string
        description: Name of the project to which the component is associated
      qualifier:
        type: string
        description: Type of the component (e.g., 'TRK' for a project)
  issues:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      type:
        type: string
        description: The type or category of the issue
      author:
        type: string
        description: The author or creator of the issue
      component:
        type: string
        description: The project component associated with the issue
      creationDate:
        type: string
        description: The date and time when the issue was created
      debt:
        type: string
        description: The debt value associated with resolving the issue
      effort:
        type: string
        description: The estimated effort required to resolve the issue
      flows:
        type: array
        description: Information about the code flow related to the issue
      hash:
        type: string
        description: The unique hash identifier of the issue
      key:
        type: string
        description: The unique key or identifier of the issue
      line:
        type: integer
        description: The line number in the source code where the issue occurs
      message:
        type: string
        description: The message or description of the issue
      organization:
        type: string
        description: The organization to which the project belongs
      project:
        type: string
        description: The name of the project where the issue exists
      resolution:
        type: string
        description: The resolution status of the issue
      rule:
        type: string
        description: The rule identifier associated with the issue
      severity:
        type: string
        description: The severity level of the issue
      status:
        type: string
        description: The current status of the issue
      tags:
        type: array
        description: Tags or labels associated with the issue
      textRange:
        type: object
        description: The range of text in the source code where the issue occurs
      updateDate:
        type: string
        description: The date and time when the issue was last updated
  metrics:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      type:
        type: string
        description: >-
          The type or format of the metric data (e.g., 'integer', 'float',
          'string')
      description:
        type: string
        description: A brief summary or explanation of the metric data
      direction:
        type: number
        description: >-
          The direction of the metric data (e.g., 'higher is better' or 'lower
          is better')
      domain:
        type: string
        description: The domain or category to which the metric data belongs
      hidden:
        type: boolean
        description: >-
          Indicates if the metric data is hidden from normal view (e.g., for
          internal use)
      id:
        type: string
        description: The unique identifier for the metric data
      key:
        type: string
        description: The key associated with the metric data (e.g., 'code_quality')
      name:
        type: string
        description: The name or title of the metric data
      qualitative:
        type: boolean
        description: >-
          Indicates if the metric data is qualitative in nature (e.g., 'yes' or
          'no')
