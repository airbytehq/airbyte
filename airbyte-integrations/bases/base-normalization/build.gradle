plugins {
    id 'airbyte-docker'
    id 'airbyte-python'
}

airbytePython {
    moduleDirectory 'normalization'
}

dependencies {
    implementation files(project(':airbyte-integrations:bases:airbyte-protocol').airbyteDocker.outputs)
}

installReqs.dependsOn(":airbyte-integrations:bases:airbyte-protocol:installReqs")
integrationTest.dependsOn(build)

task("customIntegrationTestPython", type: PythonTask, dependsOn: installTestReqs){
    module = "pytest"
    command = "-s integration_tests"

    dependsOn ':airbyte-integrations:bases:base-normalization:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-bigquery:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-mysql:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-postgres:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-redshift:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-snowflake:airbyteDocker'
}

integrationTest.dependsOn("customIntegrationTestPython")

// TODO fix and use https://github.com/airbytehq/airbyte/issues/3192 instead
task('mypyCheck', type: PythonTask) {
    module = "mypy"
    command = "normalization --config-file ${project.rootProject.file('tools/python/.mypy.ini').absolutePath}"

    dependsOn 'blackFormat'
}
check.dependsOn mypyCheck
