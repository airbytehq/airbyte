plugins {
    id 'java-library'
}

dependencies {
    implementation 'commons-cli:commons-cli:1.4'

    implementation project(':airbyte-commons')
    implementation project(':airbyte-commons-cli')
    implementation project(':airbyte-config-oss:config-models-oss')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-json-validation')
}

// TODO download from registry
task generateSeedConnectorSpecs(type: JavaExec, dependsOn: compileJava) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.SeedConnectorSpecGenerator'

    args '--seed-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')
}

task downloadConnectorRegistry(type: JavaExec, dependsOn: compileJava) {
    /**
     * run this once a day. if you want to force this task to run do so with --rerun
     * e.g. ./gradlew :airbyte-config-oss:specs:downloadConnectorRegistry --info --rerun
     */
    inputs.property("todaysDate", new Date().clearTime() )
    outputs.upToDateWhen { true }
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.airbyte.configoss.specs.ConnectorRegistryDownloader'
    args project(":airbyte-config-oss:init").projectDir
}

project(":airbyte-config-oss:init").tasks.processResources.dependsOn(downloadConnectorRegistry)
project(":airbyte-config-oss:init").tasks.processTestResources.dependsOn(downloadConnectorRegistry)
project(":airbyte-config-oss:init").tasks.test.dependsOn(downloadConnectorRegistry)


task generateConnectorSpecsMask(type: JavaExec, dependsOn: generateSeedConnectorSpecs) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.ConnectorSpecMaskGenerator'

    args '--specs-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')
}

project(":airbyte-config-oss:init-oss").tasks.processResources.dependsOn(generateConnectorSpecsMask)


Task publishArtifactsTask = getPublishArtifactsTask("$rootProject.ext.version", project)

