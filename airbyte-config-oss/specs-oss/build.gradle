plugins {
    id 'java-library'
}

dependencies {
    implementation 'commons-cli:commons-cli:1.4'

    implementation project(':airbyte-commons')
    implementation project(':airbyte-commons-cli')
    implementation project(':airbyte-config-oss:config-models-oss')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-json-validation')
}

task generateSeedConnectorSpecs(type: JavaExec, dependsOn: compileJava) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.SeedConnectorSpecGenerator'

    args '--seed-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')
}


task generateConnectorSpecsMask(type: JavaExec, dependsOn: generateSeedConnectorSpecs) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.ConnectorSpecMaskGenerator'

    args '--specs-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')
}

project(":airbyte-config-oss:init-oss").tasks.processResources.dependsOn(generateConnectorSpecsMask)

task generateOssConnectorCatalog(type: JavaExec, dependsOn: generateSeedConnectorSpecs) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.CombinedConnectorCatalogGenerator'

    args '--seed-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')

    args '--output-filename'
    args 'oss_catalog.json'
}

project(":airbyte-config-oss:init-oss").tasks.processResources.dependsOn(generateOssConnectorCatalog)

task generateConnectorMarkdown(type: JavaExec, dependsOn: generateSeedConnectorSpecs) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'io.airbyte.configoss.specs.ConnectorMarkdownGenerator'

    args '--project-root'
    args new File(project(":").projectDir, "")

    args '--seed-root'
    args new File(project(":airbyte-config-oss:init-oss").projectDir, '/src/main/resources/seed')

    args '--output-filename'
    args 'connectors.md'
}

project(":airbyte-config-oss:init-oss").tasks.processResources.dependsOn(generateConnectorMarkdown)

Task publishArtifactsTask = getPublishArtifactsTask("$rootProject.ext.version", project)

