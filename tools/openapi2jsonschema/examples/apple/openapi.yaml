openapi: 3.0.1
servers:
  - url: https://api.appstoreconnect.apple.com/
info:
  title: App Store Connect API
  version: 1.4.1
  x-apisguru-categories:
    - developer_tools
  x-origin:
    - format: openapi
      url: app-store-connect-openapi-specification.json
      version: "3.0"
  x-platform: app_store_connect_api
  x-providerName: apple.com
  x-serviceName: app-store-connect
externalDocs:
  description: App Store Connect API Documentation
  url: https://developer.apple.com/documentation/appstoreconnectapi
security:
  - itc-bearer-token: []
paths:
  "/v1/ageRatingDeclarations/{id}":
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: ageRatingDeclarations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgeRatingDeclarationUpdateRequest"
        description: AgeRatingDeclaration representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeRatingDeclarationResponse"
          description: Single AgeRatingDeclaration
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AgeRatingDeclarations
  /v1/appCategories:
    get:
      operationId: appCategories-get_collection
      parameters:
        - description: filter by attribute 'platforms'
          explode: false
          in: query
          name: filter[platforms]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by existence or non-existence of related 'parent'
          explode: false
          in: query
          name: exists[parent]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          required: false
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - parent
                - subcategories
              type: string
            type: array
          style: form
        - description: maximum number of related subcategories returned (when they are
            included)
          in: query
          name: limit[subcategories]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoriesResponse"
          description: List of AppCategories
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - AppCategories
  "/v1/appCategories/{id}":
    get:
      operationId: appCategories-get_instance
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          required: false
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - parent
                - subcategories
              type: string
            type: array
          style: form
        - description: maximum number of related subcategories returned (when they are
            included)
          in: query
          name: limit[subcategories]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Single AppCategory
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppCategories
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appCategories/{id}/parent":
    get:
      operationId: appCategories-parent-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppCategories
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appCategories/{id}/subcategories":
    get:
      operationId: appCategories-subcategories-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoriesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppCategories
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appEncryptionDeclarations:
    get:
      operationId: appEncryptionDeclarations-get_collection
      parameters:
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'builds'
          explode: false
          in: query
          name: filter[builds]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appEncryptionDeclarations
          explode: false
          in: query
          name: fields[appEncryptionDeclarations]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclarationState
                - availableOnFrenchStore
                - builds
                - codeValue
                - containsProprietaryCryptography
                - containsThirdPartyCryptography
                - documentName
                - documentType
                - documentUrl
                - exempt
                - platform
                - uploadedDate
                - usesEncryption
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppEncryptionDeclarationsResponse"
          description: List of AppEncryptionDeclarations
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - AppEncryptionDeclarations
  "/v1/appEncryptionDeclarations/{id}":
    get:
      operationId: appEncryptionDeclarations-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appEncryptionDeclarations
          explode: false
          in: query
          name: fields[appEncryptionDeclarations]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclarationState
                - availableOnFrenchStore
                - builds
                - codeValue
                - containsProprietaryCryptography
                - containsThirdPartyCryptography
                - documentName
                - documentType
                - documentUrl
                - exempt
                - platform
                - uploadedDate
                - usesEncryption
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppEncryptionDeclarationResponse"
          description: Single AppEncryptionDeclaration
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppEncryptionDeclarations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appEncryptionDeclarations/{id}/app":
    get:
      operationId: appEncryptionDeclarations-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppEncryptionDeclarations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appEncryptionDeclarations/{id}/relationships/builds":
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: appEncryptionDeclarations-builds-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppEncryptionDeclarationBuildsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppEncryptionDeclarations
  /v1/appInfoLocalizations:
    post:
      operationId: appInfoLocalizations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppInfoLocalizationCreateRequest"
        description: AppInfoLocalization representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoLocalizationResponse"
          description: Single AppInfoLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppInfoLocalizations
  "/v1/appInfoLocalizations/{id}":
    delete:
      operationId: appInfoLocalizations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppInfoLocalizations
    get:
      operationId: appInfoLocalizations-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appInfoLocalizations
          explode: false
          in: query
          name: fields[appInfoLocalizations]
          required: false
          schema:
            items:
              enum:
                - appInfo
                - locale
                - name
                - privacyPolicyText
                - privacyPolicyUrl
                - subtitle
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appInfo
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoLocalizationResponse"
          description: Single AppInfoLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfoLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appInfoLocalizations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppInfoLocalizationUpdateRequest"
        description: AppInfoLocalization representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoLocalizationResponse"
          description: Single AppInfoLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppInfoLocalizations
  "/v1/appInfos/{id}":
    get:
      operationId: appInfos-get_instance
      parameters:
        - description: the fields to include for returned resources of type appInfos
          explode: false
          in: query
          name: fields[appInfos]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - appStoreAgeRating
                - appStoreState
                - brazilAgeRating
                - kidsAgeBand
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          required: false
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - contests
                - gambling
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - seventeenPlus
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          required: false
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appInfoLocalizations
          explode: false
          in: query
          name: fields[appInfoLocalizations]
          required: false
          schema:
            items:
              enum:
                - appInfo
                - locale
                - name
                - privacyPolicyText
                - privacyPolicyUrl
                - subtitle
              type: string
            type: array
          style: form
        - description: maximum number of related appInfoLocalizations returned (when they
            are included)
          in: query
          name: limit[appInfoLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoResponse"
          description: Single AppInfo
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appInfos-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppInfoUpdateRequest"
        description: AppInfo representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoResponse"
          description: Single AppInfo
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppInfos
  "/v1/appInfos/{id}/ageRatingDeclaration":
    get:
      operationId: appInfos-ageRatingDeclaration-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - contests
                - gambling
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - seventeenPlus
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeRatingDeclarationResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/appInfoLocalizations":
    get:
      operationId: appInfos-appInfoLocalizations-get_to_many_related
      parameters:
        - description: filter by attribute 'locale'
          explode: false
          in: query
          name: filter[locale]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appInfos
          explode: false
          in: query
          name: fields[appInfos]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - appStoreAgeRating
                - appStoreState
                - brazilAgeRating
                - kidsAgeBand
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appInfoLocalizations
          explode: false
          in: query
          name: fields[appInfoLocalizations]
          schema:
            items:
              enum:
                - appInfo
                - locale
                - name
                - privacyPolicyText
                - privacyPolicyUrl
                - subtitle
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appInfo
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfoLocalizationsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/primaryCategory":
    get:
      operationId: appInfos-primaryCategory-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/primarySubcategoryOne":
    get:
      operationId: appInfos-primarySubcategoryOne-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/primarySubcategoryTwo":
    get:
      operationId: appInfos-primarySubcategoryTwo-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/secondaryCategory":
    get:
      operationId: appInfos-secondaryCategory-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/secondarySubcategoryOne":
    get:
      operationId: appInfos-secondarySubcategoryOne-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appInfos/{id}/secondarySubcategoryTwo":
    get:
      operationId: appInfos-secondarySubcategoryTwo-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppCategoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppInfos
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appPreOrders:
    post:
      operationId: appPreOrders-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreOrderCreateRequest"
        description: AppPreOrder representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreOrderResponse"
          description: Single AppPreOrder
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreOrders
  "/v1/appPreOrders/{id}":
    delete:
      operationId: appPreOrders-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreOrders
    get:
      operationId: appPreOrders-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPreOrders
          explode: false
          in: query
          name: fields[appPreOrders]
          required: false
          schema:
            items:
              enum:
                - app
                - appReleaseDate
                - preOrderAvailableDate
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreOrderResponse"
          description: Single AppPreOrder
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPreOrders
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appPreOrders-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreOrderUpdateRequest"
        description: AppPreOrder representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreOrderResponse"
          description: Single AppPreOrder
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreOrders
  /v1/appPreviewSets:
    post:
      operationId: appPreviewSets-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreviewSetCreateRequest"
        description: AppPreviewSet representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewSetResponse"
          description: Single AppPreviewSet
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviewSets
  "/v1/appPreviewSets/{id}":
    delete:
      operationId: appPreviewSets-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviewSets
    get:
      operationId: appPreviewSets-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPreviewSets
          explode: false
          in: query
          name: fields[appPreviewSets]
          required: false
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
                - previewType
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreviews
          explode: false
          in: query
          name: fields[appPreviews]
          required: false
          schema:
            items:
              enum:
                - appPreviewSet
                - assetDeliveryState
                - fileName
                - fileSize
                - mimeType
                - previewFrameTimeCode
                - previewImage
                - sourceFileChecksum
                - uploadOperations
                - uploaded
                - videoUrl
              type: string
            type: array
          style: form
        - description: maximum number of related appPreviews returned (when they are
            included)
          in: query
          name: limit[appPreviews]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewSetResponse"
          description: Single AppPreviewSet
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPreviewSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appPreviewSets/{id}/appPreviews":
    get:
      operationId: appPreviewSets-appPreviews-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type appPreviews
          explode: false
          in: query
          name: fields[appPreviews]
          schema:
            items:
              enum:
                - appPreviewSet
                - assetDeliveryState
                - fileName
                - fileSize
                - mimeType
                - previewFrameTimeCode
                - previewImage
                - sourceFileChecksum
                - uploadOperations
                - uploaded
                - videoUrl
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreviewSets
          explode: false
          in: query
          name: fields[appPreviewSets]
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
                - previewType
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appPreviewSet
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPreviewSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appPreviewSets/{id}/relationships/appPreviews":
    get:
      operationId: appPreviewSets-appPreviews-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewSetAppPreviewsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPreviewSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appPreviewSets-appPreviews-replace_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreviewSetAppPreviewsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviewSets
  /v1/appPreviews:
    post:
      operationId: appPreviews-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreviewCreateRequest"
        description: AppPreview representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewResponse"
          description: Single AppPreview
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviews
  "/v1/appPreviews/{id}":
    delete:
      operationId: appPreviews-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviews
    get:
      operationId: appPreviews-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPreviews
          explode: false
          in: query
          name: fields[appPreviews]
          required: false
          schema:
            items:
              enum:
                - appPreviewSet
                - assetDeliveryState
                - fileName
                - fileSize
                - mimeType
                - previewFrameTimeCode
                - previewImage
                - sourceFileChecksum
                - uploadOperations
                - uploaded
                - videoUrl
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appPreviewSet
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewResponse"
          description: Single AppPreview
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPreviews
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appPreviews-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppPreviewUpdateRequest"
        description: AppPreview representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewResponse"
          description: Single AppPreview
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppPreviews
  /v1/appPricePoints:
    get:
      operationId: appPricePoints-get_collection
      parameters:
        - description: filter by id(s) of related 'priceTier'
          explode: false
          in: query
          name: filter[priceTier]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'territory'
          explode: false
          in: query
          name: filter[territory]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPricePoints
          explode: false
          in: query
          name: fields[appPricePoints]
          required: false
          schema:
            items:
              enum:
                - customerPrice
                - priceTier
                - proceeds
                - territory
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - priceTier
                - territory
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPricePointsResponse"
          description: List of AppPricePoints
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - AppPricePoints
  "/v1/appPricePoints/{id}":
    get:
      operationId: appPricePoints-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPricePoints
          explode: false
          in: query
          name: fields[appPricePoints]
          required: false
          schema:
            items:
              enum:
                - customerPrice
                - priceTier
                - proceeds
                - territory
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - priceTier
                - territory
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPricePointResponse"
          description: Single AppPricePoint
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPricePoints
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appPricePoints/{id}/territory":
    get:
      operationId: appPricePoints-territory-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerritoryResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPricePoints
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appPriceTiers:
    get:
      operationId: appPriceTiers-get_collection
      parameters:
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPriceTiers
          explode: false
          in: query
          name: fields[appPriceTiers]
          required: false
          schema:
            items:
              enum:
                - pricePoints
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - pricePoints
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPricePoints
          explode: false
          in: query
          name: fields[appPricePoints]
          required: false
          schema:
            items:
              enum:
                - customerPrice
                - priceTier
                - proceeds
                - territory
              type: string
            type: array
          style: form
        - description: maximum number of related pricePoints returned (when they are
            included)
          in: query
          name: limit[pricePoints]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPriceTiersResponse"
          description: List of AppPriceTiers
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - AppPriceTiers
  "/v1/appPriceTiers/{id}":
    get:
      operationId: appPriceTiers-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPriceTiers
          explode: false
          in: query
          name: fields[appPriceTiers]
          required: false
          schema:
            items:
              enum:
                - pricePoints
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - pricePoints
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPricePoints
          explode: false
          in: query
          name: fields[appPricePoints]
          required: false
          schema:
            items:
              enum:
                - customerPrice
                - priceTier
                - proceeds
                - territory
              type: string
            type: array
          style: form
        - description: maximum number of related pricePoints returned (when they are
            included)
          in: query
          name: limit[pricePoints]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPriceTierResponse"
          description: Single AppPriceTier
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPriceTiers
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appPriceTiers/{id}/pricePoints":
    get:
      operationId: appPriceTiers-pricePoints-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type appPricePoints
          explode: false
          in: query
          name: fields[appPricePoints]
          schema:
            items:
              enum:
                - customerPrice
                - priceTier
                - proceeds
                - territory
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPricePointsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPriceTiers
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appPrices/{id}":
    get:
      operationId: appPrices-get_instance
      parameters:
        - description: the fields to include for returned resources of type appPrices
          explode: false
          in: query
          name: fields[appPrices]
          required: false
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPriceResponse"
          description: Single AppPrice
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppPrices
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appScreenshotSets:
    post:
      operationId: appScreenshotSets-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppScreenshotSetCreateRequest"
        description: AppScreenshotSet representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotSetResponse"
          description: Single AppScreenshotSet
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshotSets
  "/v1/appScreenshotSets/{id}":
    delete:
      operationId: appScreenshotSets-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshotSets
    get:
      operationId: appScreenshotSets-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appScreenshotSets
          explode: false
          in: query
          name: fields[appScreenshotSets]
          required: false
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
                - screenshotDisplayType
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appScreenshots
          explode: false
          in: query
          name: fields[appScreenshots]
          required: false
          schema:
            items:
              enum:
                - appScreenshotSet
                - assetDeliveryState
                - assetToken
                - assetType
                - fileName
                - fileSize
                - imageAsset
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: maximum number of related appScreenshots returned (when they are
            included)
          in: query
          name: limit[appScreenshots]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotSetResponse"
          description: Single AppScreenshotSet
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppScreenshotSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appScreenshotSets/{id}/appScreenshots":
    get:
      operationId: appScreenshotSets-appScreenshots-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            appScreenshotSets
          explode: false
          in: query
          name: fields[appScreenshotSets]
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
                - screenshotDisplayType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appScreenshots
          explode: false
          in: query
          name: fields[appScreenshots]
          schema:
            items:
              enum:
                - appScreenshotSet
                - assetDeliveryState
                - assetToken
                - assetType
                - fileName
                - fileSize
                - imageAsset
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appScreenshotSet
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppScreenshotSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appScreenshotSets/{id}/relationships/appScreenshots":
    get:
      operationId: appScreenshotSets-appScreenshots-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppScreenshotSets
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appScreenshotSets-appScreenshots-replace_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshotSets
  /v1/appScreenshots:
    post:
      operationId: appScreenshots-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppScreenshotCreateRequest"
        description: AppScreenshot representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotResponse"
          description: Single AppScreenshot
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshots
  "/v1/appScreenshots/{id}":
    delete:
      operationId: appScreenshots-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshots
    get:
      operationId: appScreenshots-get_instance
      parameters:
        - description: the fields to include for returned resources of type appScreenshots
          explode: false
          in: query
          name: fields[appScreenshots]
          required: false
          schema:
            items:
              enum:
                - appScreenshotSet
                - assetDeliveryState
                - assetToken
                - assetType
                - fileName
                - fileSize
                - imageAsset
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appScreenshotSet
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotResponse"
          description: Single AppScreenshot
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppScreenshots
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appScreenshots-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppScreenshotUpdateRequest"
        description: AppScreenshot representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotResponse"
          description: Single AppScreenshot
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppScreenshots
  /v1/appStoreReviewAttachments:
    post:
      operationId: appStoreReviewAttachments-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreReviewAttachmentCreateRequest"
        description: AppStoreReviewAttachment representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewAttachmentResponse"
          description: Single AppStoreReviewAttachment
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreReviewAttachments
  "/v1/appStoreReviewAttachments/{id}":
    delete:
      operationId: appStoreReviewAttachments-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreReviewAttachments
    get:
      operationId: appStoreReviewAttachments-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appStoreReviewAttachments
          explode: false
          in: query
          name: fields[appStoreReviewAttachments]
          required: false
          schema:
            items:
              enum:
                - appStoreReviewDetail
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appStoreReviewDetail
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewAttachmentResponse"
          description: Single AppStoreReviewAttachment
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreReviewAttachments
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreReviewAttachments-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreReviewAttachmentUpdateRequest"
        description: AppStoreReviewAttachment representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewAttachmentResponse"
          description: Single AppStoreReviewAttachment
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreReviewAttachments
  /v1/appStoreReviewDetails:
    post:
      operationId: appStoreReviewDetails-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreReviewDetailCreateRequest"
        description: AppStoreReviewDetail representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewDetailResponse"
          description: Single AppStoreReviewDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreReviewDetails
  "/v1/appStoreReviewDetails/{id}":
    get:
      operationId: appStoreReviewDetails-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appStoreReviewDetails
          explode: false
          in: query
          name: fields[appStoreReviewDetails]
          required: false
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreReviewAttachments
          explode: false
          in: query
          name: fields[appStoreReviewAttachments]
          required: false
          schema:
            items:
              enum:
                - appStoreReviewDetail
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: maximum number of related appStoreReviewAttachments returned (when
            they are included)
          in: query
          name: limit[appStoreReviewAttachments]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewDetailResponse"
          description: Single AppStoreReviewDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreReviewDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreReviewDetails-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreReviewDetailUpdateRequest"
        description: AppStoreReviewDetail representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewDetailResponse"
          description: Single AppStoreReviewDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreReviewDetails
  "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments":
    get:
      operationId: appStoreReviewDetails-appStoreReviewAttachments-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            appStoreReviewDetails
          explode: false
          in: query
          name: fields[appStoreReviewDetails]
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreReviewAttachments
          explode: false
          in: query
          name: fields[appStoreReviewAttachments]
          schema:
            items:
              enum:
                - appStoreReviewDetail
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appStoreReviewDetail
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewAttachmentsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreReviewDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appStoreVersionLocalizations:
    post:
      operationId: appStoreVersionLocalizations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionLocalizationCreateRequest"
        description: AppStoreVersionLocalization representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionLocalizationResponse"
          description: Single AppStoreVersionLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionLocalizations
  "/v1/appStoreVersionLocalizations/{id}":
    delete:
      operationId: appStoreVersionLocalizations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionLocalizations
    get:
      operationId: appStoreVersionLocalizations-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          required: false
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appScreenshotSets
          explode: false
          in: query
          name: fields[appScreenshotSets]
          required: false
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
                - screenshotDisplayType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreviewSets
          explode: false
          in: query
          name: fields[appPreviewSets]
          required: false
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
                - previewType
              type: string
            type: array
          style: form
        - description: maximum number of related appPreviewSets returned (when they are
            included)
          in: query
          name: limit[appPreviewSets]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related appScreenshotSets returned (when they are
            included)
          in: query
          name: limit[appScreenshotSets]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionLocalizationResponse"
          description: Single AppStoreVersionLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersionLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreVersionLocalizations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionLocalizationUpdateRequest"
        description: AppStoreVersionLocalization representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionLocalizationResponse"
          description: Single AppStoreVersionLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionLocalizations
  "/v1/appStoreVersionLocalizations/{id}/appPreviewSets":
    get:
      operationId: appStoreVersionLocalizations-appPreviewSets-get_to_many_related
      parameters:
        - description: filter by attribute 'previewType'
          explode: false
          in: query
          name: filter[previewType]
          schema:
            items:
              enum:
                - IPHONE_65
                - IPHONE_58
                - IPHONE_55
                - IPHONE_47
                - IPHONE_40
                - IPHONE_35
                - IPAD_PRO_3GEN_129
                - IPAD_PRO_3GEN_11
                - IPAD_PRO_129
                - IPAD_105
                - IPAD_97
                - DESKTOP
                - WATCH_SERIES_4
                - WATCH_SERIES_3
                - APPLE_TV
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreviews
          explode: false
          in: query
          name: fields[appPreviews]
          schema:
            items:
              enum:
                - appPreviewSet
                - assetDeliveryState
                - fileName
                - fileSize
                - mimeType
                - previewFrameTimeCode
                - previewImage
                - sourceFileChecksum
                - uploadOperations
                - uploaded
                - videoUrl
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreviewSets
          explode: false
          in: query
          name: fields[appPreviewSets]
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
                - previewType
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appPreviews
                - appStoreVersionLocalization
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreviewSetsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersionLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersionLocalizations/{id}/appScreenshotSets":
    get:
      operationId: appStoreVersionLocalizations-appScreenshotSets-get_to_many_related
      parameters:
        - description: filter by attribute 'screenshotDisplayType'
          explode: false
          in: query
          name: filter[screenshotDisplayType]
          schema:
            items:
              enum:
                - APP_IPHONE_65
                - APP_IPHONE_58
                - APP_IPHONE_55
                - APP_IPHONE_47
                - APP_IPHONE_40
                - APP_IPHONE_35
                - APP_IPAD_PRO_3GEN_129
                - APP_IPAD_PRO_3GEN_11
                - APP_IPAD_PRO_129
                - APP_IPAD_105
                - APP_IPAD_97
                - APP_DESKTOP
                - APP_WATCH_SERIES_4
                - APP_WATCH_SERIES_3
                - APP_APPLE_TV
                - IMESSAGE_APP_IPHONE_65
                - IMESSAGE_APP_IPHONE_58
                - IMESSAGE_APP_IPHONE_55
                - IMESSAGE_APP_IPHONE_47
                - IMESSAGE_APP_IPHONE_40
                - IMESSAGE_APP_IPAD_PRO_3GEN_129
                - IMESSAGE_APP_IPAD_PRO_3GEN_11
                - IMESSAGE_APP_IPAD_PRO_129
                - IMESSAGE_APP_IPAD_105
                - IMESSAGE_APP_IPAD_97
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appScreenshotSets
          explode: false
          in: query
          name: fields[appScreenshotSets]
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
                - screenshotDisplayType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appScreenshots
          explode: false
          in: query
          name: fields[appScreenshots]
          schema:
            items:
              enum:
                - appScreenshotSet
                - assetDeliveryState
                - assetToken
                - assetType
                - fileName
                - fileSize
                - imageAsset
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appScreenshots
                - appStoreVersionLocalization
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScreenshotSetsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersionLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appStoreVersionPhasedReleases:
    post:
      operationId: appStoreVersionPhasedReleases-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionPhasedReleaseCreateRequest"
        description: AppStoreVersionPhasedRelease representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
          description: Single AppStoreVersionPhasedRelease
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionPhasedReleases
  "/v1/appStoreVersionPhasedReleases/{id}":
    delete:
      operationId: appStoreVersionPhasedReleases-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionPhasedReleases
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreVersionPhasedReleases-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionPhasedReleaseUpdateRequest"
        description: AppStoreVersionPhasedRelease representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
          description: Single AppStoreVersionPhasedRelease
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionPhasedReleases
  /v1/appStoreVersionSubmissions:
    post:
      operationId: appStoreVersionSubmissions-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionSubmissionCreateRequest"
        description: AppStoreVersionSubmission representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionSubmissionResponse"
          description: Single AppStoreVersionSubmission
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionSubmissions
  "/v1/appStoreVersionSubmissions/{id}":
    delete:
      operationId: appStoreVersionSubmissions-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersionSubmissions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/appStoreVersions:
    post:
      operationId: appStoreVersions-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionCreateRequest"
        description: AppStoreVersion representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionResponse"
          description: Single AppStoreVersion
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersions
  "/v1/appStoreVersions/{id}":
    delete:
      operationId: appStoreVersions-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersions
    get:
      operationId: appStoreVersions-get_instance
      parameters:
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - idfaDeclaration
                - routingAppCoverage
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          required: false
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type idfaDeclarations
          explode: false
          in: query
          name: fields[idfaDeclarations]
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
                - attributesActionWithPreviousAd
                - attributesAppInstallationToPreviousAd
                - honorsLimitedAdTracking
                - servesAds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            routingAppCoverages
          explode: false
          in: query
          name: fields[routingAppCoverages]
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionPhasedReleases
          explode: false
          in: query
          name: fields[appStoreVersionPhasedReleases]
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
                - currentDayNumber
                - phasedReleaseState
                - startDate
                - totalPauseDuration
              type: string
            type: array
          style: form
        - deprecated: true
          description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          required: false
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreReviewDetails
          explode: false
          in: query
          name: fields[appStoreReviewDetails]
          required: false
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionSubmissions
          explode: false
          in: query
          name: fields[appStoreVersionSubmissions]
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
              type: string
            type: array
          style: form
        - description: maximum number of related appStoreVersionLocalizations returned
            (when they are included)
          in: query
          name: limit[appStoreVersionLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionResponse"
          description: Single AppStoreVersion
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreVersions-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionUpdateRequest"
        description: AppStoreVersion representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionResponse"
          description: Single AppStoreVersion
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersions
  "/v1/appStoreVersions/{id}/ageRatingDeclaration":
    get:
      deprecated: true
      operationId: appStoreVersions-ageRatingDeclaration-get_to_one_related
      parameters:
        - deprecated: true
          description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeRatingDeclarationResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/appStoreReviewDetail":
    get:
      operationId: appStoreVersions-appStoreReviewDetail-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            appStoreReviewDetails
          explode: false
          in: query
          name: fields[appStoreReviewDetails]
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreReviewAttachments
          explode: false
          in: query
          name: fields[appStoreReviewAttachments]
          schema:
            items:
              enum:
                - appStoreReviewDetail
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreReviewDetailResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/appStoreVersionLocalizations":
    get:
      operationId: appStoreVersions-appStoreVersionLocalizations-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionLocalizationsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease":
    get:
      operationId: appStoreVersions-appStoreVersionPhasedRelease-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            appStoreVersionPhasedReleases
          explode: false
          in: query
          name: fields[appStoreVersionPhasedReleases]
          schema:
            items:
              enum:
                - appStoreVersion
                - currentDayNumber
                - phasedReleaseState
                - startDate
                - totalPauseDuration
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/appStoreVersionSubmission":
    get:
      operationId: appStoreVersions-appStoreVersionSubmission-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionSubmissions
          explode: false
          in: query
          name: fields[appStoreVersionSubmissions]
          schema:
            items:
              enum:
                - appStoreVersion
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - appStoreVersion
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionSubmissionResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/build":
    get:
      operationId: appStoreVersions-build-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/idfaDeclaration":
    get:
      operationId: appStoreVersions-idfaDeclaration-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type idfaDeclarations
          explode: false
          in: query
          name: fields[idfaDeclarations]
          schema:
            items:
              enum:
                - appStoreVersion
                - attributesActionWithPreviousAd
                - attributesAppInstallationToPreviousAd
                - honorsLimitedAdTracking
                - servesAds
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdfaDeclarationResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/appStoreVersions/{id}/relationships/build":
    get:
      operationId: appStoreVersions-build-get_to_one_relationship
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionBuildLinkageResponse"
          description: Related linkage
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: appStoreVersions-build-update_to_one_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppStoreVersionBuildLinkageRequest"
        description: Related linkage
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - AppStoreVersions
  "/v1/appStoreVersions/{id}/routingAppCoverage":
    get:
      operationId: appStoreVersions-routingAppCoverage-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            routingAppCoverages
          explode: false
          in: query
          name: fields[routingAppCoverages]
          schema:
            items:
              enum:
                - appStoreVersion
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutingAppCoverageResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - AppStoreVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/apps:
    get:
      operationId: apps-get_collection
      parameters:
        - description: filter by attribute 'appStoreVersions.appStoreState'
          explode: false
          in: query
          name: filter[appStoreVersions.appStoreState]
          required: false
          schema:
            items:
              enum:
                - DEVELOPER_REMOVED_FROM_SALE
                - DEVELOPER_REJECTED
                - IN_REVIEW
                - INVALID_BINARY
                - METADATA_REJECTED
                - PENDING_APPLE_RELEASE
                - PENDING_CONTRACT
                - PENDING_DEVELOPER_RELEASE
                - PREPARE_FOR_SUBMISSION
                - PREORDER_READY_FOR_SALE
                - PROCESSING_FOR_APP_STORE
                - READY_FOR_SALE
                - REJECTED
                - REMOVED_FROM_SALE
                - WAITING_FOR_EXPORT_COMPLIANCE
                - WAITING_FOR_REVIEW
                - REPLACED_WITH_NEW_VERSION
              type: string
            type: array
          style: form
        - description: filter by attribute 'appStoreVersions.platform'
          explode: false
          in: query
          name: filter[appStoreVersions.platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'bundleId'
          explode: false
          in: query
          name: filter[bundleId]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'name'
          explode: false
          in: query
          name: filter[name]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'sku'
          explode: false
          in: query
          name: filter[sku]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'appStoreVersions'
          explode: false
          in: query
          name: filter[appStoreVersions]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by existence or non-existence of related
            'gameCenterEnabledVersions'
          explode: false
          in: query
          name: exists[gameCenterEnabledVersions]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - bundleId
                - -bundleId
                - name
                - -name
                - sku
                - -sku
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - builds
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - preOrder
                - preReleaseVersions
                - prices
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type perfPowerMetrics
          explode: false
          in: query
          name: fields[perfPowerMetrics]
          required: false
          schema:
            items:
              enum:
                - deviceType
                - metricType
                - platform
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appInfos
          explode: false
          in: query
          name: fields[appInfos]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - appStoreAgeRating
                - appStoreState
                - brazilAgeRating
                - kidsAgeBand
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreOrders
          explode: false
          in: query
          name: fields[appPreOrders]
          required: false
          schema:
            items:
              enum:
                - app
                - appReleaseDate
                - preOrderAvailableDate
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPrices
          explode: false
          in: query
          name: fields[appPrices]
          required: false
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type inAppPurchases
          explode: false
          in: query
          name: fields[inAppPurchases]
          required: false
          schema:
            items:
              enum:
                - apps
                - inAppPurchaseType
                - productId
                - referenceName
                - state
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewDetails
          explode: false
          in: query
          name: fields[betaAppReviewDetails]
          required: false
          schema:
            items:
              enum:
                - app
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            gameCenterEnabledVersions
          explode: false
          in: query
          name: fields[gameCenterEnabledVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - compatibleVersions
                - iconAsset
                - platform
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppLocalizations
          explode: false
          in: query
          name: fields[betaAppLocalizations]
          required: false
          schema:
            items:
              enum:
                - app
                - description
                - feedbackEmail
                - locale
                - marketingUrl
                - privacyPolicyUrl
                - tvOsPrivacyPolicy
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaLicenseAgreements
          explode: false
          in: query
          name: fields[betaLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            endUserLicenseAgreements
          explode: false
          in: query
          name: fields[endUserLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
                - territories
              type: string
            type: array
          style: form
        - description: maximum number of related appInfos returned (when they are included)
          in: query
          name: limit[appInfos]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related appStoreVersions returned (when they are
            included)
          in: query
          name: limit[appStoreVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related availableTerritories returned (when they
            are included)
          in: query
          name: limit[availableTerritories]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaAppLocalizations returned (when they
            are included)
          in: query
          name: limit[betaAppLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaGroups returned (when they are
            included)
          in: query
          name: limit[betaGroups]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related gameCenterEnabledVersions returned (when
            they are included)
          in: query
          name: limit[gameCenterEnabledVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related inAppPurchases returned (when they are
            included)
          in: query
          name: limit[inAppPurchases]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related preReleaseVersions returned (when they
            are included)
          in: query
          name: limit[preReleaseVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related prices returned (when they are included)
          in: query
          name: limit[prices]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsResponse"
          description: List of Apps
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Apps
  "/v1/apps/{id}":
    get:
      operationId: apps-get_instance
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - builds
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - preOrder
                - preReleaseVersions
                - prices
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type perfPowerMetrics
          explode: false
          in: query
          name: fields[perfPowerMetrics]
          required: false
          schema:
            items:
              enum:
                - deviceType
                - metricType
                - platform
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appInfos
          explode: false
          in: query
          name: fields[appInfos]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - appStoreAgeRating
                - appStoreState
                - brazilAgeRating
                - kidsAgeBand
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPreOrders
          explode: false
          in: query
          name: fields[appPreOrders]
          required: false
          schema:
            items:
              enum:
                - app
                - appReleaseDate
                - preOrderAvailableDate
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPrices
          explode: false
          in: query
          name: fields[appPrices]
          required: false
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type inAppPurchases
          explode: false
          in: query
          name: fields[inAppPurchases]
          required: false
          schema:
            items:
              enum:
                - apps
                - inAppPurchaseType
                - productId
                - referenceName
                - state
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewDetails
          explode: false
          in: query
          name: fields[betaAppReviewDetails]
          required: false
          schema:
            items:
              enum:
                - app
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            gameCenterEnabledVersions
          explode: false
          in: query
          name: fields[gameCenterEnabledVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - compatibleVersions
                - iconAsset
                - platform
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppLocalizations
          explode: false
          in: query
          name: fields[betaAppLocalizations]
          required: false
          schema:
            items:
              enum:
                - app
                - description
                - feedbackEmail
                - locale
                - marketingUrl
                - privacyPolicyUrl
                - tvOsPrivacyPolicy
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaLicenseAgreements
          explode: false
          in: query
          name: fields[betaLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            endUserLicenseAgreements
          explode: false
          in: query
          name: fields[endUserLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
                - territories
              type: string
            type: array
          style: form
        - description: maximum number of related appInfos returned (when they are included)
          in: query
          name: limit[appInfos]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related appStoreVersions returned (when they are
            included)
          in: query
          name: limit[appStoreVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related availableTerritories returned (when they
            are included)
          in: query
          name: limit[availableTerritories]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaAppLocalizations returned (when they
            are included)
          in: query
          name: limit[betaAppLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaGroups returned (when they are
            included)
          in: query
          name: limit[betaGroups]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related gameCenterEnabledVersions returned (when
            they are included)
          in: query
          name: limit[gameCenterEnabledVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related inAppPurchases returned (when they are
            included)
          in: query
          name: limit[inAppPurchases]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related preReleaseVersions returned (when they
            are included)
          in: query
          name: limit[preReleaseVersions]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related prices returned (when they are included)
          in: query
          name: limit[prices]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Single App
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: apps-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppUpdateRequest"
        description: App representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Single App
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Apps
  "/v1/apps/{id}/appInfos":
    get:
      operationId: apps-appInfos-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - contests
                - gambling
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - seventeenPlus
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appInfos
          explode: false
          in: query
          name: fields[appInfos]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appInfoLocalizations
                - appStoreAgeRating
                - appStoreState
                - brazilAgeRating
                - kidsAgeBand
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appCategories
          explode: false
          in: query
          name: fields[appCategories]
          schema:
            items:
              enum:
                - parent
                - platforms
                - subcategories
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appInfoLocalizations
          explode: false
          in: query
          name: fields[appInfoLocalizations]
          schema:
            items:
              enum:
                - appInfo
                - locale
                - name
                - privacyPolicyText
                - privacyPolicyUrl
                - subtitle
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - app
                - appInfoLocalizations
                - primaryCategory
                - primarySubcategoryOne
                - primarySubcategoryTwo
                - secondaryCategory
                - secondarySubcategoryOne
                - secondarySubcategoryTwo
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfosResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/appStoreVersions":
    get:
      operationId: apps-appStoreVersions-get_to_many_related
      parameters:
        - description: filter by attribute 'appStoreState'
          explode: false
          in: query
          name: filter[appStoreState]
          schema:
            items:
              enum:
                - DEVELOPER_REMOVED_FROM_SALE
                - DEVELOPER_REJECTED
                - IN_REVIEW
                - INVALID_BINARY
                - METADATA_REJECTED
                - PENDING_APPLE_RELEASE
                - PENDING_CONTRACT
                - PENDING_DEVELOPER_RELEASE
                - PREPARE_FOR_SUBMISSION
                - PREORDER_READY_FOR_SALE
                - PROCESSING_FOR_APP_STORE
                - READY_FOR_SALE
                - REJECTED
                - REMOVED_FROM_SALE
                - WAITING_FOR_EXPORT_COMPLIANCE
                - WAITING_FOR_REVIEW
                - REPLACED_WITH_NEW_VERSION
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'versionString'
          explode: false
          in: query
          name: filter[versionString]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type idfaDeclarations
          explode: false
          in: query
          name: fields[idfaDeclarations]
          schema:
            items:
              enum:
                - appStoreVersion
                - attributesActionWithPreviousAd
                - attributesAppInstallationToPreviousAd
                - honorsLimitedAdTracking
                - servesAds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionLocalizations
          explode: false
          in: query
          name: fields[appStoreVersionLocalizations]
          schema:
            items:
              enum:
                - appPreviewSets
                - appScreenshotSets
                - appStoreVersion
                - description
                - keywords
                - locale
                - marketingUrl
                - promotionalText
                - supportUrl
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            routingAppCoverages
          explode: false
          in: query
          name: fields[routingAppCoverages]
          schema:
            items:
              enum:
                - appStoreVersion
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionPhasedReleases
          explode: false
          in: query
          name: fields[appStoreVersionPhasedReleases]
          schema:
            items:
              enum:
                - appStoreVersion
                - currentDayNumber
                - phasedReleaseState
                - startDate
                - totalPauseDuration
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            ageRatingDeclarations
          explode: false
          in: query
          name: fields[ageRatingDeclarations]
          schema:
            items:
              enum:
                - alcoholTobaccoOrDrugUseOrReferences
                - gamblingAndContests
                - gamblingSimulated
                - horrorOrFearThemes
                - kidsAgeBand
                - matureOrSuggestiveThemes
                - medicalOrTreatmentInformation
                - profanityOrCrudeHumor
                - sexualContentGraphicAndNudity
                - sexualContentOrNudity
                - unrestrictedWebAccess
                - violenceCartoonOrFantasy
                - violenceRealistic
                - violenceRealisticProlongedGraphicOrSadistic
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreReviewDetails
          explode: false
          in: query
          name: fields[appStoreReviewDetails]
          schema:
            items:
              enum:
                - appStoreReviewAttachments
                - appStoreVersion
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appStoreVersionSubmissions
          explode: false
          in: query
          name: fields[appStoreVersionSubmissions]
          schema:
            items:
              enum:
                - appStoreVersion
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - idfaDeclaration
                - routingAppCoverage
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/availableTerritories":
    get:
      operationId: apps-availableTerritories-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerritoriesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/betaAppLocalizations":
    get:
      operationId: apps-betaAppLocalizations-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            betaAppLocalizations
          explode: false
          in: query
          name: fields[betaAppLocalizations]
          schema:
            items:
              enum:
                - app
                - description
                - feedbackEmail
                - locale
                - marketingUrl
                - privacyPolicyUrl
                - tvOsPrivacyPolicy
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppLocalizationsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/betaAppReviewDetail":
    get:
      operationId: apps-betaAppReviewDetail-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            betaAppReviewDetails
          explode: false
          in: query
          name: fields[betaAppReviewDetails]
          schema:
            items:
              enum:
                - app
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewDetailResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/betaGroups":
    get:
      operationId: apps-betaGroups-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/betaLicenseAgreement":
    get:
      operationId: apps-betaLicenseAgreement-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            betaLicenseAgreements
          explode: false
          in: query
          name: fields[betaLicenseAgreements]
          schema:
            items:
              enum:
                - agreementText
                - app
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaLicenseAgreementResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/builds":
    get:
      operationId: apps-builds-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/endUserLicenseAgreement":
    get:
      operationId: apps-endUserLicenseAgreement-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            endUserLicenseAgreements
          explode: false
          in: query
          name: fields[endUserLicenseAgreements]
          schema:
            items:
              enum:
                - agreementText
                - app
                - territories
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EndUserLicenseAgreementResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/gameCenterEnabledVersions":
    get:
      operationId: apps-gameCenterEnabledVersions-get_to_many_related
      parameters:
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'versionString'
          explode: false
          in: query
          name: filter[versionString]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          schema:
            items:
              enum:
                - versionString
                - -versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            gameCenterEnabledVersions
          explode: false
          in: query
          name: fields[gameCenterEnabledVersions]
          schema:
            items:
              enum:
                - app
                - compatibleVersions
                - iconAsset
                - platform
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - app
                - compatibleVersions
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameCenterEnabledVersionsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/inAppPurchases":
    get:
      operationId: apps-inAppPurchases-get_to_many_related
      parameters:
        - description: filter by attribute 'inAppPurchaseType'
          explode: false
          in: query
          name: filter[inAppPurchaseType]
          schema:
            items:
              enum:
                - AUTOMATICALLY_RENEWABLE_SUBSCRIPTION
                - NON_CONSUMABLE
                - CONSUMABLE
                - NON_RENEWING_SUBSCRIPTION
                - FREE_SUBSCRIPTION
              type: string
            type: array
          style: form
        - description: filter by canBeSubmitted
          explode: false
          in: query
          name: filter[canBeSubmitted]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          schema:
            items:
              enum:
                - inAppPurchaseType
                - -inAppPurchaseType
                - productId
                - -productId
                - referenceName
                - -referenceName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type inAppPurchases
          explode: false
          in: query
          name: fields[inAppPurchases]
          schema:
            items:
              enum:
                - apps
                - inAppPurchaseType
                - productId
                - referenceName
                - state
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - apps
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InAppPurchasesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/perfPowerMetrics":
    get:
      operationId: apps-perfPowerMetrics-get_to_many_related
      parameters:
        - description: filter by attribute 'deviceType'
          explode: false
          in: query
          name: filter[deviceType]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'metricType'
          explode: false
          in: query
          name: filter[metricType]
          schema:
            items:
              enum:
                - DISK
                - HANG
                - BATTERY
                - LAUNCH
                - MEMORY
                - ANIMATION
                - TERMINATION
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          schema:
            items:
              enum:
                - IOS
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfPowerMetricsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/preOrder":
    get:
      operationId: apps-preOrder-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appPreOrders
          explode: false
          in: query
          name: fields[appPreOrders]
          schema:
            items:
              enum:
                - app
                - appReleaseDate
                - preOrderAvailableDate
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPreOrderResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/preReleaseVersions":
    get:
      operationId: apps-preReleaseVersions-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreReleaseVersionsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/prices":
    get:
      operationId: apps-prices-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type appPrices
          explode: false
          in: query
          name: fields[appPrices]
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appPriceTiers
          explode: false
          in: query
          name: fields[appPriceTiers]
          schema:
            items:
              enum:
                - pricePoints
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - app
                - priceTier
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppPricesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/apps/{id}/relationships/betaTesters":
    delete:
      operationId: apps-betaTesters-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppBetaTestersLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Apps
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaAppLocalizations:
    get:
      operationId: betaAppLocalizations-get_collection
      parameters:
        - description: filter by attribute 'locale'
          explode: false
          in: query
          name: filter[locale]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppLocalizations
          explode: false
          in: query
          name: fields[betaAppLocalizations]
          required: false
          schema:
            items:
              enum:
                - app
                - description
                - feedbackEmail
                - locale
                - marketingUrl
                - privacyPolicyUrl
                - tvOsPrivacyPolicy
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppLocalizationsResponse"
          description: List of BetaAppLocalizations
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaAppLocalizations
    post:
      operationId: betaAppLocalizations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaAppLocalizationCreateRequest"
        description: BetaAppLocalization representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppLocalizationResponse"
          description: Single BetaAppLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaAppLocalizations
  "/v1/betaAppLocalizations/{id}":
    delete:
      operationId: betaAppLocalizations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaAppLocalizations
    get:
      operationId: betaAppLocalizations-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            betaAppLocalizations
          explode: false
          in: query
          name: fields[betaAppLocalizations]
          required: false
          schema:
            items:
              enum:
                - app
                - description
                - feedbackEmail
                - locale
                - marketingUrl
                - privacyPolicyUrl
                - tvOsPrivacyPolicy
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppLocalizationResponse"
          description: Single BetaAppLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: betaAppLocalizations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaAppLocalizationUpdateRequest"
        description: BetaAppLocalization representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppLocalizationResponse"
          description: Single BetaAppLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaAppLocalizations
  "/v1/betaAppLocalizations/{id}/app":
    get:
      operationId: betaAppLocalizations-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaAppReviewDetails:
    get:
      operationId: betaAppReviewDetails-get_collection
      parameters:
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewDetails
          explode: false
          in: query
          name: fields[betaAppReviewDetails]
          required: false
          schema:
            items:
              enum:
                - app
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewDetailsResponse"
          description: List of BetaAppReviewDetails
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaAppReviewDetails
  "/v1/betaAppReviewDetails/{id}":
    get:
      operationId: betaAppReviewDetails-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            betaAppReviewDetails
          explode: false
          in: query
          name: fields[betaAppReviewDetails]
          required: false
          schema:
            items:
              enum:
                - app
                - contactEmail
                - contactFirstName
                - contactLastName
                - contactPhone
                - demoAccountName
                - demoAccountPassword
                - demoAccountRequired
                - notes
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewDetailResponse"
          description: Single BetaAppReviewDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppReviewDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: betaAppReviewDetails-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaAppReviewDetailUpdateRequest"
        description: BetaAppReviewDetail representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewDetailResponse"
          description: Single BetaAppReviewDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaAppReviewDetails
  "/v1/betaAppReviewDetails/{id}/app":
    get:
      operationId: betaAppReviewDetails-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppReviewDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaAppReviewSubmissions:
    get:
      operationId: betaAppReviewSubmissions-get_collection
      parameters:
        - description: filter by attribute 'betaReviewState'
          explode: false
          in: query
          name: filter[betaReviewState]
          required: false
          schema:
            items:
              enum:
                - WAITING_FOR_REVIEW
                - IN_REVIEW
                - REJECTED
                - APPROVED
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'build'
          explode: false
          in: query
          name: filter[build]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewSubmissions
          explode: false
          in: query
          name: fields[betaAppReviewSubmissions]
          required: false
          schema:
            items:
              enum:
                - betaReviewState
                - build
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewSubmissionsResponse"
          description: List of BetaAppReviewSubmissions
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaAppReviewSubmissions
    post:
      operationId: betaAppReviewSubmissions-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaAppReviewSubmissionCreateRequest"
        description: BetaAppReviewSubmission representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewSubmissionResponse"
          description: Single BetaAppReviewSubmission
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaAppReviewSubmissions
  "/v1/betaAppReviewSubmissions/{id}":
    get:
      operationId: betaAppReviewSubmissions-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            betaAppReviewSubmissions
          explode: false
          in: query
          name: fields[betaAppReviewSubmissions]
          required: false
          schema:
            items:
              enum:
                - betaReviewState
                - build
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewSubmissionResponse"
          description: Single BetaAppReviewSubmission
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppReviewSubmissions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaAppReviewSubmissions/{id}/build":
    get:
      operationId: betaAppReviewSubmissions-build-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaAppReviewSubmissions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaBuildLocalizations:
    get:
      operationId: betaBuildLocalizations-get_collection
      parameters:
        - description: filter by attribute 'locale'
          explode: false
          in: query
          name: filter[locale]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'build'
          explode: false
          in: query
          name: filter[build]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaBuildLocalizations
          explode: false
          in: query
          name: fields[betaBuildLocalizations]
          required: false
          schema:
            items:
              enum:
                - build
                - locale
                - whatsNew
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaBuildLocalizationsResponse"
          description: List of BetaBuildLocalizations
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaBuildLocalizations
    post:
      operationId: betaBuildLocalizations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaBuildLocalizationCreateRequest"
        description: BetaBuildLocalization representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaBuildLocalizationResponse"
          description: Single BetaBuildLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaBuildLocalizations
  "/v1/betaBuildLocalizations/{id}":
    delete:
      operationId: betaBuildLocalizations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaBuildLocalizations
    get:
      operationId: betaBuildLocalizations-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            betaBuildLocalizations
          explode: false
          in: query
          name: fields[betaBuildLocalizations]
          required: false
          schema:
            items:
              enum:
                - build
                - locale
                - whatsNew
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaBuildLocalizationResponse"
          description: Single BetaBuildLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaBuildLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: betaBuildLocalizations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaBuildLocalizationUpdateRequest"
        description: BetaBuildLocalization representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaBuildLocalizationResponse"
          description: Single BetaBuildLocalization
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaBuildLocalizations
  "/v1/betaBuildLocalizations/{id}/build":
    get:
      operationId: betaBuildLocalizations-build-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaBuildLocalizations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaGroups:
    get:
      operationId: betaGroups-get_collection
      parameters:
        - description: filter by attribute 'isInternalGroup'
          explode: false
          in: query
          name: filter[isInternalGroup]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'name'
          explode: false
          in: query
          name: filter[name]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'publicLink'
          explode: false
          in: query
          name: filter[publicLink]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'publicLinkEnabled'
          explode: false
          in: query
          name: filter[publicLinkEnabled]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'publicLinkLimitEnabled'
          explode: false
          in: query
          name: filter[publicLinkLimitEnabled]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'builds'
          explode: false
          in: query
          name: filter[builds]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - createdDate
                - -createdDate
                - name
                - -name
                - publicLinkEnabled
                - -publicLinkEnabled
                - publicLinkLimit
                - -publicLinkLimit
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related betaTesters returned (when they are
            included)
          in: query
          name: limit[betaTesters]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 1000
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupsResponse"
          description: List of BetaGroups
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaGroups
    post:
      operationId: betaGroups-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupCreateRequest"
        description: BetaGroup representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupResponse"
          description: Single BetaGroup
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
  "/v1/betaGroups/{id}":
    delete:
      operationId: betaGroups-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
    get:
      operationId: betaGroups-get_instance
      parameters:
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related betaTesters returned (when they are
            included)
          in: query
          name: limit[betaTesters]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 1000
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupResponse"
          description: Single BetaGroup
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: betaGroups-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupUpdateRequest"
        description: BetaGroup representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupResponse"
          description: Single BetaGroup
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
  "/v1/betaGroups/{id}/app":
    get:
      operationId: betaGroups-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaGroups/{id}/betaTesters":
    get:
      operationId: betaGroups-betaTesters-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTestersResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaGroups/{id}/builds":
    get:
      operationId: betaGroups-builds-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaGroups/{id}/relationships/betaTesters":
    delete:
      operationId: betaGroups-betaTesters-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
    get:
      operationId: betaGroups-betaTesters-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupBetaTestersLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: betaGroups-betaTesters-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
  "/v1/betaGroups/{id}/relationships/builds":
    delete:
      operationId: betaGroups-builds-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupBuildsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
    get:
      operationId: betaGroups-builds-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupBuildsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaGroups
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: betaGroups-builds-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaGroupBuildsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaGroups
  /v1/betaLicenseAgreements:
    get:
      operationId: betaLicenseAgreements-get_collection
      parameters:
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaLicenseAgreements
          explode: false
          in: query
          name: fields[betaLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaLicenseAgreementsResponse"
          description: List of BetaLicenseAgreements
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaLicenseAgreements
  "/v1/betaLicenseAgreements/{id}":
    get:
      operationId: betaLicenseAgreements-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            betaLicenseAgreements
          explode: false
          in: query
          name: fields[betaLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaLicenseAgreementResponse"
          description: Single BetaLicenseAgreement
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaLicenseAgreements
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: betaLicenseAgreements-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaLicenseAgreementUpdateRequest"
        description: BetaLicenseAgreement representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaLicenseAgreementResponse"
          description: Single BetaLicenseAgreement
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaLicenseAgreements
  "/v1/betaLicenseAgreements/{id}/app":
    get:
      operationId: betaLicenseAgreements-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaLicenseAgreements
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/betaTesterInvitations:
    post:
      operationId: betaTesterInvitations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterInvitationCreateRequest"
        description: BetaTesterInvitation representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterInvitationResponse"
          description: Single BetaTesterInvitation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesterInvitations
  /v1/betaTesters:
    get:
      operationId: betaTesters-get_collection
      parameters:
        - description: filter by attribute 'email'
          explode: false
          in: query
          name: filter[email]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'firstName'
          explode: false
          in: query
          name: filter[firstName]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'inviteType'
          explode: false
          in: query
          name: filter[inviteType]
          required: false
          schema:
            items:
              enum:
                - EMAIL
                - PUBLIC_LINK
              type: string
            type: array
          style: form
        - description: filter by attribute 'lastName'
          explode: false
          in: query
          name: filter[lastName]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'apps'
          explode: false
          in: query
          name: filter[apps]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'betaGroups'
          explode: false
          in: query
          name: filter[betaGroups]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'builds'
          explode: false
          in: query
          name: filter[builds]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - email
                - -email
                - firstName
                - -firstName
                - inviteType
                - -inviteType
                - lastName
                - -lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related apps returned (when they are included)
          in: query
          name: limit[apps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaGroups returned (when they are
            included)
          in: query
          name: limit[betaGroups]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTestersResponse"
          description: List of BetaTesters
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BetaTesters
    post:
      operationId: betaTesters-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterCreateRequest"
        description: BetaTester representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterResponse"
          description: Single BetaTester
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
  "/v1/betaTesters/{id}":
    delete:
      operationId: betaTesters-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
    get:
      operationId: betaTesters-get_instance
      parameters:
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          required: false
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related apps returned (when they are included)
          in: query
          name: limit[apps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related betaGroups returned (when they are
            included)
          in: query
          name: limit[betaGroups]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterResponse"
          description: Single BetaTester
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaTesters/{id}/apps":
    get:
      operationId: betaTesters-apps-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaTesters/{id}/betaGroups":
    get:
      operationId: betaTesters-betaGroups-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type betaGroups
          explode: false
          in: query
          name: fields[betaGroups]
          schema:
            items:
              enum:
                - app
                - betaTesters
                - builds
                - createdDate
                - feedbackEnabled
                - isInternalGroup
                - name
                - publicLink
                - publicLinkEnabled
                - publicLinkId
                - publicLinkLimit
                - publicLinkLimitEnabled
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaGroupsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaTesters/{id}/builds":
    get:
      operationId: betaTesters-builds-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaTesters/{id}/relationships/apps":
    delete:
      operationId: betaTesters-apps-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterAppsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
    get:
      operationId: betaTesters-apps-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterAppsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/betaTesters/{id}/relationships/betaGroups":
    delete:
      operationId: betaTesters-betaGroups-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
    get:
      operationId: betaTesters-betaGroups-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterBetaGroupsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: betaTesters-betaGroups-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
  "/v1/betaTesters/{id}/relationships/builds":
    delete:
      operationId: betaTesters-builds-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterBuildsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
    get:
      operationId: betaTesters-builds-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTesterBuildsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BetaTesters
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: betaTesters-builds-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BetaTesterBuildsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BetaTesters
  /v1/buildBetaDetails:
    get:
      operationId: buildBetaDetails-get_collection
      parameters:
        - description: filter by id(s) of related 'build'
          explode: false
          in: query
          name: filter[build]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type buildBetaDetails
          explode: false
          in: query
          name: fields[buildBetaDetails]
          required: false
          schema:
            items:
              enum:
                - autoNotifyEnabled
                - build
                - externalBuildState
                - internalBuildState
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildBetaDetailsResponse"
          description: List of BuildBetaDetails
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BuildBetaDetails
  "/v1/buildBetaDetails/{id}":
    get:
      operationId: buildBetaDetails-get_instance
      parameters:
        - description: the fields to include for returned resources of type buildBetaDetails
          explode: false
          in: query
          name: fields[buildBetaDetails]
          required: false
          schema:
            items:
              enum:
                - autoNotifyEnabled
                - build
                - externalBuildState
                - internalBuildState
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildBetaDetailResponse"
          description: Single BuildBetaDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BuildBetaDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: buildBetaDetails-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildBetaDetailUpdateRequest"
        description: BuildBetaDetail representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildBetaDetailResponse"
          description: Single BuildBetaDetail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BuildBetaDetails
  "/v1/buildBetaDetails/{id}/build":
    get:
      operationId: buildBetaDetails-build-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BuildBetaDetails
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/buildBetaNotifications:
    post:
      operationId: buildBetaNotifications-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildBetaNotificationCreateRequest"
        description: BuildBetaNotification representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildBetaNotificationResponse"
          description: Single BuildBetaNotification
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BuildBetaNotifications
  /v1/builds:
    get:
      operationId: builds-get_collection
      parameters:
        - description: filter by attribute 'betaAppReviewSubmission.betaReviewState'
          explode: false
          in: query
          name: filter[betaAppReviewSubmission.betaReviewState]
          required: false
          schema:
            items:
              enum:
                - WAITING_FOR_REVIEW
                - IN_REVIEW
                - REJECTED
                - APPROVED
              type: string
            type: array
          style: form
        - description: filter by attribute 'expired'
          explode: false
          in: query
          name: filter[expired]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'preReleaseVersion.platform'
          explode: false
          in: query
          name: filter[preReleaseVersion.platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'preReleaseVersion.version'
          explode: false
          in: query
          name: filter[preReleaseVersion.version]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'processingState'
          explode: false
          in: query
          name: filter[processingState]
          required: false
          schema:
            items:
              enum:
                - PROCESSING
                - FAILED
                - INVALID
                - VALID
              type: string
            type: array
          style: form
        - description: filter by attribute 'usesNonExemptEncryption'
          explode: false
          in: query
          name: filter[usesNonExemptEncryption]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'version'
          explode: false
          in: query
          name: filter[version]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'appStoreVersion'
          explode: false
          in: query
          name: filter[appStoreVersion]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'betaGroups'
          explode: false
          in: query
          name: filter[betaGroups]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'preReleaseVersion'
          explode: false
          in: query
          name: filter[preReleaseVersion]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - preReleaseVersion
                - -preReleaseVersion
                - uploadedDate
                - -uploadedDate
                - version
                - -version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - buildBetaDetail
                - icons
                - individualTesters
                - preReleaseVersion
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appEncryptionDeclarations
          explode: false
          in: query
          name: fields[appEncryptionDeclarations]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclarationState
                - availableOnFrenchStore
                - builds
                - codeValue
                - containsProprietaryCryptography
                - containsThirdPartyCryptography
                - documentName
                - documentType
                - documentUrl
                - exempt
                - platform
                - uploadedDate
                - usesEncryption
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewSubmissions
          explode: false
          in: query
          name: fields[betaAppReviewSubmissions]
          required: false
          schema:
            items:
              enum:
                - betaReviewState
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type buildBetaDetails
          explode: false
          in: query
          name: fields[buildBetaDetails]
          required: false
          schema:
            items:
              enum:
                - autoNotifyEnabled
                - build
                - externalBuildState
                - internalBuildState
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type buildIcons
          explode: false
          in: query
          name: fields[buildIcons]
          required: false
          schema:
            items:
              enum:
                - iconAsset
                - iconType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type perfPowerMetrics
          explode: false
          in: query
          name: fields[perfPowerMetrics]
          required: false
          schema:
            items:
              enum:
                - deviceType
                - metricType
                - platform
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            diagnosticSignatures
          explode: false
          in: query
          name: fields[diagnosticSignatures]
          required: false
          schema:
            items:
              enum:
                - diagnosticType
                - logs
                - signature
                - weight
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaBuildLocalizations
          explode: false
          in: query
          name: fields[betaBuildLocalizations]
          required: false
          schema:
            items:
              enum:
                - build
                - locale
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related betaBuildLocalizations returned (when
            they are included)
          in: query
          name: limit[betaBuildLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related icons returned (when they are included)
          in: query
          name: limit[icons]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related individualTesters returned (when they are
            included)
          in: query
          name: limit[individualTesters]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsResponse"
          description: List of Builds
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Builds
  "/v1/builds/{id}":
    get:
      operationId: builds-get_instance
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - buildBetaDetail
                - icons
                - individualTesters
                - preReleaseVersion
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            appEncryptionDeclarations
          explode: false
          in: query
          name: fields[appEncryptionDeclarations]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclarationState
                - availableOnFrenchStore
                - builds
                - codeValue
                - containsProprietaryCryptography
                - containsThirdPartyCryptography
                - documentName
                - documentType
                - documentUrl
                - exempt
                - platform
                - uploadedDate
                - usesEncryption
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaAppReviewSubmissions
          explode: false
          in: query
          name: fields[betaAppReviewSubmissions]
          required: false
          schema:
            items:
              enum:
                - betaReviewState
                - build
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type buildBetaDetails
          explode: false
          in: query
          name: fields[buildBetaDetails]
          required: false
          schema:
            items:
              enum:
                - autoNotifyEnabled
                - build
                - externalBuildState
                - internalBuildState
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type buildIcons
          explode: false
          in: query
          name: fields[buildIcons]
          required: false
          schema:
            items:
              enum:
                - iconAsset
                - iconType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type perfPowerMetrics
          explode: false
          in: query
          name: fields[perfPowerMetrics]
          required: false
          schema:
            items:
              enum:
                - deviceType
                - metricType
                - platform
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          required: false
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            diagnosticSignatures
          explode: false
          in: query
          name: fields[diagnosticSignatures]
          required: false
          schema:
            items:
              enum:
                - diagnosticType
                - logs
                - signature
                - weight
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          required: false
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            betaBuildLocalizations
          explode: false
          in: query
          name: fields[betaBuildLocalizations]
          required: false
          schema:
            items:
              enum:
                - build
                - locale
                - whatsNew
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related betaBuildLocalizations returned (when
            they are included)
          in: query
          name: limit[betaBuildLocalizations]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related icons returned (when they are included)
          in: query
          name: limit[icons]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related individualTesters returned (when they are
            included)
          in: query
          name: limit[individualTesters]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Single Build
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: builds-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildUpdateRequest"
        description: Build representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildResponse"
          description: Single Build
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
  "/v1/builds/{id}/app":
    get:
      operationId: builds-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/appEncryptionDeclaration":
    get:
      operationId: builds-appEncryptionDeclaration-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            appEncryptionDeclarations
          explode: false
          in: query
          name: fields[appEncryptionDeclarations]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclarationState
                - availableOnFrenchStore
                - builds
                - codeValue
                - containsProprietaryCryptography
                - containsThirdPartyCryptography
                - documentName
                - documentType
                - documentUrl
                - exempt
                - platform
                - uploadedDate
                - usesEncryption
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppEncryptionDeclarationResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/appStoreVersion":
    get:
      operationId: builds-appStoreVersion-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type appStoreVersions
          explode: false
          in: query
          name: fields[appStoreVersions]
          schema:
            items:
              enum:
                - ageRatingDeclaration
                - app
                - appStoreReviewDetail
                - appStoreState
                - appStoreVersionLocalizations
                - appStoreVersionPhasedRelease
                - appStoreVersionSubmission
                - build
                - copyright
                - createdDate
                - downloadable
                - earliestReleaseDate
                - idfaDeclaration
                - platform
                - releaseType
                - routingAppCoverage
                - usesIdfa
                - versionString
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppStoreVersionResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/betaAppReviewSubmission":
    get:
      operationId: builds-betaAppReviewSubmission-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            betaAppReviewSubmissions
          explode: false
          in: query
          name: fields[betaAppReviewSubmissions]
          schema:
            items:
              enum:
                - betaReviewState
                - build
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaAppReviewSubmissionResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/betaBuildLocalizations":
    get:
      operationId: builds-betaBuildLocalizations-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            betaBuildLocalizations
          explode: false
          in: query
          name: fields[betaBuildLocalizations]
          schema:
            items:
              enum:
                - build
                - locale
                - whatsNew
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaBuildLocalizationsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/buildBetaDetail":
    get:
      operationId: builds-buildBetaDetail-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type buildBetaDetails
          explode: false
          in: query
          name: fields[buildBetaDetails]
          schema:
            items:
              enum:
                - autoNotifyEnabled
                - build
                - externalBuildState
                - internalBuildState
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildBetaDetailResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/diagnosticSignatures":
    get:
      operationId: builds-diagnosticSignatures-get_to_many_related
      parameters:
        - description: filter by attribute 'diagnosticType'
          explode: false
          in: query
          name: filter[diagnosticType]
          schema:
            items:
              enum:
                - DISK_WRITES
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            diagnosticSignatures
          explode: false
          in: query
          name: fields[diagnosticSignatures]
          schema:
            items:
              enum:
                - diagnosticType
                - logs
                - signature
                - weight
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiagnosticSignaturesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/icons":
    get:
      operationId: builds-icons-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type buildIcons
          explode: false
          in: query
          name: fields[buildIcons]
          schema:
            items:
              enum:
                - iconAsset
                - iconType
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildIconsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/individualTesters":
    get:
      operationId: builds-individualTesters-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type betaTesters
          explode: false
          in: query
          name: fields[betaTesters]
          schema:
            items:
              enum:
                - apps
                - betaGroups
                - builds
                - email
                - firstName
                - inviteType
                - lastName
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BetaTestersResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/perfPowerMetrics":
    get:
      operationId: builds-perfPowerMetrics-get_to_many_related
      parameters:
        - description: filter by attribute 'deviceType'
          explode: false
          in: query
          name: filter[deviceType]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'metricType'
          explode: false
          in: query
          name: filter[metricType]
          schema:
            items:
              enum:
                - DISK
                - HANG
                - BATTERY
                - LAUNCH
                - MEMORY
                - ANIMATION
                - TERMINATION
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          schema:
            items:
              enum:
                - IOS
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfPowerMetricsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/preReleaseVersion":
    get:
      operationId: builds-preReleaseVersion-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrereleaseVersionResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/builds/{id}/relationships/appEncryptionDeclaration":
    get:
      operationId: builds-appEncryptionDeclaration-get_to_one_relationship
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse"
          description: Related linkage
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: builds-appEncryptionDeclaration-update_to_one_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest"
        description: Related linkage
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
  "/v1/builds/{id}/relationships/betaGroups":
    delete:
      operationId: builds-betaGroups-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildBetaGroupsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: builds-betaGroups-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildBetaGroupsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
  "/v1/builds/{id}/relationships/individualTesters":
    delete:
      operationId: builds-individualTesters-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildIndividualTestersLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
    get:
      operationId: builds-individualTesters-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildIndividualTestersLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Builds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    post:
      operationId: builds-individualTesters-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildIndividualTestersLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Builds
  /v1/bundleIdCapabilities:
    post:
      operationId: bundleIdCapabilities-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BundleIdCapabilityCreateRequest"
        description: BundleIdCapability representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdCapabilityResponse"
          description: Single BundleIdCapability
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIdCapabilities
  "/v1/bundleIdCapabilities/{id}":
    delete:
      operationId: bundleIdCapabilities-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIdCapabilities
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: bundleIdCapabilities-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BundleIdCapabilityUpdateRequest"
        description: BundleIdCapability representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdCapabilityResponse"
          description: Single BundleIdCapability
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIdCapabilities
  /v1/bundleIds:
    get:
      operationId: bundleIds-get_collection
      parameters:
        - description: filter by attribute 'identifier'
          explode: false
          in: query
          name: filter[identifier]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'name'
          explode: false
          in: query
          name: filter[name]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'seedId'
          explode: false
          in: query
          name: filter[seedId]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - id
                - -id
                - identifier
                - -identifier
                - name
                - -name
                - platform
                - -platform
                - seedId
                - -seedId
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type bundleIds
          explode: false
          in: query
          name: fields[bundleIds]
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - identifier
                - name
                - platform
                - profiles
                - seedId
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - profiles
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            bundleIdCapabilities
          explode: false
          in: query
          name: fields[bundleIdCapabilities]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - capabilityType
                - settings
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type profiles
          explode: false
          in: query
          name: fields[profiles]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - createdDate
                - devices
                - expirationDate
                - name
                - platform
                - profileContent
                - profileState
                - profileType
                - uuid
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related bundleIdCapabilities returned (when they
            are included)
          in: query
          name: limit[bundleIdCapabilities]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related profiles returned (when they are included)
          in: query
          name: limit[profiles]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdsResponse"
          description: List of BundleIds
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - BundleIds
    post:
      operationId: bundleIds-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BundleIdCreateRequest"
        description: BundleId representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdResponse"
          description: Single BundleId
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIds
  "/v1/bundleIds/{id}":
    delete:
      operationId: bundleIds-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIds
    get:
      operationId: bundleIds-get_instance
      parameters:
        - description: the fields to include for returned resources of type bundleIds
          explode: false
          in: query
          name: fields[bundleIds]
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - identifier
                - name
                - platform
                - profiles
                - seedId
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - profiles
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            bundleIdCapabilities
          explode: false
          in: query
          name: fields[bundleIdCapabilities]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - capabilityType
                - settings
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type profiles
          explode: false
          in: query
          name: fields[profiles]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - createdDate
                - devices
                - expirationDate
                - name
                - platform
                - profileContent
                - profileState
                - profileType
                - uuid
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related bundleIdCapabilities returned (when they
            are included)
          in: query
          name: limit[bundleIdCapabilities]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related profiles returned (when they are included)
          in: query
          name: limit[profiles]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdResponse"
          description: Single BundleId
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BundleIds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: bundleIds-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BundleIdUpdateRequest"
        description: BundleId representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdResponse"
          description: Single BundleId
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - BundleIds
  "/v1/bundleIds/{id}/app":
    get:
      operationId: bundleIds-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BundleIds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/bundleIds/{id}/bundleIdCapabilities":
    get:
      operationId: bundleIds-bundleIdCapabilities-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type
            bundleIdCapabilities
          explode: false
          in: query
          name: fields[bundleIdCapabilities]
          schema:
            items:
              enum:
                - bundleId
                - capabilityType
                - settings
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdCapabilitiesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BundleIds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/bundleIds/{id}/profiles":
    get:
      operationId: bundleIds-profiles-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type profiles
          explode: false
          in: query
          name: fields[profiles]
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - createdDate
                - devices
                - expirationDate
                - name
                - platform
                - profileContent
                - profileState
                - profileType
                - uuid
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - BundleIds
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/certificates:
    get:
      operationId: certificates-get_collection
      parameters:
        - description: filter by attribute 'certificateType'
          explode: false
          in: query
          name: filter[certificateType]
          required: false
          schema:
            items:
              enum:
                - IOS_DEVELOPMENT
                - IOS_DISTRIBUTION
                - MAC_APP_DISTRIBUTION
                - MAC_INSTALLER_DISTRIBUTION
                - MAC_APP_DEVELOPMENT
                - DEVELOPER_ID_KEXT
                - DEVELOPER_ID_APPLICATION
                - DEVELOPMENT
                - DISTRIBUTION
              type: string
            type: array
          style: form
        - description: filter by attribute 'displayName'
          explode: false
          in: query
          name: filter[displayName]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'serialNumber'
          explode: false
          in: query
          name: filter[serialNumber]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - certificateType
                - -certificateType
                - displayName
                - -displayName
                - id
                - -id
                - serialNumber
                - -serialNumber
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type certificates
          explode: false
          in: query
          name: fields[certificates]
          required: false
          schema:
            items:
              enum:
                - certificateContent
                - certificateType
                - csrContent
                - displayName
                - expirationDate
                - name
                - platform
                - serialNumber
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificatesResponse"
          description: List of Certificates
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Certificates
    post:
      operationId: certificates-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateCreateRequest"
        description: Certificate representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateResponse"
          description: Single Certificate
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Certificates
  "/v1/certificates/{id}":
    delete:
      operationId: certificates-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Certificates
    get:
      operationId: certificates-get_instance
      parameters:
        - description: the fields to include for returned resources of type certificates
          explode: false
          in: query
          name: fields[certificates]
          required: false
          schema:
            items:
              enum:
                - certificateContent
                - certificateType
                - csrContent
                - displayName
                - expirationDate
                - name
                - platform
                - serialNumber
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateResponse"
          description: Single Certificate
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Certificates
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/devices:
    get:
      operationId: devices-get_collection
      parameters:
        - description: filter by attribute 'name'
          explode: false
          in: query
          name: filter[name]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'status'
          explode: false
          in: query
          name: filter[status]
          required: false
          schema:
            items:
              enum:
                - ENABLED
                - DISABLED
              type: string
            type: array
          style: form
        - description: filter by attribute 'udid'
          explode: false
          in: query
          name: filter[udid]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - id
                - -id
                - name
                - -name
                - platform
                - -platform
                - status
                - -status
                - udid
                - -udid
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type devices
          explode: false
          in: query
          name: fields[devices]
          required: false
          schema:
            items:
              enum:
                - addedDate
                - deviceClass
                - model
                - name
                - platform
                - status
                - udid
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicesResponse"
          description: List of Devices
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Devices
    post:
      operationId: devices-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceCreateRequest"
        description: Device representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
          description: Single Device
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Devices
  "/v1/devices/{id}":
    get:
      operationId: devices-get_instance
      parameters:
        - description: the fields to include for returned resources of type devices
          explode: false
          in: query
          name: fields[devices]
          required: false
          schema:
            items:
              enum:
                - addedDate
                - deviceClass
                - model
                - name
                - platform
                - status
                - udid
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
          description: Single Device
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Devices
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: devices-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceUpdateRequest"
        description: Device representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
          description: Single Device
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Devices
  "/v1/diagnosticSignatures/{id}/logs":
    get:
      operationId: diagnosticSignatures-logs-get_to_many_related
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiagnosticLogsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - DiagnosticSignatures
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/endUserLicenseAgreements:
    post:
      operationId: endUserLicenseAgreements-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EndUserLicenseAgreementCreateRequest"
        description: EndUserLicenseAgreement representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EndUserLicenseAgreementResponse"
          description: Single EndUserLicenseAgreement
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - EndUserLicenseAgreements
  "/v1/endUserLicenseAgreements/{id}":
    delete:
      operationId: endUserLicenseAgreements-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - EndUserLicenseAgreements
    get:
      operationId: endUserLicenseAgreements-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            endUserLicenseAgreements
          explode: false
          in: query
          name: fields[endUserLicenseAgreements]
          required: false
          schema:
            items:
              enum:
                - agreementText
                - app
                - territories
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - territories
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: maximum number of related territories returned (when they are
            included)
          in: query
          name: limit[territories]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EndUserLicenseAgreementResponse"
          description: Single EndUserLicenseAgreement
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - EndUserLicenseAgreements
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: endUserLicenseAgreements-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EndUserLicenseAgreementUpdateRequest"
        description: EndUserLicenseAgreement representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EndUserLicenseAgreementResponse"
          description: Single EndUserLicenseAgreement
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - EndUserLicenseAgreements
  "/v1/endUserLicenseAgreements/{id}/territories":
    get:
      operationId: endUserLicenseAgreements-territories-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerritoriesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - EndUserLicenseAgreements
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/financeReports:
    get:
      operationId: financeReports-get_collection
      parameters:
        - description: filter by attribute 'regionCode'
          explode: false
          in: query
          name: filter[regionCode]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'reportDate'
          explode: false
          in: query
          name: filter[reportDate]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'reportType'
          explode: false
          in: query
          name: filter[reportType]
          required: true
          schema:
            items:
              enum:
                - FINANCIAL
                - FINANCE_DETAIL
              type: string
            type: array
          style: form
        - description: filter by attribute 'vendorNumber'
          explode: false
          in: query
          name: filter[vendorNumber]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            gzip:
              schema:
                format: binary
                type: string
          description: List of FinanceReports
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - FinanceReports
  "/v1/gameCenterEnabledVersions/{id}/compatibleVersions":
    get:
      operationId: gameCenterEnabledVersions-compatibleVersions-get_to_many_related
      parameters:
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'versionString'
          explode: false
          in: query
          name: filter[versionString]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          schema:
            items:
              enum:
                - versionString
                - -versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            gameCenterEnabledVersions
          explode: false
          in: query
          name: fields[gameCenterEnabledVersions]
          schema:
            items:
              enum:
                - app
                - compatibleVersions
                - iconAsset
                - platform
                - versionString
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          schema:
            items:
              enum:
                - app
                - compatibleVersions
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameCenterEnabledVersionsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - GameCenterEnabledVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions":
    delete:
      operationId: gameCenterEnabledVersions-compatibleVersions-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesR\
                equest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - GameCenterEnabledVersions
    get:
      operationId: gameCenterEnabledVersions-compatibleVersions-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesR\
                  esponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - GameCenterEnabledVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: gameCenterEnabledVersions-compatibleVersions-replace_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesR\
                equest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - GameCenterEnabledVersions
    post:
      operationId: gameCenterEnabledVersions-compatibleVersions-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesR\
                equest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - GameCenterEnabledVersions
  /v1/idfaDeclarations:
    post:
      operationId: idfaDeclarations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdfaDeclarationCreateRequest"
        description: IdfaDeclaration representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdfaDeclarationResponse"
          description: Single IdfaDeclaration
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - IdfaDeclarations
  "/v1/idfaDeclarations/{id}":
    delete:
      operationId: idfaDeclarations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - IdfaDeclarations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: idfaDeclarations-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdfaDeclarationUpdateRequest"
        description: IdfaDeclaration representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdfaDeclarationResponse"
          description: Single IdfaDeclaration
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - IdfaDeclarations
  "/v1/inAppPurchases/{id}":
    get:
      operationId: inAppPurchases-get_instance
      parameters:
        - description: the fields to include for returned resources of type inAppPurchases
          explode: false
          in: query
          name: fields[inAppPurchases]
          required: false
          schema:
            items:
              enum:
                - apps
                - inAppPurchaseType
                - productId
                - referenceName
                - state
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - apps
              type: string
            type: array
          style: form
        - description: maximum number of related apps returned (when they are included)
          in: query
          name: limit[apps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InAppPurchaseResponse"
          description: Single InAppPurchase
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - InAppPurchases
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/preReleaseVersions:
    get:
      operationId: preReleaseVersions-get_collection
      parameters:
        - description: filter by attribute 'builds.expired'
          explode: false
          in: query
          name: filter[builds.expired]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'builds.processingState'
          explode: false
          in: query
          name: filter[builds.processingState]
          required: false
          schema:
            items:
              enum:
                - PROCESSING
                - FAILED
                - INVALID
                - VALID
              type: string
            type: array
          style: form
        - description: filter by attribute 'platform'
          explode: false
          in: query
          name: filter[platform]
          required: false
          schema:
            items:
              enum:
                - IOS
                - MAC_OS
                - TV_OS
              type: string
            type: array
          style: form
        - description: filter by attribute 'version'
          explode: false
          in: query
          name: filter[version]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'app'
          explode: false
          in: query
          name: filter[app]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'builds'
          explode: false
          in: query
          name: filter[builds]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - version
                - -version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreReleaseVersionsResponse"
          description: List of PreReleaseVersions
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - PreReleaseVersions
  "/v1/preReleaseVersions/{id}":
    get:
      operationId: preReleaseVersions-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            preReleaseVersions
          explode: false
          in: query
          name: fields[preReleaseVersions]
          required: false
          schema:
            items:
              enum:
                - app
                - builds
                - platform
                - version
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - app
                - builds
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          required: false
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related builds returned (when they are included)
          in: query
          name: limit[builds]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrereleaseVersionResponse"
          description: Single PrereleaseVersion
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - PreReleaseVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/preReleaseVersions/{id}/app":
    get:
      operationId: preReleaseVersions-app-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - PreReleaseVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/preReleaseVersions/{id}/builds":
    get:
      operationId: preReleaseVersions-builds-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type builds
          explode: false
          in: query
          name: fields[builds]
          schema:
            items:
              enum:
                - app
                - appEncryptionDeclaration
                - appStoreVersion
                - betaAppReviewSubmission
                - betaBuildLocalizations
                - betaGroups
                - buildBetaDetail
                - diagnosticSignatures
                - expirationDate
                - expired
                - iconAssetToken
                - icons
                - individualTesters
                - minOsVersion
                - perfPowerMetrics
                - preReleaseVersion
                - processingState
                - uploadedDate
                - usesNonExemptEncryption
                - version
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - PreReleaseVersions
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/profiles:
    get:
      operationId: profiles-get_collection
      parameters:
        - description: filter by attribute 'name'
          explode: false
          in: query
          name: filter[name]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'profileState'
          explode: false
          in: query
          name: filter[profileState]
          required: false
          schema:
            items:
              enum:
                - ACTIVE
                - INVALID
              type: string
            type: array
          style: form
        - description: filter by attribute 'profileType'
          explode: false
          in: query
          name: filter[profileType]
          required: false
          schema:
            items:
              enum:
                - IOS_APP_DEVELOPMENT
                - IOS_APP_STORE
                - IOS_APP_ADHOC
                - IOS_APP_INHOUSE
                - MAC_APP_DEVELOPMENT
                - MAC_APP_STORE
                - MAC_APP_DIRECT
                - TVOS_APP_DEVELOPMENT
                - TVOS_APP_STORE
                - TVOS_APP_ADHOC
                - TVOS_APP_INHOUSE
                - MAC_CATALYST_APP_DEVELOPMENT
                - MAC_CATALYST_APP_STORE
                - MAC_CATALYST_APP_DIRECT
              type: string
            type: array
          style: form
        - description: filter by id(s)
          explode: false
          in: query
          name: filter[id]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - id
                - -id
                - name
                - -name
                - profileState
                - -profileState
                - profileType
                - -profileType
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type profiles
          explode: false
          in: query
          name: fields[profiles]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - createdDate
                - devices
                - expirationDate
                - name
                - platform
                - profileContent
                - profileState
                - profileType
                - uuid
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - devices
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type certificates
          explode: false
          in: query
          name: fields[certificates]
          required: false
          schema:
            items:
              enum:
                - certificateContent
                - certificateType
                - csrContent
                - displayName
                - expirationDate
                - name
                - platform
                - serialNumber
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type devices
          explode: false
          in: query
          name: fields[devices]
          required: false
          schema:
            items:
              enum:
                - addedDate
                - deviceClass
                - model
                - name
                - platform
                - status
                - udid
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type bundleIds
          explode: false
          in: query
          name: fields[bundleIds]
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - identifier
                - name
                - platform
                - profiles
                - seedId
              type: string
            type: array
          style: form
        - description: maximum number of related certificates returned (when they are
            included)
          in: query
          name: limit[certificates]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related devices returned (when they are included)
          in: query
          name: limit[devices]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilesResponse"
          description: List of Profiles
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Profiles
    post:
      operationId: profiles-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileCreateRequest"
        description: Profile representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
          description: Single Profile
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Profiles
  "/v1/profiles/{id}":
    delete:
      operationId: profiles-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Profiles
    get:
      operationId: profiles-get_instance
      parameters:
        - description: the fields to include for returned resources of type profiles
          explode: false
          in: query
          name: fields[profiles]
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - createdDate
                - devices
                - expirationDate
                - name
                - platform
                - profileContent
                - profileState
                - profileType
                - uuid
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - bundleId
                - certificates
                - devices
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type certificates
          explode: false
          in: query
          name: fields[certificates]
          required: false
          schema:
            items:
              enum:
                - certificateContent
                - certificateType
                - csrContent
                - displayName
                - expirationDate
                - name
                - platform
                - serialNumber
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type devices
          explode: false
          in: query
          name: fields[devices]
          required: false
          schema:
            items:
              enum:
                - addedDate
                - deviceClass
                - model
                - name
                - platform
                - status
                - udid
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type bundleIds
          explode: false
          in: query
          name: fields[bundleIds]
          required: false
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - identifier
                - name
                - platform
                - profiles
                - seedId
              type: string
            type: array
          style: form
        - description: maximum number of related certificates returned (when they are
            included)
          in: query
          name: limit[certificates]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
        - description: maximum number of related devices returned (when they are included)
          in: query
          name: limit[devices]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
          description: Single Profile
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Profiles
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/profiles/{id}/bundleId":
    get:
      operationId: profiles-bundleId-get_to_one_related
      parameters:
        - description: the fields to include for returned resources of type bundleIds
          explode: false
          in: query
          name: fields[bundleIds]
          schema:
            items:
              enum:
                - app
                - bundleIdCapabilities
                - identifier
                - name
                - platform
                - profiles
                - seedId
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BundleIdResponse"
          description: Related resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Profiles
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/profiles/{id}/certificates":
    get:
      operationId: profiles-certificates-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type certificates
          explode: false
          in: query
          name: fields[certificates]
          schema:
            items:
              enum:
                - certificateContent
                - certificateType
                - csrContent
                - displayName
                - expirationDate
                - name
                - platform
                - serialNumber
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificatesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Profiles
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/profiles/{id}/devices":
    get:
      operationId: profiles-devices-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type devices
          explode: false
          in: query
          name: fields[devices]
          schema:
            items:
              enum:
                - addedDate
                - deviceClass
                - model
                - name
                - platform
                - status
                - udid
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicesResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Profiles
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/routingAppCoverages:
    post:
      operationId: routingAppCoverages-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoutingAppCoverageCreateRequest"
        description: RoutingAppCoverage representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutingAppCoverageResponse"
          description: Single RoutingAppCoverage
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - RoutingAppCoverages
  "/v1/routingAppCoverages/{id}":
    delete:
      operationId: routingAppCoverages-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - RoutingAppCoverages
    get:
      operationId: routingAppCoverages-get_instance
      parameters:
        - description: the fields to include for returned resources of type
            routingAppCoverages
          explode: false
          in: query
          name: fields[routingAppCoverages]
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
                - assetDeliveryState
                - fileName
                - fileSize
                - sourceFileChecksum
                - uploadOperations
                - uploaded
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - appStoreVersion
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutingAppCoverageResponse"
          description: Single RoutingAppCoverage
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - RoutingAppCoverages
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: routingAppCoverages-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoutingAppCoverageUpdateRequest"
        description: RoutingAppCoverage representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutingAppCoverageResponse"
          description: Single RoutingAppCoverage
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - RoutingAppCoverages
  /v1/salesReports:
    get:
      operationId: salesReports-get_collection
      parameters:
        - description: filter by attribute 'frequency'
          explode: false
          in: query
          name: filter[frequency]
          required: true
          schema:
            items:
              enum:
                - DAILY
                - WEEKLY
                - MONTHLY
                - YEARLY
              type: string
            type: array
          style: form
        - description: filter by attribute 'reportDate'
          explode: false
          in: query
          name: filter[reportDate]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'reportSubType'
          explode: false
          in: query
          name: filter[reportSubType]
          required: true
          schema:
            items:
              enum:
                - SUMMARY
                - DETAILED
                - OPT_IN
              type: string
            type: array
          style: form
        - description: filter by attribute 'reportType'
          explode: false
          in: query
          name: filter[reportType]
          required: true
          schema:
            items:
              enum:
                - SALES
                - PRE_ORDER
                - NEWSSTAND
                - SUBSCRIPTION
                - SUBSCRIPTION_EVENT
                - SUBSCRIBER
              type: string
            type: array
          style: form
        - description: filter by attribute 'vendorNumber'
          explode: false
          in: query
          name: filter[vendorNumber]
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'version'
          explode: false
          in: query
          name: filter[version]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            gzip:
              schema:
                format: binary
                type: string
          description: List of SalesReports
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - SalesReports
  /v1/territories:
    get:
      operationId: territories-get_collection
      parameters:
        - description: the fields to include for returned resources of type territories
          explode: false
          in: query
          name: fields[territories]
          required: false
          schema:
            items:
              enum:
                - currency
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerritoriesResponse"
          description: List of Territories
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Territories
  /v1/userInvitations:
    get:
      operationId: userInvitations-get_collection
      parameters:
        - description: filter by attribute 'email'
          explode: false
          in: query
          name: filter[email]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by attribute 'roles'
          explode: false
          in: query
          name: filter[roles]
          required: false
          schema:
            items:
              enum:
                - ADMIN
                - FINANCE
                - TECHNICAL
                - ACCOUNT_HOLDER
                - READ_ONLY
                - SALES
                - MARKETING
                - APP_MANAGER
                - DEVELOPER
                - ACCESS_TO_REPORTS
                - CUSTOMER_SUPPORT
                - CREATE_APPS
                - CLOUD_MANAGED_DEVELOPER_ID
                - CLOUD_MANAGED_APP_DISTRIBUTION
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'visibleApps'
          explode: false
          in: query
          name: filter[visibleApps]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - email
                - -email
                - lastName
                - -lastName
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type userInvitations
          explode: false
          in: query
          name: fields[userInvitations]
          required: false
          schema:
            items:
              enum:
                - allAppsVisible
                - email
                - expirationDate
                - firstName
                - lastName
                - provisioningAllowed
                - roles
                - visibleApps
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - visibleApps
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related visibleApps returned (when they are
            included)
          in: query
          name: limit[visibleApps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInvitationsResponse"
          description: List of UserInvitations
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - UserInvitations
    post:
      operationId: userInvitations-create_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInvitationCreateRequest"
        description: UserInvitation representation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInvitationResponse"
          description: Single UserInvitation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - UserInvitations
  "/v1/userInvitations/{id}":
    delete:
      operationId: userInvitations-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - UserInvitations
    get:
      operationId: userInvitations-get_instance
      parameters:
        - description: the fields to include for returned resources of type userInvitations
          explode: false
          in: query
          name: fields[userInvitations]
          required: false
          schema:
            items:
              enum:
                - allAppsVisible
                - email
                - expirationDate
                - firstName
                - lastName
                - provisioningAllowed
                - roles
                - visibleApps
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - visibleApps
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related visibleApps returned (when they are
            included)
          in: query
          name: limit[visibleApps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInvitationResponse"
          description: Single UserInvitation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - UserInvitations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  "/v1/userInvitations/{id}/visibleApps":
    get:
      operationId: userInvitations-visibleApps-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - UserInvitations
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1/users:
    get:
      operationId: users-get_collection
      parameters:
        - description: filter by attribute 'roles'
          explode: false
          in: query
          name: filter[roles]
          required: false
          schema:
            items:
              enum:
                - ADMIN
                - FINANCE
                - TECHNICAL
                - ACCOUNT_HOLDER
                - READ_ONLY
                - SALES
                - MARKETING
                - APP_MANAGER
                - DEVELOPER
                - ACCESS_TO_REPORTS
                - CUSTOMER_SUPPORT
                - CREATE_APPS
                - CLOUD_MANAGED_DEVELOPER_ID
                - CLOUD_MANAGED_APP_DISTRIBUTION
              type: string
            type: array
          style: form
        - description: filter by attribute 'username'
          explode: false
          in: query
          name: filter[username]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: filter by id(s) of related 'visibleApps'
          explode: false
          in: query
          name: filter[visibleApps]
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: comma-separated list of sort expressions; resources will be sorted
            as specified
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              enum:
                - lastName
                - -lastName
                - username
                - -username
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type users
          explode: false
          in: query
          name: fields[users]
          required: false
          schema:
            items:
              enum:
                - allAppsVisible
                - firstName
                - lastName
                - provisioningAllowed
                - roles
                - username
                - visibleApps
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - visibleApps
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related visibleApps returned (when they are
            included)
          in: query
          name: limit[visibleApps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
          description: List of Users
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
      tags:
        - Users
  "/v1/users/{id}":
    delete:
      operationId: users-delete_instance
      responses:
        "204":
          description: Success (no content)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Users
    get:
      operationId: users-get_instance
      parameters:
        - description: the fields to include for returned resources of type users
          explode: false
          in: query
          name: fields[users]
          required: false
          schema:
            items:
              enum:
                - allAppsVisible
                - firstName
                - lastName
                - provisioningAllowed
                - roles
                - username
                - visibleApps
              type: string
            type: array
          style: form
        - description: comma-separated list of relationships to include
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              enum:
                - visibleApps
              type: string
            type: array
          style: form
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          required: false
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum number of related visibleApps returned (when they are
            included)
          in: query
          name: limit[visibleApps]
          required: false
          schema:
            maximum: 50
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
          description: Single User
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Users
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: users-update_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
        description: User representation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
          description: Single User
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Users
  "/v1/users/{id}/relationships/visibleApps":
    delete:
      operationId: users-visibleApps-delete_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVisibleAppsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Users
    get:
      operationId: users-visibleApps-get_to_many_relationship
      parameters:
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserVisibleAppsLinkagesResponse"
          description: List of related linkages
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Users
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
    patch:
      operationId: users-visibleApps-replace_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVisibleAppsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Users
    post:
      operationId: users-visibleApps-create_to_many_relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVisibleAppsLinkagesRequest"
        description: List of related linkages
        required: true
      responses:
        "204":
          description: Success (no content)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request entity error(s)
      tags:
        - Users
  "/v1/users/{id}/visibleApps":
    get:
      operationId: users-visibleApps-get_to_many_related
      parameters:
        - description: the fields to include for returned resources of type apps
          explode: false
          in: query
          name: fields[apps]
          schema:
            items:
              enum:
                - appInfos
                - appStoreVersions
                - availableInNewTerritories
                - availableTerritories
                - betaAppLocalizations
                - betaAppReviewDetail
                - betaGroups
                - betaLicenseAgreement
                - betaTesters
                - builds
                - bundleId
                - contentRightsDeclaration
                - endUserLicenseAgreement
                - gameCenterEnabledVersions
                - inAppPurchases
                - isOrEverWasMadeForKids
                - name
                - perfPowerMetrics
                - preOrder
                - preReleaseVersions
                - prices
                - primaryLocale
                - sku
              type: string
            type: array
          style: form
        - description: maximum resources per page
          in: query
          name: limit
          schema:
            maximum: 200
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsResponse"
          description: List of related resources
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Parameter error(s)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found error
      tags:
        - Users
    parameters:
      - description: the id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
components:
  schemas:
    AgeRatingDeclaration:
      properties:
        attributes:
          properties:
            alcoholTobaccoOrDrugUseOrReferences:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            contests:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            gambling:
              type: boolean
            gamblingAndContests:
              deprecated: true
              type: boolean
            gamblingSimulated:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            horrorOrFearThemes:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            kidsAgeBand:
              $ref: "#/components/schemas/KidsAgeBand"
            matureOrSuggestiveThemes:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            medicalOrTreatmentInformation:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            profanityOrCrudeHumor:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            seventeenPlus:
              type: boolean
            sexualContentGraphicAndNudity:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            sexualContentOrNudity:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            unrestrictedWebAccess:
              type: boolean
            violenceCartoonOrFantasy:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            violenceRealistic:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
            violenceRealisticProlongedGraphicOrSadistic:
              enum:
                - NONE
                - INFREQUENT_OR_MILD
                - FREQUENT_OR_INTENSE
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - ageRatingDeclarations
          type: string
      required:
        - links
        - id
        - type
      title: AgeRatingDeclaration
      type: object
    AgeRatingDeclarationResponse:
      properties:
        data:
          $ref: "#/components/schemas/AgeRatingDeclaration"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AgeRatingDeclarationResponse
      type: object
    AgeRatingDeclarationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                alcoholTobaccoOrDrugUseOrReferences:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                contests:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                gambling:
                  type: boolean
                gamblingAndContests:
                  deprecated: true
                  type: boolean
                gamblingSimulated:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                horrorOrFearThemes:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                kidsAgeBand:
                  $ref: "#/components/schemas/KidsAgeBand"
                matureOrSuggestiveThemes:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                medicalOrTreatmentInformation:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                profanityOrCrudeHumor:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                seventeenPlus:
                  type: boolean
                sexualContentGraphicAndNudity:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                sexualContentOrNudity:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                unrestrictedWebAccess:
                  type: boolean
                violenceCartoonOrFantasy:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                violenceRealistic:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
                violenceRealisticProlongedGraphicOrSadistic:
                  enum:
                    - NONE
                    - INFREQUENT_OR_MILD
                    - FREQUENT_OR_INTENSE
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - ageRatingDeclarations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AgeRatingDeclarationUpdateRequest
      type: object
    App:
      properties:
        attributes:
          properties:
            availableInNewTerritories:
              type: boolean
            bundleId:
              type: string
            contentRightsDeclaration:
              enum:
                - DOES_NOT_USE_THIRD_PARTY_CONTENT
                - USES_THIRD_PARTY_CONTENT
              type: string
            isOrEverWasMadeForKids:
              type: boolean
            name:
              type: string
            primaryLocale:
              type: string
            sku:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appInfos:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appInfos
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersions:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appStoreVersions
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            availableTerritories:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - territories
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            betaAppLocalizations:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaAppLocalizations
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            betaAppReviewDetail:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - betaAppReviewDetails
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            betaGroups:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaGroups
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            betaLicenseAgreement:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - betaLicenseAgreements
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            builds:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - builds
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            endUserLicenseAgreement:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - endUserLicenseAgreements
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            gameCenterEnabledVersions:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - gameCenterEnabledVersions
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            inAppPurchases:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - inAppPurchases
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            preOrder:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appPreOrders
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            preReleaseVersions:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - preReleaseVersions
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            prices:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appPrices
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - apps
          type: string
      required:
        - links
        - id
        - type
      title: App
      type: object
    AppBetaTestersLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaTesters
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    AppCategoriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppCategory"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppCategoriesResponse
      type: object
    AppCategory:
      properties:
        attributes:
          properties:
            platforms:
              items:
                $ref: "#/components/schemas/Platform"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            parent:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            subcategories:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appCategories
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - appCategories
          type: string
      required:
        - links
        - id
        - type
      title: AppCategory
      type: object
    AppCategoryResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppCategory"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppCategoryResponse
      type: object
    AppEncryptionDeclaration:
      properties:
        attributes:
          properties:
            appEncryptionDeclarationState:
              $ref: "#/components/schemas/AppEncryptionDeclarationState"
            availableOnFrenchStore:
              type: boolean
            codeValue:
              type: string
            containsProprietaryCryptography:
              type: boolean
            containsThirdPartyCryptography:
              type: boolean
            documentName:
              type: string
            documentType:
              type: string
            documentUrl:
              type: string
            exempt:
              type: boolean
            platform:
              $ref: "#/components/schemas/Platform"
            uploadedDate:
              format: date-time
              type: string
            usesEncryption:
              type: boolean
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appEncryptionDeclarations
          type: string
      required:
        - links
        - id
        - type
      title: AppEncryptionDeclaration
      type: object
    AppEncryptionDeclarationBuildsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - builds
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    AppEncryptionDeclarationResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppEncryptionDeclaration"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppEncryptionDeclarationResponse
      type: object
    AppEncryptionDeclarationState:
      enum:
        - IN_REVIEW
        - APPROVED
        - REJECTED
        - INVALID
        - EXPIRED
      type: string
    AppEncryptionDeclarationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppEncryptionDeclaration"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppEncryptionDeclarationsResponse
      type: object
    AppInfo:
      properties:
        attributes:
          properties:
            appStoreAgeRating:
              $ref: "#/components/schemas/AppStoreAgeRating"
            appStoreState:
              $ref: "#/components/schemas/AppStoreVersionState"
            brazilAgeRating:
              $ref: "#/components/schemas/BrazilAgeRating"
            kidsAgeBand:
              $ref: "#/components/schemas/KidsAgeBand"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            ageRatingDeclaration:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - ageRatingDeclarations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appInfoLocalizations:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appInfoLocalizations
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            primaryCategory:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            primarySubcategoryOne:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            primarySubcategoryTwo:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            secondaryCategory:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            secondarySubcategoryOne:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            secondarySubcategoryTwo:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appCategories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appInfos
          type: string
      required:
        - links
        - id
        - type
      title: AppInfo
      type: object
    AppInfoLocalization:
      properties:
        attributes:
          properties:
            locale:
              type: string
            name:
              type: string
            privacyPolicyText:
              type: string
            privacyPolicyUrl:
              type: string
            subtitle:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appInfo:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appInfos
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appInfoLocalizations
          type: string
      required:
        - links
        - id
        - type
      title: AppInfoLocalization
      type: object
    AppInfoLocalizationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                locale:
                  type: string
                name:
                  type: string
                privacyPolicyText:
                  type: string
                privacyPolicyUrl:
                  type: string
                subtitle:
                  type: string
              required:
                - locale
              type: object
            relationships:
              properties:
                appInfo:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appInfos
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appInfo
              type: object
            type:
              enum:
                - appInfoLocalizations
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppInfoLocalizationCreateRequest
      type: object
    AppInfoLocalizationResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppInfoLocalization"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppInfoLocalizationResponse
      type: object
    AppInfoLocalizationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                name:
                  type: string
                privacyPolicyText:
                  type: string
                privacyPolicyUrl:
                  type: string
                subtitle:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - appInfoLocalizations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppInfoLocalizationUpdateRequest
      type: object
    AppInfoLocalizationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppInfoLocalization"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppInfoLocalizationsResponse
      type: object
    AppInfoResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppInfo"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppInfoLocalization"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppInfoResponse
      type: object
    AppInfoUpdateRequest:
      properties:
        data:
          properties:
            id:
              type: string
            relationships:
              properties:
                primaryCategory:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
                primarySubcategoryOne:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
                primarySubcategoryTwo:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
                secondaryCategory:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
                secondarySubcategoryOne:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
                secondarySubcategoryTwo:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appCategories
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
              type: object
            type:
              enum:
                - appInfos
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppInfoUpdateRequest
      type: object
    AppInfosResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppInfo"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppInfoLocalization"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
              - $ref: "#/components/schemas/AppCategory"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppInfosResponse
      type: object
    AppMediaAssetState:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/AppMediaStateError"
          type: array
        state:
          enum:
            - AWAITING_UPLOAD
            - UPLOAD_COMPLETE
            - COMPLETE
            - FAILED
          type: string
        warnings:
          items:
            $ref: "#/components/schemas/AppMediaStateError"
          type: array
      type: object
    AppMediaStateError:
      properties:
        code:
          type: string
        description:
          type: string
      type: object
    AppPreOrder:
      properties:
        attributes:
          properties:
            appReleaseDate:
              format: date
              type: string
            preOrderAvailableDate:
              format: date
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appPreOrders
          type: string
      required:
        - links
        - id
        - type
      title: AppPreOrder
      type: object
    AppPreOrderCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                appReleaseDate:
                  format: date
                  type: string
              type: object
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - app
              type: object
            type:
              enum:
                - appPreOrders
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: AppPreOrderCreateRequest
      type: object
    AppPreOrderResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPreOrder"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPreOrderResponse
      type: object
    AppPreOrderUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                appReleaseDate:
                  format: date
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - appPreOrders
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppPreOrderUpdateRequest
      type: object
    AppPreview:
      properties:
        attributes:
          properties:
            assetDeliveryState:
              $ref: "#/components/schemas/AppMediaAssetState"
            fileName:
              type: string
            fileSize:
              type: integer
            mimeType:
              type: string
            previewFrameTimeCode:
              type: string
            previewImage:
              $ref: "#/components/schemas/ImageAsset"
            sourceFileChecksum:
              type: string
            uploadOperations:
              items:
                $ref: "#/components/schemas/UploadOperation"
              type: array
            videoUrl:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appPreviewSet:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appPreviewSets
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appPreviews
          type: string
      required:
        - links
        - id
        - type
      title: AppPreview
      type: object
    AppPreviewCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                fileName:
                  type: string
                fileSize:
                  type: integer
                mimeType:
                  type: string
                previewFrameTimeCode:
                  type: string
              required:
                - fileName
                - fileSize
              type: object
            relationships:
              properties:
                appPreviewSet:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appPreviewSets
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appPreviewSet
              type: object
            type:
              enum:
                - appPreviews
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppPreviewCreateRequest
      type: object
    AppPreviewResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPreview"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPreviewResponse
      type: object
    AppPreviewSet:
      properties:
        attributes:
          properties:
            previewType:
              $ref: "#/components/schemas/PreviewType"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appPreviews:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appPreviews
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersionLocalization:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersionLocalizations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appPreviewSets
          type: string
      required:
        - links
        - id
        - type
      title: AppPreviewSet
      type: object
    AppPreviewSetAppPreviewsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - appPreviews
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    AppPreviewSetAppPreviewsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - appPreviews
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    AppPreviewSetCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                previewType:
                  $ref: "#/components/schemas/PreviewType"
              required:
                - previewType
              type: object
            relationships:
              properties:
                appStoreVersionLocalization:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersionLocalizations
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersionLocalization
              type: object
            type:
              enum:
                - appPreviewSets
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppPreviewSetCreateRequest
      type: object
    AppPreviewSetResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPreviewSet"
        included:
          items:
            $ref: "#/components/schemas/AppPreview"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPreviewSetResponse
      type: object
    AppPreviewSetsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppPreviewSet"
          type: array
        included:
          items:
            $ref: "#/components/schemas/AppPreview"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppPreviewSetsResponse
      type: object
    AppPreviewUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                previewFrameTimeCode:
                  type: string
                sourceFileChecksum:
                  type: string
                uploaded:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - appPreviews
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppPreviewUpdateRequest
      type: object
    AppPreviewsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppPreview"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppPreviewsResponse
      type: object
    AppPrice:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            priceTier:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appPriceTiers
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appPrices
          type: string
      required:
        - links
        - id
        - type
      title: AppPrice
      type: object
    AppPricePoint:
      properties:
        attributes:
          properties:
            customerPrice:
              type: string
            proceeds:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            priceTier:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appPriceTiers
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            territory:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - territories
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appPricePoints
          type: string
      required:
        - links
        - id
        - type
      title: AppPricePoint
      type: object
    AppPricePointResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPricePoint"
        included:
          items:
            $ref: "#/components/schemas/Territory"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPricePointResponse
      type: object
    AppPricePointsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppPricePoint"
          type: array
        included:
          items:
            $ref: "#/components/schemas/Territory"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppPricePointsResponse
      type: object
    AppPriceResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPrice"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPriceResponse
      type: object
    AppPriceTier:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            pricePoints:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appPricePoints
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - appPriceTiers
          type: string
      required:
        - links
        - id
        - type
      title: AppPriceTier
      type: object
    AppPriceTierResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppPriceTier"
        included:
          items:
            $ref: "#/components/schemas/AppPricePoint"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppPriceTierResponse
      type: object
    AppPriceTiersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppPriceTier"
          type: array
        included:
          items:
            $ref: "#/components/schemas/AppPricePoint"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppPriceTiersResponse
      type: object
    AppPricesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppPrice"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppPricesResponse
      type: object
    AppResponse:
      properties:
        data:
          $ref: "#/components/schemas/App"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/BetaGroup"
              - $ref: "#/components/schemas/AppStoreVersion"
              - $ref: "#/components/schemas/PrereleaseVersion"
              - $ref: "#/components/schemas/BetaAppLocalization"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/BetaLicenseAgreement"
              - $ref: "#/components/schemas/BetaAppReviewDetail"
              - $ref: "#/components/schemas/AppInfo"
              - $ref: "#/components/schemas/EndUserLicenseAgreement"
              - $ref: "#/components/schemas/AppPreOrder"
              - $ref: "#/components/schemas/AppPrice"
              - $ref: "#/components/schemas/Territory"
              - $ref: "#/components/schemas/InAppPurchase"
              - $ref: "#/components/schemas/GameCenterEnabledVersion"
              - $ref: "#/components/schemas/PerfPowerMetric"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppResponse
      type: object
    AppScreenshot:
      properties:
        attributes:
          properties:
            assetDeliveryState:
              $ref: "#/components/schemas/AppMediaAssetState"
            assetToken:
              type: string
            assetType:
              type: string
            fileName:
              type: string
            fileSize:
              type: integer
            imageAsset:
              $ref: "#/components/schemas/ImageAsset"
            sourceFileChecksum:
              type: string
            uploadOperations:
              items:
                $ref: "#/components/schemas/UploadOperation"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appScreenshotSet:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appScreenshotSets
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appScreenshots
          type: string
      required:
        - links
        - id
        - type
      title: AppScreenshot
      type: object
    AppScreenshotCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                fileName:
                  type: string
                fileSize:
                  type: integer
              required:
                - fileName
                - fileSize
              type: object
            relationships:
              properties:
                appScreenshotSet:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appScreenshotSets
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appScreenshotSet
              type: object
            type:
              enum:
                - appScreenshots
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppScreenshotCreateRequest
      type: object
    AppScreenshotResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppScreenshot"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppScreenshotResponse
      type: object
    AppScreenshotSet:
      properties:
        attributes:
          properties:
            screenshotDisplayType:
              $ref: "#/components/schemas/ScreenshotDisplayType"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appScreenshots:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appScreenshots
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersionLocalization:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersionLocalizations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appScreenshotSets
          type: string
      required:
        - links
        - id
        - type
      title: AppScreenshotSet
      type: object
    AppScreenshotSetAppScreenshotsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - appScreenshots
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    AppScreenshotSetAppScreenshotsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - appScreenshots
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    AppScreenshotSetCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                screenshotDisplayType:
                  $ref: "#/components/schemas/ScreenshotDisplayType"
              required:
                - screenshotDisplayType
              type: object
            relationships:
              properties:
                appStoreVersionLocalization:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersionLocalizations
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersionLocalization
              type: object
            type:
              enum:
                - appScreenshotSets
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppScreenshotSetCreateRequest
      type: object
    AppScreenshotSetResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppScreenshotSet"
        included:
          items:
            $ref: "#/components/schemas/AppScreenshot"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppScreenshotSetResponse
      type: object
    AppScreenshotSetsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppScreenshotSet"
          type: array
        included:
          items:
            $ref: "#/components/schemas/AppScreenshot"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppScreenshotSetsResponse
      type: object
    AppScreenshotUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                sourceFileChecksum:
                  type: string
                uploaded:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - appScreenshots
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppScreenshotUpdateRequest
      type: object
    AppScreenshotsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppScreenshot"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppScreenshotsResponse
      type: object
    AppStoreAgeRating:
      enum:
        - FOUR_PLUS
        - NINE_PLUS
        - TWELVE_PLUS
        - SEVENTEEN_PLUS
      type: string
    AppStoreReviewAttachment:
      properties:
        attributes:
          properties:
            assetDeliveryState:
              $ref: "#/components/schemas/AppMediaAssetState"
            fileName:
              type: string
            fileSize:
              type: integer
            sourceFileChecksum:
              type: string
            uploadOperations:
              items:
                $ref: "#/components/schemas/UploadOperation"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appStoreReviewDetail:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreReviewDetails
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appStoreReviewAttachments
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreReviewAttachment
      type: object
    AppStoreReviewAttachmentCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                fileName:
                  type: string
                fileSize:
                  type: integer
              required:
                - fileName
                - fileSize
              type: object
            relationships:
              properties:
                appStoreReviewDetail:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreReviewDetails
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreReviewDetail
              type: object
            type:
              enum:
                - appStoreReviewAttachments
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppStoreReviewAttachmentCreateRequest
      type: object
    AppStoreReviewAttachmentResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreReviewAttachment"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreReviewAttachmentResponse
      type: object
    AppStoreReviewAttachmentUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                sourceFileChecksum:
                  type: string
                uploaded:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - appStoreReviewAttachments
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppStoreReviewAttachmentUpdateRequest
      type: object
    AppStoreReviewAttachmentsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppStoreReviewAttachment"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppStoreReviewAttachmentsResponse
      type: object
    AppStoreReviewDetail:
      properties:
        attributes:
          properties:
            contactEmail:
              type: string
            contactFirstName:
              type: string
            contactLastName:
              type: string
            contactPhone:
              type: string
            demoAccountName:
              type: string
            demoAccountPassword:
              type: string
            demoAccountRequired:
              type: boolean
            notes:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appStoreReviewAttachments:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appStoreReviewAttachments
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appStoreReviewDetails
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreReviewDetail
      type: object
    AppStoreReviewDetailCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                contactEmail:
                  type: string
                contactFirstName:
                  type: string
                contactLastName:
                  type: string
                contactPhone:
                  type: string
                demoAccountName:
                  type: string
                demoAccountPassword:
                  type: string
                demoAccountRequired:
                  type: boolean
                notes:
                  type: string
              type: object
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - appStoreReviewDetails
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: AppStoreReviewDetailCreateRequest
      type: object
    AppStoreReviewDetailResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreReviewDetail"
        included:
          items:
            $ref: "#/components/schemas/AppStoreReviewAttachment"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreReviewDetailResponse
      type: object
    AppStoreReviewDetailUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                contactEmail:
                  type: string
                contactFirstName:
                  type: string
                contactLastName:
                  type: string
                contactPhone:
                  type: string
                demoAccountName:
                  type: string
                demoAccountPassword:
                  type: string
                demoAccountRequired:
                  type: boolean
                notes:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - appStoreReviewDetails
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppStoreReviewDetailUpdateRequest
      type: object
    AppStoreVersion:
      properties:
        attributes:
          properties:
            appStoreState:
              $ref: "#/components/schemas/AppStoreVersionState"
            copyright:
              type: string
            createdDate:
              format: date-time
              type: string
            downloadable:
              type: boolean
            earliestReleaseDate:
              format: date-time
              type: string
            platform:
              $ref: "#/components/schemas/Platform"
            releaseType:
              enum:
                - MANUAL
                - AFTER_APPROVAL
                - SCHEDULED
              type: string
            usesIdfa:
              type: boolean
            versionString:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            ageRatingDeclaration:
              deprecated: true
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - ageRatingDeclarations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appStoreReviewDetail:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreReviewDetails
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appStoreVersionLocalizations:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appStoreVersionLocalizations
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersionPhasedRelease:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersionPhasedReleases
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appStoreVersionSubmission:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersionSubmissions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            build:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - builds
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            idfaDeclaration:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - idfaDeclarations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            routingAppCoverage:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - routingAppCoverages
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appStoreVersions
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreVersion
      type: object
    AppStoreVersionBuildLinkageRequest:
      properties:
        data:
          properties:
            id:
              type: string
            type:
              enum:
                - builds
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      type: object
    AppStoreVersionBuildLinkageResponse:
      properties:
        data:
          properties:
            id:
              type: string
            type:
              enum:
                - builds
              type: string
          required:
            - id
            - type
          type: object
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      type: object
    AppStoreVersionCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                copyright:
                  type: string
                earliestReleaseDate:
                  format: date-time
                  type: string
                platform:
                  $ref: "#/components/schemas/Platform"
                releaseType:
                  enum:
                    - MANUAL
                    - AFTER_APPROVAL
                    - SCHEDULED
                  type: string
                usesIdfa:
                  type: boolean
                versionString:
                  type: string
              required:
                - versionString
                - platform
              type: object
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
                build:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - builds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
              required:
                - app
              type: object
            type:
              enum:
                - appStoreVersions
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppStoreVersionCreateRequest
      type: object
    AppStoreVersionLocalization:
      properties:
        attributes:
          properties:
            description:
              type: string
            keywords:
              type: string
            locale:
              type: string
            marketingUrl:
              format: uri
              type: string
            promotionalText:
              type: string
            documentationUrl:
              format: uri
              type: string
            whatsNew:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appPreviewSets:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appPreviewSets
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appScreenshotSets:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - appScreenshotSets
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appStoreVersionLocalizations
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreVersionLocalization
      type: object
    AppStoreVersionLocalizationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                description:
                  type: string
                keywords:
                  type: string
                locale:
                  type: string
                marketingUrl:
                  format: uri
                  type: string
                promotionalText:
                  type: string
                documentationUrl:
                  format: uri
                  type: string
                whatsNew:
                  type: string
              required:
                - locale
              type: object
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - appStoreVersionLocalizations
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: AppStoreVersionLocalizationCreateRequest
      type: object
    AppStoreVersionLocalizationResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreVersionLocalization"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppScreenshotSet"
              - $ref: "#/components/schemas/AppPreviewSet"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreVersionLocalizationResponse
      type: object
    AppStoreVersionLocalizationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                description:
                  type: string
                keywords:
                  type: string
                marketingUrl:
                  format: uri
                  type: string
                promotionalText:
                  type: string
                documentationUrl:
                  format: uri
                  type: string
                whatsNew:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - appStoreVersionLocalizations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppStoreVersionLocalizationUpdateRequest
      type: object
    AppStoreVersionLocalizationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppStoreVersionLocalization"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AppScreenshotSet"
              - $ref: "#/components/schemas/AppPreviewSet"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppStoreVersionLocalizationsResponse
      type: object
    AppStoreVersionPhasedRelease:
      properties:
        attributes:
          properties:
            currentDayNumber:
              type: integer
            phasedReleaseState:
              $ref: "#/components/schemas/PhasedReleaseState"
            startDate:
              format: date-time
              type: string
            totalPauseDuration:
              type: integer
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - appStoreVersionPhasedReleases
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreVersionPhasedRelease
      type: object
    AppStoreVersionPhasedReleaseCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                phasedReleaseState:
                  $ref: "#/components/schemas/PhasedReleaseState"
              type: object
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - appStoreVersionPhasedReleases
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: AppStoreVersionPhasedReleaseCreateRequest
      type: object
    AppStoreVersionPhasedReleaseResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreVersionPhasedRelease"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreVersionPhasedReleaseResponse
      type: object
    AppStoreVersionPhasedReleaseUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                phasedReleaseState:
                  $ref: "#/components/schemas/PhasedReleaseState"
              type: object
            id:
              type: string
            type:
              enum:
                - appStoreVersionPhasedReleases
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppStoreVersionPhasedReleaseUpdateRequest
      type: object
    AppStoreVersionResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreVersion"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AgeRatingDeclaration"
              - $ref: "#/components/schemas/AppStoreVersionLocalization"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/AppStoreVersionPhasedRelease"
              - $ref: "#/components/schemas/RoutingAppCoverage"
              - $ref: "#/components/schemas/AppStoreReviewDetail"
              - $ref: "#/components/schemas/AppStoreVersionSubmission"
              - $ref: "#/components/schemas/IdfaDeclaration"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreVersionResponse
      type: object
    AppStoreVersionState:
      enum:
        - DEVELOPER_REMOVED_FROM_SALE
        - DEVELOPER_REJECTED
        - IN_REVIEW
        - INVALID_BINARY
        - METADATA_REJECTED
        - PENDING_APPLE_RELEASE
        - PENDING_CONTRACT
        - PENDING_DEVELOPER_RELEASE
        - PREPARE_FOR_SUBMISSION
        - PREORDER_READY_FOR_SALE
        - PROCESSING_FOR_APP_STORE
        - READY_FOR_SALE
        - REJECTED
        - REMOVED_FROM_SALE
        - WAITING_FOR_EXPORT_COMPLIANCE
        - WAITING_FOR_REVIEW
        - REPLACED_WITH_NEW_VERSION
      type: string
    AppStoreVersionSubmission:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - appStoreVersionSubmissions
          type: string
      required:
        - links
        - id
        - type
      title: AppStoreVersionSubmission
      type: object
    AppStoreVersionSubmissionCreateRequest:
      properties:
        data:
          properties:
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - appStoreVersionSubmissions
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: AppStoreVersionSubmissionCreateRequest
      type: object
    AppStoreVersionSubmissionResponse:
      properties:
        data:
          $ref: "#/components/schemas/AppStoreVersionSubmission"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: AppStoreVersionSubmissionResponse
      type: object
    AppStoreVersionUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                copyright:
                  type: string
                downloadable:
                  type: boolean
                earliestReleaseDate:
                  format: date-time
                  type: string
                releaseType:
                  enum:
                    - MANUAL
                    - AFTER_APPROVAL
                    - SCHEDULED
                  type: string
                usesIdfa:
                  type: boolean
                versionString:
                  type: string
              type: object
            id:
              type: string
            relationships:
              properties:
                build:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - builds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
              type: object
            type:
              enum:
                - appStoreVersions
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppStoreVersionUpdateRequest
      type: object
    AppStoreVersionsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AppStoreVersion"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/AgeRatingDeclaration"
              - $ref: "#/components/schemas/AppStoreVersionLocalization"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/AppStoreVersionPhasedRelease"
              - $ref: "#/components/schemas/RoutingAppCoverage"
              - $ref: "#/components/schemas/AppStoreReviewDetail"
              - $ref: "#/components/schemas/AppStoreVersionSubmission"
              - $ref: "#/components/schemas/IdfaDeclaration"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppStoreVersionsResponse
      type: object
    AppUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                availableInNewTerritories:
                  type: boolean
                bundleId:
                  type: string
                contentRightsDeclaration:
                  enum:
                    - DOES_NOT_USE_THIRD_PARTY_CONTENT
                    - USES_THIRD_PARTY_CONTENT
                  type: string
                primaryLocale:
                  type: string
              type: object
            id:
              type: string
            relationships:
              properties:
                availableTerritories:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - territories
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
                prices:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - appPrices
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              type: object
            type:
              enum:
                - apps
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: AppUpdateRequest
      type: object
    AppsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/App"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/BetaGroup"
              - $ref: "#/components/schemas/AppStoreVersion"
              - $ref: "#/components/schemas/PrereleaseVersion"
              - $ref: "#/components/schemas/BetaAppLocalization"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/BetaLicenseAgreement"
              - $ref: "#/components/schemas/BetaAppReviewDetail"
              - $ref: "#/components/schemas/AppInfo"
              - $ref: "#/components/schemas/EndUserLicenseAgreement"
              - $ref: "#/components/schemas/AppPreOrder"
              - $ref: "#/components/schemas/AppPrice"
              - $ref: "#/components/schemas/Territory"
              - $ref: "#/components/schemas/InAppPurchase"
              - $ref: "#/components/schemas/GameCenterEnabledVersion"
              - $ref: "#/components/schemas/PerfPowerMetric"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: AppsResponse
      type: object
    BetaAppLocalization:
      properties:
        attributes:
          properties:
            description:
              type: string
            feedbackEmail:
              type: string
            locale:
              type: string
            marketingUrl:
              type: string
            privacyPolicyUrl:
              type: string
            tvOsPrivacyPolicy:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - betaAppLocalizations
          type: string
      required:
        - links
        - id
        - type
      title: BetaAppLocalization
      type: object
    BetaAppLocalizationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                description:
                  type: string
                feedbackEmail:
                  type: string
                locale:
                  type: string
                marketingUrl:
                  type: string
                privacyPolicyUrl:
                  type: string
                tvOsPrivacyPolicy:
                  type: string
              required:
                - locale
              type: object
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - app
              type: object
            type:
              enum:
                - betaAppLocalizations
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: BetaAppLocalizationCreateRequest
      type: object
    BetaAppLocalizationResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaAppLocalization"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaAppLocalizationResponse
      type: object
    BetaAppLocalizationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                description:
                  type: string
                feedbackEmail:
                  type: string
                marketingUrl:
                  type: string
                privacyPolicyUrl:
                  type: string
                tvOsPrivacyPolicy:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - betaAppLocalizations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BetaAppLocalizationUpdateRequest
      type: object
    BetaAppLocalizationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaAppLocalization"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaAppLocalizationsResponse
      type: object
    BetaAppReviewDetail:
      properties:
        attributes:
          properties:
            contactEmail:
              type: string
            contactFirstName:
              type: string
            contactLastName:
              type: string
            contactPhone:
              type: string
            demoAccountName:
              type: string
            demoAccountPassword:
              type: string
            demoAccountRequired:
              type: boolean
            notes:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - betaAppReviewDetails
          type: string
      required:
        - links
        - id
        - type
      title: BetaAppReviewDetail
      type: object
    BetaAppReviewDetailResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaAppReviewDetail"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaAppReviewDetailResponse
      type: object
    BetaAppReviewDetailUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                contactEmail:
                  type: string
                contactFirstName:
                  type: string
                contactLastName:
                  type: string
                contactPhone:
                  type: string
                demoAccountName:
                  type: string
                demoAccountPassword:
                  type: string
                demoAccountRequired:
                  type: boolean
                notes:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - betaAppReviewDetails
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BetaAppReviewDetailUpdateRequest
      type: object
    BetaAppReviewDetailsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaAppReviewDetail"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaAppReviewDetailsResponse
      type: object
    BetaAppReviewSubmission:
      properties:
        attributes:
          properties:
            betaReviewState:
              $ref: "#/components/schemas/BetaReviewState"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            build:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - builds
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - betaAppReviewSubmissions
          type: string
      required:
        - links
        - id
        - type
      title: BetaAppReviewSubmission
      type: object
    BetaAppReviewSubmissionCreateRequest:
      properties:
        data:
          properties:
            relationships:
              properties:
                build:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - builds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - build
              type: object
            type:
              enum:
                - betaAppReviewSubmissions
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: BetaAppReviewSubmissionCreateRequest
      type: object
    BetaAppReviewSubmissionResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaAppReviewSubmission"
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaAppReviewSubmissionResponse
      type: object
    BetaAppReviewSubmissionsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaAppReviewSubmission"
          type: array
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaAppReviewSubmissionsResponse
      type: object
    BetaBuildLocalization:
      properties:
        attributes:
          properties:
            locale:
              type: string
            whatsNew:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            build:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - builds
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - betaBuildLocalizations
          type: string
      required:
        - links
        - id
        - type
      title: BetaBuildLocalization
      type: object
    BetaBuildLocalizationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                locale:
                  type: string
                whatsNew:
                  type: string
              required:
                - locale
              type: object
            relationships:
              properties:
                build:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - builds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - build
              type: object
            type:
              enum:
                - betaBuildLocalizations
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: BetaBuildLocalizationCreateRequest
      type: object
    BetaBuildLocalizationResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaBuildLocalization"
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaBuildLocalizationResponse
      type: object
    BetaBuildLocalizationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                whatsNew:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - betaBuildLocalizations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BetaBuildLocalizationUpdateRequest
      type: object
    BetaBuildLocalizationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaBuildLocalization"
          type: array
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaBuildLocalizationsResponse
      type: object
    BetaGroup:
      properties:
        attributes:
          properties:
            createdDate:
              format: date-time
              type: string
            feedbackEnabled:
              type: boolean
            isInternalGroup:
              type: boolean
            name:
              type: string
            publicLink:
              type: string
            publicLinkEnabled:
              type: boolean
            publicLinkId:
              type: string
            publicLinkLimit:
              type: integer
            publicLinkLimitEnabled:
              type: boolean
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            betaTesters:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaTesters
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            builds:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - builds
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - betaGroups
          type: string
      required:
        - links
        - id
        - type
      title: BetaGroup
      type: object
    BetaGroupBetaTestersLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaTesters
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BetaGroupBetaTestersLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaTesters
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BetaGroupBuildsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - builds
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BetaGroupBuildsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - builds
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BetaGroupCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                feedbackEnabled:
                  type: boolean
                name:
                  type: string
                publicLinkEnabled:
                  type: boolean
                publicLinkLimit:
                  type: integer
                publicLinkLimitEnabled:
                  type: boolean
              required:
                - name
              type: object
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
                betaTesters:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - betaTesters
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
                builds:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - builds
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              required:
                - app
              type: object
            type:
              enum:
                - betaGroups
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: BetaGroupCreateRequest
      type: object
    BetaGroupResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaGroup"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/BetaTester"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaGroupResponse
      type: object
    BetaGroupUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                feedbackEnabled:
                  type: boolean
                name:
                  type: string
                publicLinkEnabled:
                  type: boolean
                publicLinkLimit:
                  type: integer
                publicLinkLimitEnabled:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - betaGroups
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BetaGroupUpdateRequest
      type: object
    BetaGroupsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaGroup"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/BetaTester"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaGroupsResponse
      type: object
    BetaInviteType:
      enum:
        - EMAIL
        - PUBLIC_LINK
      type: string
    BetaLicenseAgreement:
      properties:
        attributes:
          properties:
            agreementText:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - betaLicenseAgreements
          type: string
      required:
        - links
        - id
        - type
      title: BetaLicenseAgreement
      type: object
    BetaLicenseAgreementResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaLicenseAgreement"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaLicenseAgreementResponse
      type: object
    BetaLicenseAgreementUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                agreementText:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - betaLicenseAgreements
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BetaLicenseAgreementUpdateRequest
      type: object
    BetaLicenseAgreementsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaLicenseAgreement"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaLicenseAgreementsResponse
      type: object
    BetaReviewState:
      enum:
        - WAITING_FOR_REVIEW
        - IN_REVIEW
        - REJECTED
        - APPROVED
      type: string
    BetaTester:
      properties:
        attributes:
          properties:
            email:
              format: email
              type: string
            firstName:
              type: string
            inviteType:
              $ref: "#/components/schemas/BetaInviteType"
            lastName:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            apps:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - apps
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            betaGroups:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaGroups
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            builds:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - builds
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - betaTesters
          type: string
      required:
        - links
        - id
        - type
      title: BetaTester
      type: object
    BetaTesterAppsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - apps
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BetaTesterAppsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - apps
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BetaTesterBetaGroupsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaGroups
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BetaTesterBetaGroupsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaGroups
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BetaTesterBuildsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - builds
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BetaTesterBuildsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - builds
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BetaTesterCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                email:
                  format: email
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
              required:
                - email
              type: object
            relationships:
              properties:
                betaGroups:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - betaGroups
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
                builds:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - builds
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              type: object
            type:
              enum:
                - betaTesters
              type: string
          required:
            - attributes
            - type
          type: object
      required:
        - data
      title: BetaTesterCreateRequest
      type: object
    BetaTesterInvitation:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - betaTesterInvitations
          type: string
      required:
        - links
        - id
        - type
      title: BetaTesterInvitation
      type: object
    BetaTesterInvitationCreateRequest:
      properties:
        data:
          properties:
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
                betaTester:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - betaTesters
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - app
                - betaTester
              type: object
            type:
              enum:
                - betaTesterInvitations
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: BetaTesterInvitationCreateRequest
      type: object
    BetaTesterInvitationResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaTesterInvitation"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaTesterInvitationResponse
      type: object
    BetaTesterResponse:
      properties:
        data:
          $ref: "#/components/schemas/BetaTester"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/BetaGroup"
              - $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BetaTesterResponse
      type: object
    BetaTestersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BetaTester"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/BetaGroup"
              - $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BetaTestersResponse
      type: object
    BrazilAgeRating:
      enum:
        - L
        - TEN
        - TWELVE
        - FOURTEEN
        - SIXTEEN
        - EIGHTEEN
      type: string
    Build:
      properties:
        attributes:
          properties:
            expirationDate:
              format: date-time
              type: string
            expired:
              type: boolean
            iconAssetToken:
              $ref: "#/components/schemas/ImageAsset"
            minOsVersion:
              type: string
            processingState:
              enum:
                - PROCESSING
                - FAILED
                - INVALID
                - VALID
              type: string
            uploadedDate:
              format: date-time
              type: string
            usesNonExemptEncryption:
              type: boolean
            version:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appEncryptionDeclaration:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appEncryptionDeclarations
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            betaAppReviewSubmission:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - betaAppReviewSubmissions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            betaBuildLocalizations:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaBuildLocalizations
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            buildBetaDetail:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - buildBetaDetails
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            icons:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - buildIcons
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            individualTesters:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - betaTesters
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            preReleaseVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - preReleaseVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - builds
          type: string
      required:
        - links
        - id
        - type
      title: Build
      type: object
    BuildAppEncryptionDeclarationLinkageRequest:
      properties:
        data:
          properties:
            id:
              type: string
            type:
              enum:
                - appEncryptionDeclarations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      type: object
    BuildAppEncryptionDeclarationLinkageResponse:
      properties:
        data:
          properties:
            id:
              type: string
            type:
              enum:
                - appEncryptionDeclarations
              type: string
          required:
            - id
            - type
          type: object
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      type: object
    BuildBetaDetail:
      properties:
        attributes:
          properties:
            autoNotifyEnabled:
              type: boolean
            externalBuildState:
              $ref: "#/components/schemas/ExternalBetaState"
            internalBuildState:
              $ref: "#/components/schemas/InternalBetaState"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            build:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - builds
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - buildBetaDetails
          type: string
      required:
        - links
        - id
        - type
      title: BuildBetaDetail
      type: object
    BuildBetaDetailResponse:
      properties:
        data:
          $ref: "#/components/schemas/BuildBetaDetail"
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BuildBetaDetailResponse
      type: object
    BuildBetaDetailUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                autoNotifyEnabled:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - buildBetaDetails
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BuildBetaDetailUpdateRequest
      type: object
    BuildBetaDetailsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BuildBetaDetail"
          type: array
        included:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BuildBetaDetailsResponse
      type: object
    BuildBetaGroupsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaGroups
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BuildBetaNotification:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - buildBetaNotifications
          type: string
      required:
        - links
        - id
        - type
      title: BuildBetaNotification
      type: object
    BuildBetaNotificationCreateRequest:
      properties:
        data:
          properties:
            relationships:
              properties:
                build:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - builds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - build
              type: object
            type:
              enum:
                - buildBetaNotifications
              type: string
          required:
            - relationships
            - type
          type: object
      required:
        - data
      title: BuildBetaNotificationCreateRequest
      type: object
    BuildBetaNotificationResponse:
      properties:
        data:
          $ref: "#/components/schemas/BuildBetaNotification"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BuildBetaNotificationResponse
      type: object
    BuildIcon:
      properties:
        attributes:
          properties:
            iconAsset:
              $ref: "#/components/schemas/ImageAsset"
            iconType:
              $ref: "#/components/schemas/IconAssetType"
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - buildIcons
          type: string
      required:
        - links
        - id
        - type
      title: BuildIcon
      type: object
    BuildIconsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BuildIcon"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BuildIconsResponse
      type: object
    BuildIndividualTestersLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaTesters
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    BuildIndividualTestersLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - betaTesters
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    BuildResponse:
      properties:
        data:
          $ref: "#/components/schemas/Build"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/PrereleaseVersion"
              - $ref: "#/components/schemas/BetaTester"
              - $ref: "#/components/schemas/BetaBuildLocalization"
              - $ref: "#/components/schemas/AppEncryptionDeclaration"
              - $ref: "#/components/schemas/BetaAppReviewSubmission"
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/BuildBetaDetail"
              - $ref: "#/components/schemas/AppStoreVersion"
              - $ref: "#/components/schemas/BuildIcon"
              - $ref: "#/components/schemas/PerfPowerMetric"
              - $ref: "#/components/schemas/DiagnosticSignature"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BuildResponse
      type: object
    BuildUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                expired:
                  type: boolean
                usesNonExemptEncryption:
                  type: boolean
              type: object
            id:
              type: string
            relationships:
              properties:
                appEncryptionDeclaration:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appEncryptionDeclarations
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  type: object
              type: object
            type:
              enum:
                - builds
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BuildUpdateRequest
      type: object
    BuildsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Build"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/PrereleaseVersion"
              - $ref: "#/components/schemas/BetaTester"
              - $ref: "#/components/schemas/BetaBuildLocalization"
              - $ref: "#/components/schemas/AppEncryptionDeclaration"
              - $ref: "#/components/schemas/BetaAppReviewSubmission"
              - $ref: "#/components/schemas/App"
              - $ref: "#/components/schemas/BuildBetaDetail"
              - $ref: "#/components/schemas/AppStoreVersion"
              - $ref: "#/components/schemas/BuildIcon"
              - $ref: "#/components/schemas/PerfPowerMetric"
              - $ref: "#/components/schemas/DiagnosticSignature"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BuildsResponse
      type: object
    BundleId:
      properties:
        attributes:
          properties:
            identifier:
              type: string
            name:
              type: string
            platform:
              $ref: "#/components/schemas/BundleIdPlatform"
            seedId:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            bundleIdCapabilities:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - bundleIdCapabilities
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            profiles:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - profiles
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - bundleIds
          type: string
      required:
        - links
        - id
        - type
      title: BundleId
      type: object
    BundleIdCapabilitiesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BundleIdCapability"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BundleIdCapabilitiesResponse
      type: object
    BundleIdCapability:
      properties:
        attributes:
          properties:
            capabilityType:
              $ref: "#/components/schemas/CapabilityType"
            settings:
              items:
                $ref: "#/components/schemas/CapabilitySetting"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - bundleIdCapabilities
          type: string
      required:
        - links
        - id
        - type
      title: BundleIdCapability
      type: object
    BundleIdCapabilityCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                capabilityType:
                  $ref: "#/components/schemas/CapabilityType"
                settings:
                  items:
                    $ref: "#/components/schemas/CapabilitySetting"
                  type: array
              required:
                - capabilityType
              type: object
            relationships:
              properties:
                bundleId:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - bundleIds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - bundleId
              type: object
            type:
              enum:
                - bundleIdCapabilities
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: BundleIdCapabilityCreateRequest
      type: object
    BundleIdCapabilityResponse:
      properties:
        data:
          $ref: "#/components/schemas/BundleIdCapability"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BundleIdCapabilityResponse
      type: object
    BundleIdCapabilityUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                capabilityType:
                  $ref: "#/components/schemas/CapabilityType"
                settings:
                  items:
                    $ref: "#/components/schemas/CapabilitySetting"
                  type: array
              type: object
            id:
              type: string
            type:
              enum:
                - bundleIdCapabilities
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BundleIdCapabilityUpdateRequest
      type: object
    BundleIdCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                identifier:
                  type: string
                name:
                  type: string
                platform:
                  $ref: "#/components/schemas/BundleIdPlatform"
                seedId:
                  type: string
              required:
                - identifier
                - name
                - platform
              type: object
            type:
              enum:
                - bundleIds
              type: string
          required:
            - attributes
            - type
          type: object
      required:
        - data
      title: BundleIdCreateRequest
      type: object
    BundleIdPlatform:
      enum:
        - IOS
        - MAC_OS
      type: string
    BundleIdResponse:
      properties:
        data:
          $ref: "#/components/schemas/BundleId"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/Profile"
              - $ref: "#/components/schemas/BundleIdCapability"
              - $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: BundleIdResponse
      type: object
    BundleIdUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                name:
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - bundleIds
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: BundleIdUpdateRequest
      type: object
    BundleIdsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BundleId"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/Profile"
              - $ref: "#/components/schemas/BundleIdCapability"
              - $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: BundleIdsResponse
      type: object
    CapabilityOption:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        enabledByDefault:
          type: boolean
        key:
          enum:
            - XCODE_5
            - XCODE_6
            - COMPLETE_PROTECTION
            - PROTECTED_UNLESS_OPEN
            - PROTECTED_UNTIL_FIRST_USER_AUTH
            - PRIMARY_APP_CONSENT
          type: string
        name:
          type: string
        supportsWildcard:
          type: boolean
      type: object
    CapabilitySetting:
      properties:
        allowedInstances:
          enum:
            - ENTRY
            - SINGLE
            - MULTIPLE
          type: string
        description:
          type: string
        enabledByDefault:
          type: boolean
        key:
          enum:
            - ICLOUD_VERSION
            - DATA_PROTECTION_PERMISSION_LEVEL
            - APPLE_ID_AUTH_APP_CONSENT
          type: string
        minInstances:
          type: integer
        name:
          type: string
        options:
          items:
            $ref: "#/components/schemas/CapabilityOption"
          type: array
        visible:
          type: boolean
      type: object
    CapabilityType:
      enum:
        - ICLOUD
        - IN_APP_PURCHASE
        - GAME_CENTER
        - PUSH_NOTIFICATIONS
        - WALLET
        - INTER_APP_AUDIO
        - MAPS
        - ASSOCIATED_DOMAINS
        - PERSONAL_VPN
        - APP_GROUPS
        - HEALTHKIT
        - HOMEKIT
        - WIRELESS_ACCESSORY_CONFIGURATION
        - APPLE_PAY
        - DATA_PROTECTION
        - SIRIKIT
        - NETWORK_EXTENSIONS
        - MULTIPATH
        - HOT_SPOT
        - NFC_TAG_READING
        - CLASSKIT
        - AUTOFILL_CREDENTIAL_PROVIDER
        - ACCESS_WIFI_INFORMATION
        - NETWORK_CUSTOM_PROTOCOL
        - COREMEDIA_HLS_LOW_LATENCY
        - SYSTEM_EXTENSION_INSTALL
        - USER_MANAGEMENT
        - APPLE_ID_AUTH
      type: string
    Certificate:
      properties:
        attributes:
          properties:
            certificateContent:
              type: string
            certificateType:
              $ref: "#/components/schemas/CertificateType"
            displayName:
              type: string
            expirationDate:
              format: date-time
              type: string
            name:
              type: string
            platform:
              $ref: "#/components/schemas/BundleIdPlatform"
            serialNumber:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - certificates
          type: string
      required:
        - links
        - id
        - type
      title: Certificate
      type: object
    CertificateCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                certificateType:
                  $ref: "#/components/schemas/CertificateType"
                csrContent:
                  type: string
              required:
                - csrContent
                - certificateType
              type: object
            type:
              enum:
                - certificates
              type: string
          required:
            - attributes
            - type
          type: object
      required:
        - data
      title: CertificateCreateRequest
      type: object
    CertificateResponse:
      properties:
        data:
          $ref: "#/components/schemas/Certificate"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: CertificateResponse
      type: object
    CertificateType:
      enum:
        - IOS_DEVELOPMENT
        - IOS_DISTRIBUTION
        - MAC_APP_DISTRIBUTION
        - MAC_INSTALLER_DISTRIBUTION
        - MAC_APP_DEVELOPMENT
        - DEVELOPER_ID_KEXT
        - DEVELOPER_ID_APPLICATION
        - DEVELOPMENT
        - DISTRIBUTION
      type: string
    CertificatesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: CertificatesResponse
      type: object
    Device:
      properties:
        attributes:
          properties:
            addedDate:
              format: date-time
              type: string
            deviceClass:
              enum:
                - APPLE_WATCH
                - IPAD
                - IPHONE
                - IPOD
                - APPLE_TV
                - MAC
              type: string
            model:
              type: string
            name:
              type: string
            platform:
              $ref: "#/components/schemas/BundleIdPlatform"
            status:
              enum:
                - ENABLED
                - DISABLED
              type: string
            udid:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - devices
          type: string
      required:
        - links
        - id
        - type
      title: Device
      type: object
    DeviceCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                name:
                  type: string
                platform:
                  $ref: "#/components/schemas/BundleIdPlatform"
                udid:
                  type: string
              required:
                - name
                - udid
                - platform
              type: object
            type:
              enum:
                - devices
              type: string
          required:
            - attributes
            - type
          type: object
      required:
        - data
      title: DeviceCreateRequest
      type: object
    DeviceResponse:
      properties:
        data:
          $ref: "#/components/schemas/Device"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: DeviceResponse
      type: object
    DeviceUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                name:
                  type: string
                status:
                  enum:
                    - ENABLED
                    - DISABLED
                  type: string
              type: object
            id:
              type: string
            type:
              enum:
                - devices
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: DeviceUpdateRequest
      type: object
    DevicesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Device"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: DevicesResponse
      type: object
    DiagnosticLog:
      properties:
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - diagnosticLogs
          type: string
      required:
        - links
        - id
        - type
      title: DiagnosticLog
      type: object
    DiagnosticLogsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/DiagnosticLog"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: DiagnosticLogsResponse
      type: object
    DiagnosticSignature:
      properties:
        attributes:
          properties:
            diagnosticType:
              enum:
                - DISK_WRITES
              type: string
            signature:
              type: string
            weight:
              type: number
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - diagnosticSignatures
          type: string
      required:
        - links
        - id
        - type
      title: DiagnosticSignature
      type: object
    DiagnosticSignaturesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/DiagnosticSignature"
          type: array
        included:
          items:
            $ref: "#/components/schemas/DiagnosticLog"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: DiagnosticSignaturesResponse
      type: object
    DocumentLinks:
      properties:
        self:
          format: uri-reference
          type: string
      required:
        - self
      type: object
    EndUserLicenseAgreement:
      properties:
        attributes:
          properties:
            agreementText:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            territories:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - territories
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - endUserLicenseAgreements
          type: string
      required:
        - links
        - id
        - type
      title: EndUserLicenseAgreement
      type: object
    EndUserLicenseAgreementCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                agreementText:
                  type: string
              required:
                - agreementText
              type: object
            relationships:
              properties:
                app:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - apps
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
                territories:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - territories
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  required:
                    - data
                  type: object
              required:
                - app
                - territories
              type: object
            type:
              enum:
                - endUserLicenseAgreements
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: EndUserLicenseAgreementCreateRequest
      type: object
    EndUserLicenseAgreementResponse:
      properties:
        data:
          $ref: "#/components/schemas/EndUserLicenseAgreement"
        included:
          items:
            $ref: "#/components/schemas/Territory"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: EndUserLicenseAgreementResponse
      type: object
    EndUserLicenseAgreementUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                agreementText:
                  type: string
              type: object
            id:
              type: string
            relationships:
              properties:
                territories:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - territories
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              type: object
            type:
              enum:
                - endUserLicenseAgreements
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: EndUserLicenseAgreementUpdateRequest
      type: object
    ErrorResponse:
      properties:
        errors:
          items:
            properties:
              code:
                type: string
              detail:
                type: string
              id:
                type: string
              source:
                oneOf:
                  - properties:
                      pointer:
                        type: string
                    title: JsonPointer
                    type: object
                  - properties:
                      parameter:
                        type: string
                    title: Parameter
                    type: object
              status:
                type: string
              title:
                type: string
            required:
              - code
              - detail
              - title
              - status
            type: object
          type: array
      type: object
    ExternalBetaState:
      enum:
        - PROCESSING
        - PROCESSING_EXCEPTION
        - MISSING_EXPORT_COMPLIANCE
        - READY_FOR_BETA_TESTING
        - IN_BETA_TESTING
        - EXPIRED
        - READY_FOR_BETA_SUBMISSION
        - IN_EXPORT_COMPLIANCE_REVIEW
        - WAITING_FOR_BETA_REVIEW
        - IN_BETA_REVIEW
        - BETA_REJECTED
        - BETA_APPROVED
      type: string
    GameCenterEnabledVersion:
      properties:
        attributes:
          properties:
            iconAsset:
              $ref: "#/components/schemas/ImageAsset"
            platform:
              $ref: "#/components/schemas/Platform"
            versionString:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            compatibleVersions:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - gameCenterEnabledVersions
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - gameCenterEnabledVersions
          type: string
      required:
        - links
        - id
        - type
      title: GameCenterEnabledVersion
      type: object
    GameCenterEnabledVersionCompatibleVersionsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - gameCenterEnabledVersions
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    GameCenterEnabledVersionCompatibleVersionsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - gameCenterEnabledVersions
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    GameCenterEnabledVersionsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/GameCenterEnabledVersion"
          type: array
        included:
          items:
            $ref: "#/components/schemas/GameCenterEnabledVersion"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: GameCenterEnabledVersionsResponse
      type: object
    IconAssetType:
      enum:
        - APP_STORE
        - MESSAGES_APP_STORE
        - WATCH_APP_STORE
        - TV_OS_HOME_SCREEN
        - TV_OS_TOP_SHELF
      type: string
    IdfaDeclaration:
      properties:
        attributes:
          properties:
            attributesActionWithPreviousAd:
              type: boolean
            attributesAppInstallationToPreviousAd:
              type: boolean
            honorsLimitedAdTracking:
              type: boolean
            servesAds:
              type: boolean
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - idfaDeclarations
          type: string
      required:
        - links
        - id
        - type
      title: IdfaDeclaration
      type: object
    IdfaDeclarationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                attributesActionWithPreviousAd:
                  type: boolean
                attributesAppInstallationToPreviousAd:
                  type: boolean
                honorsLimitedAdTracking:
                  type: boolean
                servesAds:
                  type: boolean
              required:
                - attributesAppInstallationToPreviousAd
                - servesAds
                - attributesActionWithPreviousAd
                - honorsLimitedAdTracking
              type: object
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - idfaDeclarations
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: IdfaDeclarationCreateRequest
      type: object
    IdfaDeclarationResponse:
      properties:
        data:
          $ref: "#/components/schemas/IdfaDeclaration"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: IdfaDeclarationResponse
      type: object
    IdfaDeclarationUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                attributesActionWithPreviousAd:
                  type: boolean
                attributesAppInstallationToPreviousAd:
                  type: boolean
                honorsLimitedAdTracking:
                  type: boolean
                servesAds:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - idfaDeclarations
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: IdfaDeclarationUpdateRequest
      type: object
    ImageAsset:
      properties:
        height:
          type: integer
        templateUrl:
          type: string
        width:
          type: integer
      type: object
    InAppPurchase:
      properties:
        attributes:
          properties:
            inAppPurchaseType:
              enum:
                - AUTOMATICALLY_RENEWABLE_SUBSCRIPTION
                - NON_CONSUMABLE
                - CONSUMABLE
                - NON_RENEWING_SUBSCRIPTION
                - FREE_SUBSCRIPTION
              type: string
            productId:
              type: string
            referenceName:
              type: string
            state:
              enum:
                - CREATED
                - DEVELOPER_SIGNED_OFF
                - DEVELOPER_ACTION_NEEDED
                - DELETION_IN_PROGRESS
                - APPROVED
                - DELETED
                - REMOVED_FROM_SALE
                - DEVELOPER_REMOVED_FROM_SALE
                - WAITING_FOR_UPLOAD
                - PROCESSING_CONTENT
                - REPLACED
                - REJECTED
                - WAITING_FOR_SCREENSHOT
                - PREPARE_FOR_SUBMISSION
                - MISSING_METADATA
                - READY_TO_SUBMIT
                - WAITING_FOR_REVIEW
                - IN_REVIEW
                - PENDING_DEVELOPER_RELEASE
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            apps:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - apps
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - inAppPurchases
          type: string
      required:
        - links
        - id
        - type
      title: InAppPurchase
      type: object
    InAppPurchaseResponse:
      properties:
        data:
          $ref: "#/components/schemas/InAppPurchase"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: InAppPurchaseResponse
      type: object
    InAppPurchasesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/InAppPurchase"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: InAppPurchasesResponse
      type: object
    InternalBetaState:
      enum:
        - PROCESSING
        - PROCESSING_EXCEPTION
        - MISSING_EXPORT_COMPLIANCE
        - READY_FOR_BETA_TESTING
        - IN_BETA_TESTING
        - EXPIRED
        - IN_EXPORT_COMPLIANCE_REVIEW
      type: string
    KidsAgeBand:
      enum:
        - FIVE_AND_UNDER
        - SIX_TO_EIGHT
        - NINE_TO_ELEVEN
      type: string
    PagedDocumentLinks:
      properties:
        first:
          format: uri-reference
          type: string
        next:
          format: uri-reference
          type: string
        self:
          format: uri-reference
          type: string
      required:
        - self
      type: object
    PagingInformation:
      properties:
        paging:
          properties:
            limit:
              type: integer
            total:
              type: integer
          required:
            - total
            - limit
          type: object
      required:
        - paging
      type: object
    PerfPowerMetric:
      properties:
        attributes:
          properties:
            deviceType:
              type: string
            metricType:
              enum:
                - DISK
                - HANG
                - BATTERY
                - LAUNCH
                - MEMORY
                - ANIMATION
                - TERMINATION
              type: string
            platform:
              enum:
                - IOS
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - perfPowerMetrics
          type: string
      required:
        - links
        - id
        - type
      title: PerfPowerMetric
      type: object
    PerfPowerMetricsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/PerfPowerMetric"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: PerfPowerMetricsResponse
      type: object
    PhasedReleaseState:
      enum:
        - INACTIVE
        - ACTIVE
        - PAUSED
        - COMPLETE
      type: string
    Platform:
      enum:
        - IOS
        - MAC_OS
        - TV_OS
      type: string
    PreReleaseVersionsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/PrereleaseVersion"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: PreReleaseVersionsResponse
      type: object
    PrereleaseVersion:
      properties:
        attributes:
          properties:
            platform:
              $ref: "#/components/schemas/Platform"
            version:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            app:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - apps
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            builds:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - builds
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - preReleaseVersions
          type: string
      required:
        - links
        - id
        - type
      title: PrereleaseVersion
      type: object
    PrereleaseVersionResponse:
      properties:
        data:
          $ref: "#/components/schemas/PrereleaseVersion"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/Build"
              - $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: PrereleaseVersionResponse
      type: object
    PreviewType:
      enum:
        - IPHONE_65
        - IPHONE_58
        - IPHONE_55
        - IPHONE_47
        - IPHONE_40
        - IPHONE_35
        - IPAD_PRO_3GEN_129
        - IPAD_PRO_3GEN_11
        - IPAD_PRO_129
        - IPAD_105
        - IPAD_97
        - DESKTOP
        - WATCH_SERIES_4
        - WATCH_SERIES_3
        - APPLE_TV
      type: string
    Profile:
      properties:
        attributes:
          properties:
            createdDate:
              format: date-time
              type: string
            expirationDate:
              format: date-time
              type: string
            name:
              type: string
            platform:
              $ref: "#/components/schemas/BundleIdPlatform"
            profileContent:
              type: string
            profileState:
              enum:
                - ACTIVE
                - INVALID
              type: string
            profileType:
              enum:
                - IOS_APP_DEVELOPMENT
                - IOS_APP_STORE
                - IOS_APP_ADHOC
                - IOS_APP_INHOUSE
                - MAC_APP_DEVELOPMENT
                - MAC_APP_STORE
                - MAC_APP_DIRECT
                - TVOS_APP_DEVELOPMENT
                - TVOS_APP_STORE
                - TVOS_APP_ADHOC
                - TVOS_APP_INHOUSE
                - MAC_CATALYST_APP_DEVELOPMENT
                - MAC_CATALYST_APP_STORE
                - MAC_CATALYST_APP_DIRECT
              type: string
            uuid:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            bundleId:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - bundleIds
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
            certificates:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - certificates
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
            devices:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - devices
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - profiles
          type: string
      required:
        - links
        - id
        - type
      title: Profile
      type: object
    ProfileCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                name:
                  type: string
                profileType:
                  enum:
                    - IOS_APP_DEVELOPMENT
                    - IOS_APP_STORE
                    - IOS_APP_ADHOC
                    - IOS_APP_INHOUSE
                    - MAC_APP_DEVELOPMENT
                    - MAC_APP_STORE
                    - MAC_APP_DIRECT
                    - TVOS_APP_DEVELOPMENT
                    - TVOS_APP_STORE
                    - TVOS_APP_ADHOC
                    - TVOS_APP_INHOUSE
                    - MAC_CATALYST_APP_DEVELOPMENT
                    - MAC_CATALYST_APP_STORE
                    - MAC_CATALYST_APP_DIRECT
                  type: string
              required:
                - profileType
                - name
              type: object
            relationships:
              properties:
                bundleId:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - bundleIds
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
                certificates:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - certificates
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  required:
                    - data
                  type: object
                devices:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - devices
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              required:
                - certificates
                - bundleId
              type: object
            type:
              enum:
                - profiles
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: ProfileCreateRequest
      type: object
    ProfileResponse:
      properties:
        data:
          $ref: "#/components/schemas/Profile"
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/BundleId"
              - $ref: "#/components/schemas/Device"
              - $ref: "#/components/schemas/Certificate"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: ProfileResponse
      type: object
    ProfilesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Profile"
          type: array
        included:
          items:
            oneOf:
              - $ref: "#/components/schemas/BundleId"
              - $ref: "#/components/schemas/Device"
              - $ref: "#/components/schemas/Certificate"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: ProfilesResponse
      type: object
    ResourceLinks:
      properties:
        self:
          format: uri-reference
          type: string
      required:
        - self
      type: object
    RoutingAppCoverage:
      properties:
        attributes:
          properties:
            assetDeliveryState:
              $ref: "#/components/schemas/AppMediaAssetState"
            fileName:
              type: string
            fileSize:
              type: integer
            sourceFileChecksum:
              type: string
            uploadOperations:
              items:
                $ref: "#/components/schemas/UploadOperation"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            appStoreVersion:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      enum:
                        - appStoreVersions
                      type: string
                  required:
                    - id
                    - type
                  type: object
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
              type: object
          type: object
        type:
          enum:
            - routingAppCoverages
          type: string
      required:
        - links
        - id
        - type
      title: RoutingAppCoverage
      type: object
    RoutingAppCoverageCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                fileName:
                  type: string
                fileSize:
                  type: integer
              required:
                - fileName
                - fileSize
              type: object
            relationships:
              properties:
                appStoreVersion:
                  properties:
                    data:
                      properties:
                        id:
                          type: string
                        type:
                          enum:
                            - appStoreVersions
                          type: string
                      required:
                        - id
                        - type
                      type: object
                  required:
                    - data
                  type: object
              required:
                - appStoreVersion
              type: object
            type:
              enum:
                - routingAppCoverages
              type: string
          required:
            - relationships
            - attributes
            - type
          type: object
      required:
        - data
      title: RoutingAppCoverageCreateRequest
      type: object
    RoutingAppCoverageResponse:
      properties:
        data:
          $ref: "#/components/schemas/RoutingAppCoverage"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: RoutingAppCoverageResponse
      type: object
    RoutingAppCoverageUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                sourceFileChecksum:
                  type: string
                uploaded:
                  type: boolean
              type: object
            id:
              type: string
            type:
              enum:
                - routingAppCoverages
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: RoutingAppCoverageUpdateRequest
      type: object
    ScreenshotDisplayType:
      enum:
        - APP_IPHONE_65
        - APP_IPHONE_58
        - APP_IPHONE_55
        - APP_IPHONE_47
        - APP_IPHONE_40
        - APP_IPHONE_35
        - APP_IPAD_PRO_3GEN_129
        - APP_IPAD_PRO_3GEN_11
        - APP_IPAD_PRO_129
        - APP_IPAD_105
        - APP_IPAD_97
        - APP_DESKTOP
        - APP_WATCH_SERIES_4
        - APP_WATCH_SERIES_3
        - APP_APPLE_TV
        - IMESSAGE_APP_IPHONE_65
        - IMESSAGE_APP_IPHONE_58
        - IMESSAGE_APP_IPHONE_55
        - IMESSAGE_APP_IPHONE_47
        - IMESSAGE_APP_IPHONE_40
        - IMESSAGE_APP_IPAD_PRO_3GEN_129
        - IMESSAGE_APP_IPAD_PRO_3GEN_11
        - IMESSAGE_APP_IPAD_PRO_129
        - IMESSAGE_APP_IPAD_105
        - IMESSAGE_APP_IPAD_97
      type: string
    TerritoriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Territory"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: TerritoriesResponse
      type: object
    Territory:
      properties:
        attributes:
          properties:
            currency:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        type:
          enum:
            - territories
          type: string
      required:
        - links
        - id
        - type
      title: Territory
      type: object
    TerritoryResponse:
      properties:
        data:
          $ref: "#/components/schemas/Territory"
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: TerritoryResponse
      type: object
    UploadOperation:
      properties:
        length:
          type: integer
        method:
          type: string
        offset:
          type: integer
        requestHeaders:
          items:
            $ref: "#/components/schemas/UploadOperationHeader"
          type: array
        url:
          type: string
      type: object
    UploadOperationHeader:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    User:
      properties:
        attributes:
          properties:
            allAppsVisible:
              type: boolean
            firstName:
              type: string
            lastName:
              type: string
            provisioningAllowed:
              type: boolean
            roles:
              items:
                $ref: "#/components/schemas/UserRole"
              type: array
            username:
              type: string
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            visibleApps:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - apps
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - users
          type: string
      required:
        - links
        - id
        - type
      title: User
      type: object
    UserInvitation:
      properties:
        attributes:
          properties:
            allAppsVisible:
              type: boolean
            email:
              format: email
              type: string
            expirationDate:
              format: date-time
              type: string
            firstName:
              type: string
            lastName:
              type: string
            provisioningAllowed:
              type: boolean
            roles:
              items:
                $ref: "#/components/schemas/UserRole"
              type: array
          type: object
        id:
          type: string
        links:
          $ref: "#/components/schemas/ResourceLinks"
        relationships:
          properties:
            visibleApps:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: string
                      type:
                        enum:
                          - apps
                        type: string
                    required:
                      - id
                      - type
                    type: object
                  type: array
                links:
                  properties:
                    related:
                      format: uri-reference
                      type: string
                    self:
                      format: uri-reference
                      type: string
                  type: object
                meta:
                  $ref: "#/components/schemas/PagingInformation"
              type: object
          type: object
        type:
          enum:
            - userInvitations
          type: string
      required:
        - links
        - id
        - type
      title: UserInvitation
      type: object
    UserInvitationCreateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                allAppsVisible:
                  type: boolean
                email:
                  format: email
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                provisioningAllowed:
                  type: boolean
                roles:
                  items:
                    $ref: "#/components/schemas/UserRole"
                  type: array
              required:
                - firstName
                - lastName
                - roles
                - email
              type: object
            relationships:
              properties:
                visibleApps:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - apps
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              type: object
            type:
              enum:
                - userInvitations
              type: string
          required:
            - attributes
            - type
          type: object
      required:
        - data
      title: UserInvitationCreateRequest
      type: object
    UserInvitationResponse:
      properties:
        data:
          $ref: "#/components/schemas/UserInvitation"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: UserInvitationResponse
      type: object
    UserInvitationsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/UserInvitation"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: UserInvitationsResponse
      type: object
    UserResponse:
      properties:
        data:
          $ref: "#/components/schemas/User"
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/DocumentLinks"
      required:
        - data
        - links
      title: UserResponse
      type: object
    UserRole:
      enum:
        - ADMIN
        - FINANCE
        - TECHNICAL
        - ACCOUNT_HOLDER
        - READ_ONLY
        - SALES
        - MARKETING
        - APP_MANAGER
        - DEVELOPER
        - ACCESS_TO_REPORTS
        - CUSTOMER_SUPPORT
        - CREATE_APPS
        - CLOUD_MANAGED_DEVELOPER_ID
        - CLOUD_MANAGED_APP_DISTRIBUTION
      type: string
    UserUpdateRequest:
      properties:
        data:
          properties:
            attributes:
              properties:
                allAppsVisible:
                  type: boolean
                provisioningAllowed:
                  type: boolean
                roles:
                  items:
                    $ref: "#/components/schemas/UserRole"
                  type: array
              type: object
            id:
              type: string
            relationships:
              properties:
                visibleApps:
                  properties:
                    data:
                      items:
                        properties:
                          id:
                            type: string
                          type:
                            enum:
                              - apps
                            type: string
                        required:
                          - id
                          - type
                        type: object
                      type: array
                  type: object
              type: object
            type:
              enum:
                - users
              type: string
          required:
            - id
            - type
          type: object
      required:
        - data
      title: UserUpdateRequest
      type: object
    UserVisibleAppsLinkagesRequest:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - apps
                type: string
            required:
              - id
              - type
            type: object
          type: array
      required:
        - data
      type: object
    UserVisibleAppsLinkagesResponse:
      properties:
        data:
          items:
            properties:
              id:
                type: string
              type:
                enum:
                  - apps
                type: string
            required:
              - id
              - type
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      type: object
    UsersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User"
          type: array
        included:
          items:
            $ref: "#/components/schemas/App"
          type: array
        links:
          $ref: "#/components/schemas/PagedDocumentLinks"
        meta:
          $ref: "#/components/schemas/PagingInformation"
      required:
        - data
        - links
      title: UsersResponse
      type: object
  securitySchemes:
    itc-bearer-token:
      bearerFormat: JWT
      scheme: bearer
      type: http
x-important: "IMPORTANT:  This OpenAPI Specification is only for use in
  accordance with the terms of the Apple Developer Program License Agreement and
  terms for the use of the App Store Connect API.  You may not use this OpenAPI
  Specification unless you have agreed to the Apple Developer Program License
  Agreement, and You acknowledge and agree that the App Store Connect API (and
  use of this Specification in connection therewith) is for internal
  development, testing and reporting purposes within your team and not to
  provide services to any third parties or for any other use."
