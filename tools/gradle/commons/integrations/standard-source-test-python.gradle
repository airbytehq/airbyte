apply from: rootProject.file('tools/gradle/commons/docker.gradle')

task standardSourceTestPython {
    ext {
        imageName = ''
        pythonContainerName = ''
    }

    doFirst {
        exec {
            println('standard test inputs')
            println("imageName: ${imageName}")
            println("pythonContainerName: ${pythonContainerName}")
            workingDir rootDir
            commandLine 'docker', 'run', '--rm', '-i',
                    // so that it has access to docker
                    '-v', "/var/run/docker.sock:/var/run/docker.sock",
                    // when launching the container within a container, it mounts the directory from
                    // the host filesystem, not the parent container. this forces /tmp to be the
                    // same directory for host, parent container, and child container.
                    '-v', "/tmp:/tmp",
                    // mount the project dir. all provided input paths must be relative to that dir.
                    '-v', "${project.projectDir.absolutePath}:/test_input",
                    '--name', "std-test-${project.name}", 'airbyte/standard-source-test:dev',
                    '--imageName', imageName,
                    '--pythonContainerName', pythonContainerName
        }
    }
}
standardSourceTestPython.dependsOn(':airbyte-integrations:bases:standard-source-test:buildImage')
standardSourceTestPython.dependsOn(compileJava)
standardSourceTestPython.dependsOn(buildImage)
