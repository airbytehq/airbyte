## @section Global Parameters

## @param global.imageRegistry Global Docker image registry
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  storageClass: ""

## @section Common Parameters

## @param nameOverride String to partially override airbyte.fullname template with a string (will prepend the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override airbyte.fullname template with a string
##
fullnameOverride: ""

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.annotations [object] Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
##
serviceAccount:
  create: true
  annotations: {}
  name: airbyte-admin

## @param version Sets the AIRBYTE_VERSION environment variable. Defaults to Chart.AppVersion.
## If changing the image tags below, you should probably also update this.
version: ""

## @section Webapp Parameters

webapp:
  ## @param webapp.replicaCount Number of webapp replicas
  replicaCount: 1

  ## @param webapp.image.repository The repository to use for the airbyte webapp image.
  ## @param webapp.image.pullPolicy the pull policy to use for the airbyte webapp image
  ## @param webapp.image.tag The airbyte webapp image tag. Defaults to the chart's AppVersion
  image:
    repository: airbyte/webapp
    pullPolicy: IfNotPresent
    tag: 0.35.3-alpha

  ## @param webapp.podAnnotations [object] Add extra annotations to the webapp pod(s)
  ##
  podAnnotations: {}

  ## @param webapp.service.type The service type to use for the webapp service
  ## @param webapp.service.port The service port to expose the webapp on
  service:
    type: ClusterIP
    port: 80

  ## Web app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param webapp.resources.limits [object] The resources limits for the Web container
  ## @param webapp.resources.requests [object] The requested resources for the Web container
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}

  ## @param webapp.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param webapp.tolerations [array] Tolerations for webapp pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Configure the ingress resource that allows you to access the Airbyte installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ## @param webapp.ingress.enabled Set to true to enable ingress record generation
  ## @param webapp.ingress.className Specifies ingressClassName for clusters >= 1.18+
  ## @param webapp.ingress.annotations [object] Ingress annotations done as key:value pairs
  ## @param webapp.ingress.hosts The list of hostnames to be covered with this ingress record.
  ## @param webapp.ingress.tls [array] Custom ingress TLS configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: ImplementationSpecific

    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #   - chart-example.local

  ## @param webapp.api.url The webapp API url.
  api:
    url: /api/v1/

  ## @param webapp.isDemo Set to true if this is a demo
  isDemo: false

  ## @param webapp.fullstory.enabled Whether or not to enable fullstory
  fullstory:
    enabled: false

  ## @param webapp.extraEnv [array] Additional env vars for webapp pod(s).
  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  extraEnv: []

## @section Scheduler Parameters

scheduler:
  ## @param scheduler.replicaCount Number of scheduler replicas
  replicaCount: 1

  ## @param scheduler.image.repository The repository to use for the airbyte scheduler image.
  ## @param scheduler.image.pullPolicy the pull policy to use for the airbyte scheduler image
  ## @param scheduler.image.tag The airbyte scheduler image tag. Defaults to the chart's AppVersion
  image:
    repository: airbyte/scheduler
    pullPolicy: IfNotPresent
    tag: 0.35.3-alpha

  ## @param scheduler.podAnnotations [object] Add extra annotations to the scheduler pod
  ##
  podAnnotations: {}

  ## Scheduler resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param scheduler.resources.limits [object] The resources limits for the scheduler container
  ## @param scheduler.resources.requests [object] The requested resources for the scheduler container
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}

  ## @param scheduler.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param scheduler.tolerations [array] Tolerations for scheduler pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param scheduler.log.level The log level to log at.
  log:
    level: "INFO"

  ## @param scheduler.extraEnv [array] Additional env vars for scheduler pod(s).
  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  extraEnv: []

## @section Pod Sweeper parameters

podSweeper:
  ## @param podSweeper.image.repository The image repository to use for the pod sweeper
  ## @param podSweeper.image.pullPolicy The pull policy for the pod sweeper image
  ## @param podSweeper.image.tag The pod sweeper image tag to use
  image:
    repository: bitnami/kubectl
    pullPolicy: IfNotPresent
    tag: latest

  ## @param podSweeper.podAnnotations [object] Add extra annotations to the podSweeper pod
  ##
  podAnnotations: {}

  ## Pod Sweeper app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param podSweeper.resources.limits [object] The resources limits for the podSweeper container
  ## @param podSweeper.resources.requests [object] The requested resources for the podSweeper container
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}

  ## @param podSweeper.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param podSweeper.tolerations [array] Tolerations for podSweeper pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

## @section Server parameters

server:
  ## @param server.replicaCount Number of server replicas
  replicaCount: 1

  ## @param server.image.repository The repository to use for the airbyte server image.
  ## @param server.image.pullPolicy the pull policy to use for the airbyte server image
  ## @param server.image.tag The airbyte server image tag. Defaults to the chart's AppVersion
  image:
    repository: airbyte/server
    pullPolicy: IfNotPresent
    tag: 0.35.3-alpha

  ## @param server.podAnnotations [object] Add extra annotations to the server pod
  ##
  podAnnotations: {}

  ## Configure extra options for the server containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param server.livenessProbe.enabled Enable livenessProbe on the server
  ## @param server.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param server.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param server.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param server.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param server.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## @param server.readinessProbe.enabled Enable readinessProbe on the server
  ## @param server.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param server.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param server.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param server.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param server.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## Server app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param server.resources.limits [object] The resources limits for the server container
  ## @param server.resources.requests [object] The requested resources for the server container
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}

  ## @param server.service.type The service type to use for the API server
  ## @param server.service.port The service port to expose the API server on
  service:
    type: ClusterIP
    port: 8001

  ## @param server.persistence.accessMode The access mode for the airbyte server pvc
  ## @param server.persistence.size The size of the pvc to use for the airbyte server pvc
  persistence:
    size: 1Gi
    accessMode: ReadWriteOnce
    ## @param server.persistence.storageClass The storage class to use for the airbyte server pvc
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""

  ## @param server.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param server.tolerations [array] Tolerations for server pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param server.log.level The log level to log at
  log:
    level: "INFO"

  ## @param server.extraEnv [array] Additional env vars for server pod(s).
  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  extraEnv: []

## @section Worker Parameters

worker:
  ## @param worker.replicaCount Number of worker replicas
  replicaCount: 1

  ## @param worker.image.repository The repository to use for the airbyte worker image.
  ## @param worker.image.pullPolicy the pull policy to use for the airbyte worker image
  ## @param worker.image.tag The airbyte worker image tag. Defaults to the chart's AppVersion
  image:
    repository: airbyte/worker
    pullPolicy: IfNotPresent
    tag: 0.35.3-alpha

  ## @param worker.podAnnotations [object] Add extra annotations to the worker pod(s)
  ##
  podAnnotations: {}

  ## Configure extra options for the worker containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param worker.livenessProbe.enabled Enable livenessProbe on the worker
  ## @param worker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param worker.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param worker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param worker.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param worker.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## @param worker.readinessProbe.enabled Enable readinessProbe on the worker
  ## @param worker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param worker.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param worker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param worker.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param worker.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param worker.resources.limits [object] The resources limits for the worker container
  ## @param worker.resources.requests [object] The requested resources for the worker container
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}

  ## @param worker.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param worker.tolerations [array] Tolerations for worker pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param worker.log.level The log level to log at.
  log:
    level: "INFO"

  ## @param worker.extraEnv [array] Additional env vars for worker pod(s).
  ## Example:
  ##
  ## extraEnv:
  ## - name: JOB_KUBE_TOLERATIONS
  ##   value: "key=airbyte-server,operator=Equals,value=true,effect=NoSchedule"
  extraEnv: []

## @section Bootloader Parameters

bootloader:
  ## @param bootloader.image.repository The repository to use for the airbyte bootloader image.
  ## @param bootloader.image.pullPolicy the pull policy to use for the airbyte bootloader image
  ## @param bootloader.image.tag The airbyte bootloader image tag. Defaults to the chart's AppVersion
  image:
    repository: airbyte/bootloader
    pullPolicy: IfNotPresent
    tag: 0.34.0-alpha

## @section Temporal parameters
## TODO: Move to consuming temporal from a dedicated helm chart

temporal:
  ## @param temporal.replicaCount The number of temporal replicas to deploy
  replicaCount: 1

  ## @param temporal.image.repository The temporal image repository to use
  ## @param temporal.image.pullPolicy The pull policy for the temporal image
  ## @param temporal.image.tag The temporal image tag to use
  image:
    repository: temporalio/auto-setup
    pullPolicy: IfNotPresent
    tag: "1.7.0"

  ## @param temporal.service.type The Kubernetes Service Type
  ## @param temporal.service.port The temporal port and exposed kubernetes port
  service:
    type: ClusterIP
    port: 7233

  ## @param temporal.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param temporal.tolerations [array] Tolerations for pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param temporal.extraEnv [array] Additional env vars for temporal pod(s).
  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  extraEnv: []

## @section Airbyte Database parameters

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.postgresqlUsername Airbyte Postgresql username
## @param postgresql.postgresqlPassword Airbyte Postgresql password
## @param postgresql.postgresqlDatabase Airbyte Postgresql database
## @param postgresql.existingSecret Name of an existing secret containing the PostgreSQL password ('postgresql-password' key)
##
postgresql:
  enabled: true
  postgresqlUsername: airbyte
  postgresqlPassword: airbyte
  postgresqlDatabase: db-airbyte
  ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
  ##
  existingSecret: ""

## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalDatabase.host Database host
## @param externalDatabase.user non-root Username for Airbyte Database
## @param externalDatabase.password Database password
## @param externalDatabase.existingSecret Name of an existing secret resource containing the DB password
## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the DB password
## @param externalDatabase.database Database name
## @param externalDatabase.port Database port number
##
externalDatabase:
  host: localhost
  user: airbyte
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: ""
  database: db-airbyte
  port: 5432

## @section Logs parameters
logs:
  ## @param logs.accessKey.password Logs Access Key
  ## @param logs.secretKey.password Logs Secret Key
  accessKey:
    password: minio
  secretKey:
    password: minio123

  ## @param logs.minio.enabled Switch to enable or disable the Minio helm chart
  minio:
    enabled: true

  ## @param logs.externalMinio.enabled Switch to enable or disable an external Minio instance
  ## @param logs.externalMinio.host External Minio Host
  ## @param logs.externalMinio.port External Minio Port
  externalMinio:
    enabled: false
    host: localhost
    port: 9000

  ## @param logs.s3.enabled Switch to enable or disable custom S3 Log location
  ## @param logs.s3.bucket Bucket name where logs should be stored
  ## @param logs.s3.bucketRegion Region of the bucket (must be empty if using minio)
  s3:
    enabled: false
    bucket: airbyte-dev-logs
    bucketRegion: ""

  ## Google Cloud Storage (GCS) Log Location Configuration
  ## @param logs.gcs.bucket GCS bucket name
  ## @param logs.gcs.credentials The path the GCS creds are written to
  gcs:
    bucket: ""
    credentials: ""

## @section Minio chart overwrites
## @param minio.accessKey.password Minio Access Key
## @param minio.secretKey.password Minio Secret Key
minio:
  accessKey:
    password: minio
  secretKey:
    password: minio123
