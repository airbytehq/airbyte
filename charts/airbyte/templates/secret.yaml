{{- if eq .Values.global.deploymentMode "oss"  }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-airbyte-secrets
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-1"
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- if not (and .Values.global.state.auth.accessKey.existingSecret .Values.global.state.auth.secretKey.existingSecret) }}
    {{- if and .Values.global.state.auth.accessKey.password .Values.global.state.auth.secretKey.password }}
  STATE_STORAGE_MINIO_ACCESS_KEY: {{ .Values.global.state.auth.accessKey.password | quote }}
  STATE_STORAGE_MINIO_SECRET_ACCESS_KEY: {{ .Values.global.state.auth.secretKey.password | quote }}
    {{- else if and .Values.global.state.auth.reuseCredentials .Values.minio.enabled }}
  STATE_STORAGE_MINIO_ACCESS_KEY: {{ .Values.minio.auth.rootUser | quote }}
  STATE_STORAGE_MINIO_SECRET_ACCESS_KEY: {{ .Values.minio.auth.rootPassword | quote }}
    {{- end }}
  {{- end }}
  {{- if not (and .Values.global.logs.auth.accessKey.existingSecret .Values.global.logs.auth.secretKey.existingSecret) }}
    {{- if and .Values.global.logs.auth.accessKey.password .Values.global.logs.auth.secretKey.password }}
  AWS_ACCESS_KEY_ID: {{ .Values.global.logs.auth.accessKey.password | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.global.logs.auth.secretKey.password | quote }}
    {{- else if and .Values.global.logs.auth.reuseCredentials .Values.minio.enabled }}
  AWS_ACCESS_KEY_ID: {{ .Values.minio.auth.rootUser | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.minio.auth.rootPassword | quote }}  
    {{- end }}
  {{- end }}
  {{- if eq .Values.externalDatabase.existingSecret "" }}
  DATABASE_PASSWORD: {{ .Values.externalDatabase.password | default .Values.postgresql.postgresqlPassword | quote }}
  {{- end }}
  DATABASE_USER: {{ include "airbyte.database.user" . }}
{{- end }}