---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "airbyte.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "airbyte.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.airbyte.io/fullname: {{ include "airbyte.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      airbyte: temporal
  template:
    metadata:
      labels:
        airbyte: temporal
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
{{- if .Values.extraInitContainers }}
      initContainers:
{{- toYaml .Values.extraInitContainers | nindent 6 }}
{{- end }}
      containers:
      - name: airbyte-temporal
        image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- if eq .Values.global.deploymentMode "oss"}}
          - name: AUTO_SETUP
            value: "true"
          - name: DB # The DB engine to use
            value: "postgresql"
          - name: DB_PORT
            value: {{ .Values.global.database.port | int | quote }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-airbyte-secrets
                key: DATABASE_USER
          - name: POSTGRES_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.database.secretName | default (printf "%s-postgresql" .Release.Name ) }}
                key: {{ .Values.global.database.secretValue | default "DATABASE_PASSWORD" }}
          - name: POSTGRES_SEEDS
            value: {{ .Release.Name }}-postgresql
          - name: DYNAMIC_CONFIG_FILE_PATH
            value: "config/dynamicconfig/development.yaml"
        {{- end }}
        {{- if .Values.extraEnv }}
        {{ .Values.extraEnv | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 7233
        {{- if .Values.containerSecurityContext }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: airbyte-temporal-dynamicconfig
          mountPath: "/etc/temporal/config/dynamicconfig/"
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.extraVolumeMounts }}
  {{ toYaml .Values.extraVolumeMounts | nindent 8 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - 'test $(ps -ef | grep -v grep | grep temporal-server | wc -l) -eq 1'
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - 'test $(ps -ef | grep -v grep | grep temporal-server | wc -l) -eq 1'
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.extraContainers }}
        {{ toyaml .Values.extraInitContainers | indent 8 }}
        {{- end }}
      volumes:
      - name: airbyte-temporal-dynamicconfig
        configMap:
          name: {{ include "common.names.fullname" . }}-dynamicconfig
          items:
          - key: development.yaml
            path: development.yaml
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
