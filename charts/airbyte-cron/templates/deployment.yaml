apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
    {{- if .Values.extraLabels }}
    {{ toYaml (mergeOverwrite .Values.extraLabels .Values.global.extraLabels) | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "airbyte.selectorLabels" . | nindent 6 }}
      {{- if .Values.extraSelectorLabels }}
      {{ toYaml (mergeOverwrite .Values.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "airbyte.selectorLabels" . | nindent 8 }}
        {{- if .Values.extraSelectorLabels }}
        {{ toYaml (mergeOverwrite .Values.extraSelectorLabels .Values.global.extraSelectorLabels) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
          {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      automountServiceAccountToken: true
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
          {{- printf "- name: %s" .name | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
      {{- toYaml .Values.extraInitContainers | nindent 6 }}
      {{- end }}
      containers:
        - name: airbyte-cron
          image: {{ printf "%s:%s" .Values.image.repository (include "cron.imageTag" .) }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
          {{- if eq .Values.global.deploymentMode "oss"  }}
          - name: AIRBYTE_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: AIRBYTE_VERSION
          - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.database.secretName | default (printf "%s-airbyte-secrets" .Release.Name ) }}
                key: {{ .Values.global.database.secretValue | default "DATABASE_PASSWORD" }}
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: DATABASE_URL
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-airbyte-secrets
                key: DATABASE_USER
          - name: MICRONAUT_ENVIRONMENTS      
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: CRON_MICRONAUT_ENVIRONMENTS
          - name: TEMPORAL_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: TEMPORAL_HOST
          - name: TRACKING_STRATEGY
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: TRACKING_STRATEGY
          - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
          - name: WORKSPACE_DOCKER_MOUNT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKSPACE_DOCKER_MOUNT
          - name: WORKSPACE_ROOT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-airbyte-env
                key: WORKSPACE_ROOT 
          {{- end }}

          # Values from secret
          {{- if .Values.secrets }}
          {{- range $k, $v := .Values.secrets }}
          - name: {{ $k }}
            valueFrom:
              secretKeyRef:
                name: cron-secrets
                key: {{ $k }}
          {{- end }}
          {{- end }}

          # Values from env
          {{- if .Values.env_vars }}
          {{- range $k, $v := mergeOverwrite .Values.env_vars .Values.global.env_vars }}
          - name: {{ $k }}
            value: {{ $v | quote }}
          {{- end }}
          {{- end }}

          # Values from extraEnv for more compability(if you want to use external secret source or other stuff)
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 10 }}
          {{- end }}

          {{- if .Values.containerSecurityContext }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}

          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}

