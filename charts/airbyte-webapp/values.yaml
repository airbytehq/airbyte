
global:
  serviceAccountName: placeholderServiceAccounr
  deploymentMode: oss
  configMapName: something
  secretName: something
  database:
    # secretName: "test-postgresql"
    secretValue: "postgresql-password"
    host: "something"
    port: "5432"


enabled: true
## @param webapp.replicaCount Number of webapp replicas
replicaCount: 1

## @param webapp.image.repository The repository to use for the airbyte webapp image.
## @param webapp.image.pullPolicy the pull policy to use for the airbyte webapp image
## @param webapp.image.tag The airbyte webapp image tag. Defaults to the chart's AppVersion
image:
  repository: airbyte/webapp
  pullPolicy: IfNotPresent

## @param webapp.podAnnotations [object] Add extra annotations to the webapp pod(s)
##
podAnnotations: {}

## @param webapp.containerSecurityContext Security context for the container
## Examples:
## containerSecurityContext:
##    runAsNonRoot: true
##    runAsUser: 1000
##    readOnlyRootFilesystem: true
containerSecurityContext: {}

## Configure extra options for the webapp containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param webapp.livenessProbe.enabled Enable livenessProbe on the webapp
## @param webapp.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param webapp.livenessProbe.periodSeconds Period seconds for livenessProbe
## @param webapp.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param webapp.livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param webapp.livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## @param webapp.readinessProbe.enabled Enable readinessProbe on the webapp
## @param webapp.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param webapp.readinessProbe.periodSeconds Period seconds for readinessProbe
## @param webapp.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param webapp.readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param webapp.readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## @param webapp.service.type The service type to use for the webapp service
## @param webapp.service.port The service port to expose the webapp on
## @param webapp.service.annotations Annotations for the webapp service resource
service:
  type: ClusterIP
  port: 80
  annotations: {}

## Web app resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param webapp.resources.limits [object] The resources limits for the Web container
## @param webapp.resources.requests [object] The requested resources for the Web container
resources:
  ## Example:
  ## limits:
  ##    cpu: 200m
  ##    memory: 1Gi
  limits: {}
  ## Examples:
  ## requests:
  ##    memory: 256Mi
  ##    cpu: 250m
  requests: {}

## @param webapp.nodeSelector [object] Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param webapp.tolerations [array] Tolerations for webapp pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param webapp.affinity [object] Affinity and anti-affinity for webapp pod assignment.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Configure the ingress resource that allows you to access the Airbyte installation.
## ref: http://kubernetes.io/docs/user-guide/ingress/
## @param webapp.ingress.enabled Set to true to enable ingress record generation
## @param webapp.ingress.className Specifies ingressClassName for clusters >= 1.18+
## @param webapp.ingress.annotations [object] Ingress annotations done as key:value pairs
## @param webapp.ingress.hosts The list of hostnames to be covered with this ingress record.
## @param webapp.ingress.tls [array] Custom ingress TLS configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts: []
  # - host: chart-example.local
  #   paths:
  #   - path: /
  #     pathType: ImplementationSpecific

  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #   - chart-example.local

## @param webapp.api.url The webapp API url.
api:
  url: /api/v1/

## @param webapp.isDemo Set to true if this is a demo
isDemo: false

## @param webapp.fullstory.enabled Whether or not to enable fullstory
fullstory:
  enabled: false

## @param webapp.extraEnv [array] Additional env vars for webapp pod(s).
## Example:
##
## extraEnv:
## - name: SAMPLE_ENV_VAR
##   value: "key=sample-value"
extraEnv: []

## @param webapp.extraVolumeMounts [array] Additional volumeMounts for webapp container(s).
## Examples (when using `webapp.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumeMounts:
##   - name: var-run
##     mountPath: /var/run/
##   - name: var-cache-nginx
##     mountPath: /var/cache/nginx
##   - mountPath: /etc/nginx/conf.d
##     name: nginx-conf-d
##
extraVolumeMounts: []

## @param webapp.extraVolumes [array] Additional volumes for webapp pod(s).
## Examples (when using `webapp.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumes:
##   - name: var-run
##     emptyDir: {}
##   - name: var-cache-nginx
##     emptyDir: {}
##   - name: nginx-conf-d
##     emptyDir: {}
##
extraVolumes: []

extraContainers: []