---
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "airbyte.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "airbyte.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.airbyte.io/fullname: {{ include "airbyte.fullname" . }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "0"
    {{- if .Values.podAnnotations }}
      {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 4 }}
    {{- end }}
spec:
  serviceAccountName: {{ .Values.global.serviceAccountName }}
  {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
          {{- printf "- name: %s" . | nindent 2 }}
        {{- end }}
  {{- end }}
  restartPolicy: Never
  {{- if .Values.nodeSelector }}
  nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
  {{- end }}
  {{- if .Values.tolerations }}
  tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
  {{- end }}
  {{- if .Values.affinity }}
  affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
  {{- end }}
  containers:
    - name: airbyte-bootloader-container
      image: {{ printf "%s:%s" .Values.image.repository (default .Chart.AppVersion .Values.image.tag) }}
      imagePullPolicy: "{{ .Values.image.pullPolicy }}"
      env:
        {{- if eq .Values.global.deploymentMode "oss"  }}
        - name: AIRBYTE_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: AIRBYTE_VERSION
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: DATABASE_PORT
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.database.secretName | default (printf "%s-postgresql" .Release.Name ) }}
              key: {{ .Values.global.database.secretValue | default "DATABASE_PASSWORD" }}
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: DATABASE_URL
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-secrets" .Release.Name) }}
              key: DATABASE_USER
        {{- end }}
        {{- if .Values.extraEnv }}
        {{ .Values.extraEnv | toYaml | nindent 10 }}
        {{- end }}

      resources: {{- toYaml .Values.resources | nindent 8 }}