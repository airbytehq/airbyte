plugins {
    id 'application'
}

dependencies {
    implementation 'io.fabric8:kubernetes-client:5.12.2'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.eclipse.jetty:jetty-server:9.4.31.v20200723'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.31.v20200723'


    implementation project(':airbyte-api')
    implementation project(':airbyte-config:config-models')
    implementation project(':airbyte-config:config-persistence')
    implementation project(':airbyte-db:db-lib')
    implementation project(':airbyte-json-validation')
    implementation project(':airbyte-protocol:protocol-models')
    implementation project(':airbyte-scheduler:scheduler-persistence')
    implementation project(':airbyte-workers')

    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation libs.postgresql
    testImplementation libs.platform.testcontainers
    testImplementation libs.platform.testcontainers.postgresql

    testImplementation project(':airbyte-commons-docker')
}


mainClassName = 'io.airbyte.container_orchestrator.ContainerOrchestratorApp'

application {
    mainClass = mainClassName
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

task copyGeneratedTar(type: Copy) {
    dependsOn copyDocker
    dependsOn distTar

    from('build/distributions') {
        include 'airbyte-container-orchestrator-*.tar'
    }
    into 'build/docker/bin'
}

Task dockerBuildTask = getDockerBuildTask("container-orchestrator", "$project.projectDir", "$rootProject.ext.version", "$rootProject.ext.image_tag")
dockerBuildTask.dependsOn(copyGeneratedTar)
assemble.dependsOn(dockerBuildTask)
