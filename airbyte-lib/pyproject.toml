[tool.poetry]
name = "airbyte-lib"
description = "AirbyteLib"
version = "0.1.0"
authors = ["Airbyte <contact@airbyte.io>"]
readme = "README.md"
packages = [{include = "airbyte_lib"}]

[tool.poetry.dependencies]
python = "^3.10"

airbyte-cdk = "^0.58.3"
# airbyte-protocol-models = "^1.0.1"  # Conflicts with airbyte-cdk # TODO: delete or resolve
duckdb-engine = "^0.9.5"
jsonschema = "3.2.0"
orjson = "^3.9.10"
overrides = "^7.4.0"
pandas = "^2.1.4"
psycopg = {extras = ["binary", "pool"], version = "^3.1.16"}
pyarrow = "^14.0.1"
python-ulid = "^2.2.0"
requests = "^2.31.0"
SQLAlchemy = "^2.0.23"
types-pyyaml = "^6.0.12.12"
ulid = "^1.1"

[tool.poetry.group.dev.dependencies]
docker = "^7.0.0"
faker = "^21.0.0"
mypy = "^1.7.1"
pandas-stubs = "^2.1.4.231218"
pdoc = "^14.3.0"
pyarrow-stubs = "^10.0.1.7"
pytest = "^7.4.3"
pytest-docker = "^2.0.1"
pytest-mypy = "^0.10.3"
pytest-postgresql = "^5.0.0"
ruff = "^0.1.11"
types-jsonschema = "^4.20.0.0"
types-requests = "^2.31.0.10"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# addopts = "--mypy"  # FIXME: This sometimes blocks test discovery and execution

[tool.ruff.pylint]
max-args = 8  # Relaxed from default of 5

[tool.ruff]
target-version = "py310"
select = ["F", "E"]
extend-select = [
    "W", "C90", "I", "N", "UP", "YTT", "ANN", "ASYNC", "BLE", "B", "A", "COM", "C4", "EXE", "FA", "ISC", "ICN", "INP", "PIE", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "PD", "PL", "TRY", "FLY", "NPY", "PERF", "RUF"
]
ignore = [
    # For rules reference, see https://docs.astral.sh/ruff/rules/
    # "I001",  # Sorted imports
    # "ANN401",  # Any-typed expressions
    "ANN003",  # kwargs missing type annotations
    # "SIM300",  # 'yoda' conditions
    "PERF203",  # exception handling in loop
    "ANN101",  # Type annotations for 'self' args
    "TD002", # Require author for TODOs
    "TD003", # Require links for TODOs
    "B019", # lru_cache on class methods keep instance from getting garbage collected
    "COM812", # Conflicts with ruff auto-format
    "ISC001", # Conflicts with ruff auto-format
    "TRY003"  # Raising exceptions with too-long string descriptions  # TODO: re-evaluate once we have our own exception classes
]
fixable = ["ALL"]
unfixable = []
line-length = 100
extend-exclude = ["docs", "test", "tests"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.isort]
force-sort-within-sections = false
lines-after-imports = 2
known-first-party = ["airbyte_cdk", "airbyte_protocol"]
known-local-folder = ["airbyte_lib"]
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]

[tool.ruff.mccabe]
max-complexity = 24

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
preview = false
docstring-code-format = true

[tool.mypy]
# Platform configuration
python_version = "3.10"
# imports related
ignore_missing_imports = true
follow_imports = "silent"
# None and Optional handling
no_implicit_optional = true
strict_optional = true
# Configuring warnings
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_return_any = false
# Untyped definitions and calls
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false
# Disallow dynamic typing
disallow_subclassing_any = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
# Configuring error messages
show_error_context = false
show_column_numbers = false
show_error_codes = true
exclude = ["docs", "test", "tests"]

[[tool.mypy.overrides]]
module = [
    "airbyte_protocol",
    "airbyte_protocol.models"
]
ignore_missing_imports = true  # No stubs yet (ðŸ˜¢)

[tool.poetry.scripts]
generate-docs = "docs:run"
airbyte-lib-validate-source = "airbyte_lib.validate:run"
