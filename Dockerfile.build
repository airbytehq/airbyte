#####################
# Setup build image #
#####################
FROM ubuntu:20.04 AS build-base

WORKDIR /code

ENV DEBIAN_FRONTEND noninteractive

# Install tools
RUN apt-get update && apt-get -y install curl

# Setup Node & Java
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get update && apt-get -y install \
  nodejs \
  openjdk-14-jdk \
  docker.io

#######################
# Prepare project env #
#######################
FROM build-base AS build-project

WORKDIR /code

# Cache Gradle executable
COPY ./gradlew .
COPY ./gradle ./gradle
RUN ./gradlew build --no-daemon -g /home/gradle/.gradle

###################
# Build artifacts #
###################
FROM build-project AS build

WORKDIR /code

# Copy code, etc.
COPY . /code

RUN ./gradlew clean distTar build -x test --no-daemon -g /home/gradle/.gradle

######################
# Build webapp image #
######################
FROM nginx:1.19-alpine as webapp

EXPOSE 80

COPY --from=build /code/dataline-webapp/build /usr/share/nginx/html

####################
# Build seed image #
####################
FROM alpine:3.4 AS seed

WORKDIR /app

# the sole purpose of this image is to seed the data volume with the default data
# that the app should have when it is first installed.
COPY --from=build /code/dataline-config/init/src/main/resources/config seed/config

######################
# Build server image #
######################
FROM openjdk:14.0.2-slim AS server

EXPOSE 8000

ENV WAIT_VERSION=2.7.2
ENV APPLICATION dataline-server

WORKDIR /app

# Install wait
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/${WAIT_VERSION}/wait wait
RUN chmod +x wait

COPY --from=build /code/${APPLICATION}/build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar

RUN tar xf ${APPLICATION}.tar --strip-components=1

# wait for upstream dependencies to become available before starting server
ENTRYPOINT ["/bin/bash", "-c", "./wait && bin/${APPLICATION}"]

#########################
# Build scheduler image #
#########################
FROM openjdk:14.0.2-slim AS scheduler

ENV WAIT_VERSION=2.7.2
ENV APPLICATION dataline-scheduler

WORKDIR /app

# Install wait
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/${WAIT_VERSION}/wait wait
RUN chmod +x wait

COPY --from=build /code/${APPLICATION}/build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar

RUN tar xf ${APPLICATION}.tar --strip-components=1

# wait for upstream dependencies to become available before starting server
ENTRYPOINT ["/bin/bash", "-c", "./wait && bin/${APPLICATION}"]
