// Configure the gradle enterprise plugin to enable build scans. Enabling the plugin at the top of the settings file allows the build scan to record
// as much information as possible.
plugins {
    id "com.gradle.enterprise" version "3.4.1"
}

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

import groovy.io.FileType
import java.nio.file.Files

rootProject.name = 'airbyte'

include ':airbyte-analytics'
include ':airbyte-api'
include ':airbyte-commons'
include ':airbyte-config:models'
include ':airbyte-config:init'
include ':airbyte-config:persistence'
include ':airbyte-db'
include ':airbyte-integrations:bases:airbyte-protocol'
include ':airbyte-integrations:bases:base'
include ':airbyte-integrations:bases:base-java'
include ':airbyte-integrations:bases:base-normalization'
include ':airbyte-integrations:bases:base-python'
include ':airbyte-integrations:bases:base-python-test'
include ':airbyte-integrations:bases:base-singer'
include ':airbyte-integrations:bases:base-standard-source-test-file'
include ':airbyte-integrations:bases:standard-destination-test'
include ':airbyte-integrations:bases:standard-source-test'
include ':airbyte-integrations:connector-templates:generator'
include ':airbyte-json-validation'
include ':airbyte-migration'
include ':airbyte-protocol:models'
include ':airbyte-queue'
include ':airbyte-scheduler'
include ':airbyte-server'
include ':airbyte-webapp'
include ':airbyte-workers'
include ':airbyte-tests'
include ':airbyte-test-utils'
include ':tools:code-generator'

if(!System.getenv().containsKey("CORE_ONLY")) {
    // include all connector projects
    def integrationsPath = rootDir.toPath().resolve('airbyte-integrations/connectors')
    println integrationsPath
    integrationsPath.eachDir { dir ->
        def buildFiles = file(dir).list { file, name -> name == "build.gradle" }

        if (buildFiles.length == 1) {
            include ":airbyte-integrations:connectors:${dir.getFileName()}"
        }
    }
}
