[versions]
airbyte-protocol = "0.5.0"
commons_io = "2.7"
testcontainers = "1.19.0"
datadog-version = "0.111.0"
fasterxml_version = "2.15.2"
flyway = "7.14.0"
glassfish_version = "2.31"
hikaricp = "5.0.1"
jmh = "1.36"
jooq = "3.13.4"
junit-bom = "5.10.1"
kotlin = "1.9.0"
log4j = "2.21.1"
lombok = "1.18.30"
postgresql = "42.6.0"
reactor = "3.5.2"
segment = "2.1.1"
slf4j = "2.0.9"
temporal = "1.17.0"
debezium = "2.4.0.Final"
mockito-version = "5.11.0"

[libraries]
airbyte-protocol = { module = "io.airbyte.airbyte-protocol:protocol-models", version.ref = "airbyte-protocol" }
apache-commons = { module = "org.apache.commons:commons-compress", version = "1.20" }
apache-commons-lang = { module = "org.apache.commons:commons-lang3", version = "3.11" }
appender-log4j2 = { module = "com.therealvan:appender-log4j2", version = "3.6.0" }
assertj-core = { module = "org.assertj:assertj-core", version = "3.21.0" }
aws-java-sdk-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version = "1.12.6" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons_io" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-cassandra = { module = "org.testcontainers:cassandra", version.ref = "testcontainers" }
testcontainers-clickhouse = { module = "org.testcontainers:clickhouse", version.ref = "testcontainers" }
testcontainers-cockroachdb = { module = "org.testcontainers:cockroachdb", version.ref = "testcontainers" }
testcontainers-db2 = { module = "org.testcontainers:db2", version.ref = "testcontainers" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version.ref = "testcontainers" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb", version.ref = "testcontainers" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
testcontainers-oracle-xe = { module = "org.testcontainers:oracle-xe", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-pulsar = { module = "org.testcontainers:pulsar", version.ref = "testcontainers" }
testcontainers-scylla = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-tidb = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-tidb-source = { module = "org.testcontainers:tidb", version.ref = "testcontainers" }
datadog-trace-api = { module = "com.datadoghq:dd-trace-api", version.ref = "datadog-version" }
datadog-trace-ot = { module = "com.datadoghq:dd-trace-ot", version.ref = "datadog-version" }
fasterxml = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "fasterxml_version" }
findsecbugs-plugin = { module = "com.h3xstream.findsecbugs:findsecbugs-plugin", version = "1.12.0" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
glassfish = { module = "org.glassfish.jersey:jackson-bom", version.ref = "glassfish_version" }
google-cloud-storage = { module = "com.google.cloud:google-cloud-storage", version = "2.17.2" }
guava = { module = "com.google.guava:guava", version = "31.1-jre" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "fasterxml_version" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "fasterxml_version" }
jackson-dataformat = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "fasterxml_version" }
jackson-datatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "fasterxml_version" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "fasterxml_version" }
java-dogstatsd-client = { module = "com.datadoghq:java-dogstatsd-client", version = "4.1.0" }
java-faker = { module = "com.github.javafaker:javafaker", version = "1.0.2" }
javax-databind = { module = "javax.xml.bind:jaxb-api", version = "2.4.0-b180830.0359" }
jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annotations = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
junit-jupiter-system-stubs = { module = "uk.org.webcompere:system-stubs-jupiter", version = "2.0.1" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version = "5.1.0" }
kotlinx-cli = { module = "org.jetbrains.kotlinx:kotlinx-cli", version = "0.3.5" }
kotlinx-cli-jvm = { module = "org.jetbrains.kotlinx:kotlinx-cli-jvm", version = "0.3.5" }
launchdarkly = { module = "com.launchdarkly:launchdarkly-java-server-sdk", version = "7.2.6" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
log4j-web = { module = "org.apache.logging.log4j:log4j-web", version.ref = "log4j" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
micrometer-statsd = { module = "io.micrometer:micrometer-registry-statsd", version = "1.9.3" }
mockk = { module = "io.mockk:mockk", version = "1.13.3" }
mongo-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version = "4.10.2" }
otel-bom = { module = "io.opentelemetry:opentelemetry-bom", version = "1.14.0" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk-metrics", version = "1.14.0" }
otel-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-metrics-testing", version = "1.13.0-alpha" }
otel-semconv = { module = "io.opentelemetry:opentelemetry-semconv", version = "1.14.0-alpha" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
quartz-scheduler = { module = "org.quartz-scheduler:quartz", version = "2.3.2" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor" }
s3 = { module = "software.amazon.awssdk:s3", version = "2.20.20" }
segment-java-analytics = { module = "com.segment.analytics.java:analytics", version.ref = "segment" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
spotbugs-annotations = { module = "com.github.spotbugs:spotbugs-annotations", version = "4.7.3" }
temporal-sdk = { module = "io.temporal:temporal-sdk", version.ref = "temporal" }
temporal-serviceclient = { module = "io.temporal:temporal-serviceclient", version.ref = "temporal" }
temporal-testing = { module = "io.temporal:temporal-testing", version.ref = "temporal" }
debezium-api = { module = "io.debezium:debezium-api", version.ref = "debezium"}
debezium-embedded = { module = "io.debezium:debezium-embedded", version.ref = "debezium"}
debezium-sqlserver = { module = "io.debezium:debezium-connector-sqlserver", version.ref = "debezium"}
debezium-mongodb = { module = "io.debezium:debezium-connector-mongodb", version.ref = "debezium" }
debezium-mysql = { module = "io.debezium:debezium-connector-mysql", version.ref = "debezium"}
debezium-postgres = { module = "io.debezium:debezium-connector-postgres", version.ref = "debezium"}

[bundles]
apache = ["apache-commons", "apache-commons-lang"]
datadog = ["datadog-trace-api", "datadog-trace-ot"]
jackson = ["jackson-databind", "jackson-annotations", "jackson-dataformat", "jackson-datatype"]
log4j = ["log4j-api", "log4j-core", "log4j-slf4j-impl", "log4j-slf4j2-impl", "log4j-web"]
slf4j = ["jul-to-slf4j", "jcl-over-slf4j", "log4j-over-slf4j"]
temporal = ["temporal-sdk", "temporal-serviceclient"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
