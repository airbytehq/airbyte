micronaut:
  application:
    name: airbyte-server
  security:
    intercept-url-map:
      - pattern: /**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /**
        httpMethod: POST
        access:
          - isAnonymous()
  server:
    port: 8080
airbyte:
  deployment-mode: ${DEPLOYMENT_MODE:OSS}
  flyway:
    configs:
      initialization-timeout-ms: ${CONFIGS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
      minimum-migration-version: ${CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION}
    jobs:
      initialization-timeout-ms: ${JOBS_DATABASE_INITIALIZATION_TIMEOUT_MS:60000}
      minimum-migration-version: ${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION}
  version: ${AIRBYTE_VERSION}
  secret:
    persistence: ${SECRET_PERSISTENCE:TESTING_CONFIG_DB_TABLE}
    store:
      gcp:
        credentials: ${SECRET_STORE_GCP_CREDENTIALS:}
        project-id: ${SECRET_STORE_GCP_PROJECT_ID:}
      vault:
        address: ${VAULT_ADDRESS:}
        prefix: ${VAULT_PREFIX:}
        token: ${VAULT_AUTH_TOKEN:}
  role: ${AIRBYTE_ROLE:}
  tracking-strategy: ${TRACKING_STRATEGY:LOGGING}
  worker:
    job:
      error-reporting:
        sentry:
          dsn: ${JOB_ERROR_REPORTING_SENTRY_DSN}
        strategy: ${JOB_ERROR_REPORTING_STRATEGY:LOGGING}
  web-app:
    url: ${WEBAPP_URL:}
  workspace:
    root: ${WORKSPACE_ROOT}
  protocol:
    min-version: ${AIRBYTE_PROTOCOL_VERSION_MIN:0.0.0}
    max-version: ${AIRBYTE_PROTOCOL_VERSION_MAX:0.3.0}

temporal:
  cloud:
    client:
      cert: ${TEMPORAL_CLOUD_CLIENT_CERT:}
      key: ${TEMPORAL_CLOUD_CLIENT_KEY:}
    enabled: ${TEMPORAL_CLOUD_ENABLED:false}
    host: ${TEMPORAL_CLOUD_HOST:}
    namespace: ${TEMPORAL_CLOUD_NAMESPACE:}
  host: ${TEMPORAL_HOST:`airbyte-temporal:7233`}
  retention: ${TEMPORAL_HISTORY_RETENTION_IN_DAYS:30}
