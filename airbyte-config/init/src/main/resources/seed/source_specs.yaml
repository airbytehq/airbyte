# This file is generated by io.airbyte.config.specs.SeedConnectorSpecGenerator.
# Do NOT edit this file directly. See generator class for more details.
---
- dockerImage: "airbyte/source-aws-cloudtrail:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/aws-cloudtrail"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Aws CloudTrail Spec"
      type: "object"
      required:
      - "aws_key_id"
      - "aws_secret_key"
      - "aws_region_name"
      - "start_date"
      additionalProperties: true
      properties:
        aws_key_id:
          type: "string"
          description: "Specifies an AWS access key associated with an IAM user or\
            \ role."
          airbyte_secret: true
        aws_secret_key:
          type: "string"
          description: "Specifies the secret key associated with the access key. This\
            \ is essentially the 'password' for the access key."
          airbyte_secret: true
        aws_region_name:
          type: "string"
          description: "The default AWS Region to use, for example, us-west-1 or us-west-2.\
            \ When specifying a Region inline during client initialization, this property\
            \ is named region_name."
        start_date:
          type: "string"
          description: "The date you would like to replicate data. Data in ClouTraid\
            \ is available for last 90 days only. Format: YYYY-MM-DD."
          examples:
          - "2021-01-01"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-amazon-ads:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-ads"
    connectionSpecification:
      title: "Amazon Ads Spec"
      type: "object"
      properties:
        client_id:
          title: "Client Id"
          description: "Oauth client id <a href=\"https://advertising.amazon.com/API/docs/en-us/setting-up/step-1-create-lwa-app\"\
            >How to create your Login with Amazon</a>"
          name: "Client ID"
          type: "string"
        client_secret:
          title: "Client Secret"
          description: "Oauth client secret <a href=\"https://advertising.amazon.com/API/docs/en-us/setting-up/step-1-create-lwa-app\"\
            >How to create your Login with Amazon</a>"
          name: "Client secret"
          airbyte_secret: true
          type: "string"
        scope:
          title: "Scope"
          description: "By default its advertising::campaign_management, but customers\
            \ may need to set scope to cpc_advertising:campaign_management."
          default: "advertising::campaign_management"
          name: "Client scope"
          examples:
          - "cpc_advertising:campaign_management"
          type: "string"
        refresh_token:
          title: "Refresh Token"
          description: "Oauth 2.0 refresh_token, <a href=\"https://developer.amazon.com/docs/login-with-amazon/conceptual-overview.html\"\
            >read details here</a>"
          name: "Oauth refresh token"
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Start Date"
          description: "Start date for collectiong reports, should not be more than\
            \ 60 days in past. In YYYY-MM-DD format"
          name: "Start date"
          examples:
          - "2022-10-10"
          - "2022-10-22"
          type: "string"
        region:
          description: "Region to pull data from (EU/NA/FE/SANDBOX)"
          default: "NA"
          name: "Region"
          title: "AmazonAdsRegion"
          enum:
          - "NA"
          - "EU"
          - "FE"
          - "SANDBOX"
          type: "string"
        profiles:
          title: "Profiles"
          description: "profile Ids you want to fetch data for"
          name: "Profile Ids"
          type: "array"
          items:
            type: "integer"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-amazon-seller-partner:0.2.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-seller-partner"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/amazon-seller-partner"
    connectionSpecification:
      title: "Amazon Seller Partner Spec"
      type: "object"
      properties:
        replication_start_date:
          title: "Replication Start Date"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
        refresh_token:
          title: "Refresh Token"
          description: "The refresh token used obtained via authorization (can be\
            \ passed to the client instead)"
          airbyte_secret: true
          type: "string"
        lwa_app_id:
          title: "Lwa App Id"
          description: "Your login with amazon app id"
          airbyte_secret: true
          type: "string"
        lwa_client_secret:
          title: "Lwa Client Secret"
          description: "Your login with amazon client secret"
          airbyte_secret: true
          type: "string"
        aws_access_key:
          title: "Aws Access Key"
          description: "AWS user access key"
          airbyte_secret: true
          type: "string"
        aws_secret_key:
          title: "Aws Secret Key"
          description: "AWS user secret key"
          airbyte_secret: true
          type: "string"
        role_arn:
          title: "Role Arn"
          description: "The role's arn (needs permission to 'Assume Role' STS)"
          airbyte_secret: true
          type: "string"
        aws_environment:
          title: "AWSEnvironment"
          description: "An enumeration."
          enum:
          - "PRODUCTION"
          - "SANDBOX"
          type: "string"
        region:
          title: "AWSRegion"
          description: "An enumeration."
          enum:
          - "AE"
          - "DE"
          - "PL"
          - "EG"
          - "ES"
          - "FR"
          - "IN"
          - "IT"
          - "NL"
          - "SA"
          - "SE"
          - "TR"
          - "UK"
          - "AU"
          - "JP"
          - "SG"
          - "US"
          - "BR"
          - "CA"
          - "MX"
          - "GB"
          type: "string"
      required:
      - "replication_start_date"
      - "refresh_token"
      - "lwa_app_id"
      - "lwa_client_secret"
      - "aws_access_key"
      - "aws_secret_key"
      - "role_arn"
      - "aws_environment"
      - "region"
      definitions:
        AWSEnvironment:
          title: "AWSEnvironment"
          description: "An enumeration."
          enum:
          - "PRODUCTION"
          - "SANDBOX"
          type: "string"
        AWSRegion:
          title: "AWSRegion"
          description: "An enumeration."
          enum:
          - "AE"
          - "DE"
          - "PL"
          - "EG"
          - "ES"
          - "FR"
          - "IN"
          - "IT"
          - "NL"
          - "SA"
          - "SE"
          - "TR"
          - "UK"
          - "AU"
          - "JP"
          - "SG"
          - "US"
          - "BR"
          - "CA"
          - "MX"
          - "GB"
          type: "string"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-amplitude:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amplitude"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Amplitude Spec"
      type: "object"
      required:
      - "api_key"
      - "secret_key"
      - "start_date"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "This is the project’s API key, used for calling Amplitude’\
            s APIs"
          airbyte_secret: true
        secret_key:
          type: "string"
          description: "This is the project's secret key, which is also used for calling\
            \ Amplitude’s APIs"
          airbyte_secret: true
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2021-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2021-01-25T00:00:00Z"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-apify-dataset:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/apify-dataset"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Apify Dataset Spec"
      type: "object"
      required:
      - "datasetId"
      additionalProperties: false
      properties:
        datasetId:
          type: "string"
          description: "ID of the dataset you would like to load to Airbyte."
        clean:
          type: "boolean"
          description: "If set to true, only clean items will be downloaded from the\
            \ dataset. See description of what clean means in <a href=\"https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\"\
            >Apify API docs</a>. If not sure, set clean to false."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-appstore-singer:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/appstore"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Appstore Singer Spec"
      type: "object"
      required:
      - "key_id"
      - "private_key"
      - "issuer_id"
      - "vendor"
      - "start_date"
      additionalProperties: false
      properties:
        key_id:
          type: "string"
          description: "<a href=\"https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api\"\
            >Key_id</a> is the API key you use to connect to appstore's API."
        private_key:
          type: "string"
          description: "Private_key is the contents of the <a href=\"https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api\"\
            >key file</a> you use to connect to appstore's API."
          airbyte_secret: true
          multiline: true
        issuer_id:
          type: "string"
          description: "<a href=\"https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests\"\
            >Issuer_id</a> is used to generate the credentials to connect to appstore's\
            \ API."
        vendor:
          type: "string"
          description: "This is the Apple ID of your account."
        start_date:
          type: "string"
          description: "Date from which to start pulling data."
          examples:
          - "2020-11-16T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-asana:0.1.3"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Asana Spec"
      type: "object"
      additionalProperties: true
      properties:
        credentials:
          title: "Authentication mechanism"
          description: "Choose how to authenticate to Github"
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "personal_access_token"
            properties:
              option_title:
                type: "string"
                title: "Credentials title"
                description: "PAT Credentials"
                const: "PAT Credentials"
              personal_access_token:
                type: "string"
                title: "Personal Access Token"
                description: "Asana Personal Access Token (generate yours <a href=\"\
                  https://app.asana.com/0/developer-console\">here</a>)."
                airbyte_secret: true
          - type: "object"
            title: "Authenticate via Asana (Oauth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              option_title:
                type: "string"
                title: "Credentials title"
                description: "OAuth Credentials"
                const: "OAuth Credentials"
              client_id:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
              client_secret:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "1"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- dockerImage: "airbyte/source-bamboo-hr:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bamboo-hr"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Bamboo HR Spec"
      type: "object"
      required:
      - "subdomain"
      - "api_key"
      additionalProperties: false
      properties:
        subdomain:
          type: "string"
          description: "Sub Domain of bamboo hr"
        api_key:
          type: "string"
          description: "Api key of bamboo hr"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-bigcommerce:0.1.1"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bigcommerce"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "BigCommerce Source CDK Specifications"
      type: "object"
      required:
      - "start_date"
      - "store_hash"
      - "access_token"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date you would like to replicate data. Format: YYYY-MM-DD."
          examples:
          - "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        store_hash:
          type: "string"
          description: "The hash code of the store. For https://api.bigcommerce.com/stores/HASH_CODE/v3/,\
            \ The store's hash code is 'HASH_CODE'."
        access_token:
          type: "string"
          description: "The API Access Token."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-bigquery:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/source/bigquery"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "BigQuery Source Spec"
      type: "object"
      required:
      - "project_id"
      - "credentials_json"
      additionalProperties: false
      properties:
        project_id:
          type: "string"
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset."
          title: "Project ID"
        dataset_id:
          type: "string"
          description: "The BigQuery Dataset ID to look for tables to replicate from."
          title: "Default Dataset ID"
        credentials_json:
          type: "string"
          description: "The contents of the JSON service account key. Check out the\
            \ <a href=\"https://docs.airbyte.io/integrations/source/bigquery\">docs</a>\
            \ if you need help generating this key."
          title: "Credentials JSON"
          airbyte_secret: true
    supportsIncremental: true
    supportsNormalization: true
    supportsDBT: true
    supported_destination_sync_modes: []
    supported_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- dockerImage: "airbyte/source-bing-ads:0.1.1"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bing-ads"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Bing Ads Spec"
      type: "object"
      required:
      - "accounts"
      - "client_id"
      - "client_secret"
      - "customer_id"
      - "developer_token"
      - "refresh_token"
      - "user_id"
      - "reports_start_date"
      - "hourly_reports"
      - "daily_reports"
      - "weekly_reports"
      - "monthly_reports"
      additionalProperties: false
      properties:
        accounts:
          title: "Accounts"
          type: "object"
          description: "Account selection strategy."
          oneOf:
          - title: "All accounts assigned to your user"
            additionalProperties: false
            description: "Fetch data for all available accounts."
            required:
            - "selection_strategy"
            properties:
              selection_strategy:
                type: "string"
                enum:
                - "all"
                const: "all"
          - title: "Subset of your accounts"
            additionalProperties: false
            description: "Fetch data for subset of account ids."
            required:
            - "ids"
            - "selection_strategy"
            properties:
              selection_strategy:
                type: "string"
                enum:
                - "subset"
                const: "subset"
              ids:
                type: "array"
                description: "List of accounts from which data will be fetched."
                items:
                  type: "string"
                minItems: 1
                uniqueItems: true
        client_id:
          type: "string"
          description: "ID of your Microsoft Advertising client application."
          airbyte_secret: true
        client_secret:
          type: "string"
          description: "Secret of your Microsoft Advertising client application."
          airbyte_secret: true
        customer_id:
          type: "string"
          description: "User's customer ID."
        developer_token:
          type: "string"
          description: "Developer token associated with user."
          airbyte_secret: true
        refresh_token:
          type: "string"
          description: "The long-lived Refresh token received via grant_type=refresh_token\
            \ request."
          airbyte_secret: true
        user_id:
          type: "string"
          description: "Unique user identifier."
        reports_start_date:
          type: "string"
          format: "date"
          default: "2020-01-01"
          description: "From which date perform initial sync for report related streams.\
            \ In YYYY-MM-DD format"
        hourly_reports:
          title: "Hourly reports"
          type: "boolean"
          description: "The report data will be aggregated by each hour of the day."
          default: false
        daily_reports:
          title: "Daily reports"
          type: "boolean"
          description: "The report data will be aggregated by each day."
          default: false
        weekly_reports:
          title: "Weekly reports"
          type: "boolean"
          description: "The report data will be aggregated by each week running from\
            \ Sunday through Saturday."
          default: false
        monthly_reports:
          title: "Monthly reports"
          type: "boolean"
          description: "The report data will be aggregated by each month."
          default: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-braintree:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/braintree"
    connectionSpecification:
      title: "Braintree Spec"
      type: "object"
      properties:
        merchant_id:
          title: "Merchant Id"
          description: "<a href=\"https://docs.airbyte.io/integrations/sources/braintree\"\
            >Merchant ID</a> is the unique identifier for entire gateway account."
          name: "Merchant ID"
          type: "string"
        public_key:
          title: "Public Key"
          description: "This is your user-specific public identifier for Braintree."
          name: "Public key"
          type: "string"
        private_key:
          title: "Private Key"
          description: "This is your user-specific private identifier."
          name: "Private Key"
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Start Date"
          description: "The date from which you'd like to replicate data for Braintree\
            \ API for UTC timezone, All data generated after this date will be replicated."
          name: "Start date"
          examples:
          - "2020"
          - "2020-12-30"
          - "2020-11-22 20:20:05"
          type: "string"
          format: "date-time"
        environment:
          description: "Environment specifies where the data will come from."
          name: "Environment"
          examples:
          - "sandbox"
          - "production"
          - "qa"
          - "development"
          allOf:
          - $ref: "#/definitions/Environment"
      required:
      - "merchant_id"
      - "public_key"
      - "private_key"
      - "environment"
      definitions:
        Environment:
          title: "Environment"
          description: "An enumeration."
          enum:
          - "Development"
          - "Sandbox"
          - "Qa"
          - "Production"
          type: "string"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-cart:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/cart"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Cart Spec"
      type: "object"
      required:
      - "access_token"
      - "start_date"
      - "store_name"
      additionalProperties: true
      properties:
        access_token:
          type: "string"
          airbyte_secret: true
          description: "API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/mailchimp\"\
            >docs</a> for information on how to generate this key."
        store_name:
          type: "string"
          description: "Store name. All API URLs start with https://[mystorename.com]/api/v1/,\
            \ where [mystorename.com] is the domain name of your store."
        start_date:
          title: "Start Date"
          type: "string"
          description: "The date from which you'd like to replicate the data"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-01T00:00:00Z"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-chargebee:0.1.4"
  spec:
    documentationUrl: "https://apidocs.chargebee.com/docs/api"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Chargebee Spec"
      type: "object"
      required:
      - "site"
      - "site_api_key"
      - "start_date"
      - "product_catalog"
      additionalProperties: false
      properties:
        site:
          type: "string"
          title: "Site"
          description: "The site prefix for your Chargebee instance."
          examples:
          - "airbyte-test"
        site_api_key:
          type: "string"
          title: "API Key"
          description: "The API key from your Chargebee instance."
          examples:
          - "test_3yzfanAXF66USdWC9wQcM555DQJkSYoppu"
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2021-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2021-01-25T00:00:00Z"
        product_catalog:
          title: "Product Catalog"
          type: "string"
          description: "Product Catalog version of your Chargebee site. Instructions\
            \ on how to find your version you may find <a href=\"https://apidocs.chargebee.com/docs/api?prod_cat_ver=2\"\
            >here</a> under `API Version` section."
          enum:
          - "1.0"
          - "2.0"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-clickhouse:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/clickhouse"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "ClickHouse Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      additionalProperties: false
      properties:
        host:
          description: "Host Endpoint of the Clickhouse Cluster"
          type: "string"
        port:
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 8123
          examples:
          - "8123"
        database:
          description: "Name of the database."
          type: "string"
          examples:
          - "default"
        username:
          description: "Username to use to access the database."
          type: "string"
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
        ssl:
          title: "SSL Connection"
          description: "Encrypt data using SSL."
          type: "boolean"
          default: true
        tunnel_method:
          type: "object"
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                description: "No ssh tunnel needed to connect to database"
                type: "string"
                const: "NO_TUNNEL"
                order: 0
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
                type: "string"
                order: 3
              ssh_key:
                title: "SSH Private Key"
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
                type: "string"
                order: 3
              tunnel_user_password:
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                type: "string"
                airbyte_secret: true
                order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-close-com:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/close-com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Close.com Spec"
      type: "object"
      required:
      - "api_key"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "Close.com API key (usually starts with 'api_'; find yours\
            \ <a href=\"https://app.close.com/settings/api/\">here</a>)."
          airbyte_secret: true
        start_date:
          type: "string"
          description: "The start date to sync data. Leave blank for full sync. Format:\
            \ YYYY-MM-DD."
          examples:
          - "2021-01-01"
          default: "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-cockroachdb:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/postgres"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Cockroach Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      additionalProperties: false
      properties:
        host:
          title: "Host"
          description: "Hostname of the database."
          type: "string"
          order: 0
        port:
          title: "Port"
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 5432
          examples:
          - "5432"
          order: 1
        database:
          title: "DB Name"
          description: "Name of the database."
          type: "string"
          order: 2
        username:
          title: "User"
          description: "Username to use to access the database."
          type: "string"
          order: 3
        password:
          title: "Password"
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
          order: 4
        ssl:
          title: "Connect using SSL"
          description: "Encrypt client/server communications for increased security."
          type: "boolean"
          default: false
          order: 5
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-commercetools:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/commercetools"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Commercetools Source CDK Specifications"
      type: "object"
      required:
      - "region"
      - "start_date"
      - "host"
      - "project_key"
      - "client_id"
      - "client_secret"
      additionalProperties: false
      properties:
        region:
          type: "string"
          description: "The region of the platform."
          examples:
          - "us-central1"
          - "australia-southeast1"
        host:
          type: "string"
          enum:
          - "gcp"
          - "aws"
          description: "The cloud provider your shop is hosted. See: https://docs.commercetools.com/api/authorization"
        start_date:
          type: "string"
          description: "The date you would like to replicate data. Format: YYYY-MM-DD."
          examples:
          - "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        project_key:
          type: "string"
          description: "The project key"
        client_id:
          type: "string"
          description: "Id of API Client."
          airbyte_secret: true
        client_secret:
          type: "string"
          description: "The password of secret of API Client."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-delighted:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Delighted Spec"
      type: "object"
      required:
      - "since"
      - "api_key"
      additionalProperties: false
      properties:
        since:
          type: "integer"
          description: "An Unix timestamp to retrieve records created on or after\
            \ this time."
          examples:
          - 1625328167
        api_key:
          type: "string"
          description: "A Delighted API key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-dixa:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/dixa"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Dixa Spec"
      type: "object"
      required:
      - "api_token"
      - "start_date"
      additionalProperties: false
      properties:
        api_token:
          type: "string"
          description: "Dixa API token"
          airbyte_secret: true
        start_date:
          type: "string"
          description: "The connector pulls records updated from this date onwards."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "YYYY-MM-DD"
        batch_size:
          type: "integer"
          description: "Number of days to batch into one request. Max 31."
          pattern: "^[0-9]{1,2}$"
          examples:
          - 1
          - 31
          default: 31
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-drift:0.2.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/drift"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Drift Spec"
      type: "object"
      required:
      - "access_token"
      additionalProperties: false
      properties:
        access_token:
          type: "string"
          description: "Drift Access Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/drift\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-exchange-rates:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/exchangeratesapi"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "exchangeratesapi.io Source Spec"
      type: "object"
      required:
      - "start_date"
      - "access_key"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "Start getting data from that date."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "YYYY-MM-DD"
        access_key:
          type: "string"
          description: "Your API Access Key. See <a href=\"https://exchangeratesapi.io/documentation/\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        base:
          type: "string"
          description: "ISO reference currency. See <a href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\
            >here</a>. Free plan doesn't support Source Currency Switching, default\
            \ base currency is EUR"
          examples:
          - "EUR"
          - "USD"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-facebook-marketing:0.2.79"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/facebook-marketing"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/facebook-marketing"
    connectionSpecification:
      title: "Source Facebook Marketing"
      type: "object"
      properties:
        account_id:
          title: "Account Id"
          description: "The Facebook Ad account ID to use when pulling data from the\
            \ Facebook Marketing API."
          type: "string"
        access_token:
          title: "Access Token"
          description: "The value of the access token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/facebook-marketing\">docs</a>\
            \ for more information"
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Start Date"
          description: "The date from which you'd like to replicate data for AdCreatives\
            \ and AdInsights APIs, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ after this date will be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
          format: "date-time"
        end_date:
          title: "End Date"
          description: "The date until which you'd like to replicate data for AdCreatives\
            \ and AdInsights APIs, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ between start_date and this date will be replicated. Not setting this\
            \ option will result in always syncing the latest data."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-26T00:00:00Z"
          type: "string"
          format: "date-time"
        include_deleted:
          title: "Include Deleted"
          description: "Include data from deleted campaigns, ads, and adsets."
          default: false
          type: "boolean"
        insights_lookback_window:
          title: "Insights Lookback Window"
          description: "The attribution window for the actions"
          default: 28
          minimum: 0
          maximum: 28
          type: "integer"
        insights_days_per_job:
          title: "Insights Days Per Job"
          description: "Number of days to sync in one job. The more data you have\
            \ - the smaller you want this parameter to be."
          default: 7
          minimum: 1
          maximum: 30
          type: "integer"
        custom_insights:
          title: "Custom Insights"
          description: "A list wich contains insights entries, each entry must have\
            \ a name and can contains fields, breakdowns or action_breakdowns)"
          type: "array"
          items:
            title: "InsightConfig"
            type: "object"
            properties:
              name:
                title: "Name"
                description: "The name value of insight"
                type: "string"
              fields:
                title: "Fields"
                description: "A list of chosen fields for fields parameter"
                default: []
                type: "array"
                items:
                  type: "string"
              breakdowns:
                title: "Breakdowns"
                description: "A list of chosen breakdowns for breakdowns"
                default: []
                type: "array"
                items:
                  type: "string"
              action_breakdowns:
                title: "Action Breakdowns"
                description: "A list of chosen action_breakdowns for action_breakdowns"
                default: []
                type: "array"
                items:
                  type: "string"
            required:
            - "name"
      required:
      - "account_id"
      - "access_token"
      - "start_date"
      definitions:
        InsightConfig:
          title: "InsightConfig"
          type: "object"
          properties:
            name:
              title: "Name"
              description: "The name value of insight"
              type: "string"
            fields:
              title: "Fields"
              description: "A list of chosen fields for fields parameter"
              default: []
              type: "array"
              items:
                type: "string"
            breakdowns:
              title: "Breakdowns"
              description: "A list of chosen breakdowns for breakdowns"
              default: []
              type: "array"
              items:
                type: "string"
            action_breakdowns:
              title: "Action Breakdowns"
              description: "A list of chosen action_breakdowns for action_breakdowns"
              default: []
              type: "array"
              items:
                type: "string"
          required:
          - "name"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-facebook-pages:0.2.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/facebook-pages"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Facebook Pages Spec"
      type: "object"
      required:
      - "access_token"
      - "page_id"
      additionalProperties: true
      properties:
        access_token:
          type: "string"
          title: "Page Access Token"
          description: "Facebook Page Access Token"
          airbyte_secret: true
        page_id:
          type: "string"
          title: "Page ID"
          description: "Page ID"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-file:0.2.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/file"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "File Source Spec"
      type: "object"
      additionalProperties: false
      required:
      - "dataset_name"
      - "format"
      - "url"
      - "provider"
      properties:
        dataset_name:
          type: "string"
          description: "Name of the final table where to replicate this file (should\
            \ include only letters, numbers dash and underscores)"
        format:
          type: "string"
          enum:
          - "csv"
          - "json"
          - "jsonl"
          - "excel"
          - "feather"
          - "parquet"
          default: "csv"
          description: "File Format of the file to be replicated (Warning: some format\
            \ may be experimental, please refer to docs)."
        reader_options:
          type: "string"
          description: "This should be a valid JSON string used by each reader/parser\
            \ to provide additional options and tune its behavior"
          examples:
          - "{}"
          - "{'sep': ' '}"
        url:
          type: "string"
          description: "URL path to access the file to be replicated"
        provider:
          type: "object"
          description: "Storage Provider or Location of the file(s) to be replicated."
          default: "Public Web"
          oneOf:
          - title: "HTTPS: Public Web"
            required:
            - "storage"
            properties:
              storage:
                type: "string"
                enum:
                - "HTTPS"
                default: "HTTPS"
          - title: "GCS: Google Cloud Storage"
            required:
            - "storage"
            properties:
              storage:
                type: "string"
                enum:
                - "GCS"
                default: "GCS"
              service_account_json:
                type: "string"
                description: "In order to access private Buckets stored on Google\
                  \ Cloud, this connector would need a service account json credentials\
                  \ with the proper permissions as described <a href=\"https://cloud.google.com/iam/docs/service-accounts\"\
                  \ target=\"_blank\">here</a>. Please generate the credentials.json\
                  \ file and copy/paste its content to this field (expecting JSON\
                  \ formats). If accessing publicly available data, this field is\
                  \ not necessary."
          - title: "S3: Amazon Web Services"
            required:
            - "storage"
            properties:
              storage:
                type: "string"
                enum:
                - "S3"
                default: "S3"
              aws_access_key_id:
                type: "string"
                description: "In order to access private Buckets stored on AWS S3,\
                  \ this connector would need credentials with the proper permissions.\
                  \ If accessing publicly available data, this field is not necessary."
              aws_secret_access_key:
                type: "string"
                description: "In order to access private Buckets stored on AWS S3,\
                  \ this connector would need credentials with the proper permissions.\
                  \ If accessing publicly available data, this field is not necessary."
                airbyte_secret: true
          - title: "AzBlob: Azure Blob Storage"
            required:
            - "storage"
            - "storage_account"
            properties:
              storage:
                type: "string"
                enum:
                - "AzBlob"
                default: "AzBlob"
              storage_account:
                type: "string"
                description: "The globally unique name of the storage account that\
                  \ the desired blob sits within. See <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview\"\
                  \ target=\"_blank\">here</a> for more details."
              sas_token:
                type: "string"
                description: "To access Azure Blob Storage, this connector would need\
                  \ credentials with the proper permissions. One option is a SAS (Shared\
                  \ Access Signature) token. If accessing publicly available data,\
                  \ this field is not necessary."
                airbyte_secret: true
              shared_key:
                type: "string"
                description: "To access Azure Blob Storage, this connector would need\
                  \ credentials with the proper permissions. One option is a storage\
                  \ account shared key (aka account key or access key). If accessing\
                  \ publicly available data, this field is not necessary."
                airbyte_secret: true
          - title: "SSH: Secure Shell"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              storage:
                type: "string"
                enum:
                - "SSH"
                default: "SSH"
              user:
                type: "string"
              password:
                type: "string"
                airbyte_secret: true
              host:
                type: "string"
              port:
                type: "string"
                default: "22"
          - title: "SCP: Secure copy protocol"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              storage:
                type: "string"
                enum:
                - "SCP"
                default: "SCP"
              user:
                type: "string"
              password:
                type: "string"
                airbyte_secret: true
              host:
                type: "string"
              port:
                type: "string"
                default: "22"
          - title: "SFTP: Secure File Transfer Protocol"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              storage:
                type: "string"
                enum:
                - "SFTP"
                default: "SFTP"
              user:
                type: "string"
              password:
                type: "string"
                airbyte_secret: true
              host:
                type: "string"
              port:
                type: "string"
                default: "22"
          - title: "Local Filesystem (limited)"
            required:
            - "storage"
            properties:
              storage:
                type: "string"
                description: "WARNING: Note that local storage URL available for read\
                  \ must start with the local mount \"/local/\" at the moment until\
                  \ we implement more advanced docker mounting options..."
                enum:
                - "local"
                default: "local"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-freshdesk:0.2.7"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/freshdesk"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Freshdesk Spec"
      type: "object"
      required:
      - "domain"
      - "api_key"
      additionalProperties: false
      properties:
        domain:
          type: "string"
          description: "Freshdesk domain"
          examples:
          - "myaccount.freshdesk.com"
          pattern:
          - "^[a-zA-Z0-9._-]*\\.freshdesk\\.com$"
        api_key:
          type: "string"
          description: "Freshdesk API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/freshdesk\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        requests_per_minute:
          title: "Requests per minute"
          type: "integer"
          description: "Number of requests per minute that this source allowed to\
            \ use."
        start_date:
          title: "Start date"
          description: "Date from which to start pulling data."
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-12-01T00:00:00Z"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-freshsales:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Freshsales Spec"
      type: "object"
      required:
      - "domain_name"
      - "api_key"
      additionalProperties: false
      properties:
        domain_name:
          type: "string"
          description: "Freshsales domain"
          examples:
          - "mydomain.myfreshworks.com"
        api_key:
          type: "string"
          description: "Your API Access Key. See <a href=\"https://crmsupport.freshworks.com/support/solutions/articles/50000002503-how-to-find-my-api-key-\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-freshservice:0.1.0"
  spec:
    documentationUrl: "https://hub.docker.com/r/airbyte/source-freshservice"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Freshservice Spec"
      type: "object"
      required:
      - "domain_name"
      - "api_key"
      - "start_date"
      additionalProperties: false
      properties:
        domain_name:
          type: "string"
          description: "Freshservice domain"
          examples:
          - "mydomain.freshservice.com"
        api_key:
          title: "Api Key"
          type: "string"
          description: "Your API Access Key. See <a href=\"https://api.freshservice.com/#authentication\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        start_date:
          title: "Replication Start Date"
          type: "string"
          description: "UTC date and time in the format 2020-10-01T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2020-10-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-github:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/github"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Github Source Spec"
      type: "object"
      required:
      - "start_date"
      - "repository"
      additionalProperties: true
      properties:
        credentials:
          title: "Authentication mechanism"
          description: "Choose how to authenticate to Github"
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Github (Oauth)"
            required:
            - "access_token"
            properties:
              option_title:
                type: "string"
                title: "Credentials title"
                description: "OAuth Credentials"
                const: "OAuth Credentials"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Oauth access token"
                airbyte_secret: true
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "personal_access_token"
            properties:
              option_title:
                type: "string"
                title: "Credentials title"
                description: "PAT Credentials"
                const: "PAT Credentials"
              personal_access_token:
                type: "string"
                title: "Personal Access Tokens"
                description: "Log into Github and then generate a <a href=\"https://github.com/settings/tokens\"\
                  > personal access token</a>. To load balance your API quota consumption\
                  \ across multiple API tokens, input multiple tokens separated with\
                  \ \",\""
                airbyte_secret: true
        repository:
          type: "string"
          examples:
          - "airbytehq/airbyte"
          - "airbytehq/*"
          title: "Github repositories"
          description: "Space-delimited list of GitHub repositories/organizations,\
            \ e.g. `airbytehq/airbyte` for single repository and `airbytehq/*` for\
            \ get all repositories from organization"
        start_date:
          type: "string"
          title: "Start date"
          description: "The date from which you'd like to replicate data for GitHub\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated. Note that it will be used only in the following\
            \ incremental streams: comments, commits and issues."
          examples:
          - "2021-03-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        branch:
          type: "string"
          title: "Branch"
          examples:
          - "airbytehq/airbyte/master"
          description: "Space-delimited list of GitHub repository branches to pull\
            \ commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified\
            \ for a repository, the default branch will be pulled."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-gitlab:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/gitlab"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Gitlab Singer Spec"
      type: "object"
      required:
      - "api_url"
      - "private_token"
      - "start_date"
      additionalProperties: false
      properties:
        api_url:
          type: "string"
          examples:
          - "gitlab.com"
          description: "Please enter your basic URL from Gitlab instance"
        private_token:
          type: "string"
          description: "Log into your Gitlab account and then generate a personal\
            \ Access Token."
          airbyte_secret: true
        groups:
          type: "string"
          examples:
          - "airbyte.io"
          description: "Space-delimited list of groups. e.g. airbyte.io"
        projects:
          type: "string"
          examples:
          - "airbyte.io/documentation"
          description: "Space-delimited list of projects. e.g. airbyte.io/documentation\
            \ meltano/tap-gitlab"
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Gitlab\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
          examples:
          - "2021-03-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "blotout/source-google-ads:0.1.43"
  spec:
    documentationUrl: "https://docs.airbyte.com/integrations/sources/google-ads"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Google Ads Spec"
      type: "object"
      required:
      - "credentials"
      - "start_date"
      - "customer_id"
      additionalProperties: true
      properties:
        credentials:
          type: "object"
          description: ""
          title: "Google Credentials"
          order: 0
          required:
          - "developer_token"
          - "client_id"
          - "client_secret"
          - "refresh_token"
          properties:
            developer_token:
              type: "string"
              title: "Developer Token"
              order: 0
              description: "Developer token granted by Google to use their APIs. More\
                \ instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            client_id:
              type: "string"
              title: "Client ID"
              order: 1
              description: "The Client ID of your Google Ads developer application.\
                \ More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
                >docs</a>"
            client_secret:
              type: "string"
              title: "Client Secret"
              order: 2
              description: "The Client Secret of your Google Ads developer application.\
                \ More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            refresh_token:
              type: "string"
              title: "Refresh Token"
              order: 3
              description: "The token for obtaining a new access token. More instruction\
                \ on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            access_token:
              type: "string"
              title: "Access Token (Optional)"
              order: 4
              description: "Access Token for making authenticated requests. More instruction\
                \ on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
        customer_id:
          title: "Customer ID(s)"
          type: "string"
          description: "Comma separated list of (client) customer IDs. Each customer\
            \ ID must be specified as a 10-digit number without dashes. More instruction\
            \ on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\
            >docs</a>. Metrics streams like AdGroupAdReport cannot be requested for\
            \ a manager account."
          pattern: "^[0-9]{10}(,[0-9]{10})*$"
          examples:
          - "6783948572,5839201945"
          order: 1
        start_date:
          type: "string"
          title: "Start Date"
          description: "UTC date and time in the format 2017-01-25. Any data before\
            \ this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2017-01-25"
          order: 2
        end_date:
          type: "string"
          title: "End Date (Optional)"
          description: "UTC date and time in the format 2017-01-25. Any data after\
            \ this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2017-01-30"
          order: 6
        custom_queries:
          type: "array"
          title: "Custom GAQL Queries (Optional)"
          description: ""
          order: 3
          items:
            type: "object"
            properties:
              query:
                type: "string"
                title: "Custom Query"
                description: "A custom defined GAQL query for building the report.\
                  \ Should not contain segments.date expression because it is used\
                  \ by incremental streams. See Google's <a href=\"https://developers.google.com/google-ads/api/fields/v9/overview_query_builder\"\
                  >query builder</a> for more information."
                examples:
                - "SELECT segments.ad_destination_type, campaign.advertising_channel_sub_type\
                  \ FROM campaign WHERE campaign.status = 'PAUSED'"
              table_name:
                type: "string"
                title: "Destination Table Name"
                description: "The table name in your destination database for choosen\
                  \ query."
        login_customer_id:
          type: "string"
          title: "Login Customer ID for Managed Accounts (Optional)"
          description: "If your access to the customer account is through a manager\
            \ account, this field is required and must be set to the customer ID of\
            \ the manager account (10-digit number without dashes). More information\
            \ about this field you can see <a href=\"https://developers.google.com/google-ads/api/docs/concepts/call-structure#cid\"\
            >here</a>"
          pattern: "^([0-9]{10})?$"
          examples:
          - "7349206847"
          order: 4
        conversion_window_days:
          title: "Conversion Window (Optional)"
          type: "integer"
          description: "A conversion window is the period of time after an ad interaction\
            \ (such as an ad click or video view) during which a conversion, such\
            \ as a purchase, is recorded in Google Ads. For more information, see\
            \ Google's <a href=\"https://support.google.com/google-ads/answer/3123169?hl=en\"\
            >documentation</a>."
          minimum: 0
          maximum: 1095
          default: 14
          examples:
          - 14
          order: 5
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        - - "developer_token"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- dockerImage: "airbyte/source-google-analytics-v4:0.1.9"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-analytics-v4"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Google Analytics V4 Spec"
      type: "object"
      required:
      - "view_id"
      - "start_date"
      additionalProperties: true
      properties:
        view_id:
          type: "string"
          title: "View ID"
          description: "The ID for the Google Analytics View you want to fetch data\
            \ from. This can be found from the <a href=\"https://ga-dev-tools.appspot.com/account-explorer/\"\
            >Google Analytics Account Explorer</a>."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          description: "A date in the format YYYY-MM-DD."
          examples:
          - "2020-06-01"
        window_in_days:
          type: "integer"
          description: "The amount of days for each data-chunk begining from start_date.\
            \ Bigger the value - faster the fetch. (Min=1, as for a Day; Max=364,\
            \ as for a Year)."
          examples:
          - 30
          - 60
          - 90
          - 120
          - 200
          - 364
          default: 90
        custom_reports:
          title: "Custom Reports"
          type: "string"
          description: "A JSON array describing the custom reports you want to sync\
            \ from GA. Check out the <a href=\"https://docs.airbyte.io/integrations/sources/google-analytics-v4\"\
            >docs</a> to get more information about this field."
        credentials:
          type: "object"
          oneOf:
          - title: "Authenticate via Google (Oauth)"
            type: "object"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                type: "string"
                const: "Client"
                enum:
                - "Client"
                default: "Client"
                order: 0
              client_id:
                title: "Client ID"
                type: "string"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              client_secret:
                title: "Client Secret"
                type: "string"
                description: "The client secret of your developer application"
                airbyte_secret: true
              refresh_token:
                title: "Refresh Token"
                type: "string"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
              access_token:
                title: "Access Token"
                type: "string"
                description: "A access token generated using the above client ID,\
                  \ secret and refresh_token"
                airbyte_secret: true
          - type: "object"
            title: "Service Account Key Authentication"
            required:
            - "credentials_json"
            properties:
              auth_type:
                type: "string"
                const: "Service"
                enum:
                - "Service"
                default: "Service"
                order: 0
              credentials_json:
                type: "string"
                description: "The JSON key of the service account to use for authorization"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- dockerImage: "airbyte/source-google-directory:0.1.8"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-directory"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Google Directory Spec"
      type: "object"
      required: []
      additionalProperties: true
      properties:
        credentials:
          title: "Google Credentials"
          description: "Google APIs use the OAuth 2.0 protocol for authentication\
            \ and authorization. The Source supports <a href=\"https://developers.google.com/identity/protocols/oauth2#webserver\"\
            \ target=\"_blank\">Web server application</a> and <a href=\"https://developers.google.com/identity/protocols/oauth2#serviceaccount\"\
            \ target=\"_blank\">Service accounts</a> scenarios"
          type: "object"
          oneOf:
          - title: "Sign in via Google (Oauth)"
            description: "For these scenario user only needs to give permission to\
              \ read Google Directory data"
            type: "object"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              credentials_title:
                type: "string"
                title: "Credentials title"
                description: "Authentication scenario"
                const: "Web server app"
                enum:
                - "Web server app"
                default: "Web server app"
                order: 0
              client_id:
                title: "Client ID"
                type: "string"
                description: "The client ID of developer application"
                airbyte_secret: true
              client_secret:
                title: "Client secret"
                type: "string"
                description: "The client secret of developer application"
                airbyte_secret: true
              refresh_token:
                title: "Refresh Token"
                type: "string"
                description: "The token for obtaining new access token"
                airbyte_secret: true
          - title: "Service account Key"
            description: "For these scenario user should obtain service account's\
              \ credentials from the Google API Console and provide delegated email"
            type: "object"
            required:
            - "credentials_json"
            - "email"
            properties:
              credentials_title:
                type: "string"
                title: "Credentials title"
                description: "Authentication scenario"
                const: "Service accounts"
                enum:
                - "Service accounts"
                default: "Service accounts"
                order: 0
              credentials_json:
                type: "string"
                title: "Credentials JSON"
                description: "The contents of the JSON service account key. See the\
                  \ <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation\"\
                  >docs</a> for more information on how to generate this key."
                airbyte_secret: true
              email:
                type: "string"
                title: "Email"
                description: "The email of the user, which has permissions to access\
                  \ the Google Workspace Admin APIs."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- dockerImage: "airbyte/source-google-search-console:0.1.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-search-console"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Google Search Console Spec"
      type: "object"
      additionalProperties: false
      required:
      - "site_urls"
      - "start_date"
      - "authorization"
      properties:
        site_urls:
          type: "array"
          items:
            type: "string"
          description: "Website URLs property; do not include the domain-level property\
            \ in the list"
          examples:
          - "https://example1.com"
          - "https://example2.com"
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data in the format\
            \ YYYY-MM-DD."
          examples:
          - "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        end_date:
          type: "string"
          description: "The date from which you'd like to replicate data in the format\
            \ YYYY-MM-DD. Must be greater or equal start_date field"
          examples:
          - "2021-12-12"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        authorization:
          type: "object"
          title: "Authentication Type"
          oneOf:
          - title: "Authenticate via Google (Oauth)"
            type: "object"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                type: "string"
                const: "Client"
                enum:
                - "Client"
                default: "Client"
                order: 0
              client_id:
                title: "Client ID"
                type: "string"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              client_secret:
                title: "Client Secret"
                type: "string"
                description: "The client secret of your developer application"
                airbyte_secret: true
              access_token:
                title: "Access Token"
                type: "string"
                description: "An access token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
              refresh_token:
                title: "Refresh Token"
                type: "string"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
          - type: "object"
            title: "Service Account Key Authentication"
            required:
            - "auth_type"
            - "service_account_info"
            - "email"
            properties:
              auth_type:
                type: "string"
                const: "Service"
                enum:
                - "Service"
                default: "Service"
                order: 0
              service_account_info:
                title: "Service Account JSON Key"
                type: "string"
                description: "The JSON key of the service account to use for authorization"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
              email:
                title: "Admin Email"
                type: "string"
                description: "The email of the user which has permissions to access\
                  \ the Google Workspace Admin APIs."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "authorization"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- dockerImage: "airbyte/source-google-sheets:0.2.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-sheets"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Stripe Source Spec"
      type: "object"
      required:
      - "spreadsheet_id"
      additionalProperties: true
      properties:
        spreadsheet_id:
          type: "string"
          description: "The ID of the spreadsheet to be replicated."
        credentials:
          type: "object"
          oneOf:
          - title: "Authenticate via Google (Oauth)"
            type: "object"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                type: "string"
                const: "Client"
              client_id:
                title: "Client ID"
                type: "string"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              client_secret:
                title: "Client Secret"
                type: "string"
                description: "The client secret of your developer application"
                airbyte_secret: true
              refresh_token:
                title: "Refresh Token"
                type: "string"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
          - title: "Service Account Key Authentication"
            type: "object"
            required:
            - "auth_type"
            - "service_account_info"
            properties:
              auth_type:
                type: "string"
                const: "Service"
              service_account_info:
                type: "string"
                description: "The JSON key of the service account to use for authorization"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - 0
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- dockerImage: "airbyte/source-google-workspace-admin-reports:0.1.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-workspace-admin-reports"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Google Directory Spec"
      type: "object"
      required:
      - "credentials_json"
      - "email"
      additionalProperties: false
      properties:
        credentials_json:
          type: "string"
          description: "The contents of the JSON service account key. See the <a href=\"\
            https://developers.google.com/admin-sdk/reports/v1/guides/delegation\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
        email:
          type: "string"
          description: "The email of the user, which has permissions to access the\
            \ Google Workspace Admin APIs."
        lookback:
          type: "integer"
          minimum: 0
          maximum: 180
          description: "Sets the range of time shown in the report. Reports API allows\
            \ from up to 180 days ago. "
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-greenhouse:0.2.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/greenhouse"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Greenhouse Spec"
      type: "object"
      required:
      - "api_key"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "Greenhouse API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/greenhouse\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-harvest:0.1.5"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/harvest"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Harvest Spec"
      type: "object"
      required:
      - "api_token"
      - "account_id"
      - "replication_start_date"
      additionalProperties: false
      properties:
        api_token:
          title: "API Token"
          description: "Harvest API Token."
          airbyte_secret: true
          type: "string"
        account_id:
          title: "Account ID"
          description: "Harvest account ID. Required for all Harvest requests in pair\
            \ with API Key"
          airbyte_secret: true
          type: "string"
        replication_start_date:
          title: "Replication Start Date"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- dockerImage: "airbyte/source-hubspot:0.1.24"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/hubspot"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "HubSpot Source Spec"
      type: "object"
      required:
      - "start_date"
      - "credentials"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          title: "Replication start date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2017-01-25T00:00:00Z"
        credentials:
          title: "Authentication mechanism"
          description: "Choose either to provide the API key or the OAuth2.0 credentials"
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via HubSpot (Oauth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            - "credentials_title"
            properties:
              credentials_title:
                type: "string"
                title: "Credentials title"
                description: "Name of the credentials set"
                const: "OAuth Credentials"
                enum:
                - "OAuth Credentials"
                default: "OAuth Credentials"
                order: 0
              client_id:
                title: "Client ID"
                description: "HubSpot client_id. See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this id."
                type: "string"
                examples:
                - "123456789000"
              client_secret:
                title: "Client Secret"
                description: "HubSpot client_secret. See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this secret."
                type: "string"
                examples:
                - "secret"
                airbyte_secret: true
              refresh_token:
                title: "Refresh token"
                description: "HubSpot refresh_token. See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help generating the token."
                type: "string"
                examples:
                - "refresh_token"
                airbyte_secret: true
          - type: "object"
            title: "API key"
            required:
            - "api_key"
            - "credentials_title"
            properties:
              credentials_title:
                type: "string"
                title: "Credentials title"
                description: "Name of the credentials set"
                const: "API Key Credentials"
                enum:
                - "API Key Credentials"
                default: "API Key Credentials"
                order: 0
              api_key:
                title: "API key"
                description: "HubSpot API Key. See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this key."
                type: "string"
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- dockerImage: "airbyte/source-db2:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/db2"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "IBM Db2 Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "db"
      - "username"
      - "password"
      - "encryption"
      additionalProperties: false
      properties:
        host:
          description: "Host of the Db2."
          type: "string"
          order: 0
        port:
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 8123
          examples:
          - "8123"
          order: 1
        db:
          description: "Name of the database."
          type: "string"
          examples:
          - "default"
          order: 2
        username:
          description: "Username to use to access the database."
          type: "string"
          order: 3
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
          order: 4
        encryption:
          title: "Encryption"
          type: "object"
          description: "Encryption method to use when communicating with the database"
          order: 5
          oneOf:
          - title: "Unencrypted"
            additionalProperties: false
            description: "Data transfer will not be encrypted."
            required:
            - "encryption_method"
            properties:
              encryption_method:
                type: "string"
                const: "unencrypted"
                enum:
                - "unencrypted"
                default: "unencrypted"
          - title: "TLS Encrypted (verify certificate)"
            additionalProperties: false
            description: "Verify and use the cert provided by the server."
            required:
            - "encryption_method"
            - "ssl_certificate"
            properties:
              encryption_method:
                type: "string"
                const: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
              ssl_certificate:
                title: "SSL PEM file"
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations"
                type: "string"
                airbyte_secret: true
                multiline: true
              key_store_password:
                title: "Key Store Password. This field is optional. If you do not\
                  \ fill in this field, the password will be randomly generated."
                description: "Key Store Password"
                type: "string"
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-instagram:0.1.9"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/instagram"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/instagram"
    connectionSpecification:
      title: "Source Instagram"
      type: "object"
      properties:
        start_date:
          title: "Start Date"
          description: "The date from which you'd like to replicate data for User\
            \ Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after\
            \ this date will be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
          format: "date-time"
        access_token:
          title: "Access Token"
          description: "The value of the access token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/instagram\">docs</a> for\
            \ more information"
          airbyte_secret: true
          type: "string"
      required:
      - "start_date"
      - "access_token"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-intercom:0.1.8"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/intercom"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Intercom Spec"
      type: "object"
      required:
      - "start_date"
      - "access_token"
      additionalProperties: true
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Intercom\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
          examples:
          - "2020-11-16T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        access_token:
          title: "Access Token"
          type: "string"
          description: "Access token generated either from an oauth flow or from the\
            \ Intercom Developer dashboard. See the <a href=\"https://docs.airbyte.io/integrations/sources/intercom\"\
            >docs</a> for more information on how to obtain this key manually."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-iterable:0.1.12"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/iterable"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Iterable Spec"
      type: "object"
      required:
      - "start_date"
      - "api_key"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Iterable,\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated."
          examples:
          - "2021-04-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        api_key:
          type: "string"
          description: "Iterable API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/iterable\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-jira:0.2.14"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/jira"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Jira Spec"
      type: "object"
      required:
      - "api_token"
      - "domain"
      - "email"
      additionalProperties: true
      properties:
        api_token:
          type: "string"
          description: "Jira API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/jira\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
        domain:
          type: "string"
          examples:
          - "domainname.atlassian.net"
          pattern: "^[a-zA-Z0-9._-]*\\.atlassian\\.net$"
          description: "Domain for your Jira account, e.g. airbyteio.atlassian.net"
        email:
          type: "string"
          description: "The user email for your Jira account"
        projects:
          type: "array"
          title: "Projects"
          items:
            type: "string"
          examples:
          - "PROJ1"
          - "PROJ2"
          description: "Comma-separated list of Jira project keys to replicate data\
            \ for"
        start_date:
          type: "string"
          title: "Start Date"
          description: "The date from which you'd like to replicate data for Jira\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated. Note that it will be used only in the following\
            \ incremental streams: issues."
          examples:
          - "2021-03-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        additional_fields:
          type: "array"
          title: "Additional Fields"
          items:
            type: "string"
          description: "Comma-separated list of additional fields to include in replicating\
            \ issues"
          examples:
          - "Field A"
          - "Field B"
        expand_issue_changelog:
          type: "boolean"
          title: "Expand Issue Changelog"
          description: "Expand the changelog when replicating issues"
          default: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-kafka:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/kafka"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Kafka Source Spec"
      type: "object"
      required:
      - "bootstrap_servers"
      - "subscription"
      - "protocol"
      additionalProperties: false
      properties:
        bootstrap_servers:
          title: "Bootstrap servers"
          description: "A list of host/port pairs to use for establishing the initial\
            \ connection to the Kafka cluster. The client will make use of all servers\
            \ irrespective of which servers are specified here for bootstrapping&mdash;this\
            \ list only impacts the initial hosts used to discover the full set of\
            \ servers. This list should be in the form <code>host1:port1,host2:port2,...</code>.\
            \ Since these servers are just used for the initial connection to discover\
            \ the full cluster membership (which may change dynamically), this list\
            \ need not contain the full set of servers (you may want more than one,\
            \ though, in case a server is down)."
          type: "string"
          examples:
          - "kafka-broker1:9092,kafka-broker2:9092"
        subscription:
          title: "Subscribe method"
          type: "object"
          description: "You can choose to manually assign a list of partitions, or\
            \ subscribe to all topics matching specified pattern to get dynamically\
            \ assigned partitions"
          oneOf:
          - title: "Manually assign a list of partitions"
            required:
            - "subscription_type"
            - "topic_partitions"
            properties:
              subscription_type:
                description: "Manually assign a list of partitions to this consumer.\
                  \ This interface does not allow for incremental assignment and will\
                  \ replace the previous assignment (if there is one).\nIf the given\
                  \ list of topic partitions is empty, it is treated the same as unsubscribe()."
                type: "string"
                const: "assign"
                enum:
                - "assign"
                default: "assign"
              topic_partitions:
                title: "List of topic:partition pairs"
                type: "string"
                examples:
                - "sample.topic:0, sample.topic:1"
          - title: "Subscribe to all topics matching specified pattern"
            required:
            - "subscription_type"
            - "topic_pattern"
            properties:
              subscription_type:
                description: "Topic pattern from which the records will be read."
                type: "string"
                const: "subscribe"
                enum:
                - "subscribe"
                default: "subscribe"
              topic_pattern:
                title: "Topic pattern"
                type: "string"
                examples:
                - "sample.topic"
        test_topic:
          title: "Test topic"
          description: "Topic to test if Airbyte can consume messages."
          type: "string"
          examples:
          - "test.topic"
        group_id:
          title: "Group ID"
          description: "Group id."
          type: "string"
          examples:
          - "group.id"
        max_poll_records:
          title: "Max poll records"
          description: "The maximum number of records returned in a single call to\
            \ poll(). Note, that max_poll_records does not impact the underlying fetching\
            \ behavior. The consumer will cache the records from each fetch request\
            \ and returns them incrementally from each poll."
          type: "integer"
          default: 500
        protocol:
          title: "Protocol"
          type: "object"
          description: "Protocol used to communicate with brokers."
          oneOf:
          - title: "PLAINTEXT"
            required:
            - "security_protocol"
            properties:
              security_protocol:
                type: "string"
                enum:
                - "PLAINTEXT"
                default: "PLAINTEXT"
          - title: "SASL PLAINTEXT"
            required:
            - "security_protocol"
            - "sasl_mechanism"
            - "sasl_jaas_config"
            properties:
              security_protocol:
                type: "string"
                enum:
                - "SASL_PLAINTEXT"
                default: "SASL_PLAINTEXT"
              sasl_mechanism:
                title: "SASL mechanism"
                description: "SASL mechanism used for client connections. This may\
                  \ be any mechanism for which a security provider is available."
                type: "string"
                default: "PLAIN"
                enum:
                - "PLAIN"
              sasl_jaas_config:
                title: "SASL JAAS config"
                description: "JAAS login context parameters for SASL connections in\
                  \ the format used by JAAS configuration files."
                type: "string"
                default: ""
                airbyte_secret: true
          - title: "SASL SSL"
            required:
            - "security_protocol"
            - "sasl_mechanism"
            - "sasl_jaas_config"
            properties:
              security_protocol:
                type: "string"
                enum:
                - "SASL_SSL"
                default: "SASL_SSL"
              sasl_mechanism:
                title: "SASL mechanism"
                description: "SASL mechanism used for client connections. This may\
                  \ be any mechanism for which a security provider is available."
                type: "string"
                default: "GSSAPI"
                enum:
                - "GSSAPI"
                - "OAUTHBEARER"
                - "SCRAM-SHA-256"
              sasl_jaas_config:
                title: "SASL JAAS config"
                description: "JAAS login context parameters for SASL connections in\
                  \ the format used by JAAS configuration files."
                type: "string"
                default: ""
                airbyte_secret: true
        client_id:
          title: "Client ID"
          description: "An id string to pass to the server when making requests. The\
            \ purpose of this is to be able to track the source of requests beyond\
            \ just ip/port by allowing a logical application name to be included in\
            \ server-side request logging."
          type: "string"
          examples:
          - "airbyte-consumer"
        enable_auto_commit:
          title: "Enable auto commit"
          description: "If true the consumer's offset will be periodically committed\
            \ in the background."
          type: "boolean"
          default: true
        auto_commit_interval_ms:
          title: "Auto commit interval ms"
          description: "The frequency in milliseconds that the consumer offsets are\
            \ auto-committed to Kafka if enable.auto.commit is set to true."
          type: "integer"
          default: 5000
        client_dns_lookup:
          title: "Client DNS lookup"
          description: "Controls how the client uses DNS lookups. If set to use_all_dns_ips,\
            \ connect to each returned IP address in sequence until a successful connection\
            \ is established. After a disconnection, the next IP is used. Once all\
            \ IPs have been used once, the client resolves the IP(s) from the hostname\
            \ again. If set to resolve_canonical_bootstrap_servers_only, resolve each\
            \ bootstrap address into a list of canonical names. After the bootstrap\
            \ phase, this behaves the same as use_all_dns_ips. If set to default (deprecated),\
            \ attempt to connect to the first IP address returned by the lookup, even\
            \ if the lookup returns multiple IP addresses."
          type: "string"
          default: "use_all_dns_ips"
          enum:
          - "default"
          - "use_all_dns_ips"
          - "resolve_canonical_bootstrap_servers_only"
        retry_backoff_ms:
          title: "Retry backoff ms"
          description: "The amount of time to wait before attempting to retry a failed\
            \ request to a given topic partition. This avoids repeatedly sending requests\
            \ in a tight loop under some failure scenarios."
          type: "integer"
          default: 100
        request_timeout_ms:
          title: "Request timeout ms"
          description: "The configuration controls the maximum amount of time the\
            \ client will wait for the response of a request. If the response is not\
            \ received before the timeout elapses the client will resend the request\
            \ if necessary or fail the request if retries are exhausted."
          type: "integer"
          default: 30000
        receive_buffer_bytes:
          title: "Receive buffer bytes"
          description: "The size of the TCP receive buffer (SO_RCVBUF) to use when\
            \ reading data. If the value is -1, the OS default will be used."
          type: "integer"
          default: 32768
        auto_offset_reset:
          title: "Auto offset reset"
          description: "What to do when there is no initial offset in Kafka or if\
            \ the current offset does not exist any more on the server - earliest:\
            \ automatically reset the offset to the earliest offset, latest: automatically\
            \ reset the offset to the latest offset, none: throw exception to the\
            \ consumer if no previous offset is found for the consumer's group, anything\
            \ else: throw exception to the consumer."
          type: "string"
          default: "latest"
          enum:
          - "latest"
          - "earliest"
          - "none"
        repeated_calls:
          title: "Repeated calls"
          description: "The number of repeated calls to poll() if no messages were\
            \ received."
          type: "integer"
          default: 3
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    supported_source_sync_modes:
    - "append"
- dockerImage: "airbyte/source-klaviyo:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/klaviyo"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/klaviyo"
    connectionSpecification:
      title: "Klaviyo Spec"
      type: "object"
      properties:
        api_key:
          title: "Api Key"
          description: "Klaviyo API Key. See our <a href=\"https://docs.airbyte.io/integrations/sources/klaviyo\"\
            >docs</a> if you need help finding this key."
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Start Date"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
      required:
      - "api_key"
      - "start_date"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- dockerImage: "airbyte/source-lever-hiring:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/lever-hiring"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/lever-hiring#changelog"
    connectionSpecification:
      title: "Lever Hiring Spec"
      type: "object"
      properties:
        client_id:
          title: "Client Id"
          description: "The client application id as provided when registering the\
            \ application with Lever."
          type: "string"
        client_secret:
          title: "Client Secret"
          description: "The application secret as provided when registering the application\
            \ with Lever."
          airbyte_secret: true
          type: "string"
        refresh_token:
          title: "Refresh Token"
          description: "The refresh token your application will need to submit to\
            \ get a new access token after it's expired."
          type: "string"
        environment:
          title: "Environment"
          description: "Sandbox or Production environment."
          default: "Production"
          enum:
          - "Sandbox"
          - "Production"
          type: "string"
        start_date:
          title: "Start Date"
          description: "UTC date and time in the format 2019-02-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-04-25T00:00:00Z"
          type: "string"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "start_date"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        - - "refresh_token"
        oauthFlowOutputParameters: []
- dockerImage: "airbyte/source-linkedin-ads:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/linkedin-ads"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Linkedin Ads Spec"
      type: "object"
      required:
      - "start_date"
      - "access_token"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          description: "Date in the format 2020-09-17. Any data before this date will\
            \ not be replicated."
          examples:
          - "2021-05-17"
        access_token:
          type: "string"
          title: "Access Token"
          description: "The token value ganerated using Auth Code"
          airbyte_secret: true
        account_ids:
          title: "Account IDs"
          type: "array"
          description: "Specify the Account IDs separated by space, from which to\
            \ pull the data. Leave empty to pull from all associated accounts."
          items:
            type: "integer"
          default: []
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-looker:0.2.5"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/looker"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Looker Spec"
      type: "object"
      required:
      - "domain"
      - "client_id"
      - "client_secret"
      additionalProperties: false
      properties:
        domain:
          type: "string"
          examples:
          - "domainname.looker.com"
          - "looker.clientname.com"
          - "123.123.124.123:8000"
          description: "Domain for your Looker account, e.g. airbyte.cloud.looker.com,looker.[clientname].com,IP\
            \ address"
        client_id:
          title: "Client ID"
          type: "string"
          description: "The Client ID is first part of an API3 key that is specific\
            \ to each Looker user. See the <a href=\"https://docs.airbyte.io/integrations/sources/looker\"\
            >docs</a> for more information on how to generate this key."
        client_secret:
          title: "Client Secret"
          type: "string"
          description: "The Client Secret is second part of an API3 key."
        run_look_ids:
          title: "Look IDs to Run"
          type: "array"
          items:
            type: "string"
            pattern: "^[0-9]*$"
          description: "The IDs of any Looks to run (optional)"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-mailchimp:0.3.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mailchimp"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Mailchimp Spec"
      type: "object"
      required:
      - "username"
      - "apikey"
      additionalProperties: false
      properties:
        username:
          type: "string"
          description: "The Username or email you use to sign into Mailchimp"
        apikey:
          type: "string"
          airbyte_secret: true
          description: "API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/mailchimp\"\
            >docs</a> for information on how to generate this key."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "blotout/source-mailgun:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mailgun"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Mailgun Spec"
      type: "object"
      required:
      - "private_key"
      additionalProperties: true
      properties:
        private_key:
          type: "string"
          airbyte_secret: true
          description: "Primary account API key to access your Mailgun data."
          title: "Private API Key"
        domain_region:
          type: "string"
          description: "Domain region code. 'EU' or 'US' are possible values. The\
            \ default is 'US'."
          title: "Domain Region Code"
        start_date:
          title: "Replication Start Date"
          description: "UTC date and time in the format 2020-10-01 00:00:00. Any data\
            \ before this date will not be replicated. If omitted, defaults to 3 days\
            \ ago."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
          examples:
          - "2020-10-01 00:00:00"
          type: "string"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-marketo:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/marketo"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Marketo Spec"
      type: "object"
      required:
      - "domain_url"
      - "client_id"
      - "client_secret"
      - "start_date"
      additionalProperties: false
      properties:
        domain_url:
          type: "string"
          description: "Your Marketo Base URL. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"\
            > the docs </a> for info on how to obtain this."
          examples:
          - "https://000-AAA-000.mktorest.com"
          airbyte_secret: true
        client_id:
          type: "string"
          description: "Your Marketo client_id. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"\
            > the docs </a> for info on how to obtain this."
          airbyte_secret: true
        client_secret:
          type: "string"
          description: "Your Marketo client secret. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"\
            > the docs </a> for info on how to obtain this."
          airbyte_secret: true
        start_date:
          type: "string"
          description: "Data generated in Marketo after this date will be replicated.\
            \ This date must be specified in the format YYYY-MM-DDT00:00:00Z."
          examples:
          - "2020-09-25T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        window_in_days:
          type: "integer"
          description: "The amount of days for each data-chunk begining from start_date.\
            \ (Min=1, as for a Day; Max=30, as for a Month)."
          examples:
          - 1
          - 5
          - 10
          - 15
          - 30
          default: 30
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-mssql:0.3.9"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/mssql"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "MSSQL Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      additionalProperties: false
      properties:
        host:
          description: "Hostname of the database."
          type: "string"
        port:
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          examples:
          - "1433"
        database:
          description: "Name of the database."
          type: "string"
          examples:
          - "master"
        username:
          description: "Username to use to access the database."
          type: "string"
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
        ssl_method:
          title: "SSL Method"
          type: "object"
          description: "Encryption method to use when communicating with the database"
          order: 6
          oneOf:
          - title: "Unencrypted"
            additionalProperties: false
            description: "Data transfer will not be encrypted."
            required:
            - "ssl_method"
            properties:
              ssl_method:
                type: "string"
                const: "unencrypted"
                enum:
                - "unencrypted"
                default: "unencrypted"
          - title: "Encrypted (trust server certificate)"
            additionalProperties: false
            description: "Use the cert provided by the server without verification.\
              \  (For testing purposes only!)"
            required:
            - "ssl_method"
            properties:
              ssl_method:
                type: "string"
                const: "encrypted_trust_server_certificate"
                enum:
                - "encrypted_trust_server_certificate"
                default: "encrypted_trust_server_certificate"
          - title: "Encrypted (verify certificate)"
            additionalProperties: false
            description: "Verify and use the cert provided by the server."
            required:
            - "ssl_method"
            - "trustStoreName"
            - "trustStorePassword"
            properties:
              ssl_method:
                type: "string"
                const: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
              hostNameInCertificate:
                title: "Host Name In Certificate"
                type: "string"
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
                order: 7
        replication_method:
          type: "string"
          title: "Replication Method"
          description: "Replication method to use for extracting data from the database.\
            \ STANDARD replication requires no setup on the DB side but will not be\
            \ able to represent deletions incrementally. CDC uses {TBC} to detect\
            \ inserts, updates, and deletes. This needs to be configured on the source\
            \ database itself."
          default: "STANDARD"
          enum:
          - "STANDARD"
          - "CDC"
        tunnel_method:
          type: "object"
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                description: "No ssh tunnel needed to connect to database"
                type: "string"
                const: "NO_TUNNEL"
                order: 0
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
                type: "string"
                order: 3
              ssh_key:
                title: "SSH Private Key"
                description: "OS-level user account ssh key credentials for logging\
                  \ into the jump server host."
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
                type: "string"
                order: 3
              tunnel_user_password:
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                type: "string"
                airbyte_secret: true
                order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-microsoft-teams:0.2.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/microsoft-teams"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Microsoft Teams Spec"
      type: "object"
      required:
      - "tenant_id"
      - "client_id"
      - "client_secret"
      - "period"
      additionalProperties: false
      properties:
        tenant_id:
          title: "Directory (tenant) ID"
          type: "string"
          description: "Directory (tenant) ID"
        client_id:
          title: "Application (client) ID"
          type: "string"
          description: "Application (client) ID"
        client_secret:
          title: "Client Secret"
          type: "string"
          description: "Client secret"
          airbyte_secret: true
        period:
          type: "string"
          description: "Specifies the length of time over which the Team Device Report\
            \ stream is aggregated. The supported values are: D7, D30, D90, and D180."
          examples:
          - "D7"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-mixpanel:0.1.5"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mixpanel"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Mixpanel Spec"
      type: "object"
      required:
      - "api_secret"
      additionalProperties: true
      properties:
        api_secret:
          type: "string"
          description: "Mixpanel API Secret. See the <a href=\"https://docs.airbyte.io/integrations/sources/mixpanel\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        attribution_window:
          type: "integer"
          description: "Latency minimum number of days to look-back to account for\
            \ delays in attributing accurate results. Default attribution window is\
            \ 5 days."
          default: 5
        date_window_size:
          type: "integer"
          description: "Number of days for date window looping through transactional\
            \ endpoints with from_date and to_date. Default date_window_size is 30\
            \ days. Clients with large volumes of events may want to decrease this\
            \ to 14, 7, or even down to 1-2 days."
          default: 30
        project_timezone:
          type: "string"
          description: "Time zone in which integer date times are stored. The project\
            \ timezone may be found in the project settings in the Mixpanel console."
          default: "US/Pacific"
          examples:
          - "US/Pacific"
          - "UTC"
        select_properties_by_default:
          type: "boolean"
          description: "Setting this config parameter to true ensures that new properties\
            \ on events and engage records are captured. Otherwise new properties\
            \ will be ignored"
          default: true
        start_date:
          type: "string"
          description: "The default value to use if no bookmark exists for an endpoint.\
            \ If this option is not set, the connector will replicate data from up\
            \ to one year ago by default."
          examples:
          - "2021-11-16"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
        region:
          type: "string"
          enum:
          - "US"
          - "EU"
          default: "US"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-monday:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Monday Spec"
      type: "object"
      required:
      - "api_token"
      additionalProperties: false
      properties:
        api_token:
          type: "string"
          description: "This is the API token to authenticate requests to Monday.\
            \ Profile picture (bottom left) => Admin => API"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-mongodb-v2:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mongodb-v2"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/mongodb-v2"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "MongoDb Source Spec"
      type: "object"
      required:
      - "database"
      additionalProperties: true
      properties:
        instance_type:
          type: "object"
          title: "MongoDb instance type"
          description: "MongoDb instance to connect to. For MongoDB Atlas and Replica\
            \ Set TLS connection is used by default."
          order: 0
          oneOf:
          - title: "Standalone MongoDb Instance"
            required:
            - "instance"
            - "host"
            - "port"
            properties:
              instance:
                type: "string"
                enum:
                - "standalone"
                default: "standalone"
              host:
                title: "Host"
                type: "string"
                description: "Host of a Mongo database to be replicated."
                order: 0
              port:
                title: "Port"
                type: "integer"
                description: "Port of a Mongo database to be replicated."
                minimum: 0
                maximum: 65536
                default: 27017
                examples:
                - "27017"
                order: 1
              tls:
                title: "TLS connection"
                type: "boolean"
                description: "Indicates whether TLS encryption protocol will be used\
                  \ to connect to MongoDB. It is recommended to use TLS connection\
                  \ if possible. For more information see <a href=\"https://docs.airbyte.io/integrations/sources/mongodb-v2\"\
                  >documentation</a>."
                default: false
                order: 2
          - title: "Replica Set"
            required:
            - "instance"
            - "server_addresses"
            properties:
              instance:
                type: "string"
                enum:
                - "replica"
                default: "replica"
              server_addresses:
                title: "Server addresses"
                type: "string"
                description: "The members of a replica set. Please specify `host`:`port`\
                  \ of each member seperated by comma."
                examples:
                - "host1:27017,host2:27017,host3:27017"
                order: 0
              replica_set:
                title: "Replica Set"
                type: "string"
                description: "A replica set name."
                order: 1
          - title: "MongoDB Atlas"
            additionalProperties: false
            required:
            - "instance"
            - "cluster_url"
            properties:
              instance:
                type: "string"
                enum:
                - "atlas"
                default: "atlas"
              cluster_url:
                title: "Cluster URL"
                type: "string"
                description: "URL of a cluster to connect to."
                order: 0
        database:
          title: "Database name"
          type: "string"
          description: "Database to be replicated."
          order: 1
        user:
          title: "User"
          type: "string"
          description: "User"
          order: 2
        password:
          title: "Password"
          type: "string"
          description: "Password"
          airbyte_secret: true
          order: 3
        auth_source:
          title: "Authentication source"
          type: "string"
          description: "Authentication source where user information is stored"
          default: "admin"
          examples:
          - "admin"
          order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-mysql:0.4.9"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mysql"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "MySql Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "replication_method"
      additionalProperties: false
      properties:
        host:
          description: "Hostname of the database."
          type: "string"
          order: 0
        port:
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 3306
          examples:
          - "3306"
          order: 1
        database:
          description: "Name of the database."
          type: "string"
          order: 2
        username:
          description: "Username to use to access the database."
          type: "string"
          order: 3
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
          order: 4
        jdbc_url_params:
          description: "Additional properties to pass to the jdbc url string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)"
          type: "string"
          order: 5
        ssl:
          title: "SSL Connection"
          description: "Encrypt data using SSL."
          type: "boolean"
          default: true
          order: 6
        replication_method:
          type: "string"
          title: "Replication Method"
          description: "Replication method to use for extracting data from the database.\
            \ STANDARD replication requires no setup on the DB side but will not be\
            \ able to represent deletions incrementally. CDC uses the Binlog to detect\
            \ inserts, updates, and deletes. This needs to be configured on the source\
            \ database itself."
          order: 7
          default: "STANDARD"
          enum:
          - "STANDARD"
          - "CDC"
        tunnel_method:
          type: "object"
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                description: "No ssh tunnel needed to connect to database"
                type: "string"
                const: "NO_TUNNEL"
                order: 0
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
                type: "string"
                order: 3
              ssh_key:
                title: "SSH Private Key"
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
                type: "string"
                order: 3
              tunnel_user_password:
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                type: "string"
                airbyte_secret: true
                order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-okta:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/okta"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Okta Spec"
      type: "object"
      required:
      - "token"
      - "base_url"
      additionalProperties: false
      properties:
        token:
          type: "string"
          title: "API Token"
          description: "A Okta token. See the <a href=\"https://docs.airbyte.io/integrations/sources/okta\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        base_url:
          type: "string"
          title: "Base URL"
          description: "The Okta base URL."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-onesignal:0.1.1"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/onesignal"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "OneSignal Source Spec"
      type: "object"
      required:
      - "user_auth_key"
      - "start_date"
      - "outcome_names"
      additionalProperties: false
      properties:
        user_auth_key:
          type: "string"
          description: "OneSignal User Auth Key, see the <a href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for OneSignal\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
          examples:
          - "2020-11-16T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        outcome_names:
          type: "string"
          description: "Comma-separated list of names and the value (sum/count) for\
            \ the returned outcome data. See the <a href=\"https://documentation.onesignal.com/reference/view-outcomes\"\
            >docs</a> for more details"
          examples:
          - "os__session_duration.count,os__click.count,CustomOutcomeName.sum"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-oracle:0.3.8"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/oracle"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Oracle Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "sid"
      - "username"
      additionalProperties: false
      properties:
        host:
          title: "Host"
          description: "Hostname of the database."
          type: "string"
        port:
          title: "Port"
          description: "Port of the database.\nOracle Corporations recommends the\
            \ following port numbers:\n1521 - Default listening port for client connections\
            \ to the listener. \n2484 - Recommended and officially registered listening\
            \ port for client connections to the listener using TCP/IP with SSL"
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 1521
        sid:
          title: "SID (Oracle System Identifier)"
          type: "string"
        username:
          title: "User"
          description: "Username to use to access the database."
          type: "string"
        password:
          title: "Password"
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
        schemas:
          title: "Schemas"
          description: "List of schemas to sync from. Defaults to user. Case sensitive."
          type: "array"
          items:
            type: "string"
          minItems: 1
          uniqueItems: true
        encryption:
          title: "Encryption"
          type: "object"
          description: "Encryption method to use when communicating with the database"
          order: 6
          oneOf:
          - title: "Unencrypted"
            additionalProperties: false
            description: "Data transfer will not be encrypted."
            required:
            - "encryption_method"
            properties:
              encryption_method:
                type: "string"
                const: "unencrypted"
                enum:
                - "unencrypted"
                default: "unencrypted"
          - title: "Native Network Ecryption (NNE)"
            additionalProperties: false
            description: "Native network encryption gives you the ability to encrypt\
              \ database connections, without the configuration overhead of TCP/IP\
              \ and SSL/TLS and without the need to open and listen on different ports."
            required:
            - "encryption_method"
            properties:
              encryption_method:
                type: "string"
                const: "client_nne"
                enum:
                - "client_nne"
                default: "client_nne"
              encryption_algorithm:
                type: "string"
                description: "This parameter defines the encryption algorithm to be\
                  \ used"
                title: "Encryption Algorithm"
                default: "AES256"
                enum:
                - "AES256"
                - "RC4_56"
                - "3DES168"
          - title: "TLS Encrypted (verify certificate)"
            additionalProperties: false
            description: "Verify and use the cert provided by the server."
            required:
            - "encryption_method"
            - "ssl_certificate"
            properties:
              encryption_method:
                type: "string"
                const: "encrypted_verify_certificate"
                enum:
                - "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
              ssl_certificate:
                title: "SSL PEM file"
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations"
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
        tunnel_method:
          type: "object"
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                description: "No ssh tunnel needed to connect to database"
                type: "string"
                const: "NO_TUNNEL"
                order: 0
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
                type: "string"
                order: 3
              ssh_key:
                title: "SSH Private Key"
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
                type: "string"
                order: 3
              tunnel_user_password:
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                type: "string"
                airbyte_secret: true
                order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-paypal-transaction:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/paypal-transactions"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Paypal Transaction Search"
      type: "object"
      required:
      - "client_id"
      - "secret"
      - "start_date"
      - "is_sandbox"
      additionalProperties: true
      properties:
        client_id:
          title: "Client ID"
          type: "string"
          description: "The Paypal Client ID for API credentials"
        secret:
          title: "Secret"
          type: "string"
          description: "The Secret for a given Client ID."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          description: "Start Date for data extraction in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\"\
            >ISO format</a>. Date must be in range from 3 years till 12 hrs before\
            \ present time"
          examples:
          - "2021-06-11T23:59:59-00:00"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
        is_sandbox:
          title: "Is Sandbox"
          description: "Whether or not to Sandbox or Production environment to extract\
            \ data from"
          type: "boolean"
          default: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-paystack:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/paystack"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Paystack Source Spec"
      type: "object"
      required:
      - "secret_key"
      - "start_date"
      additionalProperties: false
      properties:
        secret_key:
          type: "string"
          pattern: "^(s|r)k_(live|test)_[a-zA-Z0-9]+$"
          description: "Paystack API key (usually starts with 'sk_live_'; find yours\
            \ <a href=\"https://dashboard.paystack.com/#/settings/developer\">here</a>)."
          airbyte_secret: true
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2017-01-25T00:00:00Z"
        lookback_window_days:
          type: "integer"
          title: "Lookback Window (in days)"
          default: 0
          minimum: 0
          description: "When set, the connector will always reload data from the past\
            \ N days, where N is the value set here. This is useful if your data is\
            \ updated after creation."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-pinterest:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pinterest"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Pinterest Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      additionalProperties: true
      properties:
        client_id:
          type: "string"
          title: "Client id"
          description: "Your Pinterest client id. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        client_secret:
          type: "string"
          title: "Client secret"
          description: "Your Pinterest client secret. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh token"
          description: "Your Pinterest refresh token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        access_token:
          type: "string"
          title: "Access token"
          description: "Your Pinterest access token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start date"
          description: "A date in the format YYYY-MM-DD. If you have not set a date,\
            \ it will be 2020-07-28 by default."
          examples:
          - "2020-07-28"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-pipedrive:0.1.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pipedrive"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Pipedrive Spec"
      type: "object"
      required:
      - "replication_start_date"
      additionalProperties: true
      properties:
        authorization:
          type: "object"
          title: "Authentication Type"
          oneOf:
          - title: "Sign in via Pipedrive (OAuth)"
            type: "object"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                type: "string"
                const: "Client"
                enum:
                - "Client"
                default: "Client"
                order: 0
              client_id:
                title: "Client ID"
                type: "string"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              client_secret:
                title: "Client Secret"
                type: "string"
                description: "The client secret of your developer application"
                airbyte_secret: true
              access_token:
                title: "Access Token"
                type: "string"
                description: "An access token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
              refresh_token:
                title: "Refresh Token"
                type: "string"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
          - type: "object"
            title: "API Key Authentication"
            required:
            - "auth_type"
            - "api_token"
            properties:
              auth_type:
                type: "string"
                const: "Token"
                enum:
                - "Token"
                default: "Token"
                order: 0
              api_token:
                title: "API Token"
                type: "string"
                description: "Pipedrive API Token"
                airbyte_secret: true
        replication_start_date:
          title: "Replication Start Date"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated. When specified and not\
            \ None, then stream will behave as incremental"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          type: "string"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- dockerImage: "airbyte/source-plaid:0.2.1"
  spec:
    documentationUrl: "https://plaid.com/docs/api/"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      type: "object"
      required:
      - "access_token"
      - "api_key"
      - "client_id"
      additionalProperties: false
      properties:
        access_token:
          type: "string"
          title: "Access Token"
          description: "The end-user's Link access token."
        api_key:
          title: "API Key"
          type: "string"
          description: "The Plaid API key to use to hit the API."
          airbyte_secret: true
        client_id:
          title: "Client ID"
          type: "string"
          description: "The Plaid client id"
        plaid_env:
          title: "Plaid Environment"
          type: "string"
          enum:
          - "sandbox"
          - "development"
          - "production"
          description: "The Plaid environment"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-pokeapi:0.1.1"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pokeapi"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Pokeapi Spec"
      type: "object"
      required:
      - "pokemon_name"
      additionalProperties: false
      properties:
        pokemon_name:
          type: "string"
          description: "Pokemon requested from the API."
          pattern: "^[a-z0-9_\\-]+$"
          examples:
          - "ditto, luxray, snorlax"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-posthog:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/posthog"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "PostHog Spec"
      type: "object"
      required:
      - "api_key"
      - "start_date"
      additionalProperties: false
      properties:
        start_date:
          title: "Start Date"
          type: "string"
          description: "The date from which you'd like to replicate the data"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-01T00:00:00Z"
        api_key:
          type: "string"
          airbyte_secret: true
          description: "API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/posthog\"\
            >docs</a> for information on how to generate this key."
        base_url:
          type: "string"
          default: "https://app.posthog.com"
          description: "Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com)."
          examples:
          - "https://posthog.example.com"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-postgres:0.3.13"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/postgres"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Postgres Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      additionalProperties: false
      properties:
        host:
          title: "Host"
          description: "Hostname of the database."
          type: "string"
          order: 0
        port:
          title: "Port"
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 5432
          examples:
          - "5432"
          order: 1
        database:
          title: "DB Name"
          description: "Name of the database."
          type: "string"
          order: 2
        username:
          title: "User"
          description: "Username to use to access the database."
          type: "string"
          order: 3
        password:
          title: "Password"
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
          order: 4
        ssl:
          title: "Connect using SSL"
          description: "Encrypt client/server communications for increased security."
          type: "boolean"
          default: false
          order: 5
        replication_method:
          type: "object"
          title: "Replication Method"
          description: "Replication method to use for extracting data from the database."
          order: 6
          oneOf:
          - title: "Standard"
            additionalProperties: false
            description: "Standard replication requires no setup on the DB side but\
              \ will not be able to represent deletions incrementally."
            required:
            - "method"
            properties:
              method:
                type: "string"
                const: "Standard"
                enum:
                - "Standard"
                default: "Standard"
                order: 0
          - title: "Logical Replication (CDC)"
            additionalProperties: false
            description: "Logical replication uses the Postgres write-ahead log (WAL)\
              \ to detect inserts, updates, and deletes. This needs to be configured\
              \ on the source database itself. Only available on Postgres 10 and above.\
              \ Read the <a href=\"https://docs.airbyte.io/integrations/sources/postgres\"\
              >Postgres Source</a> docs for more information."
            required:
            - "method"
            - "replication_slot"
            - "publication"
            properties:
              method:
                type: "string"
                const: "CDC"
                enum:
                - "CDC"
                default: "CDC"
                order: 0
              plugin:
                type: "string"
                description: "A logical decoding plug-in installed on the PostgreSQL\
                  \ server. `pgoutput` plug-in is used by default.\nIf replication\
                  \ table contains a lot of big jsonb values it is recommended to\
                  \ use `wal2json` plug-in. For more information about `wal2json`\
                  \ plug-in read <a href=\"https://docs.airbyte.io/integrations/sources/postgres\"\
                  >Postgres Source</a> docs."
                enum:
                - "pgoutput"
                - "wal2json"
                default: "pgoutput"
                order: 1
              replication_slot:
                type: "string"
                description: "A plug-in logical replication slot."
                order: 2
              publication:
                type: "string"
                description: "A Postgres publication used for consuming changes."
                order: 3
        tunnel_method:
          type: "object"
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                description: "No ssh tunnel needed to connect to database"
                type: "string"
                const: "NO_TUNNEL"
                order: 0
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
                type: "string"
                order: 3
              ssh_key:
                title: "SSH Private Key"
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                type: "string"
                airbyte_secret: true
                multiline: true
                order: 4
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_method:
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
              tunnel_host:
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
                type: "string"
                order: 1
              tunnel_port:
                title: "SSH Connection Port"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
                type: "integer"
                minimum: 0
                maximum: 65536
                default: 22
                examples:
                - "22"
                order: 2
              tunnel_user:
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
                type: "string"
                order: 3
              tunnel_user_password:
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                type: "string"
                airbyte_secret: true
                order: 4
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-prestashop:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "PrestaShop Spec"
      type: "object"
      required:
      - "url"
      - "access_key"
      additionalProperties: false
      properties:
        url:
          type: "string"
          description: "Shop URL without trailing slash (domain name or IP address)"
        access_key:
          type: "string"
          description: "Your PrestaShop access key. See <a href=\"https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/#create-an-access-key\"\
            > the docs </a> for info on how to obtain this."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-quickbooks-singer:0.1.3"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Quickbooks Singer Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "realm_id"
      - "user_agent"
      - "start_date"
      - "sandbox"
      additionalProperties: false
      properties:
        client_id:
          type: "string"
          description: "Identifies which app is making the request. Obtain this value\
            \ from the Keys tab on the app profile via My Apps on the developer site.\
            \ There are two versions of this key: development and production"
        client_secret:
          description: " Obtain this value from the Keys tab on the app profile via\
            \ My Apps on the developer site. There are two versions of this key: development\
            \ and production"
          type: "string"
          airbyte_secret: true
        refresh_token:
          description: "A token used when refreshing the access token."
          type: "string"
          airbyte_secret: true
        realm_id:
          description: "Labeled Company ID. The Make API Calls panel is populated\
            \ with the realm id and the current access token"
          type: "string"
          airbyte_secret: true
        user_agent:
          type: "string"
          description: "Process and email for API logging purposes. Example: tap-quickbooks\
            \ <api_user_email@your_company.com>"
        start_date:
          description: "The default value to use if no bookmark exists for an endpoint\
            \ (rfc3339 date string) E.g, 2021-03-20T00:00:00Z"
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-20T00:00:00Z"
        sandbox:
          description: "Development or Production."
          type: "boolean"
          default: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-recharge:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/recharge"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Recharge Spec"
      type: "object"
      required:
      - "start_date"
      - "access_token"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Recharge\
            \ API, in the format YYYY-MM-DDT00:00:00Z."
          examples:
          - "2021-05-14T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        access_token:
          type: "string"
          description: "The value of the Access Token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/recharge\">docs</a> for more\
            \ information"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-recurly:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/recurly"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Recurly Source Spec"
      type: "object"
      required:
      - "api_key"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "Recurly API Key. See the  <a href=\"https://docs.airbyte.io/integrations/sources/recurly\"\
            >docs</a> for more information on how to generate this key."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-redshift:0.3.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/redshift"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Redshift Source Spec"
      type: "object"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "password"
      additionalProperties: false
      properties:
        host:
          description: "Host Endpoint of the Redshift Cluster (must include the cluster-id,\
            \ region and end with .redshift.amazonaws.com)"
          type: "string"
        port:
          description: "Port of the database."
          type: "integer"
          minimum: 0
          maximum: 65536
          default: 5439
          examples:
          - "5439"
        database:
          description: "Name of the database."
          type: "string"
          examples:
          - "master"
        username:
          description: "Username to use to access the database."
          type: "string"
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-retently:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Retently Api Spec"
      type: "object"
      required:
      - "api_key"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "API key from https://app.retently.com/settings/api/tokens"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-s3:0.1.7"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/s3"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/s3"
    connectionSpecification:
      title: "S3 Source Spec"
      type: "object"
      properties:
        dataset:
          title: "Dataset"
          description: "This source creates one table per connection, this field is\
            \ the name of that table. This should include only letters, numbers, dash\
            \ and underscores. Note that this may be altered according to destination."
          pattern: "^([A-Za-z0-9-_]+)$"
          type: "string"
        path_pattern:
          title: "Path Pattern"
          description: "Add at least 1 pattern here to match filepaths against. Use\
            \ | to separate multiple patterns. Airbyte uses these patterns to determine\
            \ which files to pick up from the provider storage. See <a href=\"https://facelessuser.github.io/wcmatch/glob/\"\
            \ target=\"_blank\">wcmatch.glob</a> to understand pattern syntax (GLOBSTAR\
            \ and SPLIT flags are enabled). Use pattern <strong>**</strong> to pick\
            \ up all files."
          examples:
          - "**"
          - "myFolder/myTableFiles/*.csv|myFolder/myOtherTableFiles/*.csv"
          type: "string"
        schema:
          title: "Schema"
          description: "Optionally provide a schema to enforce, as a valid JSON string.\
            \ Ensure this is a mapping of <strong>{ \"column\" : \"type\" }</strong>,\
            \ where types are valid <a href=\"https://json-schema.org/understanding-json-schema/reference/type.html\"\
            \ target=\"_blank\">JSON Schema datatypes</a>. Leave as {} to auto-infer\
            \ the schema."
          default: "{}"
          examples:
          - "{\"column_1\": \"number\", \"column_2\": \"string\", \"column_3\": \"\
            array\", \"column_4\": \"object\", \"column_5\": \"boolean\"}"
          type: "string"
        format:
          title: "Format"
          default: "csv"
          type: "object"
          oneOf:
          - title: "csv"
            description: "This connector utilises <a href=\"https: // arrow.apache.org/docs/python/generated/pyarrow.csv.open_csv.html\"\
              \ target=\"_blank\">PyArrow (Apache Arrow)</a> for CSV parsing."
            type: "object"
            properties:
              filetype:
                title: "Filetype"
                const: "csv"
                type: "string"
              delimiter:
                title: "Delimiter"
                description: "The character delimiting individual cells in the CSV\
                  \ data. This may only be a 1-character string."
                default: ","
                minLength: 1
                type: "string"
              quote_char:
                title: "Quote Char"
                description: "The character used optionally for quoting CSV values.\
                  \ To disallow quoting, make this field blank."
                default: "\""
                type: "string"
              escape_char:
                title: "Escape Char"
                description: "The character used optionally for escaping special characters.\
                  \ To disallow escaping, leave this field blank."
                type: "string"
              encoding:
                title: "Encoding"
                description: "The character encoding of the CSV data. Leave blank\
                  \ to default to <strong>UTF-8</strong>. See <a href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\"\
                  \ target=\"_blank\">list of python encodings</a> for allowable options."
                type: "string"
              double_quote:
                title: "Double Quote"
                description: "Whether two quotes in a quoted CSV value denote a single\
                  \ quote in the data."
                default: true
                type: "boolean"
              newlines_in_values:
                title: "Newlines In Values"
                description: "Whether newline characters are allowed in CSV values.\
                  \ Turning this on may affect performance. Leave blank to default\
                  \ to False."
                default: false
                type: "boolean"
              block_size:
                title: "Block Size"
                description: "The chunk size in bytes to process at a time in memory\
                  \ from each file. If your data is particularly wide and failing\
                  \ during schema detection, increasing this should solve it. Beware\
                  \ of raising this too high as you could hit OOM errors."
                default: 10000
                type: "integer"
              additional_reader_options:
                title: "Additional Reader Options"
                description: "Optionally add a valid JSON string here to provide additional\
                  \ options to the csv reader. Mappings must correspond to options\
                  \ <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\"\
                  \ target=\"_blank\">detailed here</a>. 'column_types' is used internally\
                  \ to handle schema so overriding that would likely cause problems."
                default: "{}"
                examples:
                - "{\"timestamp_parsers\": [\"%m/%d/%Y %H:%M\", \"%Y/%m/%d %H:%M\"\
                  ], \"strings_can_be_null\": true, \"null_values\": [\"NA\", \"NULL\"\
                  ]}"
                type: "string"
              advanced_options:
                title: "Advanced Options"
                description: "Optionally add a valid JSON string here to provide additional\
                  \ <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ReadOptions.html#pyarrow.csv.ReadOptions\"\
                  \ target=\"_blank\">Pyarrow ReadOptions</a>. Specify 'column_names'\
                  \ here if your CSV doesn't have header, or if you want to use custom\
                  \ column names. 'block_size' and 'encoding' are already used above,\
                  \ specify them again here will override the values above."
                default: "{}"
                examples:
                - "{\"column_names\": [\"column1\", \"column2\"]}"
                type: "string"
          - title: "parquet"
            description: "This connector utilises <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html\"\
              \ target=\"_blank\">PyArrow (Apache Arrow)</a> for Parquet parsing."
            type: "object"
            properties:
              filetype:
                title: "Filetype"
                const: "parquet"
                type: "string"
              buffer_size:
                title: "Buffer Size"
                description: "Perform read buffering when deserializing individual\
                  \ column chunks. By default every group column will be loaded fully\
                  \ to memory. This option can help to optimize a work with memory\
                  \ if your data is particularly wide or failing during detection\
                  \ of OOM errors."
                default: 0
                type: "integer"
              columns:
                title: "Columns"
                description: "If you only want to sync a subset of the columns from\
                  \ the file(s), add the columns you want here. Leave it empty to\
                  \ sync all columns."
                type: "array"
                items:
                  type: "string"
              batch_size:
                title: "Batch Size"
                description: "Maximum number of records per batch. Batches may be\
                  \ smaller if there aren’t enough rows in the file. This option can\
                  \ help to optimize a work with memory if your data is particularly\
                  \ wide or failing during detection of OOM errors."
                default: 65536
                type: "integer"
        provider:
          title: "S3: Amazon Web Services"
          type: "object"
          properties:
            bucket:
              title: "Bucket"
              description: "Name of the S3 bucket where the file(s) exist."
              type: "string"
            aws_access_key_id:
              title: "Aws Access Key Id"
              description: "In order to access private Buckets stored on AWS S3, this\
                \ connector requires credentials with the proper permissions. If accessing\
                \ publicly available data, this field is not necessary."
              airbyte_secret: true
              type: "string"
            aws_secret_access_key:
              title: "Aws Secret Access Key"
              description: "In order to access private Buckets stored on AWS S3, this\
                \ connector requires credentials with the proper permissions. If accessing\
                \ publicly available data, this field is not necessary."
              airbyte_secret: true
              type: "string"
            path_prefix:
              title: "Path Prefix"
              description: "By providing a path-like prefix (e.g. myFolder/thisTable/)\
                \ under which all the relevant files sit, we can optimise finding\
                \ these in S3. This is optional but recommended if your bucket contains\
                \ many folders/files."
              default: ""
              type: "string"
            endpoint:
              title: "Endpoint"
              description: "Endpoint to an S3 compatible service. Leave empty to use\
                \ AWS."
              default: ""
              type: "string"
            use_ssl:
              title: "Use Ssl"
              description: "Is remote server using secure SSL/TLS connection"
              type: "boolean"
            verify_ssl_cert:
              title: "Verify Ssl Cert"
              description: "Allow self signed certificates"
              type: "boolean"
          required:
          - "bucket"
      required:
      - "dataset"
      - "path_pattern"
      - "provider"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- dockerImage: "airbyte/source-salesloft:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/salesloft"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Salesloft Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "start_date"
      additionalProperties: false
      properties:
        client_id:
          type: "string"
          description: "Salesloft client id."
        client_secret:
          type: "string"
          description: "Salesloft client secret."
          airbyte_secret: true
        refresh_token:
          type: "string"
          description: "Salesloft refresh token."
          airbyte_secret: true
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Salesloft\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
          examples:
          - "2020-11-16T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-salesforce:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/salesforce"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Salesforce Source Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "start_date"
      - "api_type"
      additionalProperties: false
      properties:
        client_id:
          description: "The Consumer Key that can be found when viewing your app in\
            \ Salesforce"
          type: "string"
        client_secret:
          description: "The Consumer Secret that can be found when viewing your app\
            \ in Salesforce"
          type: "string"
          airbyte_secret: true
        refresh_token:
          description: "Salesforce Refresh Token used for Airbyte to access your Salesforce\
            \ account. If you don't know what this is, follow this <a href=\"https://medium.com/@bpmmendis94/obtain-access-refresh-tokens-from-salesforce-rest-api-a324fe4ccd9b\"\
            >guide</a> to retrieve it."
          type: "string"
          airbyte_secret: true
        start_date:
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated. This field uses the \"\
            updated\" field if available, otherwise the \"created\" fields if they\
            \ are available for a stream."
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-07-25T00:00:00Z"
        is_sandbox:
          description: "Whether or not the the app is in a Salesforce sandbox. If\
            \ you do not know what this, assume it is false. We provide more info\
            \ on this field in the <a href=\"https://docs.airbyte.io/integrations/destinations/salesforce#is_sandbox\"\
            >docs</a>."
          type: "boolean"
          default: false
        api_type:
          description: "Unless you know that you are transferring a very small amount\
            \ of data, prefer using the BULK API. This will help avoid using up all\
            \ of your API call quota with Salesforce. Valid values are BULK or REST."
          type: "string"
          enum:
          - "BULK"
          - "REST"
          default: "BULK"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- dockerImage: "airbyte/source-sendgrid:0.2.16"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/sendgrid"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Sendgrid Spec"
      type: "object"
      required:
      - "apikey"
      additionalProperties: false
      properties:
        apikey:
          type: "string"
          description: "API Key, use <a href=\"https://app.sendgrid.com/settings/api_keys/\"\
            >admin</a> to generate this key."
        start_time:
          type: "integer"
          description: "Start time in timestamp integer format. Any data before this\
            \ timestamp will not be replicated."
          examples:
          - 1558359837
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "blotout/source-shopify:0.1.28"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/shopify"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Shopify Source CDK Specifications"
      type: "object"
      required:
      - "shop"
      - "start_date"
      - "auth_method"
      additionalProperties: false
      properties:
        shop:
          type: "string"
          description: "The name of the shopify store. For https://EXAMPLE.myshopify.com,\
            \ the shop name is 'EXAMPLE'."
        start_date:
          type: "string"
          description: "The date you would like to replicate data. Format: YYYY-MM-DD."
          examples:
          - "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        no_of_days_to_fetch: 
          type": "string"
          description": "Number of days for which you wants to fetch the data in one run."
          examples": 
          - "30"
        auth_method:
          title: "Shopify Authorization Method"
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "client_id"
            - "client_secret"
            - "access_token"
            properties:
              auth_method:
                type: "string"
                const: "access_token"
                enum:
                - "access_token"
                default: "access_token"
                order: 0
              client_id:
                type: "string"
                description: "The API Key of the Shopify developer application."
                airbyte_secret: true
              client_secret:
                type: "string"
                description: "The API Secret the Shopify developer application."
                airbyte_secret: true
              access_token:
                type: "string"
                description: "Access Token for making authenticated requests."
                airbyte_secret: true
          - title: "API Password"
            type: "object"
            required:
            - "api_password"
            properties:
              auth_method:
                type: "string"
                const: "api_password"
                enum:
                - "api_password"
                default: "api_password"
                order: 0
              api_password:
                type: "string"
                description: "The API PASSWORD for your private application in `Shopify`\
                  \ shop."
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "auth_method"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-shortio:0.1.1"
  spec:
    documentationUrl: "https://developers.short.io/reference"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Shortio Spec"
      type: "object"
      required:
      - "domain_id"
      - "secret_key"
      - "start_date"
      additionalProperties: false
      properties:
        domain_id:
          type: "string"
          description: "Domain ID"
          airbyte_secret: false
        secret_key:
          type: "string"
          description: "Short.io Secret key"
          airbyte_secret: true
        start_date:
          type: "string"
          description: "Start Date, YYYY-MM-DD"
          airbyte_secret: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-slack:0.1.13"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/slack"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Slack Spec"
      type: "object"
      required:
      - "start_date"
      - "lookback_window"
      - "join_channels"
      additionalProperties: true
      properties:
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2017-01-25T00:00:00Z"
          title: "Start Date"
        lookback_window:
          type: "integer"
          title: "Threads Lookback window (Days)"
          description: "How far into the past to look for messages in threads."
          examples:
          - 7
          - 14
        join_channels:
          type: "boolean"
          default: true
          title: "Join all channels"
          description: "Whether to join all channels or to sync data only from channels\
            \ the bot is already in.  If false, you'll need to manually add the bot\
            \ to all the channels from which you'd like to sync messages. "
        credentials:
          title: "Authentication mechanism"
          description: "Choose how to authenticate into Slack"
          type: "object"
          oneOf:
          - type: "object"
            title: "Sign in via Slack (OAuth)"
            required:
            - "access_token"
            - "client_id"
            - "client_secret"
            - "option_title"
            properties:
              option_title:
                type: "string"
                const: "Default OAuth2.0 authorization"
              client_id:
                title: "Client ID"
                description: "Slack client_id. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help finding this id."
                type: "string"
                examples:
                - "slack-client-id-example"
              client_secret:
                title: "Client Secret"
                description: "Slack client_secret. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help finding this secret."
                type: "string"
                examples:
                - "slack-client-secret-example"
                airbyte_secret: true
              access_token:
                title: "Access token"
                description: "Slack access_token. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help generating the token."
                type: "string"
                examples:
                - "slack-access-token-example"
                airbyte_secret: true
              refresh_token:
                title: "Refresh token"
                description: "Slack refresh_token. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help generating the token."
                type: "string"
                examples:
                - "slack-refresh-token-example"
                airbyte_secret: true
            order: 0
          - type: "object"
            title: "API Token"
            required:
            - "api_token"
            - "option_title"
            properties:
              option_title:
                type: "string"
                const: "API Token Credentials"
              api_token:
                type: "string"
                title: "API Token"
                description: "A Slack bot token. See the <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> for instructions on how to generate it."
                airbyte_secret: true
            order: 1
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- dockerImage: "airbyte/source-smartsheets:0.1.6"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/smartsheets"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Smartsheets Source Spec"
      type: "object"
      required:
      - "access_token"
      - "spreadsheet_id"
      additionalProperties: false
      properties:
        access_token:
          title: "API Access token"
          description: "Found in Profile > Apps & Integrations > API Access within\
            \ Smartsheet app"
          type: "string"
          airbyte_secret: true
        spreadsheet_id:
          title: "Smartsheet ID"
          description: "Found in File > Properties"
          type: "string"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-snapchat-marketing:0.1.8"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/snapchat-marketing"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Snapchat Marketing Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      additionalProperties: false
      properties:
        client_id:
          title: "Client ID"
          type: "string"
          description: "The Snapchat Client ID for API credentials."
          airbyte_secret: true
        client_secret:
          title: "Client Secret"
          type: "string"
          description: "The Client Secret for a given Client ID."
          airbyte_secret: true
        refresh_token:
          title: "API Refresh Token"
          type: "string"
          description: "Refresh Token to get next api key after expiration. Is given\
            \ with API Key"
          airbyte_secret: true
        start_date:
          title: "Start Date"
          type: "string"
          description: "The start date to sync data. Leave blank for full sync. Format:\
            \ YYYY-MM-DD."
          examples:
          - "2021-01-01"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-snowflake:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/snowflake"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Snowflake Source Spec"
      type: "object"
      required:
      - "host"
      - "role"
      - "warehouse"
      - "database"
      - "schema"
      - "username"
      - "password"
      additionalProperties: false
      properties:
        host:
          description: "Host domain of the snowflake instance (must include the account,\
            \ region, cloud environment, and end with snowflakecomputing.com)."
          examples:
          - "accountname.us-east-2.aws.snowflakecomputing.com"
          type: "string"
          title: "Account name"
          order: 0
        role:
          description: "The role you created for Airbyte to access Snowflake."
          examples:
          - "AIRBYTE_ROLE"
          type: "string"
          title: "Role"
          order: 1
        warehouse:
          description: "The warehouse you created for Airbyte to access data into."
          examples:
          - "AIRBYTE_WAREHOUSE"
          type: "string"
          title: "Warehouse"
          order: 2
        database:
          description: "The database you created for Airbyte to access data into."
          examples:
          - "AIRBYTE_DATABASE"
          type: "string"
          title: "Database"
          order: 3
        schema:
          description: "The source Snowflake schema tables."
          examples:
          - "AIRBYTE_SCHEMA"
          type: "string"
          title: "Schema"
          order: 4
        username:
          description: "The username you created to allow Airbyte to access the database."
          examples:
          - "AIRBYTE_USER"
          type: "string"
          title: "Username"
          order: 5
        password:
          description: "Password associated with the username."
          type: "string"
          airbyte_secret: true
          title: "Password"
          order: 6
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-square:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/square"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Square Source CDK Specifications"
      type: "object"
      required:
      - "api_key"
      - "is_sandbox"
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "The API key for a Square application"
          airbyte_secret: true
        is_sandbox:
          type: "boolean"
          description: "Determines the sandbox (true) or production (false) API version"
          examples:
          - true
          - false
          default: true
        start_date:
          type: "string"
          description: "The start date to sync data. Leave blank for full sync. Format:\
            \ YYYY-MM-DD."
          examples:
          - "2021-01-01"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        include_deleted_objects:
          type: "boolean"
          description: "In some streams there is and option to include deleted objects\
            \ (Items, Categories, Discounts, Taxes)"
          examples:
          - true
          - false
          default: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-strava:0.1.0"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Strava Spec"
      type: "object"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "athlete_id"
      - "start_date"
      additionalProperties: false
      properties:
        client_id:
          type: "string"
          description: "Strava Client ID"
          pattern: "^[0-9_\\-]+$"
          examples:
          - "12345"
        client_secret:
          type: "string"
          description: "Strava Client Secret"
          pattern: "^[0-9a-fA-F]+$"
          examples:
          - "fc6243f283e51f6ca989aab298b17da125496f50"
          airbyte_secret: true
        refresh_token:
          type: "string"
          description: "Strava Refresh Token with activity:read_all permissions"
          pattern: "^[0-9a-fA-F]+$"
          examples:
          - "fc6243f283e51f6ca989aab298b17da125496f50"
          airbyte_secret: true
        athlete_id:
          type: "integer"
          description: "Strava Athlete ID"
          pattern: "^[0-9_\\-]+$"
          examples:
          - "17831421"
        start_date:
          type: "string"
          description: "Start Query Timestamp in UTC"
          examples:
          - "2016-12-31 23:59:59"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-stripe:0.1.23"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/stripe"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Stripe Source Spec"
      type: "object"
      required:
      - "client_secret"
      - "account_id"
      - "start_date"
      additionalProperties: false
      properties:
        client_secret:
          type: "string"
          pattern: "^(s|r)k_(live|test)_[a-zA-Z0-9]+$"
          description: "Stripe API key (usually starts with 'sk_live_'; find yours\
            \ <a href=\"https://dashboard.stripe.com/apikeys\">here</a>)."
          airbyte_secret: true
        account_id:
          type: "string"
          description: "Your Stripe account ID (starts with 'acct_', find yours <a\
            \ href=\"https://dashboard.stripe.com/settings/account\">here</a>)."
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2017-01-25T00:00:00Z"
        lookback_window_days:
          type: "integer"
          title: "Lookback Window (in days)"
          default: 0
          minimum: 0
          description: "When set, the connector will always reload data from the past\
            \ N days, where N is the value set here. This is useful if your data is\
            \ updated after creation."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-surveymonkey:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/surveymonkey"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "SurveyMonkey Spec"
      type: "object"
      required:
      - "start_date"
      additionalProperties: true
      properties:
        start_date:
          title: "Start Date"
          type: "string"
          description: "The date from which you'd like to replicate the data"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?$"
          examples:
          - "2021-01-01T00:00:00Z"
        access_token:
          title: "Access Token"
          type: "string"
          airbyte_secret: true
          description: "API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/surveymonkey\"\
            >docs</a> for information on how to generate this key."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- dockerImage: "airbyte/source-tempo:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Tempo Spec"
      type: "object"
      required:
      - "api_token"
      additionalProperties: false
      properties:
        api_token:
          type: "string"
          description: "Tempo API Token."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-tiktok-marketing:0.1.9"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/tiktok-marketing"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/tiktok-marketing"
    connectionSpecification:
      title: "TikTok Marketing Source Spec"
      type: "object"
      properties:
        environment:
          title: "Environment"
          default: "Production"
          oneOf:
          - title: "Production"
            type: "object"
            properties:
              environment:
                title: "Environment"
                const: "prod"
                type: "string"
              app_id:
                title: "App Id"
                description: "The App id applied by the developer."
                type: "string"
              secret:
                title: "Secret"
                description: "The private key of the developer's application."
                airbyte_secret: true
                type: "string"
            required:
            - "app_id"
            - "secret"
          - title: "Sandbox"
            type: "object"
            properties:
              environment:
                title: "Environment"
                const: "sandbox"
                type: "string"
              advertiser_id:
                title: "Advertiser Id"
                description: "The Advertiser ID  which generated for the developer's\
                  \ Sandbox application."
                type: "string"
            required:
            - "advertiser_id"
          type: "object"
        access_token:
          title: "Access Token"
          description: "Long-term Authorized Access Token."
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Start Date"
          description: "Start Date in format: YYYY-MM-DD."
          default: "01-09-2016"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          type: "string"
      required:
      - "access_token"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- dockerImage: "airbyte/source-trello:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/trello"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Trello Spec"
      type: "object"
      required:
      - "token"
      - "key"
      - "start_date"
      additionalProperties: true
      properties:
        token:
          type: "string"
          title: "API token"
          description: "A Trello token. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        key:
          type: "string"
          title: "API key"
          description: "A Trello token. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          examples:
          - "2021-03-01T00:00:00.000Z"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "token"
        - - "key"
- dockerImage: "airbyte/source-twilio:0.1.1"
  spec:
    documentationUrl: "https://hub.docker.com/r/airbyte/source-twilio"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Twilio Spec"
      type: "object"
      required:
      - "account_sid"
      - "auth_token"
      - "start_date"
      additionalProperties: false
      properties:
        account_sid:
          title: "Account ID"
          description: "Twilio account SID"
          airbyte_secret: true
          type: "string"
        auth_token:
          title: "Auth Token"
          description: "Twilio Auth Token."
          airbyte_secret: true
          type: "string"
        start_date:
          title: "Replication Start Date"
          description: "UTC date and time in the format 2020-10-01T00:00:00Z. Any\
            \ data before this date will not be replicated."
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-10-01T00:00:00Z"
          type: "string"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- dockerImage: "airbyte/source-typeform:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/typeform"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Typeform Spec"
      type: "object"
      required:
      - "token"
      - "start_date"
      additionalProperties: true
      properties:
        start_date:
          type: "string"
          description: "The date you would like to replicate data. Format: YYYY-MM-DDTHH:mm:ss[Z]."
          examples:
          - "2020-01-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        token:
          type: "string"
          description: "The API Token for a Typeform account."
          airbyte_secret: true
        form_ids:
          title: "Form IDs to replicate"
          description: "When this parameter is set, the connector will replicate data\
            \ only from the input forms. Otherwise, all forms in your Typeform account\
            \ will be replicated. You can find form IDs in your form URLs. For example,\
            \ in the URL \"https://mysite.typeform.com/to/u6nXL7\" the form_id is\
            \ u6nXL7. You can find form URLs on Share panel"
          type: "array"
          items:
            type: "string"
          uniqueItems: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-us-census:0.1.1"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/us-census"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "https://api.census.gov/ Source Spec"
      type: "object"
      required:
      - "api_key"
      - "query_path"
      additionalProperties: false
      properties:
        query_params:
          type: "string"
          description: "The query parameters portion of the GET request, without the\
            \ api key"
          pattern: "^\\w+=[\\w,:*]+(&(?!key)\\w+=[\\w,:*]+)*$"
          examples:
          - "get=NAME,NAICS2017_LABEL,LFO_LABEL,EMPSZES_LABEL,ESTAB,PAYANN,PAYQTR1,EMP&for=us:*&NAICS2017=72&LFO=001&EMPSZES=001"
          - "get=MOVEDIN,GEOID1,GEOID2,MOVEDOUT,FULL1_NAME,FULL2_NAME,MOVEDNET&for=county:*"
        query_path:
          type: "string"
          description: "The path portion of the GET request"
          pattern: "^data(\\/[\\w\\d]+)+$"
          examples:
          - "data/2019/cbp"
          - "data/2018/acs"
          - "data/timeseries/healthins/sahie"
        api_key:
          type: "string"
          description: "Your API Key. Get your key <a href=\"https://api.census.gov/data/key_signup.html\"\
            >here</a>."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zendesk-chat:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-chat"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Zendesk Chat Spec"
      type: "object"
      required:
      - "start_date"
      - "access_token"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Chat API, in the format YYYY-MM-DDT00:00:00Z."
          examples:
          - "2021-02-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        access_token:
          type: "string"
          description: "The value of the Access Token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/zendesk-chat\">docs</a> for\
            \ more information"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zendesk-sunshine:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk_sunshine"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Zendesk Sunshine Spec"
      type: "object"
      required:
      - "api_token"
      - "email"
      - "start_date"
      - "subdomain"
      additionalProperties: false
      properties:
        api_token:
          type: "string"
          airbyte_secret: true
          description: "API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk_sunshine\"\
            >docs</a> for information on how to generate this key."
        email:
          type: "string"
          description: "The user email for your Zendesk account"
        subdomain:
          type: "string"
          description: "The subdomain for your Zendesk Account"
        start_date:
          title: "Start Date"
          type: "string"
          description: "The date from which you'd like to replicate the data"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples: "2021-01-01T00:00:00.000000Z"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zendesk-support:0.1.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-support"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Zendesk Support Spec"
      type: "object"
      required:
      - "start_date"
      - "subdomain"
      - "auth_method"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Support API, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ after this date will be replicated."
          examples:
          - "2020-10-15T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        subdomain:
          type: "string"
          description: "The subdomain for your Zendesk Support"
        auth_method:
          title: "ZenDesk Authorization Method"
          type: "object"
          default: "api_token"
          description: "Zendesk service provides 2 auth method: API token and oAuth2.\
            \ Now only the first one is available. Another one will be added in the\
            \ future"
          oneOf:
          - title: "API Token"
            type: "object"
            required:
            - "email"
            - "api_token"
            additionalProperties: false
            properties:
              auth_method:
                type: "string"
                const: "api_token"
              email:
                type: "string"
                description: "The user email for your Zendesk account"
              api_token:
                type: "string"
                description: "The value of the API token generated. See the <a href=\"\
                  https://docs.airbyte.io/integrations/sources/zendesk-support\">docs</a>\
                  \ for more information"
                airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zendesk-talk:0.1.2"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-talk"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Zendesk Talk Spec"
      type: "object"
      required:
      - "start_date"
      - "subdomain"
      - "access_token"
      - "email"
      additionalProperties: false
      properties:
        start_date:
          type: "string"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Talk API, in the format YYYY-MM-DDT00:00:00Z."
          examples:
          - "2021-04-01T00:00:00Z"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        subdomain:
          type: "string"
          description: "The subdomain for your Zendesk Talk"
        access_token:
          type: "string"
          description: "The value of the API token generated. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk-talk\"\
            >docs</a> for more information"
          airbyte_secret: true
        email:
          type: "string"
          description: "The user email for your Zendesk account"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-sentry:0.1.0"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/sentry"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Sentry Spec"
      type: "object"
      required:
      - "auth_token"
      - "organization"
      - "project"
      additionalProperties: false
      properties:
        auth_token:
          type: "string"
          title: "Authentication tokens"
          description: "Log into Sentry and then <a href=\"https://sentry.io/settings/account/api/auth-tokens/\"\
            >create authentication tokens</a>.For self-hosted, you can find or create\
            \ authentication tokens by visiting \"{instance_url_prefix}/settings/account/api/auth-tokens/\""
          airbyte_secret: true
        hostname:
          type: "string"
          title: "Host Name"
          description: "Host name of Sentry API server.For self-hosted, specify your\
            \ host name here. Otherwise, leave it empty."
          default: "sentry.io"
        organization:
          type: "string"
          title: "Organization"
          description: "The slug of the organization the groups belong to."
        project:
          type: "string"
          title: "Project"
          description: "The slug of the project the groups belong to."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zoom-singer:0.2.4"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zoom"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Source Zoom Singer Spec"
      type: "object"
      required:
      - "jwt"
      additionalProperties: false
      properties:
        jwt:
          title: "JWT Token"
          type: "string"
          description: "Zoom JWT Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zoom\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "airbyte/source-zuora:0.1.3"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zuora"
    connectionSpecification:
      $schema: "http://json-schema.org/draft-07/schema#"
      title: "Zuora Connector Configuration"
      type: "object"
      required:
      - "start_date"
      - "tenant_endpoint"
      - "data_query"
      - "client_id"
      - "client_secret"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          description: "Start Date in format: YYYY-MM-DD"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        window_in_days:
          type: "string"
          title: "Query Window (in days)"
          description: "The amount of days for each data-chunk begining from start_date.\
            \ Bigger the value - faster the fetch. (0.1 - as for couple of hours,\
            \ 1 - as for a Day; 364 - as for a Year)."
          examples:
          - "0.5"
          - "1"
          - "30"
          - "60"
          - "90"
          - "120"
          - "200"
          - "364"
          pattern: "^(0|[1-9]\\d*)(\\.\\d+)?$"
          default: "90"
        tenant_endpoint:
          title: "Tenant Endpoint Location"
          type: "string"
          description: "Please choose the right endpoint where your Tenant is located.\
            \ More info by this <a href=\"https://www.zuora.com/developer/api-reference/#section/Introduction/Access-to-the-API\"\
            >Link</a>"
          enum:
          - "US Production"
          - "US Cloud Production"
          - "US API Sandbox"
          - "US Cloud API Sandbox"
          - "US Central Sandbox"
          - "US Performance Test"
          - "EU Production"
          - "EU API Sandbox"
          - "EU Central Sandbox"
        data_query:
          title: "Data Query Type"
          type: "string"
          description: "Choose between `Live`, or `Unlimited` - the optimized, replicated\
            \ database at 12 hours freshness for high volume extraction <a href=\"\
            https://knowledgecenter.zuora.com/Central_Platform/Query/Data_Query/A_Overview_of_Data_Query#Query_Processing_Limitations\"\
            >Link</a>"
          enum:
          - "Live"
          - "Unlimited"
          default: "Live"
        client_id:
          type: "string"
          title: "Client ID"
          description: "Your OAuth user Client ID"
          airbyte_secret: true
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "Your OAuth user Client Secret"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- dockerImage: "blotout/source-googleanalytics-singer:0.2.17"
  spec:
    "documentationUrl": "https://docs.airbyte.io/integrations/sources/googleanalytics"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Airbyte Google Analytics Source Spec"
      "type": "object"
      "required":
      - "credentials_json"
      -  "view_id"
      -  "start_date"
      "additionalProperties": false
      "properties":
        "credentials_json":
          "type": "string"
          "title": "Credentials JSON"
          "description": "The contents of the JSON service account key. Check out the <a href=\"https://docs.airbyte.io/integrations/sources/googleanalytics\">docs</a> if you need help generating this key."
          "airbyte_secret": true
        "view_id":
          "type": "string"
          "title": "View ID"
          "description": "The ID for the Google Analytics View you want to fetch data from. This can be found from the <a href=\"https://ga-dev-tools.appspot.com/account-explorer/\">Google Analytics Account Explorer</a>."
        "start_date":
          "type": "string"
          "title": "Start Date"
          "description": "A date in the format YYYY-MM-DDT00:00:00Z."
          "examples":
          - "2020-06-01T00:00:00Z"
        "custom_reports":
          "title": "Custom Reports"
          "type": "string"
          "description": "A JSON array describing the custom reports you want to sync from GA. Check out the <a href=\"https://docs.airbyte.io/integrations/sources/googleanalytics\">docs</a> to get more information about this field."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]
- dockerImage: "blotout/source-appsflyer-singer:0.1.6"
  spec:
    "documentationUrl": "https://github.com/blotoutio/tap-appsflyer"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Source Appsflyer Singer Spec"
      "type": "object"
      "required":
      - "app_id"
      - "api_token"
      "additionalProperties": false
      "properties":
        "app_id":
          "type": "string"
          "description": "<a href=\"https://support.appsflyer.com/hc/en-us/articles/207034346-Using-Pull-API-aggregate-data#principles-of-implementation\">app_id</a> is an app identifier found in AppsFlyer."
        "api_token":
          "type": "string"
          "description": "<a href=\"https://support.appsflyer.com/hc/en-us/articles/207034346-Using-Pull-API-aggregate-data#principles-of-implementation\">api_token</a> is the Pull API token for authentication."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]
- dockerImage: "blotout/source-mailgun-singer:0.1.2"
  spec:
    "documentationUrl": "https://docs.airbyte.io/integrations/sources/mailgun"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Source Mailgun Singer Spec"
      "type": "object"
      "required":
      - "private_key"
      - "start_date"
      - "event_availability"
      "additionalProperties": false
      "properties":
        "private_key":
          "type": "string"
          "description": "Your Mailgun Private Key."
        "start_date":
          "type": "string"
          "description": "Data generated in Marketo after this date will be replicated. This date must be specified in the format YYYY-MM-DDT00:00:00Z."
          "examples":
          - "2020-09-25T00:00:00Z"
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        "event_availability":
          "type": "integer"
          "description": "Amount of hours to subtract from the state timestamp, to catch any late-arriving events."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]
- dockerImage: "blotout/source-active-campaign-singer:0.1.6"
  spec:
    "documentationUrl": "https://docs.airbyte.io/integrations/sources/active_campaign"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Source Active Campaign Singer Spec"
      "type": "object"
      "required":
      - "api_url"
      - "api_token"
      - "start_date"
      - "user_agent"
      "additionalProperties": false
      "properties":
        "api_url":
          "type": "string"
          "description": "Your Active Campaign API URL"
        "api_token":
          "type": "string"
          "description": "Your Active Campaign API TOKEN"
          "airbyte_secret": true
        "start_date":
          "type": "string"
          "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated."
          "examples":
          - "2020-11-16T00:00:00Z"
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
        "user_agent":
          "type": "string"
          "description": "tap-activecampaign <api_user_email@your_company.com>"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]
- dockerImage: "blotout/source-xola:0.1.23"
  spec:
    "documentationUrl": "https://github.com/blotoutio/source-xola/README.md"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Source Xola Spec"
      "type": "object"
      "required":
        - "x-api-key"
        - "seller-id"
      "additionalProperties": false
      "properties":
        "x-api-key":
          "type": "string"
          "description": "This is Authorization Header for Xola API"
          "airbyte_secret": true
        "seller-id":
          "type": "string"
          "description": "This is the seller id for which api fetches all data from Xola"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]
- dockerImage: "blotout/source-twitter-ads-singer:0.1.2"
  spec:
    "documentationUrl": "https://github.com/singer-io/tap-twitter-ads/blob/master/README.md"
    "connectionSpecification":
      "$schema": "http://json-schema.org/draft-07/schema#"
      "title": "Source Twitter Ads Spec"
      "type": "object"
      "required":
        - "consumer_key"
        - "consumer_secret"
        - "access_token"
        - "access_token_secret"
        - "account_ids"
        - "user_agent"
        - "start_date"
        - "attribution_window"
      "additionalProperties": false
      "properties":
        "start_date":
          "type": "string"
          "description": "UTC date and time in the format yyyy-mm-dd"
          "example": "2019-01-01T00:00:00Z"
        "user_agent":
          "type": "string"
          "description": "tap-twitter-ads <api_user_email@your_company.com>"
          "example": "tap-twitter-ads <api_user_email@your_company.com>"
        "consumer_key":
          "type": "string"
          "description": "Your Active TWITTER_ADS_CONSUMER_KEY"
          "airbyte_secret": true
        "consumer_secret":
          "type": "string"
          "description": "Your Active TWITTER_ADS_CONSUMER_SECRET"
          "airbyte_secret": true
        "access_token":
          "type": "string"
          "description": "Your Active TWITTER_ADS_ACCESS_TOKEN"
          "airbyte_secret": true
        "access_token_secret":
          "type": "string"
          "description": "Your Active TWITTER_ADS_ACCESS_TOKEN_SECRET"
          "airbyte_secret": true
        "account_ids":
          "type": "string"
          "description": "Your Active Twitter Ads Account id"
          "example": "id1, id2, id3"
        "attribution_window":
          "type": "string"
          "description": "Define the historical replication lookback window in days (e.g. 14) "
          "example": "14"
        "with_deleted":
          "type": "string"
          "description": "Whether to sync data only from active campaign"
          "default": "true"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: [ ]