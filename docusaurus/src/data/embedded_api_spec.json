{
  "openapi": "3.1.0",
  "info": {
    "title": "Sonar",
    "summary": "Airbyte's API retrieves data on behalf of your customers and feeds it to your agentic workflows.",
    "description": "\nThe API contains 3 types of endpoints:\n- `/api/v1/embedded`: end-user-facing API to collect credentials.\n- `/api/v1/sonar`: operator endpoints to fetch data from end-user data sources (apis & drives) with their configured credentials.\n- `/api/v1/integrations`: all the operator endpoints to manage configurations.\n",
    "version": "0.9.0",
    "x-logo": {
      "url": "https://cdn.prod.website-files.com/605e01bc25f7e19a82e74788/6335a39da8c96ba75520b156_Logo.svg"
    }
  },
  "servers": [
    {
      "url": "http://localhost",
      "description": "Airbyte Sonar API"
    }
  ],
  "paths": {
    "/api/v1/internal/build-info": {
      "get": {
        "summary": "Get Build Info",
        "description": "Return current build information for frontend version checking.",
        "operationId": "get_internal_build_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/internal/oauth/registration": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Registration",
        "operationId": "create_internal_oauth_registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/internal/oauth/code": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Code",
        "operationId": "create_internal_oauth_code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/internal/oauth/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Token",
        "operationId": "create_internal_oauth_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/internal/health/check": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "operationId": "get_internal_health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/internal/account/organizations/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "List Organizations",
        "operationId": "list_internal_account_organizations_",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/internal/account/organizations/{id}/onboarding-progress": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update Organization Onboarding Progress",
        "description": "Update the onboarding progress for an organization.",
        "operationId": "create_internal_account_organizations_id_onboarding_progress",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingProgressUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingProgressUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tools/destinations/": {
      "post": {
        "tags": [
          "Tool Wrappers - Destinations"
        ],
        "summary": "Tools Create Destination",
        "operationId": "create_tools_destinations_",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DestinationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tools/destinations/{id}": {
      "patch": {
        "tags": [
          "Tool Wrappers - Destinations"
        ],
        "summary": "Tools Update Destination",
        "operationId": "update_tools_destinations_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DestinationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tools/workspaces/": {
      "get": {
        "tags": [
          "Tool Wrappers - Workspaces"
        ],
        "summary": "List Workspaces",
        "operationId": "list_tools_workspaces_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The name of the workspaces to list.",
              "title": "Name Contains"
            },
            "description": "The name of the workspaces to list."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The maximum number of workspaces to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "The maximum number of workspaces to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "An opaque string with encoded pagination metadata.",
              "title": "Cursor"
            },
            "description": "An opaque string with encoded pagination metadata."
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The organization ID to list workspaces for.",
              "required": true,
              "title": "Organization Id"
            },
            "description": "The organization ID to list workspaces for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tools/sources/": {
      "post": {
        "tags": [
          "Tool Wrappers - Sources"
        ],
        "summary": "Tools Create Source",
        "operationId": "create_tools_sources_",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__tools__sources__schemas__SourceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__tools__sources__schemas__SourceCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tools/sources/{id}": {
      "patch": {
        "tags": [
          "Tool Wrappers - Sources"
        ],
        "summary": "Tools Update Source",
        "operationId": "update_tools_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__tools__sources__schemas__SourceUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sonar/apis/{source_id}/request": {
      "post": {
        "tags": [
          "Sonar - APIs"
        ],
        "summary": "Request",
        "description": "**Requires an Access Token as the bearer token.**\n\nMake a request to an API using the credentials and config associated with the provided source.\n\nThis API allows any system to make requests to a downstream system without ever sharing end users' credentials with the caller.",
        "operationId": "create_sonar_apis_source_id_request",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The source ID to forward the request to.",
              "title": "Source Id"
            },
            "description": "The source ID to forward the request to."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationProxyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProxyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sonar/apis/": {
      "get": {
        "tags": [
          "Sonar - APIs"
        ],
        "summary": "List Sources",
        "description": "**Requires an Access Token as the bearer token.**\n\nDeprecated. Use `/api/v1/integrations/sources` instead.",
        "operationId": "deprecated_get_sonar_apis_",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The maximum number of sources to return.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of sources to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "An opaque string with encoded pagination metadata.",
              "title": "Cursor"
            },
            "description": "An opaque string with encoded pagination metadata."
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list sources for.",
              "required": true,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list sources for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApisAvailableSourcesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sonar/files/{source_id}/list/{path}": {
      "get": {
        "tags": [
          "Sonar - Files"
        ],
        "summary": "List Files With Prefix",
        "description": "**Requires an Access Token as the bearer token.**\n\nList files at the specified path in a File Management System (Google Drive, Sharepoint, S3...) using the credentials and config associated with the provided source.\n\nThis API allows any system to make requests to a downstream system without ever sharing end users' credentials with the caller.",
        "operationId": "list_sonar_files_source_id_list_path_path",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "source_id for which to list files",
              "title": "Source Id"
            },
            "description": "source_id for which to list files"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Optional prefix to filter files",
              "title": "Path"
            },
            "description": "Optional prefix to filter files"
          },
          {
            "name": "continuation_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Token for pagination",
              "title": "Continuation Token"
            },
            "description": "Token for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit for pagination",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilesSourcesListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sonar/files/{source_id}/get/{path}": {
      "get": {
        "tags": [
          "Sonar - Files"
        ],
        "summary": "Stream File",
        "description": "**Requires an Access Token as the bearer token.**\n\nRetrieve the file content at the specified path using the credentials and config associated with the provided source.\n\nThis API allows any system to make requests to a downstream system without ever sharing end users' credentials with the caller.",
        "operationId": "get_sonar_files_source_id_get_path_path",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "source_id for which to get file",
              "title": "Source Id"
            },
            "description": "source_id for which to get file"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Path to the file to get",
              "title": "Path"
            },
            "description": "Path to the file to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sonar/files/sources": {
      "get": {
        "tags": [
          "Sonar - Files"
        ],
        "summary": "List Sources",
        "description": "**Requires an Access Token as the bearer token.**\n\nDeprecated. Use `/api/v1/integrations/sources` instead.",
        "operationId": "get_sonar_files_sources",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list files for.",
              "required": true,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list files for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilesAvailableSourcesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/destinations/": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "List Destinations",
        "description": "**Requires an Access Token as the bearer token.**\n\nList destinations.",
        "operationId": "list_integrations_destinations_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The maximum number of destinations to return.",
              "default": 20,
              "title": "Limit"
            },
            "description": "The maximum number of destinations to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "An opaque string with encoded pagination metadata.",
              "title": "Cursor"
            },
            "description": "An opaque string with encoded pagination metadata."
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list destinations for.",
              "required": true,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list destinations for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/destinations/{id}": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "Get Destination",
        "description": "**Requires an Access Token as the bearer token.**\n\nGet a destination.",
        "operationId": "get_integrations_destinations_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/sources/": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Create Source",
        "description": "**Requires an Access Token as the bearer token.**\n\nCreate an end user's configured source.",
        "operationId": "create_integrations_sources_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "List Sources",
        "description": "**Requires an Access Token as the bearer token.**\n\nList end user's configured sources.",
        "operationId": "list_integrations_sources_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list sources for.",
              "required": true,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list sources for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/sources/{id}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Get Source",
        "description": "**Requires an Access Token as the bearer token.**\n\nGet an end user's configured source.",
        "operationId": "get_integrations_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sources"
        ],
        "summary": "Update Source",
        "description": "**Requires an Access Token as the bearer token.**\n\nUpdate an end user's configured source.",
        "operationId": "update_integrations_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "summary": "Delete Source",
        "description": "**Requires an Access Token as the bearer token.**\n\nDelete an end user's configured source.",
        "operationId": "delete_integrations_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/templates/connections/{id}": {
      "get": {
        "tags": [
          "Template Connections"
        ],
        "summary": "Get Connection Template",
        "description": "**Requires an Access Token as the bearer token.**\n\nGet a connection template.",
        "operationId": "get_integrations_templates_connections_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTemplateGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Template Connections"
        ],
        "summary": "Delete Connection Template",
        "description": "**Requires an Access Token as the bearer token.**\n\nDelete a connection template.",
        "operationId": "delete_integrations_templates_connections_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTemplateDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Template Connections"
        ],
        "summary": "Patch Connection Template",
        "operationId": "update_integrations_templates_connections_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionTemplatePatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTemplateCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/templates/connections/": {
      "get": {
        "tags": [
          "Template Connections"
        ],
        "summary": "List Connection Templates",
        "description": "**Requires an Access Token as the bearer token.**\n\nList connection templates.",
        "operationId": "list_integrations_templates_connections_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The organization ID to list templates for. Defaults to the user's organization ID.",
              "required": false,
              "title": "Organization Id"
            },
            "description": "The organization ID to list templates for. Defaults to the user's organization ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTemplateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Template Connections"
        ],
        "summary": "Create Connection Template",
        "description": "**Requires an Access Token as the bearer token.**\n\nCreate a connection template.",
        "operationId": "create_integrations_templates_connections_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionTemplateCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTemplateCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/templates/sources/": {
      "post": {
        "tags": [
          "Template Sources"
        ],
        "summary": "Create Source Template",
        "description": "**Requires an Access Token as the bearer token.**\n\nCreate a source_template.\n\nEnd users can complete this template to create a source connector.",
        "operationId": "create_integrations_templates_sources_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceTemplateCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Template Sources"
        ],
        "summary": "List Source Templates",
        "description": "**Requires an Access Token as the bearer token.**\n\nList source templates.",
        "operationId": "list_integrations_templates_sources_",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The organization ID to list templates for.",
              "required": false,
              "title": "Organization Id"
            },
            "description": "The organization ID to list templates for."
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list templates for.",
              "required": false,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list templates for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/templates/sources/{id}": {
      "get": {
        "tags": [
          "Template Sources"
        ],
        "summary": "Get Source Template",
        "description": "**Requires an Access Token as the bearer token.**\n\nGet a source template.",
        "operationId": "get_integrations_templates_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Template Sources"
        ],
        "summary": "Delete Source Templates",
        "description": "**Requires an Access Token as the bearer token.**\n\nDelete a source template.",
        "operationId": "delete_integrations_templates_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embedded/source-templates": {
      "post": {
        "tags": [
          "Embedded"
        ],
        "summary": "List Source Templates",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nList all the available sources that the end users can connect to.",
        "operationId": "deprecated_list_embedded_source_templates",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The organization ID to list templates for.",
              "required": false,
              "title": "Organization Id"
            },
            "description": "The organization ID to list templates for."
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list templates for.",
              "required": false,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list templates for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "List Source Templates",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nList all the available sources that the end users can connect to.",
        "operationId": "list_embedded_source_templates",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The organization ID to list templates for.",
              "required": false,
              "title": "Organization Id"
            },
            "description": "The organization ID to list templates for."
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list templates for.",
              "required": false,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list templates for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embedded/source-templates/{id}": {
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "Get Source Template",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nRetrieves all the details to display to the end users to configure their source.",
        "operationId": "get_embedded_source_templates_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceTemplateGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embedded/sources": {
      "post": {
        "tags": [
          "Embedded"
        ],
        "summary": "Create Source",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nCreates a new source with the provided end user credentials and configurations.",
        "operationId": "create_embedded_sources",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "List Sources",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nList all the sources the end user configured.",
        "operationId": "list_embedded_sources",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The workspace ID to list sources for.",
              "required": true,
              "title": "Workspace Id"
            },
            "description": "The workspace ID to list sources for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embedded/sources/{id}": {
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "Get Source",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nGet the details for the source the end user configured.",
        "operationId": "get_embedded_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Embedded"
        ],
        "summary": "Update Source",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nUpdate an existing source with the provided end user credentials and configurations.",
        "operationId": "update_embedded_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__integrations__sources__schemas__SourceUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Embedded"
        ],
        "summary": "Delete Source",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nDelete an existing end user source.",
        "operationId": "delete_embedded_sources_id",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/embedded/scoped-token": {
      "post": {
        "tags": [
          "Embedded"
        ],
        "summary": "Create Scoped Token",
        "description": "**Requires an Access Token as the bearer token.**\n\nGenerate a new scoped token.\n\nYou can safely share it with your end users and it will allow them to manage their configured sources.",
        "operationId": "create_embedded_scoped_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopedTokenCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopedTokenCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/embedded/scoped-token-info": {
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "Create Scoped Token",
        "description": "**Requires a Scoped Token as the bearer token.**\n\nReturn metadata about a scoped token (workspace, organization...).",
        "operationId": "deprecated_get_embedded_scoped_token_info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopedTokenCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopedTokenInfoGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/embedded/organizations/current-scoped": {
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "Get Scoped Token Info",
        "description": "Get the organization and workspace id for a scoped token.",
        "operationId": "deprecated_get_embedded_organizations_current_scoped",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopedTokenInfoGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/embedded/scoped-token/info": {
      "get": {
        "tags": [
          "Embedded"
        ],
        "summary": "Get Scoped Token Info",
        "description": "Get the organization and workspace id for a scoped token.",
        "operationId": "get_embedded_scoped_token_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopedTokenInfoGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AdvancedAuth": {
        "properties": {
          "auth_flow_type": {
            "type": "string",
            "title": "Auth Flow Type"
          },
          "predicate_key": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicate Key"
          },
          "predicate_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicate Value"
          },
          "oauth_config_specification": {
            "$ref": "#/components/schemas/OAuthConfigSpecification"
          }
        },
        "type": "object",
        "required": [
          "auth_flow_type",
          "oauth_config_specification"
        ],
        "title": "AdvancedAuth"
      },
      "ApiError": {
        "properties": {
          "field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code"
          }
        },
        "type": "object",
        "title": "ApiError"
      },
      "ApiErrorResponse": {
        "properties": {
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          }
        },
        "type": "object",
        "title": "ApiErrorResponse"
      },
      "ApisAvailableSource": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "source_type"
        ],
        "title": "ApisAvailableSource"
      },
      "ApisAvailableSourcesResponse": {
        "properties": {
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/ApisAvailableSource"
            },
            "type": "array",
            "title": "Sources"
          }
        },
        "type": "object",
        "required": [
          "sources"
        ],
        "title": "ApisAvailableSourcesResponse"
      },
      "AuthenticationProxyRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "method": {
            "$ref": "#/components/schemas/HttpMethod"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "required": [
          "url",
          "method"
        ],
        "title": "AuthenticationProxyRequest"
      },
      "AuthenticationProxyResponse": {
        "properties": {
          "response_status_code": {
            "type": "integer",
            "title": "Response Status Code"
          },
          "response_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Body"
          }
        },
        "type": "object",
        "required": [
          "response_status_code",
          "response_body"
        ],
        "title": "AuthenticationProxyResponse"
      },
      "BuildInfo": {
        "properties": {
          "buildId": {
            "type": "string",
            "title": "Buildid"
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "buildId",
          "timestamp",
          "version"
        ],
        "title": "BuildInfo"
      },
      "ConnectionSpecification": {
        "properties": {
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          },
          "properties": {
            "additionalProperties": true,
            "type": "object",
            "title": "Properties"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionalproperties"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "$schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "$Schema"
          }
        },
        "type": "object",
        "required": [
          "properties",
          "type"
        ],
        "title": "ConnectionSpecification"
      },
      "ConnectionTemplateCreateRequest": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "destination_name": {
            "type": "string",
            "title": "Destination Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "cron_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Expression"
          },
          "non_breaking_changes_preference": {
            "type": "string",
            "enum": [
              "ignore",
              "disable",
              "propagate_columns",
              "propagate_fully"
            ],
            "title": "Non Breaking Changes Preference",
            "default": "ignore"
          },
          "sync_on_create": {
            "type": "boolean",
            "title": "Sync On Create",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "destination_name",
          "destination_definition_id",
          "destination_config"
        ],
        "title": "ConnectionTemplateCreateRequest"
      },
      "ConnectionTemplateCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "destination_name": {
            "type": "string",
            "title": "Destination Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "cron_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Expression"
          },
          "non_breaking_changes_preference": {
            "type": "string",
            "enum": [
              "ignore",
              "disable",
              "propagate_columns",
              "propagate_fully"
            ],
            "title": "Non Breaking Changes Preference",
            "default": "ignore"
          },
          "sync_on_create": {
            "type": "boolean",
            "title": "Sync On Create",
            "default": true
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "connection_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Connection Config"
          },
          "secret_coordinates": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Secret Coordinates"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "destination_name",
          "destination_definition_id",
          "destination_config",
          "connection_config",
          "secret_coordinates"
        ],
        "title": "ConnectionTemplateCreateResponse"
      },
      "ConnectionTemplateDeleteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "deleted_at"
        ],
        "title": "ConnectionTemplateDeleteResponse"
      },
      "ConnectionTemplateGetResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "destination_name": {
            "type": "string",
            "title": "Destination Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "cron_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Expression"
          },
          "non_breaking_changes_preference": {
            "type": "string",
            "enum": [
              "ignore",
              "disable",
              "propagate_columns",
              "propagate_fully"
            ],
            "title": "Non Breaking Changes Preference",
            "default": "ignore"
          },
          "sync_on_create": {
            "type": "boolean",
            "title": "Sync On Create",
            "default": true
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "destination_name",
          "destination_definition_id",
          "destination_config"
        ],
        "title": "ConnectionTemplateGetResponse"
      },
      "ConnectionTemplateListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PreRenameConnectionConfigTemplate"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ConnectionTemplateListResponse"
      },
      "ConnectionTemplatePatchRequest": {
        "properties": {
          "destination_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination Name"
          },
          "destination_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination Config"
          },
          "cron_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Expression"
          },
          "non_breaking_changes_preference": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "ignore",
                  "disable",
                  "propagate_columns",
                  "propagate_fully"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Non Breaking Changes Preference"
          },
          "sync_on_create": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync On Create"
          }
        },
        "type": "object",
        "title": "ConnectionTemplatePatchRequest"
      },
      "ConnectorSpecification": {
        "properties": {
          "documentationUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentationurl"
          },
          "connectionSpecification": {
            "$ref": "#/components/schemas/ConnectionSpecification"
          },
          "supportsNormalization": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supportsnormalization"
          },
          "supportsDBT": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supportsdbt"
          },
          "advanced_auth": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AdvancedAuth"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "connectionSpecification"
        ],
        "title": "ConnectorSpecification"
      },
      "DestinationCreateRequest": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "name",
          "destination_definition_id",
          "destination_config"
        ],
        "title": "DestinationCreateRequest"
      },
      "DestinationCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_type": {
            "type": "string",
            "title": "Destination Type"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "destination_definition_id",
          "destination_type",
          "destination_config",
          "created_at"
        ],
        "title": "DestinationCreateResponse"
      },
      "DestinationGetResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_type": {
            "type": "string",
            "title": "Destination Type"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "destination_definition_id",
          "destination_type",
          "destination_config",
          "created_at"
        ],
        "title": "DestinationGetResponse"
      },
      "DestinationListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_type": {
            "type": "string",
            "title": "Destination Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "destination_definition_id",
          "destination_type"
        ],
        "title": "DestinationListItem"
      },
      "DestinationListResponse": {
        "properties": {
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DestinationListItem"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DestinationListResponse"
      },
      "DestinationUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "title": "DestinationUpdateRequest"
      },
      "DestinationUpdateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_type": {
            "type": "string",
            "title": "Destination Type"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "destination_definition_id",
          "destination_type",
          "destination_config",
          "created_at"
        ],
        "title": "DestinationUpdateResponse"
      },
      "DetailedSourceTemplate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "user_config_spec": {
            "$ref": "#/components/schemas/ConnectorSpecification"
          },
          "partial_default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Partial Default Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_definition_id",
          "user_config_spec",
          "partial_default_config"
        ],
        "title": "DetailedSourceTemplate"
      },
      "FilesAvailableSource": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "source_type"
        ],
        "title": "FilesAvailableSource"
      },
      "FilesAvailableSourcesResponse": {
        "properties": {
          "sources": {
            "items": {
              "$ref": "#/components/schemas/FilesAvailableSource"
            },
            "type": "array",
            "title": "Sources"
          }
        },
        "type": "object",
        "required": [
          "sources"
        ],
        "title": "FilesAvailableSourcesResponse"
      },
      "FilesSourceListItem": {
        "properties": {
          "bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes"
          },
          "file_relative_path": {
            "type": "string",
            "title": "File Relative Path"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "source_file_url": {
            "type": "string",
            "title": "Source File Url"
          }
        },
        "type": "object",
        "required": [
          "bytes",
          "file_relative_path",
          "modified",
          "source_file_url"
        ],
        "title": "FilesSourceListItem"
      },
      "FilesSourcesListResponse": {
        "properties": {
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/FilesSourceListItem"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "FilesSourcesListResponse"
      },
      "HealthCheckGetResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "queue_information": {
            "$ref": "#/components/schemas/QueueInformation"
          }
        },
        "type": "object",
        "required": [
          "success",
          "queue_information"
        ],
        "title": "HealthCheckGetResponse"
      },
      "HttpMethod": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE"
        ],
        "title": "HttpMethod"
      },
      "OAuthConfigSpecification": {
        "properties": {
          "oauth_user_input_from_connector_config_specification": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oauth User Input From Connector Config Specification"
          },
          "oauth_connector_input_specification": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oauth Connector Input Specification"
          },
          "complete_oauth_output_specification": {
            "additionalProperties": true,
            "type": "object",
            "title": "Complete Oauth Output Specification",
            "default": {}
          },
          "complete_oauth_server_input_specification": {
            "additionalProperties": true,
            "type": "object",
            "title": "Complete Oauth Server Input Specification",
            "default": {}
          },
          "complete_oauth_server_output_specification": {
            "additionalProperties": true,
            "type": "object",
            "title": "Complete Oauth Server Output Specification",
            "default": {}
          }
        },
        "type": "object",
        "title": "OAuthConfigSpecification"
      },
      "OauthCodeRequest": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "airbyte_client_id": {
            "type": "string",
            "title": "Airbyte Client Id"
          },
          "airbyte_client_secret": {
            "type": "string",
            "title": "Airbyte Client Secret"
          },
          "redirect_uri": {
            "type": "string",
            "title": "Redirect Uri"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          },
          "state": {
            "type": "string",
            "title": "State"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "airbyte_client_id",
          "airbyte_client_secret",
          "redirect_uri",
          "scope",
          "state"
        ],
        "title": "OauthCodeRequest"
      },
      "OauthCodeResponse": {
        "properties": {
          "redirect_uri": {
            "type": "string",
            "title": "Redirect Uri"
          }
        },
        "type": "object",
        "required": [
          "redirect_uri"
        ],
        "title": "OauthCodeResponse"
      },
      "OauthRegistrationRequest": {
        "properties": {
          "redirect_uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Redirect Uris"
          },
          "client_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Name"
          },
          "grant_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Grant Types"
          },
          "response_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Response Types"
          },
          "token_endpoint_auth_method": {
            "type": "string",
            "title": "Token Endpoint Auth Method"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "redirect_uris",
          "grant_types",
          "response_types",
          "token_endpoint_auth_method",
          "scope"
        ],
        "title": "OauthRegistrationRequest"
      },
      "OauthRegistrationResponse": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "redirect_uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Redirect Uris"
          },
          "grant_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Grant Types"
          },
          "response_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Response Types"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "redirect_uris",
          "grant_types",
          "response_types",
          "scope"
        ],
        "title": "OauthRegistrationResponse"
      },
      "OauthTokenRequest": {
        "properties": {
          "grant_type": {
            "type": "string",
            "title": "Grant Type"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "redirect_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Uri"
          }
        },
        "type": "object",
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ],
        "title": "OauthTokenRequest"
      },
      "OauthTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "expires_in"
        ],
        "title": "OauthTokenResponse"
      },
      "OnboardingProgressUpdateRequest": {
        "properties": {
          "onboarding_status": {
            "$ref": "#/components/schemas/OnboardingStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "onboarding_status"
        ],
        "title": "OnboardingProgressUpdateRequest"
      },
      "OnboardingProgressUpdateResponse": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "onboarding_progress": {
            "$ref": "#/components/schemas/OnboardingStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "onboarding_progress"
        ],
        "title": "OnboardingProgressUpdateResponse"
      },
      "OnboardingStatusEnum": {
        "type": "string",
        "enum": [
          "NOT_STARTED",
          "DESTINATION_SETUP_COMPLETE",
          "EMBED_CODE_COPIED",
          "COMPLETED"
        ],
        "title": "OnboardingStatusEnum"
      },
      "Organization": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "organization_name": {
            "type": "string",
            "title": "Organization Name"
          },
          "first_workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "First Workspace Id"
          },
          "onboarding_status": {
            "$ref": "#/components/schemas/OnboardingStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "organization_name",
          "first_workspace_id",
          "onboarding_status"
        ],
        "title": "Organization"
      },
      "OrganizationsListResponse": {
        "properties": {
          "organizations": {
            "items": {
              "$ref": "#/components/schemas/Organization"
            },
            "type": "array",
            "title": "Organizations"
          }
        },
        "type": "object",
        "required": [
          "organizations"
        ],
        "title": "OrganizationsListResponse"
      },
      "PreRenameConnectionConfigTemplate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "destination_name": {
            "type": "string",
            "title": "Destination Name"
          },
          "destination_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Destination Definition Id"
          },
          "destination_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Destination Config"
          },
          "cron_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Expression"
          },
          "non_breaking_changes_preference": {
            "type": "string",
            "enum": [
              "ignore",
              "disable",
              "propagate_columns",
              "propagate_fully"
            ],
            "title": "Non Breaking Changes Preference",
            "default": "ignore"
          },
          "sync_on_create": {
            "type": "boolean",
            "title": "Sync On Create",
            "default": true
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "destination_name",
          "destination_definition_id",
          "destination_config"
        ],
        "title": "PreRenameConnectionConfigTemplate"
      },
      "QueueInformation": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "scheduled_count": {
            "type": "integer",
            "title": "Scheduled Count"
          },
          "pending_count": {
            "type": "integer",
            "title": "Pending Count"
          }
        },
        "type": "object",
        "required": [
          "total",
          "scheduled_count",
          "pending_count"
        ],
        "title": "QueueInformation"
      },
      "ScopedTokenCreateRequest": {
        "properties": {
          "external_user_id": {
            "type": "string",
            "title": "External User Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "allowed_origin": {
            "type": "string",
            "title": "Allowed Origin"
          }
        },
        "type": "object",
        "required": [
          "external_user_id",
          "organization_id",
          "allowed_origin"
        ],
        "title": "ScopedTokenCreateRequest"
      },
      "ScopedTokenCreateResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "ScopedTokenCreateResponse"
      },
      "ScopedTokenInfoGetResponse": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "workspace_id"
        ],
        "title": "ScopedTokenInfoGetResponse"
      },
      "SourceDeleteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "deleted_at"
        ],
        "title": "SourceDeleteResponse"
      },
      "SourceGetResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_template": {
            "$ref": "#/components/schemas/DetailedSourceTemplate"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_template",
          "source_config"
        ],
        "title": "SourceGetResponse"
      },
      "SourceListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "summarized_source_template": {
            "$ref": "#/components/schemas/SummarizedSourceTemplate"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "summarized_source_template"
        ],
        "title": "SourceListItem"
      },
      "SourceListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SourceListItem"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SourceListResponse"
      },
      "SourceTemplateCreateRequest": {
        "properties": {
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "actor_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Actor Definition Id"
          },
          "partial_default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Partial Default Config",
            "description": "A template configuration containing default values for all those fields that the end user will *not* provide. Personalized fields like resource names or secrets should not be provided here."
          }
        },
        "type": "object",
        "required": [
          "actor_definition_id",
          "partial_default_config"
        ],
        "title": "SourceTemplateCreateRequest"
      },
      "SourceTemplateCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "user_config_spec": {
            "$ref": "#/components/schemas/ConnectorSpecification"
          },
          "partial_default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Partial Default Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_definition_id",
          "user_config_spec",
          "partial_default_config"
        ],
        "title": "SourceTemplateCreateResponse"
      },
      "SourceTemplateDeleteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "deleted_at"
        ],
        "title": "SourceTemplateDeleteResponse"
      },
      "SourceTemplateGetResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "user_config_spec": {
            "$ref": "#/components/schemas/ConnectorSpecification"
          },
          "partial_default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Partial Default Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_definition_id",
          "user_config_spec",
          "partial_default_config"
        ],
        "title": "SourceTemplateGetResponse"
      },
      "SourceTemplateListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "icon"
        ],
        "title": "SourceTemplateListItem"
      },
      "SourceTemplateListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SourceTemplateListItem"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SourceTemplateListResponse"
      },
      "SourceUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "source_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Config"
          }
        },
        "type": "object",
        "title": "SourceUpdateRequest"
      },
      "SummarizedSourceTemplate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "icon"
        ],
        "title": "SummarizedSourceTemplate"
      },
      "WorkspaceListItem": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "name"
        ],
        "title": "WorkspaceListItem"
      },
      "WorkspaceListResponse": {
        "properties": {
          "workspaces": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceListItem"
            },
            "type": "array",
            "title": "Workspaces"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "workspaces",
          "next"
        ],
        "title": "WorkspaceListResponse"
      },
      "app__api__integrations__sources__schemas__SourceCreateRequest": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "source_template_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Template Id"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "source_template_id",
          "source_config"
        ],
        "title": "SourceCreateRequest"
      },
      "app__api__integrations__sources__schemas__SourceCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_template": {
            "$ref": "#/components/schemas/DetailedSourceTemplate"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_template",
          "source_config"
        ],
        "title": "SourceCreateResponse"
      },
      "app__api__integrations__sources__schemas__SourceUpdateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_template": {
            "$ref": "#/components/schemas/DetailedSourceTemplate"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_template",
          "source_config"
        ],
        "title": "SourceUpdateResponse"
      },
      "app__api__tools__sources__schemas__SourceCreateRequest": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "name",
          "source_definition_id",
          "source_config"
        ],
        "title": "SourceCreateRequest"
      },
      "app__api__tools__sources__schemas__SourceCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_definition_id",
          "source_config",
          "source_type",
          "created_at"
        ],
        "title": "SourceCreateResponse"
      },
      "app__api__tools__sources__schemas__SourceUpdateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Definition Id"
          },
          "source_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Source Config"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_definition_id",
          "source_config",
          "source_type",
          "created_at"
        ],
        "title": "SourceUpdateResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Embedded",
      "description": "All the endpoints necessary to retrieve credentials for your end users."
    },
    {
      "name": "Sonar - APIs",
      "description": "Operator endpoints to access end user's API sources without requiring credentials."
    },
    {
      "name": "Sonar - Files",
      "description": "Operator endpoints to access end user's file sources (GDrive, Sharepoint, S3...) without requiring credentials"
    },
    {
      "name": "Sources",
      "description": "Operator endpoints to list all the configured sources."
    },
    {
      "name": "Template Connections",
      "description": "Operator endpoints to configure default connections setup."
    },
    {
      "name": "Template Sources",
      "description": "Operator endpoints to configure default source setup."
    }
  ]
}