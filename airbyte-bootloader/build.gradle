plugins {
    id 'application'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

dependencies {
    implementation project(':airbyte-config:init')
    implementation project(':airbyte-config:models')
    implementation project(':airbyte-config:persistence')
    implementation project(':airbyte-db:lib')
    implementation project(":airbyte-json-validation")
    implementation project(':airbyte-scheduler:persistence')

    implementation "org.flywaydb:flyway-core:7.14.0"

    testImplementation "org.testcontainers:postgresql:1.15.3"
    testImplementation 'uk.org.webcompere:system-stubs-jupiter:1.2.0'
}

application {
    applicationName = "airbyte-bootloader"
    mainClass = 'io.airbyte.bootloader.BootloaderApp'
    applicationDefaultJvmArgs = ['-XX:MaxRAMPercentage=75.0']
}

// Publish this so Airbyte Cloud can consume and extend the classes within this jar.
// This needs to be a shadow jar as none of the other modules are published.
shadowJar {
    zip64 true
    mergeServiceFiles()
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    // Not stubbing this out adds 'all' to the end of the jar's name.
    classifier = ''
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }

    repositories {
        publications {
            // This block is present so Gradle knows to publish a Maven jar.
            maven(MavenPublication) {
                from components.java
                // Gradle will by default use the subproject path as the group id and the subproject name as the artifact id.
                // e.g. the subproject :airbyte-scheduler:models is imported at io.airbyte.airbyte-config:persistence:<version-number>.
            }
        }

        maven {
            credentials {
                name 'cloudrepo'
                username System.getenv('CLOUDREPO_USER')
                password System.getenv('CLOUDREPO_PASSWORD')
            }
            url 'https://airbyte.mycloudrepo.io/repositories/airbyte-public-jars'
        }

        mavenLocal()
    }
}

task copyGeneratedTar(type: Copy) {
    dependsOn copyDocker
    dependsOn distTar

    from('build/distributions') {
        include 'airbyte-bootloader-*.tar'
    }
    into 'build/docker/bin'
}

Task dockerBuildTask = getDockerBuildTask("bootloader",  "$project.projectDir")
dockerBuildTask.dependsOn(copyGeneratedTar)
assemble.dependsOn(dockerBuildTask)
