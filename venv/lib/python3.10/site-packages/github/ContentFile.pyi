from typing import Any, Dict, List, Optional

from github.GithubObject import CompletableGithubObject
from github.License import License
from github.Repository import Repository

class ContentFile(CompletableGithubObject):
    def __repr__(self) -> str: ...
    def _initAttributes(self) -> None: ...
    def _useAttributes(self, attributes: Dict[str, Any]) -> None: ...
    @property
    def content(self) -> Optional[str]: ...
    @property
    def decoded_content(self) -> bytes: ...
    @property
    def download_url(self) -> str: ...
    @property
    def encoding(self) -> str: ...
    @property
    def git_url(self) -> str: ...
    @property
    def html_url(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def path(self) -> str: ...
    @property
    def repository(self) -> Repository: ...
    @property
    def sha(self) -> str: ...
    @property
    def size(self) -> int: ...
    @property
    def text_matches(self) -> List[Dict[str, Any]]: ...
    @property
    def type(self) -> str: ...
    @property
    def url(self) -> str: ...
    @property
    def license(self) -> License: ...
