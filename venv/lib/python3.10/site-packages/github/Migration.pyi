from datetime import datetime
from typing import Any, Dict, List, Optional, Union

from github.GithubObject import CompletableGithubObject
from github.NamedUser import NamedUser
from github.Repository import Repository

class Migration(CompletableGithubObject):
    def __repr__(self) -> str: ...
    def _initAttributes(self) -> None: ...
    def _useAttributes(self, attributes: Dict[str, Any]) -> None: ...
    @property
    def created_at(self) -> datetime: ...
    def delete(self) -> None: ...
    @property
    def exclude_attachments(self) -> bool: ...
    def get_archive_url(self) -> str: ...
    def get_status(self) -> str: ...
    @property
    def guid(self) -> str: ...
    @property
    def id(self) -> int: ...
    @property
    def lock_repositories(self) -> bool: ...
    @property
    def owner(self) -> NamedUser: ...
    @property
    def repositories(self) -> List[Repository]: ...
    @property
    def state(self) -> str: ...
    def unlock_repo(self, repo_name: str) -> None: ...
    @property
    def updated_at(self) -> datetime: ...
    @property
    def url(self) -> str: ...
