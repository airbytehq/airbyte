from datetime import datetime
from typing import Any, Dict, Union

from github.GithubObject import CompletableGithubObject, _NotSetType
from github.PaginatedList import PaginatedList
from github.ProjectCard import ProjectCard

class ProjectColumn(CompletableGithubObject):
    def __repr__(self) -> str: ...
    def _initAttributes(self) -> None: ...
    def _useAttributes(self, attributes: Dict[str, Any]) -> None: ...
    @property
    def cards_url(self) -> str: ...
    def create_card(
        self,
        note: Union[_NotSetType, str] = ...,
        content_id: Union[int, _NotSetType] = ...,
        content_type: Union[_NotSetType, str] = ...,
    ) -> ProjectCard: ...
    @property
    def created_at(self) -> datetime: ...
    def get_cards(
        self, archived_state: Union[_NotSetType, str] = ...
    ) -> PaginatedList[ProjectCard]: ...
    @property
    def id(self) -> int: ...
    @property
    def name(self) -> str: ...
    @property
    def node_id(self) -> str: ...
    @property
    def project_url(self) -> str: ...
    @property
    def updated_at(self) -> datetime: ...
    @property
    def url(self) -> str: ...
    def move(self, position: str) -> bool: ...
    def delete(self) -> bool: ...
    def edit(self, name: str) -> None: ...
