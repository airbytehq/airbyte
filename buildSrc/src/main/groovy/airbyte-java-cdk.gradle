/*
This class facilites detecting the Java CDK target version via readCdkTargetVersion().
*/

import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.tasks.testing.Test
import java.util.Properties

class AirbyteJavaCdkPlugin implements Plugin<Project> {

    static String CDK_VERSION_FILE = "airbyte-cdk/java/airbyte-cdk/core/src/main/resources/version.properties"

    String readCdkTargetVersion(Project project) {
        Properties cdkVersionProps = new Properties()
        project.file("${project.rootDir}/${CDK_VERSION_FILE}").withInputStream {
            cdkVersionProps.load(it)
        }
        return cdkVersionProps.getProperty('version') ?: 'undefined'
    }

    @Override
    void apply(Project project) {
        project.ext.getCdkTargetVersion = {
            return readCdkTargetVersion(project)
        }
        project.getTasks().create("disableLocalCdkRefs", DisableLocalCdkRefsTask.class);
        project.getTasks().create("assertNotUsingLocalCdk", AssertNotUsingLocalCdkTask.class);
    }

    public static class DisableLocalCdkRefsTask extends DefaultTask {
        @TaskAction
        public void disableLocalCdkRefs() {
            // Step through the project tree and set useLocalCdk to false on all connectors
            getProject().fileTree(dir: '.', include: '**/build.gradle').forEach(file -> {
                String content = file.getText();
                if (content.contains("useLocalCdk = true")) {
                    content = content.replace("useLocalCdk = true", "useLocalCdk = false");
                    file.setText(content);
                    System.out.println("Updated " + file.getPath());
                }
            });
        }
    }

    public static class AssertNotUsingLocalCdkTask extends DefaultTask {
        @TaskAction
        public void assertNotUsingLocalCdk() {
            List<String> foundPaths = new ArrayList<>();

            for (File file : getProject().fileTree(dir: '.', include: '**/build.gradle')) {
                String content = file.getText();
                if (content.contains("useLocalCdk = true")) {
                    System.err.println("Found usage of 'useLocalCdk = true' in " + file.getPath());
                    foundPaths.add(file.getPath());
                }
            }

            if (!foundPaths.isEmpty()) {
                String errorMessage = String.format(
                    "Detected usage of 'useLocalCdk = true' in the following files:\n%s\n" +
                    "This must be set to 'false' before merging to the main branch. \n" +
                    "NOTE: You can run './gradlew disableLocalCdkRefs' to automatically set it to 'false' on all projects.",
                    String.join("\n", foundPaths)
                );
                throw new RuntimeException(errorMessage);
            }
        }
    }
}
