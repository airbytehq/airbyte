# ## `poe connector` task
#
# The `poe connector` task is a shortcut to run any poe task in a connector's directory.
# Example usage:
#   poe connector <connector-name> <task> [args...]
#   poe connector source-hardcoded-records check-all
#   poe connector destination-motherduck check-all
#
# ## `poe source` and `poe destination` tasks
# The `source` and `destinations` tasks are thin wrappers around
# the `connector` task.
#
# Example usage:
#   poe source hardcoded-records check-all
#   poe destination motherduck check-all

[tasks.docs-build]
help = "Build the docs.airbyte.com site documentation using Docusaurus."
shell = '''
cd $POE_ROOT/docusaurus
pnpm install
pnpm build
'''

[tasks.connector]
help = "Run a poe task in a connector's directory. Usage: poe connector <connector-name> <task> [args...]"

shell = '''
#!/bin/bash
cd airbyte-integrations/connectors/${connector}
poe ${task_and_args}
'''

args = [
  { name = "connector", positional = true, help = "Name of the connector (e.g., source-hardcoded-records)" },
  { name = "task_and_args", positional = true, multiple = true, help = "Task name and its arguments" }
]

[tasks.source]
help = "Run a poe task in a source's directory. Usage: poe source <source-shortname> <task> [args...]. E.g. `poe source hardcoded-records check-all`"
cmd = 'poe connector "source-${source}" ${task_and_args}'

args = [
  { name = "source", positional = true, help = "Name of the source (e.g., 'hardcoded-records')" },
  { name = "task_and_args", positional = true, multiple = true, help = "Task name and its arguments" }
]

[tasks.destination]
help = "Run a poe task in a destination's directory. Usage: poe destination <destination-shortname> <task> [args...]. E.g. `poe destination motherduck check-all`"
cmd = 'poe connector "destination-${destination}" ${task_and_args}'

args = [
  { name = "destination", positional = true, help = "Name of the destination (e.g., 'motherduck')" },
  { name = "task_and_args", positional = true, multiple = true, help = "Task name and its arguments" }
]
