# generated by datamodel-codegen:
#   filename:  SmokeTestScenario.yaml

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra, Field


class SmokeTestScenario(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str = Field(
        ...,
        description="Name of the test scenario (e.g., 'default', 'invalid_config', 'oauth_config')",
    )
    config_file: Optional[str] = Field(
        None, description="Relative path to the config file to use for this scenario"
    )
    config_settings: Optional[Dict[str, Any]] = Field(
        None,
        description="Optional dictionary of config settings to override or supplement config_file settings",
    )
    expect_failure: Optional[bool] = Field(
        False, description="Whether the scenario is expected to fail"
    )
    only_streams: Optional[List[str]] = Field(
        None,
        description="List of stream names to include in the scenario (if specified, only these streams will be tested)",
    )
    exclude_streams: Optional[List[str]] = Field(
        None, description="List of stream names to exclude from the scenario"
    )
    suggested_streams_only: Optional[bool] = Field(
        False,
        description="Whether to limit testing to the connector's suggested streams list (from data.suggestedStreams)",
    )
    configured_catalog_path: Optional[str] = Field(
        None, description="Path to a pre-configured catalog file for the scenario"
    )
