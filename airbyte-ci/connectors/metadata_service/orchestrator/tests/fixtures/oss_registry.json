{
  "destinations": [
    {
      "destinationDefinitionId": "b4c5d105-31fd-4817-96b6-cb923bfc04cb",
      "name": "Azure Blob Storage",
      "dockerRepository": "airbyte/destination-azure-blob-storage",
      "dockerImageTag": "0.2.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/azureblobstorage",
      "icon": "azureblobstorage.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/azureblobstorage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "AzureBlobStorage Destination Spec",
          "type": "object",
          "required": [
            "azure_blob_storage_account_name",
            "azure_blob_storage_account_key",
            "format"
          ],
          "additionalProperties": false,
          "properties": {
            "azure_blob_storage_endpoint_domain_name": {
              "title": "Endpoint Domain Name",
              "type": "string",
              "default": "blob.core.windows.net",
              "description": "This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.",
              "examples": ["blob.core.windows.net"]
            },
            "azure_blob_storage_container_name": {
              "title": "Azure blob storage container (Bucket) Name",
              "type": "string",
              "description": "The name of the Azure blob storage container. If not exists - will be created automatically. May be empty, then will be created automatically airbytecontainer+timestamp",
              "examples": ["airbytetescontainername"]
            },
            "azure_blob_storage_account_name": {
              "title": "Azure Blob Storage account name",
              "type": "string",
              "description": "The account's name of the Azure Blob Storage.",
              "examples": ["airbyte5storage"]
            },
            "azure_blob_storage_account_key": {
              "title": "Azure Blob Storage account key",
              "description": "The Azure blob storage account key.",
              "airbyte_secret": true,
              "type": "string",
              "examples": [
                "Z8ZkZpteggFx394vm+PJHnGTvdRncaYS+JhLKdj789YNmD+iyGTnG+PV+POiuYNhBg/ACS+LKjd%4FG3FHGN12Nd=="
              ]
            },
            "azure_blob_storage_output_buffer_size": {
              "title": "Azure Blob Storage output buffer size (Megabytes)",
              "type": "integer",
              "description": "The amount of megabytes to buffer for the output stream to Azure. This will impact memory footprint on workers, but may need adjustment for performance and appropriate block size in Azure.",
              "minimum": 1,
              "maximum": 2047,
              "default": 5,
              "examples": [5]
            },
            "azure_blob_storage_spill_size": {
              "title": "Azure Blob Storage file spill size",
              "type": "integer",
              "description": "The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable",
              "default": 500,
              "examples": [500]
            },
            "format": {
              "title": "Output Format",
              "type": "object",
              "description": "Output data format",
              "oneOf": [
                {
                  "title": "CSV: Comma-Separated Values",
                  "required": ["format_type", "flattening"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "const": "CSV"
                    },
                    "flattening": {
                      "type": "string",
                      "title": "Normalization (Flattening)",
                      "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details.",
                      "default": "No flattening",
                      "enum": ["No flattening", "Root level flattening"]
                    }
                  }
                },
                {
                  "title": "JSON Lines: newline-delimited JSON",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "const": "JSONL"
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      }
    },
    {
      "destinationDefinitionId": "0eeee7fb-518f-4045-bacc-9619e31c43ea",
      "name": "Amazon SQS",
      "dockerRepository": "airbyte/destination-amazon-sqs",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/amazon-sqs",
      "icon": "awssqs.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/amazon-sqs",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Amazon Sqs",
          "type": "object",
          "required": ["queue_url", "region"],
          "additionalProperties": false,
          "properties": {
            "queue_url": {
              "title": "Queue URL",
              "description": "URL of the SQS Queue",
              "type": "string",
              "examples": [
                "https://sqs.eu-west-1.amazonaws.com/1234567890/my-example-queue"
              ],
              "order": 0
            },
            "region": {
              "title": "AWS Region",
              "description": "AWS Region of the SQS Queue",
              "type": "string",
              "enum": [
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "order": 1
            },
            "message_delay": {
              "title": "Message Delay",
              "description": "Modify the Message Delay of the individual message from the Queue's default (seconds).",
              "type": "integer",
              "examples": ["15"],
              "order": 2
            },
            "access_key": {
              "title": "AWS IAM Access Key ID",
              "description": "The Access Key ID of the AWS IAM Role to use for sending  messages",
              "type": "string",
              "examples": ["xxxxxHRNxxx3TBxxxxxx"],
              "order": 3,
              "airbyte_secret": true
            },
            "secret_key": {
              "title": "AWS IAM Secret Key",
              "description": "The Secret Key of the AWS IAM Role to use for sending messages",
              "type": "string",
              "examples": ["hu+qE5exxxxT6o/ZrKsxxxxxxBhxxXLexxxxxVKz"],
              "order": 4,
              "airbyte_secret": true
            },
            "message_body_key": {
              "title": "Message Body Key",
              "description": "Use this property to extract the contents of the named key in the input record to use as the SQS message body. If not set, the entire content of the input record data is used as the message body.",
              "type": "string",
              "examples": ["myDataPath"],
              "order": 5
            },
            "message_group_id": {
              "title": "Message Group Id",
              "description": "The tag that specifies that a message belongs to a specific message group. This parameter applies only to, and is REQUIRED by, FIFO queues.",
              "type": "string",
              "examples": ["my-fifo-group"],
              "order": 6
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "05c161bf-ca73-4d48-b524-d392be417002",
      "name": "Apache Doris",
      "dockerRepository": "airbyte/destination-doris",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/doris",
      "icon": "apachedoris.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/destinations/doris",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Doris Destination Spec",
          "type": "object",
          "required": ["host", "httpport", "queryport", "username", "database"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database",
              "type": "string",
              "order": 0
            },
            "httpport": {
              "title": "HttpPort",
              "description": "Http Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8030,
              "examples": ["8030"],
              "order": 1
            },
            "queryport": {
              "title": "QueryPort",
              "description": "Query(SQL) Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 9030,
              "examples": ["9030"],
              "order": 2
            },
            "database": {
              "title": "DataBase Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 3
            },
            "username": {
              "title": "UserName",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            }
          }
        },
        "supportsIncremental": false,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append", "overwrite"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "df65a8f3-9908-451b-aa9b-445462803560",
      "name": "Apache Iceberg",
      "dockerRepository": "airbyte/destination-iceberg",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/iceberg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/iceberg",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Iceberg Destination Spec",
          "type": "object",
          "required": ["catalog_config", "storage_config", "format_config"],
          "properties": {
            "catalog_config": {
              "title": "Iceberg catalog config",
              "type": "object",
              "description": "Catalog config of Iceberg.",
              "oneOf": [
                {
                  "title": "HiveCatalog: Use Apache Hive MetaStore",
                  "required": ["catalog_type", "hive_thrift_uri"],
                  "properties": {
                    "catalog_type": {
                      "title": "Catalog Type",
                      "type": "string",
                      "default": "Hive",
                      "enum": ["Hive"],
                      "order": 0
                    },
                    "hive_thrift_uri": {
                      "title": "Hive Metastore thrift uri",
                      "type": "string",
                      "description": "Hive MetaStore thrift server uri of iceberg catalog.",
                      "examples": ["host:port"],
                      "order": 1
                    },
                    "database": {
                      "title": "Default database",
                      "description": "The default database tables are written to if the source does not specify a namespace. The usual value for this field is \"default\".",
                      "type": "string",
                      "default": "default",
                      "examples": ["default"],
                      "order": 2
                    }
                  }
                },
                {
                  "title": "HadoopCatalog: Use hierarchical file systems as same as storage config",
                  "description": "A Hadoop catalog doesn’t need to connect to a Hive MetaStore, but can only be used with HDFS or similar file systems that support atomic rename.",
                  "required": ["catalog_type"],
                  "properties": {
                    "catalog_type": {
                      "title": "Catalog Type",
                      "type": "string",
                      "default": "Hadoop",
                      "enum": ["Hadoop"],
                      "order": 0
                    },
                    "database": {
                      "title": "Default database",
                      "description": "The default database tables are written to if the source does not specify a namespace. The usual value for this field is \"default\".",
                      "type": "string",
                      "default": "default",
                      "examples": ["default"],
                      "order": 1
                    }
                  }
                },
                {
                  "title": "JdbcCatalog: Use relational database",
                  "description": "Using a table in a relational database to manage Iceberg tables through JDBC. Read more <a href=\"https://iceberg.apache.org/docs/latest/jdbc/\">here</a>. Supporting: PostgreSQL",
                  "required": ["catalog_type"],
                  "properties": {
                    "catalog_type": {
                      "title": "Catalog Type",
                      "type": "string",
                      "default": "Jdbc",
                      "enum": ["Jdbc"],
                      "order": 0
                    },
                    "database": {
                      "title": "Default schema",
                      "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".",
                      "type": "string",
                      "default": "public",
                      "examples": ["public"],
                      "order": 1
                    },
                    "jdbc_url": {
                      "title": "Jdbc url",
                      "type": "string",
                      "examples": [
                        "jdbc:postgresql://{host}:{port}/{database}"
                      ],
                      "order": 2
                    },
                    "username": {
                      "title": "User",
                      "description": "Username to use to access the database.",
                      "type": "string",
                      "order": 3
                    },
                    "password": {
                      "title": "Password",
                      "description": "Password associated with the username.",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    },
                    "ssl": {
                      "title": "SSL Connection",
                      "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes.",
                      "type": "boolean",
                      "default": false,
                      "order": 5
                    },
                    "catalog_schema": {
                      "title": "schema for Iceberg catalog",
                      "description": "Iceberg catalog metadata tables are written to catalog schema. The usual value for this field is \"public\".",
                      "type": "string",
                      "default": "public",
                      "examples": ["public"],
                      "order": 6
                    }
                  }
                }
              ],
              "order": 0
            },
            "storage_config": {
              "title": "Storage config",
              "type": "object",
              "description": "Storage config of Iceberg.",
              "oneOf": [
                {
                  "title": "S3",
                  "type": "object",
                  "description": "S3 object storage",
                  "required": [
                    "storage_type",
                    "access_key_id",
                    "secret_access_key",
                    "s3_warehouse_uri"
                  ],
                  "properties": {
                    "storage_type": {
                      "title": "Storage Type",
                      "type": "string",
                      "default": "S3",
                      "enum": ["S3"],
                      "order": 0
                    },
                    "access_key_id": {
                      "type": "string",
                      "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>.",
                      "title": "S3 Key ID",
                      "airbyte_secret": true,
                      "examples": ["A012345678910EXAMPLE"],
                      "order": 0
                    },
                    "secret_access_key": {
                      "type": "string",
                      "description": "The corresponding secret to the access key ID. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>",
                      "title": "S3 Access Key",
                      "airbyte_secret": true,
                      "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"],
                      "order": 1
                    },
                    "s3_warehouse_uri": {
                      "title": "S3 Warehouse Uri for Iceberg",
                      "type": "string",
                      "description": "The Warehouse Uri for Iceberg",
                      "examples": [
                        "s3a://my-bucket/path/to/warehouse",
                        "s3://my-bucket/path/to/warehouse"
                      ],
                      "order": 2
                    },
                    "s3_bucket_region": {
                      "title": "S3 Bucket Region",
                      "type": "string",
                      "default": "",
                      "description": "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\">here</a> for all region codes.",
                      "enum": [
                        "",
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "af-south-1",
                        "ap-east-1",
                        "ap-south-1",
                        "ap-northeast-1",
                        "ap-northeast-2",
                        "ap-northeast-3",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ca-central-1",
                        "cn-north-1",
                        "cn-northwest-1",
                        "eu-central-1",
                        "eu-north-1",
                        "eu-south-1",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "sa-east-1",
                        "me-south-1",
                        "us-gov-east-1",
                        "us-gov-west-1"
                      ],
                      "order": 3
                    },
                    "s3_endpoint": {
                      "title": "Endpoint",
                      "type": "string",
                      "default": "",
                      "description": "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\">here</a>",
                      "examples": ["http://localhost:9000", "localhost:9000"],
                      "order": 4
                    },
                    "s3_path_style_access": {
                      "type": "boolean",
                      "description": "Use path style access",
                      "examples": [true, false],
                      "default": true,
                      "order": 5
                    }
                  }
                }
              ],
              "order": 1
            },
            "format_config": {
              "title": "File format",
              "type": "object",
              "required": ["format"],
              "description": "File format of Iceberg storage.",
              "properties": {
                "format": {
                  "title": "File storage format",
                  "type": "string",
                  "default": "Parquet",
                  "description": "",
                  "enum": ["Parquet", "Avro"],
                  "order": 0
                },
                "flush_batch_size": {
                  "title": "Data file flushing batch size",
                  "description": "Iceberg data file flush batch size. Incoming rows write to cache firstly; When cache size reaches this 'batch size', flush into real Iceberg data file.",
                  "type": "integer",
                  "default": 10000,
                  "order": 1
                },
                "auto_compact": {
                  "title": "Auto compact data files",
                  "description": "Auto compact data files when stream close",
                  "type": "boolean",
                  "default": false,
                  "order": 2
                },
                "compact_target_file_size_in_mb": {
                  "title": "Target size of compacted data file",
                  "description": "Specify the target size of Iceberg data file when performing a compaction action. ",
                  "type": "integer",
                  "default": 100,
                  "order": 3
                }
              },
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "99878c90-0fbd-46d3-9d98-ffde879d17fc",
      "name": "AWS Datalake",
      "dockerRepository": "airbyte/destination-aws-datalake",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/aws-datalake",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/aws-datalake",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "AWS Datalake Destination Spec",
          "type": "object",
          "required": ["credentials", "region", "bucket_name", "bucket_prefix"],
          "additionalProperties": false,
          "properties": {
            "aws_account_id": {
              "type": "string",
              "title": "AWS Account Id",
              "description": "target aws account id",
              "examples": ["111111111111"]
            },
            "region": {
              "title": "AWS Region",
              "type": "string",
              "description": "Region name",
              "airbyte_secret": false
            },
            "credentials": {
              "title": "Authentication mode",
              "description": "Choose How to Authenticate to AWS.",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "IAM Role",
                  "required": ["role_arn", "credentials_title"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "Name of the credentials",
                      "const": "IAM Role",
                      "enum": ["IAM Role"],
                      "default": "IAM Role",
                      "order": 0
                    },
                    "role_arn": {
                      "title": "Target Role Arn",
                      "type": "string",
                      "description": "Will assume this role to write data to s3",
                      "airbyte_secret": false
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "IAM User",
                  "required": [
                    "credentials_title",
                    "aws_access_key_id",
                    "aws_secret_access_key"
                  ],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "Name of the credentials",
                      "const": "IAM User",
                      "enum": ["IAM User"],
                      "default": "IAM User",
                      "order": 0
                    },
                    "aws_access_key_id": {
                      "title": "Access Key Id",
                      "type": "string",
                      "description": "AWS User Access Key Id",
                      "airbyte_secret": true
                    },
                    "aws_secret_access_key": {
                      "title": "Secret Access Key",
                      "type": "string",
                      "description": "Secret Access Key",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "bucket_name": {
              "title": "S3 Bucket Name",
              "type": "string",
              "description": "Name of the bucket",
              "airbyte_secret": false
            },
            "bucket_prefix": {
              "title": "Target S3 Bucket Prefix",
              "type": "string",
              "description": "S3 prefix",
              "airbyte_secret": false
            },
            "lakeformation_database_name": {
              "title": "Lakeformation Database Name",
              "type": "string",
              "description": "Which database to use",
              "airbyte_secret": false
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "22f6c74f-5699-40ff-833c-4a879ea40133",
      "name": "BigQuery",
      "dockerRepository": "airbyte/destination-bigquery",
      "dockerImageTag": "1.2.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/bigquery",
      "icon": "bigquery.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/bigquery",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "BigQuery Destination Spec",
          "type": "object",
          "required": ["project_id", "dataset_location", "dataset_id"],
          "additionalProperties": true,
          "properties": {
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target BigQuery dataset. Read more <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\">here</a>.",
              "title": "Project ID",
              "order": 0
            },
            "dataset_location": {
              "type": "string",
              "description": "The location of the dataset. Warning: Changes made after creation will not be applied. Read more <a href=\"https://cloud.google.com/bigquery/docs/locations\">here</a>.",
              "title": "Dataset Location",
              "order": 1,
              "enum": [
                "US",
                "EU",
                "asia-east1",
                "asia-east2",
                "asia-northeast1",
                "asia-northeast2",
                "asia-northeast3",
                "asia-south1",
                "asia-south2",
                "asia-southeast1",
                "asia-southeast2",
                "australia-southeast1",
                "australia-southeast2",
                "europe-central2",
                "europe-north1",
                "europe-west1",
                "europe-west2",
                "europe-west3",
                "europe-west4",
                "europe-west6",
                "northamerica-northeast1",
                "northamerica-northeast2",
                "southamerica-east1",
                "southamerica-west1",
                "us-central1",
                "us-east1",
                "us-east4",
                "us-west1",
                "us-west2",
                "us-west3",
                "us-west4"
              ]
            },
            "dataset_id": {
              "type": "string",
              "description": "The default BigQuery Dataset ID that tables are replicated to if the source does not specify a namespace. Read more <a href=\"https://cloud.google.com/bigquery/docs/datasets#create-dataset\">here</a>.",
              "title": "Default Dataset ID",
              "order": 2
            },
            "loading_method": {
              "type": "object",
              "title": "Loading Method",
              "description": "Loading method used to send select the way data will be uploaded to BigQuery. <br/><b>Standard Inserts</b> - Direct uploading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In almost all cases, you should use staging. <br/><b>GCS Staging</b> - Writes large batches of records to a file, uploads the file to GCS, then uses <b>COPY INTO table</b> to upload the file. Recommended for most workloads for better speed and scalability. Read more about GCS Staging <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#gcs-staging\">here</a>.",
              "order": 3,
              "oneOf": [
                {
                  "title": "Standard Inserts",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard"
                    }
                  }
                },
                {
                  "title": "GCS Staging",
                  "required": [
                    "method",
                    "gcs_bucket_name",
                    "gcs_bucket_path",
                    "credential"
                  ],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "GCS Staging",
                      "order": 0
                    },
                    "credential": {
                      "title": "Credential",
                      "description": "An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\">here</a>.",
                      "type": "object",
                      "order": 1,
                      "oneOf": [
                        {
                          "title": "HMAC key",
                          "required": [
                            "credential_type",
                            "hmac_key_access_id",
                            "hmac_key_secret"
                          ],
                          "properties": {
                            "credential_type": {
                              "type": "string",
                              "const": "HMAC_KEY",
                              "order": 0
                            },
                            "hmac_key_access_id": {
                              "type": "string",
                              "description": "HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.",
                              "title": "HMAC Key Access ID",
                              "airbyte_secret": true,
                              "examples": ["1234567890abcdefghij1234"],
                              "order": 1
                            },
                            "hmac_key_secret": {
                              "type": "string",
                              "description": "The corresponding secret for the access ID. It is a 40-character base-64 encoded string.",
                              "title": "HMAC Key Secret",
                              "airbyte_secret": true,
                              "examples": [
                                "1234567890abcdefghij1234567890ABCDEFGHIJ"
                              ],
                              "order": 2
                            }
                          }
                        }
                      ]
                    },
                    "gcs_bucket_name": {
                      "title": "GCS Bucket Name",
                      "type": "string",
                      "description": "The name of the GCS bucket. Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\">here</a>.",
                      "examples": ["airbyte_sync"],
                      "order": 2
                    },
                    "gcs_bucket_path": {
                      "title": "GCS Bucket Path",
                      "description": "Directory under the GCS bucket where data will be written.",
                      "type": "string",
                      "examples": ["data_sync/test"],
                      "order": 3
                    },
                    "keep_files_in_gcs-bucket": {
                      "type": "string",
                      "description": "This upload method is supposed to temporary store records in GCS bucket. By this select you can chose if these records should be removed from GCS when migration has finished. The default \"Delete all tmp files from GCS\" value is used if not set explicitly.",
                      "title": "GCS Tmp Files Afterward Processing",
                      "default": "Delete all tmp files from GCS",
                      "enum": [
                        "Delete all tmp files from GCS",
                        "Keep all tmp files in GCS"
                      ],
                      "order": 4
                    }
                  }
                }
              ]
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of the JSON service account key. Check out the <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#service-account-key\">docs</a> if you need help generating this key. Default credentials will be used if this field is left empty.",
              "title": "Service Account Key JSON (Required for cloud, optional for open-source)",
              "airbyte_secret": true,
              "order": 4
            },
            "transformation_priority": {
              "type": "string",
              "description": "Interactive run type means that the query is executed as soon as possible, and these queries count towards concurrent rate limit and daily limit. Read more about interactive run type <a href=\"https://cloud.google.com/bigquery/docs/running-queries#queries\">here</a>. Batch queries are queued and started as soon as idle resources are available in the BigQuery shared resource pool, which usually occurs within a few minutes. Batch queries don’t count towards your concurrent rate limit. Read more about batch queries <a href=\"https://cloud.google.com/bigquery/docs/running-queries#batch\">here</a>. The default \"interactive\" value is used if not set explicitly.",
              "title": "Transformation Query Run Type",
              "default": "interactive",
              "enum": ["interactive", "batch"],
              "order": 5
            },
            "big_query_client_buffer_size_mb": {
              "title": "Google BigQuery Client Chunk Size",
              "description": "Google BigQuery client's chunk (buffer) size (MIN=1, MAX = 15) for each table. The size that will be written by a single RPC. Written data will be buffered and only flushed upon reaching this size or closing the channel. The default 15MB value is used if not set explicitly. Read more <a href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html\">here</a>.",
              "type": "integer",
              "minimum": 1,
              "maximum": 15,
              "default": 15,
              "examples": ["15"],
              "order": 6
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      },
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "bigquery"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "079d5540-f236-4294-ba7c-ade8fd918496",
      "name": "BigQuery (denormalized typed struct)",
      "dockerRepository": "airbyte/destination-bigquery-denormalized",
      "dockerImageTag": "1.2.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/bigquery",
      "icon": "bigquery.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/bigquery",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "BigQuery Denormalized Typed Struct Destination Spec",
          "type": "object",
          "required": ["project_id", "dataset_id"],
          "additionalProperties": true,
          "properties": {
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target BigQuery dataset. Read more <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\">here</a>.",
              "title": "Project ID",
              "order": 0
            },
            "dataset_id": {
              "type": "string",
              "description": "The default BigQuery Dataset ID that tables are replicated to if the source does not specify a namespace. Read more <a href=\"https://cloud.google.com/bigquery/docs/datasets#create-dataset\">here</a>.",
              "title": "Default Dataset ID",
              "order": 1
            },
            "loading_method": {
              "type": "object",
              "title": "Loading Method",
              "description": "Loading method used to send select the way data will be uploaded to BigQuery. <br/><b>Standard Inserts</b> - Direct uploading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In almost all cases, you should use staging. <br/><b>GCS Staging</b> - Writes large batches of records to a file, uploads the file to GCS, then uses <b>COPY INTO table</b> to upload the file. Recommended for most workloads for better speed and scalability. Read more about GCS Staging <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#gcs-staging\">here</a>.",
              "order": 2,
              "oneOf": [
                {
                  "title": "Standard Inserts",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard"
                    }
                  }
                },
                {
                  "title": "GCS Staging",
                  "type": "object",
                  "required": [
                    "method",
                    "gcs_bucket_name",
                    "gcs_bucket_path",
                    "credential"
                  ],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "GCS Staging",
                      "order": 0
                    },
                    "credential": {
                      "title": "Credential",
                      "description": "An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\">here</a>.",
                      "type": "object",
                      "order": 1,
                      "oneOf": [
                        {
                          "title": "HMAC key",
                          "order": 0,
                          "required": [
                            "credential_type",
                            "hmac_key_access_id",
                            "hmac_key_secret"
                          ],
                          "properties": {
                            "credential_type": {
                              "type": "string",
                              "const": "HMAC_KEY",
                              "order": 0
                            },
                            "hmac_key_access_id": {
                              "type": "string",
                              "description": "HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.",
                              "title": "HMAC Key Access ID",
                              "airbyte_secret": true,
                              "examples": ["1234567890abcdefghij1234"],
                              "order": 1
                            },
                            "hmac_key_secret": {
                              "type": "string",
                              "description": "The corresponding secret for the access ID. It is a 40-character base-64 encoded string.",
                              "title": "HMAC Key Secret",
                              "airbyte_secret": true,
                              "examples": [
                                "1234567890abcdefghij1234567890ABCDEFGHIJ"
                              ],
                              "order": 2
                            }
                          }
                        }
                      ]
                    },
                    "gcs_bucket_name": {
                      "title": "GCS Bucket Name",
                      "type": "string",
                      "description": "The name of the GCS bucket. Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\">here</a>.",
                      "examples": ["airbyte_sync"],
                      "order": 2
                    },
                    "gcs_bucket_path": {
                      "title": "GCS Bucket Path",
                      "description": "Directory under the GCS bucket where data will be written. Read more <a href=\"https://cloud.google.com/storage/docs/locations\">here</a>.",
                      "type": "string",
                      "examples": ["data_sync/test"],
                      "order": 3
                    },
                    "keep_files_in_gcs-bucket": {
                      "type": "string",
                      "description": "This upload method is supposed to temporary store records in GCS bucket. By this select you can chose if these records should be removed from GCS when migration has finished. The default \"Delete all tmp files from GCS\" value is used if not set explicitly.",
                      "title": "GCS Tmp Files Afterward Processing",
                      "default": "Delete all tmp files from GCS",
                      "enum": [
                        "Delete all tmp files from GCS",
                        "Keep all tmp files in GCS"
                      ],
                      "order": 4
                    }
                  }
                }
              ]
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of the JSON service account key. Check out the <a href=\"https://docs.airbyte.com/integrations/destinations/bigquery#service-account-key\">docs</a> if you need help generating this key. Default credentials will be used if this field is left empty.",
              "title": "Service Account Key JSON (Required for cloud, optional for open-source)",
              "airbyte_secret": true,
              "order": 3
            },
            "dataset_location": {
              "type": "string",
              "description": "The location of the dataset. Warning: Changes made after creation will not be applied. The default \"US\" value is used if not set explicitly. Read more <a href=\"https://cloud.google.com/bigquery/docs/locations\">here</a>.",
              "title": "Dataset Location",
              "default": "US",
              "order": 4,
              "enum": [
                "US",
                "EU",
                "asia-east1",
                "asia-east2",
                "asia-northeast1",
                "asia-northeast2",
                "asia-northeast3",
                "asia-south1",
                "asia-south2",
                "asia-southeast1",
                "asia-southeast2",
                "australia-southeast1",
                "australia-southeast2",
                "europe-central2",
                "europe-north1",
                "europe-west1",
                "europe-west2",
                "europe-west3",
                "europe-west4",
                "europe-west6",
                "northamerica-northeast1",
                "northamerica-northeast2",
                "southamerica-east1",
                "southamerica-west1",
                "us-central1",
                "us-east1",
                "us-east4",
                "us-west1",
                "us-west2",
                "us-west3",
                "us-west4"
              ]
            },
            "big_query_client_buffer_size_mb": {
              "title": "Google BigQuery Client Chunk Size",
              "description": "Google BigQuery client's chunk (buffer) size (MIN=1, MAX = 15) for each table. The size that will be written by a single RPC. Written data will be buffered and only flushed upon reaching this size or closing the channel. The default 15MB value is used if not set explicitly. Read more <a href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html\">here</a>.",
              "type": "integer",
              "minimum": 1,
              "maximum": 15,
              "default": 15,
              "examples": ["15"],
              "order": 5
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      }
    },
    {
      "destinationDefinitionId": "707456df-6f4f-4ced-b5c6-03f73bcad1c5",
      "name": "Cassandra",
      "dockerRepository": "airbyte/destination-cassandra",
      "dockerImageTag": "0.1.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/cassandra",
      "icon": "cassandra.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/cassandra",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Cassandra Destination Spec",
          "type": "object",
          "required": ["keyspace", "username", "password", "address", "port"],
          "additionalProperties": true,
          "properties": {
            "keyspace": {
              "title": "Keyspace",
              "description": "Default Cassandra keyspace to create data in.",
              "type": "string",
              "order": 0
            },
            "username": {
              "title": "Username",
              "description": "Username to use to access Cassandra.",
              "type": "string",
              "order": 1
            },
            "password": {
              "title": "Password",
              "description": "Password associated with Cassandra.",
              "type": "string",
              "airbyte_secret": true,
              "order": 2
            },
            "address": {
              "title": "Address",
              "description": "Address to connect to.",
              "type": "string",
              "examples": ["localhost,127.0.0.1"],
              "order": 3
            },
            "port": {
              "title": "Port",
              "description": "Port of Cassandra.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 9042,
              "order": 4
            },
            "datacenter": {
              "title": "Datacenter",
              "description": "Datacenter of the cassandra cluster.",
              "type": "string",
              "default": "datacenter1",
              "order": 5
            },
            "replication": {
              "title": "Replication factor",
              "type": "integer",
              "description": "Indicates to how many nodes the data should be replicated to.",
              "default": 1,
              "order": 6
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "81740ce8-d764-4ea7-94df-16bb41de36ae",
      "name": "Chargify (Keen)",
      "dockerRepository": "airbyte/destination-keen",
      "dockerImageTag": "0.2.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/keen",
      "icon": "chargify.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/keen",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Keen Spec",
          "type": "object",
          "required": ["project_id", "api_key"],
          "additionalProperties": false,
          "properties": {
            "project_id": {
              "description": "To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.",
              "title": "Project ID",
              "type": "string",
              "examples": ["58b4acc22ba938934e888322e"]
            },
            "api_key": {
              "title": "API Key",
              "description": "To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.",
              "type": "string",
              "examples": ["ABCDEFGHIJKLMNOPRSTUWXYZ"],
              "airbyte_secret": true
            },
            "infer_timestamp": {
              "title": "Infer Timestamp",
              "description": "Allow connector to guess keen.timestamp value based on the streamed data.",
              "type": "boolean",
              "default": true
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "ce0d828e-1dc4-496c-b122-2da42e637e48",
      "name": "Clickhouse",
      "dockerRepository": "airbyte/destination-clickhouse",
      "dockerImageTag": "0.2.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/clickhouse",
      "icon": "clickhouse.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/clickhouse",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ClickHouse Destination Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "HTTP port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8123,
              "examples": ["8123"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": false,
              "order": 6
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": false,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-clickhouse",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "clickhouse"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "0fb07be9-7c3b-4336-850d-5efc006152ee",
      "name": "Cloudflare R2",
      "dockerRepository": "airbyte/destination-r2",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/r2",
      "icon": "cloudflare-r2.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/r2",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "R2 Destination Spec",
          "type": "object",
          "required": [
            "account_id",
            "access_key_id",
            "secret_access_key",
            "s3_bucket_name",
            "s3_bucket_path",
            "format"
          ],
          "properties": {
            "account_id": {
              "type": "string",
              "description": "Cloudflare account ID",
              "title": "Cloudflare account ID",
              "examples": ["12345678aa1a1a11111aaa1234567abc"],
              "order": 0
            },
            "access_key_id": {
              "type": "string",
              "description": "The access key ID to access the R2 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more <a href=\"https://developers.cloudflare.com/r2/platform/s3-compatibility/tokens/\">here</a>.",
              "title": "R2 Key ID",
              "airbyte_secret": true,
              "examples": ["A012345678910EXAMPLE"],
              "order": 1
            },
            "secret_access_key": {
              "type": "string",
              "description": "The corresponding secret to the access key ID. Read more <a href=\"https://developers.cloudflare.com/r2/platform/s3-compatibility/tokens/\">here</a>",
              "title": "R2 Access Key",
              "airbyte_secret": true,
              "examples": ["a012345678910ABCDEFGHAbCdEfGhEXAMPLEKEY"],
              "order": 2
            },
            "s3_bucket_name": {
              "title": "R2 Bucket Name",
              "type": "string",
              "description": "The name of the R2 bucket. Read more <a href=\"https://developers.cloudflare.com/r2/get-started/#3-create-your-bucket\">here</a>.",
              "examples": ["r2_sync"],
              "order": 3
            },
            "s3_bucket_path": {
              "title": "R2 Bucket Path",
              "description": "Directory under the R2 bucket where data will be written.",
              "type": "string",
              "examples": ["data_sync/test"],
              "order": 4
            },
            "format": {
              "title": "Output Format",
              "type": "object",
              "description": "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\">here</a> for more details",
              "oneOf": [
                {
                  "title": "Avro: Apache Avro",
                  "required": ["format_type", "compression_codec"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["Avro"],
                      "default": "Avro",
                      "order": 0
                    },
                    "compression_codec": {
                      "title": "Compression Codec",
                      "description": "The compression algorithm used to compress data. Default to no compression.",
                      "type": "object",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["no compression"],
                              "default": "no compression"
                            }
                          }
                        },
                        {
                          "title": "Deflate",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["Deflate"],
                              "default": "Deflate"
                            },
                            "compression_level": {
                              "title": "Deflate Level",
                              "description": "0: no compression & fastest, 9: best compression & slowest.",
                              "type": "integer",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "bzip2",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["bzip2"],
                              "default": "bzip2"
                            }
                          }
                        },
                        {
                          "title": "xz",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["xz"],
                              "default": "xz"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "See <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\">here</a> for details.",
                              "type": "integer",
                              "default": 6,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "zstandard",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["zstandard"],
                              "default": "zstandard"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory.",
                              "type": "integer",
                              "default": 3,
                              "minimum": -5,
                              "maximum": 22
                            },
                            "include_checksum": {
                              "title": "Include Checksum",
                              "description": "If true, include a checksum with each data block.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        {
                          "title": "snappy",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["snappy"],
                              "default": "snappy"
                            }
                          }
                        }
                      ],
                      "order": 1
                    }
                  }
                },
                {
                  "title": "CSV: Comma-Separated Values",
                  "required": ["format_type", "flattening"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["CSV"],
                      "default": "CSV"
                    },
                    "flattening": {
                      "type": "string",
                      "title": "Normalization (Flattening)",
                      "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details.",
                      "default": "No flattening",
                      "enum": ["No flattening", "Root level flattening"]
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "JSON Lines: Newline-delimited JSON",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["JSONL"],
                      "default": "JSONL"
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "order": 5
            },
            "s3_path_format": {
              "title": "R2 Path Format",
              "description": "Format string on how data will be organized inside the R2 bucket directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/r2#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\">here</a>",
              "type": "string",
              "examples": [
                "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
              ],
              "order": 6
            },
            "file_name_pattern": {
              "type": "string",
              "description": "The pattern allows you to set the file-name format for the R2 staging file(s)",
              "title": "R2 Filename pattern",
              "examples": [
                "{date}",
                "{date:yyyy_MM}",
                "{timestamp}",
                "{part_number}",
                "{sync_id}"
              ],
              "order": 7
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "072d5540-f236-4294-ba7c-ade8fd918496",
      "name": "Databricks Lakehouse",
      "dockerRepository": "airbyte/destination-databricks",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/databricks",
      "icon": "databricks.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/databricks",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Databricks Lakehouse Destination Spec",
          "type": "object",
          "required": [
            "accept_terms",
            "databricks_server_hostname",
            "databricks_http_path",
            "databricks_personal_access_token",
            "data_source"
          ],
          "properties": {
            "accept_terms": {
              "title": "Agree to the Databricks JDBC Driver Terms & Conditions",
              "type": "boolean",
              "description": "You must agree to the Databricks JDBC Driver <a href=\"https://databricks.com/jdbc-odbc-driver-license\">Terms & Conditions</a> to use this connector.",
              "default": false,
              "order": 1
            },
            "databricks_server_hostname": {
              "title": "Server Hostname",
              "type": "string",
              "description": "Databricks Cluster Server Hostname.",
              "examples": ["abc-12345678-wxyz.cloud.databricks.com"],
              "order": 2
            },
            "databricks_http_path": {
              "title": "HTTP Path",
              "type": "string",
              "description": "Databricks Cluster HTTP Path.",
              "examples": ["sql/protocolvx/o/1234567489/0000-1111111-abcd90"],
              "order": 3
            },
            "databricks_port": {
              "title": "Port",
              "type": "string",
              "description": "Databricks Cluster Port.",
              "default": "443",
              "examples": ["443"],
              "order": 4
            },
            "databricks_personal_access_token": {
              "title": "Access Token",
              "type": "string",
              "description": "Databricks Personal Access Token for making authenticated requests.",
              "examples": ["dapi0123456789abcdefghij0123456789AB"],
              "airbyte_secret": true,
              "order": 5
            },
            "database_schema": {
              "title": "Database Schema",
              "type": "string",
              "description": "The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is \"public\".",
              "default": "public",
              "examples": ["public"],
              "order": 6
            },
            "data_source": {
              "title": "Data Source",
              "type": "object",
              "description": "Storage on which the delta lake is built.",
              "oneOf": [
                {
                  "title": "Amazon S3",
                  "required": [
                    "data_source_type",
                    "s3_bucket_name",
                    "s3_bucket_path",
                    "s3_bucket_region",
                    "s3_access_key_id",
                    "s3_secret_access_key"
                  ],
                  "properties": {
                    "data_source_type": {
                      "type": "string",
                      "enum": ["S3"],
                      "default": "S3",
                      "order": 1
                    },
                    "s3_bucket_name": {
                      "title": "S3 Bucket Name",
                      "type": "string",
                      "description": "The name of the S3 bucket to use for intermittent staging of the data.",
                      "examples": ["airbyte.staging"],
                      "order": 2
                    },
                    "s3_bucket_path": {
                      "title": "S3 Bucket Path",
                      "type": "string",
                      "description": "The directory under the S3 bucket where data will be written.",
                      "examples": ["data_sync/test"],
                      "order": 3
                    },
                    "s3_bucket_region": {
                      "title": "S3 Bucket Region",
                      "type": "string",
                      "default": "",
                      "description": "The region of the S3 staging bucket to use if utilising a copy strategy.",
                      "enum": [
                        "",
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "af-south-1",
                        "ap-east-1",
                        "ap-south-1",
                        "ap-northeast-1",
                        "ap-northeast-2",
                        "ap-northeast-3",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ca-central-1",
                        "cn-north-1",
                        "cn-northwest-1",
                        "eu-central-1",
                        "eu-north-1",
                        "eu-south-1",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "sa-east-1",
                        "me-south-1",
                        "us-gov-east-1",
                        "us-gov-west-1"
                      ],
                      "order": 4
                    },
                    "s3_access_key_id": {
                      "type": "string",
                      "description": "The Access Key Id granting allow one to access the above S3 staging bucket. Airbyte requires Read and Write permissions to the given bucket.",
                      "title": "S3 Access Key ID",
                      "examples": ["A012345678910EXAMPLE"],
                      "airbyte_secret": true,
                      "order": 5
                    },
                    "s3_secret_access_key": {
                      "title": "S3 Secret Access Key",
                      "type": "string",
                      "description": "The corresponding secret to the above access key id.",
                      "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"],
                      "airbyte_secret": true,
                      "order": 6
                    },
                    "file_name_pattern": {
                      "type": "string",
                      "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
                      "title": "S3 Filename pattern",
                      "examples": [
                        "{date}",
                        "{date:yyyy_MM}",
                        "{timestamp}",
                        "{part_number}",
                        "{sync_id}"
                      ],
                      "order": 7
                    }
                  }
                },
                {
                  "title": "Azure Blob Storage",
                  "required": [
                    "data_source_type",
                    "azure_blob_storage_account_name",
                    "azure_blob_storage_container_name",
                    "azure_blob_storage_sas_token"
                  ],
                  "properties": {
                    "data_source_type": {
                      "type": "string",
                      "enum": ["Azure_Blob_Storage"],
                      "default": "Azure_Blob_Storage",
                      "order": 0
                    },
                    "azure_blob_storage_endpoint_domain_name": {
                      "title": "Endpoint Domain Name",
                      "type": "string",
                      "default": "blob.core.windows.net",
                      "description": "This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.",
                      "examples": ["blob.core.windows.net"],
                      "order": 1
                    },
                    "azure_blob_storage_account_name": {
                      "title": "Azure Blob Storage Account Name",
                      "type": "string",
                      "description": "The account's name of the Azure Blob Storage.",
                      "examples": ["airbyte5storage"],
                      "order": 2
                    },
                    "azure_blob_storage_container_name": {
                      "title": "Azure Blob Storage Container Name",
                      "type": "string",
                      "description": "The name of the Azure blob storage container.",
                      "examples": ["airbytetestcontainername"],
                      "order": 3
                    },
                    "azure_blob_storage_sas_token": {
                      "title": "SAS Token",
                      "type": "string",
                      "airbyte_secret": true,
                      "description": "Shared access signature (SAS) token to grant limited access to objects in your storage account.",
                      "examples": [
                        "?sv=2016-05-31&ss=b&srt=sco&sp=rwdl&se=2018-06-27T10:05:50Z&st=2017-06-27T02:05:50Z&spr=https,http&sig=bgqQwoXwxzuD2GJfagRg7VOS8hzNr3QLT7rhS8OFRLQ%3D"
                      ],
                      "order": 4
                    }
                  }
                }
              ],
              "order": 7
            },
            "purge_staging_data": {
              "title": "Purge Staging Files and Tables",
              "type": "boolean",
              "description": "Default to 'true'. Switch it to 'false' for debugging purpose.",
              "default": true,
              "order": 8
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "8ccd8909-4e99-4141-b48d-4984b70b2d89",
      "name": "DynamoDB",
      "dockerRepository": "airbyte/destination-dynamodb",
      "dockerImageTag": "0.1.7",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/dynamodb",
      "icon": "dynamodb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/dynamodb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DynamoDB Destination Spec",
          "type": "object",
          "required": [
            "dynamodb_table_name_prefix",
            "dynamodb_region",
            "access_key_id",
            "secret_access_key"
          ],
          "additionalProperties": false,
          "properties": {
            "dynamodb_endpoint": {
              "title": "Endpoint",
              "type": "string",
              "default": "",
              "description": "This is your DynamoDB endpoint url.(if you are working with AWS DynamoDB, just leave empty).",
              "examples": ["http://localhost:9000"]
            },
            "dynamodb_table_name_prefix": {
              "title": "Table name prefix",
              "type": "string",
              "description": "The prefix to use when naming DynamoDB tables.",
              "examples": ["airbyte_sync"]
            },
            "dynamodb_region": {
              "title": "DynamoDB Region",
              "type": "string",
              "default": "",
              "description": "The region of the DynamoDB.",
              "enum": [
                "",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ]
            },
            "access_key_id": {
              "type": "string",
              "description": "The access key id to access the DynamoDB. Airbyte requires Read and Write permissions to the DynamoDB.",
              "title": "DynamoDB Key Id",
              "airbyte_secret": true,
              "examples": ["A012345678910EXAMPLE"]
            },
            "secret_access_key": {
              "type": "string",
              "description": "The corresponding secret to the access key id.",
              "title": "DynamoDB Access Key",
              "airbyte_secret": true,
              "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "2eb65e87-983a-4fd7-b3e3-9d9dc6eb8537",
      "name": "E2E Testing",
      "dockerRepository": "airbyte/destination-e2e-test",
      "dockerImageTag": "0.2.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/e2e-test",
      "icon": "airbyte.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/e2e-test",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "E2E Test Destination Spec",
          "type": "object",
          "oneOf": [
            {
              "title": "Logging",
              "required": ["type", "logging_config"],
              "properties": {
                "type": {
                  "type": "string",
                  "const": "LOGGING",
                  "default": "LOGGING"
                },
                "logging_config": {
                  "title": "Logging Configuration",
                  "type": "object",
                  "description": "Configurate how the messages are logged.",
                  "oneOf": [
                    {
                      "title": "First N Entries",
                      "description": "Log first N entries per stream.",
                      "type": "object",
                      "required": ["logging_type", "max_entry_count"],
                      "properties": {
                        "logging_type": {
                          "type": "string",
                          "enum": ["FirstN"],
                          "default": "FirstN"
                        },
                        "max_entry_count": {
                          "title": "N",
                          "description": "Number of entries to log. This destination is for testing only. So it won't make sense to log infinitely. The maximum is 1,000 entries.",
                          "type": "number",
                          "default": 100,
                          "examples": [100],
                          "minimum": 1,
                          "maximum": 1000
                        }
                      }
                    },
                    {
                      "title": "Every N-th Entry",
                      "description": "For each stream, log every N-th entry with a maximum cap.",
                      "type": "object",
                      "required": [
                        "logging_type",
                        "nth_entry_to_log",
                        "max_entry_count"
                      ],
                      "properties": {
                        "logging_type": {
                          "type": "string",
                          "enum": ["EveryNth"],
                          "default": "EveryNth"
                        },
                        "nth_entry_to_log": {
                          "title": "N",
                          "description": "The N-th entry to log for each stream. N starts from 1. For example, when N = 1, every entry is logged; when N = 2, every other entry is logged; when N = 3, one out of three entries is logged.",
                          "type": "number",
                          "example": [3],
                          "minimum": 1,
                          "maximum": 1000
                        },
                        "max_entry_count": {
                          "title": "Max Log Entries",
                          "description": "Max number of entries to log. This destination is for testing only. So it won't make sense to log infinitely. The maximum is 1,000 entries.",
                          "type": "number",
                          "default": 100,
                          "examples": [100],
                          "minimum": 1,
                          "maximum": 1000
                        }
                      }
                    },
                    {
                      "title": "Random Sampling",
                      "description": "For each stream, randomly log a percentage of the entries with a maximum cap.",
                      "type": "object",
                      "required": [
                        "logging_type",
                        "sampling_ratio",
                        "max_entry_count"
                      ],
                      "properties": {
                        "logging_type": {
                          "type": "string",
                          "enum": ["RandomSampling"],
                          "default": "RandomSampling"
                        },
                        "sampling_ratio": {
                          "title": "Sampling Ratio",
                          "description": "A positive floating number smaller than 1.",
                          "type": "number",
                          "default": 0.001,
                          "examples": [0.001],
                          "minimum": 0,
                          "maximum": 1
                        },
                        "seed": {
                          "title": "Random Number Generator Seed",
                          "description": "When the seed is unspecified, the current time millis will be used as the seed.",
                          "type": "number",
                          "examples": [1900]
                        },
                        "max_entry_count": {
                          "title": "Max Log Entries",
                          "description": "Max number of entries to log. This destination is for testing only. So it won't make sense to log infinitely. The maximum is 1,000 entries.",
                          "type": "number",
                          "default": 100,
                          "examples": [100],
                          "minimum": 1,
                          "maximum": 1000
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "title": "Silent",
              "required": ["type"],
              "properties": {
                "type": {
                  "type": "string",
                  "const": "SILENT",
                  "default": "SILENT"
                }
              }
            },
            {
              "title": "Throttled",
              "required": ["type", "millis_per_record"],
              "properties": {
                "type": {
                  "type": "string",
                  "const": "THROTTLED",
                  "default": "THROTTLED"
                },
                "millis_per_record": {
                  "description": "Number of milli-second to pause in between records.",
                  "type": "integer"
                }
              }
            },
            {
              "title": "Failing",
              "required": ["type", "num_messages"],
              "properties": {
                "type": {
                  "type": "string",
                  "const": "FAILING",
                  "default": "FAILING"
                },
                "num_messages": {
                  "description": "Number of messages after which to fail.",
                  "type": "integer"
                }
              }
            }
          ]
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false
    },
    {
      "destinationDefinitionId": "68f351a7-2745-4bef-ad7f-996b8e51bb8c",
      "name": "ElasticSearch",
      "dockerRepository": "airbyte/destination-elasticsearch",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/elasticsearch",
      "icon": "elasticsearch.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/elasticsearch",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Elasticsearch Connection Configuration",
          "type": "object",
          "required": ["endpoint"],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "title": "Server Endpoint",
              "type": "string",
              "description": "The full url of the Elasticsearch server"
            },
            "upsert": {
              "type": "boolean",
              "title": "Upsert Records",
              "description": "If a primary key identifier is defined in the source, an upsert will be performed using the primary key value as the elasticsearch doc id. Does not support composite primary keys.",
              "default": true
            },
            "ca_certificate": {
              "type": "string",
              "title": "CA certificate",
              "description": "CA certificate",
              "airbyte_secret": true,
              "multiline": true
            },
            "authenticationMethod": {
              "title": "Authentication Method",
              "type": "object",
              "description": "The type of authentication to be used",
              "oneOf": [
                {
                  "title": "None",
                  "additionalProperties": false,
                  "description": "No authentication will be used",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "none"
                    }
                  }
                },
                {
                  "title": "Api Key/Secret",
                  "additionalProperties": false,
                  "description": "Use a api key and secret combination to authenticate",
                  "required": ["method", "apiKeyId", "apiKeySecret"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "secret"
                    },
                    "apiKeyId": {
                      "title": "API Key ID",
                      "description": "The Key ID to used when accessing an enterprise Elasticsearch instance.",
                      "type": "string"
                    },
                    "apiKeySecret": {
                      "title": "API Key Secret",
                      "description": "The secret associated with the API Key ID.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Username/Password",
                  "additionalProperties": false,
                  "description": "Basic auth header with a username and password",
                  "required": ["method", "username", "password"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "basic"
                    },
                    "username": {
                      "title": "Username",
                      "description": "Basic auth username to access a secure Elasticsearch server",
                      "type": "string"
                    },
                    "password": {
                      "title": "Password",
                      "description": "Basic auth password to access a secure Elasticsearch server",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"],
        "supportsNamespaces": true
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "bb6071d9-6f34-4766-bec2-d1d4ed81a653",
      "name": "Exasol",
      "dockerRepository": "airbyte/destination-exasol",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/exasol",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/exasol",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Exasol Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "schema"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8563,
              "examples": ["8563"],
              "order": 1
            },
            "certificateFingerprint": {
              "title": "Certificate Fingerprint",
              "description": "Fingerprint of the Exasol server's TLS certificate",
              "type": "string",
              "examples": ["ABC123..."],
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "schema": {
              "title": "Schema Name",
              "description": "Schema Name",
              "type": "string",
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol ';'. (example: key1=value1;key2=value2;key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 6
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "18081484-02a5-4662-8dba-b270b582f321",
      "name": "Firebolt",
      "dockerRepository": "airbyte/destination-firebolt",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/firebolt",
      "icon": "firebolt.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/firebolt",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Firebolt Spec",
          "type": "object",
          "required": ["username", "password", "database"],
          "additionalProperties": false,
          "properties": {
            "username": {
              "type": "string",
              "title": "Username",
              "description": "Firebolt email address you use to login.",
              "examples": ["username@email.com"],
              "order": 0
            },
            "password": {
              "type": "string",
              "title": "Password",
              "description": "Firebolt password.",
              "airbyte_secret": true,
              "order": 1
            },
            "account": {
              "type": "string",
              "title": "Account",
              "description": "Firebolt account to login."
            },
            "host": {
              "type": "string",
              "title": "Host",
              "description": "The host name of your Firebolt database.",
              "examples": ["api.app.firebolt.io"]
            },
            "database": {
              "type": "string",
              "title": "Database",
              "description": "The database to connect to."
            },
            "engine": {
              "type": "string",
              "title": "Engine",
              "description": "Engine name or url to connect to."
            },
            "loading_method": {
              "type": "object",
              "title": "Loading Method",
              "description": "Loading method used to select the way data will be uploaded to Firebolt",
              "oneOf": [
                {
                  "title": "SQL Inserts",
                  "additionalProperties": false,
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "SQL"
                    }
                  }
                },
                {
                  "title": "External Table via S3",
                  "additionalProperties": false,
                  "required": [
                    "method",
                    "s3_bucket",
                    "s3_region",
                    "aws_key_id",
                    "aws_key_secret"
                  ],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "S3"
                    },
                    "s3_bucket": {
                      "type": "string",
                      "title": "S3 bucket name",
                      "description": "The name of the S3 bucket."
                    },
                    "s3_region": {
                      "type": "string",
                      "title": "S3 region name",
                      "description": "Region name of the S3 bucket.",
                      "examples": ["us-east-1"]
                    },
                    "aws_key_id": {
                      "type": "string",
                      "title": "AWS Key ID",
                      "airbyte_secret": true,
                      "description": "AWS access key granting read and write access to S3."
                    },
                    "aws_key_secret": {
                      "type": "string",
                      "title": "AWS Key Secret",
                      "airbyte_secret": true,
                      "description": "Corresponding secret part of the AWS Key"
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": true,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "ca8f6566-e555-4b40-943a-545bf123117a",
      "name": "Google Cloud Storage (GCS)",
      "dockerRepository": "airbyte/destination-gcs",
      "dockerImageTag": "0.2.15",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/gcs",
      "icon": "googlecloudstorage.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/gcs",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "GCS Destination Spec",
          "type": "object",
          "required": [
            "gcs_bucket_name",
            "gcs_bucket_path",
            "credential",
            "format"
          ],
          "properties": {
            "gcs_bucket_name": {
              "title": "GCS Bucket Name",
              "order": 1,
              "type": "string",
              "description": "You can find the bucket name in the App Engine Admin console Application Settings page, under the label Google Cloud Storage Bucket. Read more <a href=\"https://cloud.google.com/storage/docs/naming-buckets\">here</a>.",
              "examples": ["airbyte_sync"]
            },
            "gcs_bucket_path": {
              "title": "GCS Bucket Path",
              "description": "GCS Bucket Path string Subdirectory under the above bucket to sync the data into.",
              "order": 2,
              "type": "string",
              "examples": ["data_sync/test"]
            },
            "gcs_bucket_region": {
              "title": "GCS Bucket Region",
              "type": "string",
              "order": 3,
              "default": "us",
              "description": "Select a Region of the GCS Bucket. Read more <a href=\"https://cloud.google.com/storage/docs/locations\">here</a>.",
              "enum": [
                "northamerica-northeast1",
                "northamerica-northeast2",
                "us-central1",
                "us-east1",
                "us-east4",
                "us-west1",
                "us-west2",
                "us-west3",
                "us-west4",
                "southamerica-east1",
                "southamerica-west1",
                "europe-central2",
                "europe-north1",
                "europe-west1",
                "europe-west2",
                "europe-west3",
                "europe-west4",
                "europe-west6",
                "asia-east1",
                "asia-east2",
                "asia-northeast1",
                "asia-northeast2",
                "asia-northeast3",
                "asia-south1",
                "asia-south2",
                "asia-southeast1",
                "asia-southeast2",
                "australia-southeast1",
                "australia-southeast2",
                "asia",
                "eu",
                "us",
                "asia1",
                "eur4",
                "nam4"
              ]
            },
            "credential": {
              "title": "Authentication",
              "description": "An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\">here</a>.",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "title": "HMAC Key",
                  "required": [
                    "credential_type",
                    "hmac_key_access_id",
                    "hmac_key_secret"
                  ],
                  "properties": {
                    "credential_type": {
                      "type": "string",
                      "enum": ["HMAC_KEY"],
                      "default": "HMAC_KEY"
                    },
                    "hmac_key_access_id": {
                      "type": "string",
                      "description": "When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long. Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#overview\">here</a>.",
                      "title": "Access ID",
                      "airbyte_secret": true,
                      "order": 0,
                      "examples": ["1234567890abcdefghij1234"]
                    },
                    "hmac_key_secret": {
                      "type": "string",
                      "description": "The corresponding secret for the access ID. It is a 40-character base-64 encoded string.  Read more <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#secrets\">here</a>.",
                      "title": "Secret",
                      "airbyte_secret": true,
                      "order": 1,
                      "examples": ["1234567890abcdefghij1234567890ABCDEFGHIJ"]
                    }
                  }
                }
              ]
            },
            "format": {
              "title": "Output Format",
              "type": "object",
              "description": "Output data format. One of the following formats must be selected - <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-avro#advantages_of_avro\">AVRO</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-parquet#parquet_schemas\">PARQUET</a> format, <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-csv#loading_csv_data_into_a_table\">CSV</a> format, or <a href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-json#loading_json_data_into_a_new_table\">JSONL</a> format.",
              "order": 4,
              "oneOf": [
                {
                  "title": "Avro: Apache Avro",
                  "required": ["format_type", "compression_codec"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "enum": ["Avro"],
                      "default": "Avro"
                    },
                    "compression_codec": {
                      "title": "Compression Codec",
                      "description": "The compression algorithm used to compress data. Default to no compression.",
                      "type": "object",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["no compression"],
                              "default": "no compression"
                            }
                          }
                        },
                        {
                          "title": "Deflate",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["Deflate"],
                              "default": "Deflate"
                            },
                            "compression_level": {
                              "title": "Deflate level",
                              "description": "0: no compression & fastest, 9: best compression & slowest.",
                              "type": "integer",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "bzip2",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["bzip2"],
                              "default": "bzip2"
                            }
                          }
                        },
                        {
                          "title": "xz",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["xz"],
                              "default": "xz"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "The presets 0-3 are fast presets with medium compression. The presets 4-6 are fairly slow presets with high compression. The default preset is 6. The presets 7-9 are like the preset 6 but use bigger dictionaries and have higher compressor and decompressor memory requirements. Unless the uncompressed size of the file exceeds 8 MiB, 16 MiB, or 32 MiB, it is waste of memory to use the presets 7, 8, or 9, respectively. Read more <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\">here</a> for details.",
                              "type": "integer",
                              "default": 6,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "zstandard",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["zstandard"],
                              "default": "zstandard"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory.",
                              "type": "integer",
                              "default": 3,
                              "minimum": -5,
                              "maximum": 22
                            },
                            "include_checksum": {
                              "title": "Include Checksum",
                              "description": "If true, include a checksum with each data block.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        {
                          "title": "snappy",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["snappy"],
                              "default": "snappy"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "CSV: Comma-Separated Values",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "enum": ["CSV"],
                      "default": "CSV"
                    },
                    "flattening": {
                      "type": "string",
                      "title": "Normalization",
                      "description": "Whether the input JSON data should be normalized (flattened) in the output CSV. Please refer to docs for details.",
                      "default": "No flattening",
                      "enum": ["No flattening", "Root level flattening"]
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "JSON Lines: newline-delimited JSON",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "enum": ["JSONL"],
                      "default": "JSONL"
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Parquet: Columnar Storage",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "type": "string",
                      "enum": ["Parquet"],
                      "default": "Parquet"
                    },
                    "compression_codec": {
                      "title": "Compression Codec",
                      "description": "The compression algorithm used to compress data pages.",
                      "type": "string",
                      "default": "UNCOMPRESSED",
                      "enum": [
                        "UNCOMPRESSED",
                        "SNAPPY",
                        "GZIP",
                        "LZO",
                        "BROTLI",
                        "LZ4",
                        "ZSTD"
                      ]
                    },
                    "block_size_mb": {
                      "title": "Block Size (Row Group Size) (MB)",
                      "description": "This is the size of a row group being buffered in memory. It limits the memory usage when writing. Larger values will improve the IO when reading, but consume more memory when writing. Default: 128 MB.",
                      "type": "integer",
                      "default": 128,
                      "examples": [128]
                    },
                    "max_padding_size_mb": {
                      "title": "Max Padding Size (MB)",
                      "description": "Maximum size allowed as padding to align row groups. This is also the minimum size of a row group. Default: 8 MB.",
                      "type": "integer",
                      "default": 8,
                      "examples": [8]
                    },
                    "page_size_kb": {
                      "title": "Page Size (KB)",
                      "description": "The page size is for compression. A block is composed of pages. A page is the smallest unit that must be read fully to access a single record. If this value is too small, the compression will deteriorate. Default: 1024 KB.",
                      "type": "integer",
                      "default": 1024,
                      "examples": [1024]
                    },
                    "dictionary_page_size_kb": {
                      "title": "Dictionary Page Size (KB)",
                      "description": "There is one dictionary page per column per row group when dictionary encoding is used. The dictionary page size works like the page size but for dictionary. Default: 1024 KB.",
                      "type": "integer",
                      "default": 1024,
                      "examples": [1024]
                    },
                    "dictionary_encoding": {
                      "title": "Dictionary Encoding",
                      "description": "Default: true.",
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      }
    },
    {
      "destinationDefinitionId": "27dc7500-6d1b-40b1-8b07-e2f2aea3c9f4",
      "name": "Google Firestore",
      "dockerRepository": "airbyte/destination-firestore",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/firestore",
      "icon": "firestore.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/firestore",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Google Firestore",
          "type": "object",
          "required": ["project_id"],
          "additionalProperties": false,
          "properties": {
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target BigQuery dataset.",
              "title": "Project ID"
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of the JSON service account key. Check out the <a href=\"https://docs.airbyte.com/integrations/destinations/firestore\">docs</a> if you need help generating this key. Default credentials will be used if this field is left empty.",
              "title": "Credentials JSON",
              "airbyte_secret": true
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append", "overwrite"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "356668e2-7e34-47f3-a3b0-67a8a481b692",
      "name": "Google PubSub",
      "dockerRepository": "airbyte/destination-pubsub",
      "dockerImageTag": "0.2.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/pubsub",
      "icon": "googlepubsub.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/pubsub",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google PubSub Destination Spec",
          "type": "object",
          "required": [
            "project_id",
            "topic_id",
            "credentials_json",
            "ordering_enabled",
            "batching_enabled"
          ],
          "additionalProperties": true,
          "properties": {
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target PubSub.",
              "title": "Project ID"
            },
            "topic_id": {
              "type": "string",
              "description": "The PubSub topic ID in the given GCP project ID.",
              "title": "PubSub Topic ID"
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of the JSON service account key. Check out the <a href=\"https://docs.airbyte.com/integrations/destinations/pubsub\">docs</a> if you need help generating this key.",
              "title": "Credentials JSON",
              "airbyte_secret": true
            },
            "ordering_enabled": {
              "title": "Message Ordering Enabled",
              "description": "If TRUE PubSub publisher will have <a href=\"https://cloud.google.com/pubsub/docs/ordering\">message ordering</a> enabled. Every message will have an ordering key of stream",
              "type": "boolean",
              "default": false
            },
            "batching_enabled": {
              "type": "boolean",
              "title": "Message Batching Enabled",
              "description": "If TRUE messages will be buffered instead of sending them one by one",
              "default": false
            },
            "batching_delay_threshold": {
              "type": "integer",
              "title": "Message Batching: Delay Threshold",
              "description": "Number of ms before the buffer is flushed",
              "default": 1,
              "minimum": 1
            },
            "batching_element_count_threshold": {
              "type": "integer",
              "title": "Message Batching: Element Count Threshold",
              "description": "Number of messages before the buffer is flushed",
              "default": 1,
              "minimum": 1
            },
            "batching_request_bytes_threshold": {
              "type": "integer",
              "title": "Message Batching: Request Bytes Threshold",
              "description": "Number of bytes before the buffer is flushed",
              "default": 1,
              "minimum": 1
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "9f760101-60ae-462f-9ee6-b7a9dafd454d",
      "name": "Kafka",
      "dockerRepository": "airbyte/destination-kafka",
      "dockerImageTag": "0.1.10",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/kafka",
      "icon": "kafka.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/kafka",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Kafka Destination Spec",
          "type": "object",
          "required": [
            "bootstrap_servers",
            "topic_pattern",
            "protocol",
            "acks",
            "enable_idempotence",
            "compression_type",
            "batch_size",
            "linger_ms",
            "max_in_flight_requests_per_connection",
            "client_dns_lookup",
            "buffer_memory",
            "max_request_size",
            "retries",
            "socket_connection_setup_timeout_ms",
            "socket_connection_setup_timeout_max_ms",
            "max_block_ms",
            "request_timeout_ms",
            "delivery_timeout_ms",
            "send_buffer_bytes",
            "receive_buffer_bytes"
          ],
          "additionalProperties": true,
          "properties": {
            "bootstrap_servers": {
              "title": "Bootstrap Servers",
              "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).",
              "type": "string",
              "examples": ["kafka-broker1:9092,kafka-broker2:9092"]
            },
            "topic_pattern": {
              "title": "Topic Pattern",
              "description": "Topic pattern in which the records will be sent. You can use patterns like '{namespace}' and/or '{stream}' to send the message to a specific topic based on these values. Notice that the topic name will be transformed to a standard naming convention.",
              "type": "string",
              "examples": ["sample.topic", "{namespace}.{stream}.sample"]
            },
            "test_topic": {
              "title": "Test Topic",
              "description": "Topic to test if Airbyte can produce messages.",
              "type": "string",
              "examples": ["test.topic"]
            },
            "sync_producer": {
              "title": "Sync Producer",
              "description": "Wait synchronously until the record has been sent to Kafka.",
              "type": "boolean",
              "default": false
            },
            "protocol": {
              "title": "Protocol",
              "type": "object",
              "description": "Protocol used to communicate with brokers.",
              "oneOf": [
                {
                  "title": "PLAINTEXT",
                  "required": ["security_protocol"],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["PLAINTEXT"],
                      "default": "PLAINTEXT"
                    }
                  }
                },
                {
                  "title": "SASL PLAINTEXT",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["SASL_PLAINTEXT"],
                      "default": "SASL_PLAINTEXT"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "default": "PLAIN",
                      "enum": ["PLAIN"]
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": "",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "SASL SSL",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["SASL_SSL"],
                      "default": "SASL_SSL"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "default": "GSSAPI",
                      "enum": [
                        "GSSAPI",
                        "OAUTHBEARER",
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-512",
                        "PLAIN"
                      ]
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": "",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "client_id": {
              "title": "Client ID",
              "description": "An ID string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.",
              "type": "string",
              "examples": ["airbyte-producer"]
            },
            "acks": {
              "title": "ACKs",
              "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the  durability of records that are sent.",
              "type": "string",
              "default": "1",
              "enum": ["0", "1", "all"]
            },
            "enable_idempotence": {
              "title": "Enable Idempotence",
              "description": "When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc., may write duplicates of the retried message in the stream.",
              "type": "boolean",
              "default": false
            },
            "compression_type": {
              "title": "Compression Type",
              "description": "The compression type for all data generated by the producer.",
              "type": "string",
              "default": "none",
              "enum": ["none", "gzip", "snappy", "lz4", "zstd"]
            },
            "batch_size": {
              "title": "Batch Size",
              "description": "The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition.",
              "type": "integer",
              "examples": [16384]
            },
            "linger_ms": {
              "title": "Linger ms",
              "description": "The producer groups together any records that arrive in between request transmissions into a single batched request.",
              "type": "string",
              "examples": [0]
            },
            "max_in_flight_requests_per_connection": {
              "title": "Max in Flight Requests per Connection",
              "description": "The maximum number of unacknowledged requests the client will send on a single connection before blocking. Can be greater than 1, and the maximum value supported with idempotency is 5.",
              "type": "integer",
              "examples": [5]
            },
            "client_dns_lookup": {
              "title": "Client DNS Lookup",
              "description": "Controls how the client uses DNS lookups. If set to use_all_dns_ips, connect to each returned IP address in sequence until a successful connection is established. After a disconnection, the next IP is used. Once all IPs have been used once, the client resolves the IP(s) from the hostname again. If set to resolve_canonical_bootstrap_servers_only, resolve each bootstrap address into a list of canonical names. After the bootstrap phase, this behaves the same as use_all_dns_ips. If set to default (deprecated), attempt to connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.",
              "type": "string",
              "default": "use_all_dns_ips",
              "enum": [
                "default",
                "use_all_dns_ips",
                "resolve_canonical_bootstrap_servers_only",
                "use_all_dns_ips"
              ]
            },
            "buffer_memory": {
              "title": "Buffer Memory",
              "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
              "type": "string",
              "examples": 33554432
            },
            "max_request_size": {
              "title": "Max Request Size",
              "description": "The maximum size of a request in bytes.",
              "type": "integer",
              "examples": [1048576]
            },
            "retries": {
              "title": "Retries",
              "description": "Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error.",
              "type": "integer",
              "examples": [2147483647]
            },
            "socket_connection_setup_timeout_ms": {
              "title": "Socket Connection Setup Timeout",
              "description": "The amount of time the client will wait for the socket connection to be established.",
              "type": "string",
              "examples": [10000]
            },
            "socket_connection_setup_timeout_max_ms": {
              "title": "Socket Connection Setup Max Timeout",
              "description": "The maximum amount of time the client will wait for the socket connection to be established. The connection setup timeout will increase exponentially for each consecutive connection failure up to this maximum.",
              "type": "string",
              "examples": [30000]
            },
            "max_block_ms": {
              "title": "Max Block ms",
              "description": "The configuration controls how long the KafkaProducer's send(), partitionsFor(), initTransactions(), sendOffsetsToTransaction(), commitTransaction() and abortTransaction() methods will block.",
              "type": "string",
              "examples": [60000]
            },
            "request_timeout_ms": {
              "title": "Request Timeout",
              "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.",
              "type": "integer",
              "examples": [30000]
            },
            "delivery_timeout_ms": {
              "title": "Delivery Timeout",
              "description": "An upper bound on the time to report success or failure after a call to 'send()' returns.",
              "type": "integer",
              "examples": [120000]
            },
            "send_buffer_bytes": {
              "title": "Send Buffer bytes",
              "description": "The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.",
              "type": "integer",
              "examples": [131072]
            },
            "receive_buffer_bytes": {
              "title": "Receive Buffer bytes",
              "description": "The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.",
              "type": "integer",
              "examples": [32768]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "6d1d66d4-26ab-4602-8d32-f85894b04955",
      "name": "Kinesis",
      "dockerRepository": "airbyte/destination-kinesis",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/kinesis",
      "icon": "kinesis.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/kinesis",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Kinesis Destination Spec",
          "type": "object",
          "required": [
            "endpoint",
            "region",
            "shardCount",
            "accessKey",
            "privateKey",
            "bufferSize"
          ],
          "additionalProperties": true,
          "properties": {
            "endpoint": {
              "title": "Endpoint",
              "description": "AWS Kinesis endpoint.",
              "type": "string",
              "examples": ["kinesis.us‑west‑1.amazonaws.com"],
              "order": 0
            },
            "region": {
              "title": "Region",
              "description": "AWS region. Your account determines the Regions that are available to you.",
              "type": "string",
              "examples": ["us‑west‑1"],
              "order": 1
            },
            "shardCount": {
              "title": "Shard Count",
              "description": "Number of shards to which the data should be streamed.",
              "type": "integer",
              "default": 5,
              "order": 2
            },
            "accessKey": {
              "title": "Access Key",
              "description": "Generate the AWS Access Key for current user.",
              "airbyte_secret": true,
              "type": "string",
              "order": 3
            },
            "privateKey": {
              "title": "Private Key",
              "description": "The AWS Private Key - a string of numbers and letters that are unique for each account, also known as a \"recovery phrase\".",
              "airbyte_secret": true,
              "type": "string",
              "order": 4
            },
            "bufferSize": {
              "title": "Buffer Size",
              "description": "Buffer size for storing kinesis records before being batch streamed.",
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100,
              "order": 5
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "8be1cf83-fde1-477f-a4ad-318d23c9f3c6",
      "name": "Local CSV",
      "dockerRepository": "airbyte/destination-csv",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/local-csv",
      "icon": "file-csv.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/local-csv",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "CSV Destination Spec",
          "type": "object",
          "required": ["destination_path"],
          "additionalProperties": true,
          "properties": {
            "destination_path": {
              "description": "Path to the directory where csv files will be written. The destination uses the local mount \"/local\" and any data files will be placed inside that local mount. For more information check out our <a href=\"https://docs.airbyte.com/integrations/destinations/local-csv\">docs</a>",
              "type": "string",
              "examples": ["/local"]
            },
            "delimiter_type": {
              "type": "object",
              "title": "Delimiter",
              "description": "The character delimiting individual cells in the CSV data.",
              "oneOf": [
                {
                  "title": "Comma",
                  "required": ["delimiter"],
                  "properties": {
                    "delimiter": {
                      "type": "string",
                      "const": "\\u002c"
                    }
                  }
                },
                {
                  "title": "Semicolon",
                  "required": ["delimiter"],
                  "properties": {
                    "delimiter": {
                      "type": "string",
                      "const": "\\u003b"
                    }
                  }
                },
                {
                  "title": "Pipe",
                  "required": ["delimiter"],
                  "properties": {
                    "delimiter": {
                      "type": "string",
                      "const": "\\u007c"
                    }
                  }
                },
                {
                  "title": "Tab",
                  "required": ["delimiter"],
                  "properties": {
                    "delimiter": {
                      "type": "string",
                      "const": "\\u0009"
                    }
                  }
                },
                {
                  "title": "Space",
                  "required": ["delimiter"],
                  "properties": {
                    "delimiter": {
                      "type": "string",
                      "const": "\\u0020"
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "a625d593-bba5-4a1c-a53d-2d246268a816",
      "name": "Local JSON",
      "dockerRepository": "airbyte/destination-local-json",
      "dockerImageTag": "0.2.11",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/local-json",
      "icon": "file-json.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/local-json",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Local Json Destination Spec",
          "type": "object",
          "required": ["destination_path"],
          "additionalProperties": false,
          "properties": {
            "destination_path": {
              "description": "Path to the directory where json files will be written. The files will be placed inside that local mount. For more information check out our <a href=\"https://docs.airbyte.com/integrations/destinations/local-json\">docs</a>",
              "title": "Destination Path",
              "type": "string",
              "examples": ["/json_data"]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "f3802bc4-5406-4752-9e8d-01e504ca8194",
      "name": "MQTT",
      "dockerRepository": "airbyte/destination-mqtt",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mqtt",
      "icon": "mqtt.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mqtt",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MQTT Destination Spec",
          "type": "object",
          "required": [
            "broker_host",
            "broker_port",
            "use_tls",
            "topic_pattern",
            "publisher_sync",
            "connect_timeout",
            "automatic_reconnect",
            "clean_session",
            "message_retained",
            "message_qos"
          ],
          "additionalProperties": true,
          "properties": {
            "broker_host": {
              "title": "MQTT broker host",
              "description": "Host of the broker to connect to.",
              "type": "string"
            },
            "broker_port": {
              "title": "MQTT broker port",
              "description": "Port of the broker.",
              "type": "integer"
            },
            "use_tls": {
              "title": "Use TLS",
              "description": "Whether to use TLS encryption on the connection.",
              "type": "boolean",
              "default": false
            },
            "username": {
              "title": "Username",
              "description": "User name to use for the connection.",
              "type": "string"
            },
            "password": {
              "title": "Password",
              "description": "Password to use for the connection.",
              "type": "string",
              "airbyte_secret": true
            },
            "topic_pattern": {
              "title": "Topic pattern",
              "description": "Topic pattern in which the records will be sent. You can use patterns like '{namespace}' and/or '{stream}' to send the message to a specific topic based on these values. Notice that the topic name will be transformed to a standard naming convention.",
              "type": "string",
              "examples": ["sample.topic", "{namespace}/{stream}/sample"]
            },
            "topic_test": {
              "title": "Test topic",
              "description": "Topic to test if Airbyte can produce messages.",
              "type": "string",
              "examples": ["test/topic"]
            },
            "client": {
              "title": "Client ID",
              "description": "A client identifier that is unique on the server being connected to.",
              "type": "string",
              "examples": ["airbyte-client1"]
            },
            "publisher_sync": {
              "title": "Sync publisher",
              "description": "Wait synchronously until the record has been sent to the broker.",
              "type": "boolean",
              "default": false
            },
            "connect_timeout": {
              "title": "Connect timeout",
              "description": " Maximum time interval (in seconds) the client will wait for the network connection to the MQTT server to be established.",
              "type": "integer",
              "default": 30
            },
            "automatic_reconnect": {
              "title": "Automatic reconnect",
              "description": "Whether the client will automatically attempt to reconnect to the server if the connection is lost.",
              "type": "boolean",
              "default": true
            },
            "clean_session": {
              "title": "Clean session",
              "description": "Whether the client and server should remember state across restarts and reconnects.",
              "type": "boolean",
              "default": true
            },
            "message_retained": {
              "title": "Message retained",
              "description": "Whether or not the publish message should be retained by the messaging engine.",
              "type": "boolean",
              "default": false
            },
            "message_qos": {
              "title": "Message QoS",
              "description": "Quality of service used for each message to be delivered.",
              "default": "AT_LEAST_ONCE",
              "enum": ["AT_MOST_ONCE", "AT_LEAST_ONCE", "EXACTLY_ONCE"]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "d4353156-9217-4cad-8dd7-c108fd4f74cf",
      "name": "MS SQL Server",
      "dockerRepository": "airbyte/destination-mssql",
      "dockerImageTag": "0.1.22",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mssql",
      "icon": "mssql.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mssql",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MS SQL Server Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "database", "schema"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "The host name of the MSSQL database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "The port of the MSSQL database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 1433,
              "examples": ["1433"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "The name of the MSSQL database.",
              "type": "string",
              "order": 2
            },
            "schema": {
              "title": "Default Schema",
              "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".",
              "type": "string",
              "examples": ["public"],
              "default": "public",
              "order": 3
            },
            "username": {
              "title": "User",
              "description": "The username which is used to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "The password associated with this username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 6
            },
            "ssl_method": {
              "title": "SSL Method",
              "type": "object",
              "description": "The encryption method which is used to communicate with the database.",
              "order": 7,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "description": "The data transfer will not be encrypted.",
                  "required": ["ssl_method"],
                  "type": "object",
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "unencrypted",
                      "enum": ["unencrypted"],
                      "default": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Encrypted (trust server certificate)",
                  "description": "Use the certificate provided by the server without verification. (For testing purposes only!)",
                  "required": ["ssl_method"],
                  "type": "object",
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_trust_server_certificate",
                      "enum": ["encrypted_trust_server_certificate"],
                      "default": "encrypted_trust_server_certificate"
                    }
                  }
                },
                {
                  "title": "Encrypted (verify certificate)",
                  "description": "Verify and use the certificate provided by the server.",
                  "required": [
                    "ssl_method",
                    "trustStoreName",
                    "trustStorePassword"
                  ],
                  "type": "object",
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate",
                      "enum": ["encrypted_verify_certificate"],
                      "default": "encrypted_verify_certificate"
                    },
                    "hostNameInCertificate": {
                      "title": "Host Name In Certificate",
                      "type": "string",
                      "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.",
                      "order": 8
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-mssql",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "mssql"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "af7c921e-5892-4ff2-b6c1-4a5ab258fb7e",
      "name": "MeiliSearch",
      "dockerRepository": "airbyte/destination-meilisearch",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/meilisearch",
      "icon": "meilisearch.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/meilisearch",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Meilisearch",
          "type": "object",
          "required": ["host"],
          "additionalProperties": false,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the MeiliSearch instance.",
              "type": "string",
              "order": 0
            },
            "api_key": {
              "title": "API Key",
              "airbyte_secret": true,
              "description": "MeiliSearch API Key. See the <a href=\"https://docs.airbyte.com/integrations/destinations/meilisearch\">docs</a> for more information on how to obtain this key.",
              "type": "string",
              "order": 1
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "8b746512-8c2e-6ac1-4adc-b59faafd473c",
      "name": "MongoDB",
      "dockerRepository": "airbyte/destination-mongodb",
      "dockerImageTag": "0.1.9",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mongodb",
      "icon": "mongodb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mongodb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MongoDB Destination Spec",
          "type": "object",
          "required": ["database", "auth_type"],
          "properties": {
            "instance_type": {
              "description": "MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.",
              "title": "MongoDb Instance Type",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "title": "Standalone MongoDb Instance",
                  "required": ["instance", "host", "port"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["standalone"],
                      "default": "standalone"
                    },
                    "host": {
                      "title": "Host",
                      "type": "string",
                      "description": "The Host of a Mongo database to be replicated.",
                      "order": 0
                    },
                    "port": {
                      "title": "Port",
                      "type": "integer",
                      "description": "The Port of a Mongo database to be replicated.",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 27017,
                      "examples": ["27017"],
                      "order": 1
                    },
                    "tls": {
                      "title": "TLS Connection",
                      "type": "boolean",
                      "description": "Indicates whether TLS encryption protocol will be used to connect to MongoDB. It is recommended to use TLS connection if possible. For more information see <a href=\"https://docs.airbyte.com/integrations/sources/mongodb-v2\">documentation</a>.",
                      "default": false,
                      "order": 2
                    }
                  }
                },
                {
                  "title": "Replica Set",
                  "required": ["instance", "server_addresses"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["replica"],
                      "default": "replica"
                    },
                    "server_addresses": {
                      "title": "Server addresses",
                      "type": "string",
                      "description": "The members of a replica set. Please specify `host`:`port` of each member seperated by comma.",
                      "examples": ["host1:27017,host2:27017,host3:27017"],
                      "order": 0
                    },
                    "replica_set": {
                      "title": "Replica Set",
                      "type": "string",
                      "description": "A replica set name.",
                      "order": 1
                    }
                  }
                },
                {
                  "title": "MongoDB Atlas",
                  "required": ["instance", "cluster_url"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["atlas"],
                      "default": "atlas"
                    },
                    "cluster_url": {
                      "title": "Cluster URL",
                      "type": "string",
                      "description": "URL of a cluster to connect to.",
                      "order": 0
                    }
                  }
                }
              ]
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "auth_type": {
              "title": "Authorization type",
              "type": "object",
              "description": "Authorization type.",
              "oneOf": [
                {
                  "title": "None",
                  "description": "None.",
                  "required": ["authorization"],
                  "type": "object",
                  "properties": {
                    "authorization": {
                      "type": "string",
                      "const": "none"
                    }
                  }
                },
                {
                  "title": "Login/Password",
                  "description": "Login/Password.",
                  "required": ["authorization", "username", "password"],
                  "type": "object",
                  "properties": {
                    "authorization": {
                      "type": "string",
                      "const": "login/password"
                    },
                    "username": {
                      "title": "User",
                      "description": "Username to use to access the database.",
                      "type": "string",
                      "order": 1
                    },
                    "password": {
                      "title": "Password",
                      "description": "Password associated with the username.",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 2
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "ca81ee7c-3163-4246-af40-094cc31e5e42",
      "name": "MySQL",
      "dockerRepository": "airbyte/destination-mysql",
      "dockerImageTag": "0.1.20",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mysql",
      "icon": "mysql.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mysql",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MySQL Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "database"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 3306,
              "examples": ["3306"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 6
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-mysql",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "mysql"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "3986776d-2319-4de9-8af8-db14c0996e72",
      "name": "Oracle",
      "dockerRepository": "airbyte/destination-oracle",
      "dockerImageTag": "0.1.19",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/oracle",
      "icon": "oracle.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/oracle",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Oracle Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "sid"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "The hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "The port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 1521,
              "examples": ["1521"],
              "order": 1
            },
            "sid": {
              "title": "SID",
              "description": "The System Identifier uniquely distinguishes the instance from any other instance on the same computer.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "The username to access the database. This user must have CREATE USER privileges in the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "The password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "schema": {
              "title": "Default Schema",
              "description": "The default schema is used as the target schema for all statements issued from the connection that do not explicitly specify a schema name. The usual value for this field is \"airbyte\".  In Oracle, schemas and users are the same thing, so the \"user\" parameter is used as the login credentials and this is used for the default Airbyte message schema.",
              "type": "string",
              "examples": ["airbyte"],
              "default": "airbyte",
              "order": 6
            },
            "encryption": {
              "title": "Encryption",
              "type": "object",
              "description": "The encryption method which is used when communicating with the database.",
              "order": 7,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "description": "Data transfer will not be encrypted.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "unencrypted",
                      "enum": ["unencrypted"],
                      "default": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Native Network Encryption (NNE)",
                  "description": "The native network encryption gives you the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "client_nne",
                      "enum": ["client_nne"],
                      "default": "client_nne"
                    },
                    "encryption_algorithm": {
                      "type": "string",
                      "description": "This parameter defines the database encryption algorithm.",
                      "title": "Encryption Algorithm",
                      "default": "AES256",
                      "enum": ["AES256", "RC4_56", "3DES168"]
                    }
                  }
                },
                {
                  "title": "TLS Encrypted (verify certificate)",
                  "description": "Verify and use the certificate provided by the server.",
                  "required": ["encryption_method", "ssl_certificate"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate",
                      "enum": ["encrypted_verify_certificate"],
                      "default": "encrypted_verify_certificate"
                    },
                    "ssl_certificate": {
                      "title": "SSL PEM file",
                      "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-oracle",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "oracle"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "25c5221d-dce2-4163-ade9-739ef790f503",
      "name": "Postgres",
      "dockerRepository": "airbyte/destination-postgres",
      "dockerImageTag": "0.3.26",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/postgres",
      "icon": "postgresql.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/postgres",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Postgres Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "database", "schema"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "schema": {
              "title": "Default Schema",
              "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".",
              "type": "string",
              "examples": ["public"],
              "default": "public",
              "order": 3
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes.",
              "type": "boolean",
              "default": false,
              "order": 6
            },
            "ssl_mode": {
              "title": "SSL modes",
              "description": "SSL connection modes. \n <b>disable</b> - Chose this mode to disable encryption of communication between Airbyte and destination database\n <b>allow</b> - Chose this mode to enable encryption only when required by the source database\n <b>prefer</b> - Chose this mode to allow unencrypted connection only if the source database does not support encryption\n <b>require</b> - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail\n  <b>verify-ca</b> - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate\n  <b>verify-full</b> - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server\n See more information - <a href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the docs</a>.",
              "type": "object",
              "order": 7,
              "oneOf": [
                {
                  "title": "disable",
                  "additionalProperties": false,
                  "description": "Disable SSL.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "disable",
                      "enum": ["disable"],
                      "default": "disable",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "allow",
                  "additionalProperties": false,
                  "description": "Allow SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "allow",
                      "enum": ["allow"],
                      "default": "allow",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "prefer",
                  "additionalProperties": false,
                  "description": "Prefer SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "prefer",
                      "enum": ["prefer"],
                      "default": "prefer",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "require",
                  "additionalProperties": false,
                  "description": "Require SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "require",
                      "enum": ["require"],
                      "default": "require",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "verify-ca",
                  "additionalProperties": false,
                  "description": "Verify-ca SSL mode.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-ca",
                      "enum": ["verify-ca"],
                      "default": "verify-ca",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "verify-full",
                  "additionalProperties": false,
                  "description": "Verify-full SSL mode.",
                  "required": [
                    "mode",
                    "ca_certificate",
                    "client_certificate",
                    "client_key"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-full",
                      "enum": ["verify-full"],
                      "default": "verify-full",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 8
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "postgres"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "2340cbba-358e-11ec-8d3d-0242ac130203",
      "name": "Pulsar",
      "dockerRepository": "airbyte/destination-pulsar",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/pulsar",
      "icon": "pulsar.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/pulsar",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pulsar Destination Spec",
          "type": "object",
          "required": [
            "brokers",
            "use_tls",
            "topic_type",
            "topic_tenant",
            "topic_namespace",
            "topic_pattern",
            "compression_type",
            "send_timeout_ms",
            "max_pending_messages",
            "max_pending_messages_across_partitions",
            "batching_enabled",
            "batching_max_messages",
            "batching_max_publish_delay",
            "block_if_queue_full"
          ],
          "additionalProperties": true,
          "properties": {
            "brokers": {
              "title": "Pulsar brokers",
              "description": "A list of host/port pairs to use for establishing the initial connection to the Pulsar cluster.",
              "type": "string",
              "examples": ["broker1:6650,broker2:6650"]
            },
            "use_tls": {
              "title": "Use TLS",
              "description": "Whether to use TLS encryption on the connection.",
              "type": "boolean",
              "default": false
            },
            "topic_type": {
              "title": "Topic type",
              "description": "It identifies type of topic. Pulsar supports two kind of topics: persistent and non-persistent. In persistent topic, all messages are durably persisted on disk (that means on multiple disks unless the broker is standalone), whereas non-persistent topic does not persist message into storage disk.",
              "type": "string",
              "default": "persistent",
              "enum": ["persistent", "non-persistent"]
            },
            "topic_tenant": {
              "title": "Topic tenant",
              "description": "The topic tenant within the instance. Tenants are essential to multi-tenancy in Pulsar, and spread across clusters.",
              "type": "string",
              "default": "public",
              "examples": ["public"]
            },
            "topic_namespace": {
              "title": "Topic namespace",
              "description": "The administrative unit of the topic, which acts as a grouping mechanism for related topics. Most topic configuration is performed at the namespace level. Each tenant has one or multiple namespaces.",
              "type": "string",
              "default": "default",
              "examples": ["default"]
            },
            "topic_pattern": {
              "title": "Topic pattern",
              "description": "Topic pattern in which the records will be sent. You can use patterns like '{namespace}' and/or '{stream}' to send the message to a specific topic based on these values. Notice that the topic name will be transformed to a standard naming convention.",
              "type": "string",
              "examples": ["sample.topic", "{namespace}.{stream}.sample"]
            },
            "topic_test": {
              "title": "Test topic",
              "description": "Topic to test if Airbyte can produce messages.",
              "type": "string",
              "examples": ["test.topic"]
            },
            "producer_name": {
              "title": "Producer name",
              "description": "Name for the producer. If not filled, the system will generate a globally unique name which can be accessed with.",
              "type": "string",
              "examples": ["airbyte-producer"]
            },
            "producer_sync": {
              "title": "Sync producer",
              "description": "Wait synchronously until the record has been sent to Pulsar.",
              "type": "boolean",
              "default": false
            },
            "compression_type": {
              "title": "Compression type",
              "description": "Compression type for the producer.",
              "type": "string",
              "default": "NONE",
              "enum": ["NONE", "LZ4", "ZLIB", "ZSTD", "SNAPPY"]
            },
            "send_timeout_ms": {
              "title": "Message send timeout",
              "description": "If a message is not acknowledged by a server before the send-timeout expires, an error occurs (in ms).",
              "type": "integer",
              "default": 30000
            },
            "max_pending_messages": {
              "title": "Max pending messages",
              "description": "The maximum size of a queue holding pending messages.",
              "type": "integer",
              "default": 1000
            },
            "max_pending_messages_across_partitions": {
              "title": "Max pending messages across partitions",
              "description": "The maximum number of pending messages across partitions.",
              "type": "integer",
              "default": 50000
            },
            "batching_enabled": {
              "title": "Enable batching",
              "description": "Control whether automatic batching of messages is enabled for the producer.",
              "type": "boolean",
              "default": true
            },
            "batching_max_messages": {
              "title": "Batching max messages",
              "description": "Maximum number of messages permitted in a batch.",
              "type": "integer",
              "default": 1000
            },
            "batching_max_publish_delay": {
              "title": "Batching max publish delay",
              "description": " Time period in milliseconds within which the messages sent will be batched.",
              "type": "integer",
              "default": 1
            },
            "block_if_queue_full": {
              "title": "Block if queue is full",
              "description": "If the send operation should block when the outgoing message queue is full.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "e06ad785-ad6f-4647-b2e8-3027a5c59454",
      "name": "RabbitMQ",
      "dockerRepository": "airbyte/destination-rabbitmq",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/rabbitmq",
      "icon": "pulsar.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/rabbitmq",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Rabbitmq",
          "type": "object",
          "required": ["host", "routing_key"],
          "additionalProperties": false,
          "properties": {
            "ssl": {
              "type": "boolean",
              "description": "SSL enabled.",
              "default": true
            },
            "host": {
              "type": "string",
              "description": "The RabbitMQ host name."
            },
            "port": {
              "type": "integer",
              "description": "The RabbitMQ port."
            },
            "virtual_host": {
              "type": "string",
              "description": "The RabbitMQ virtual host name."
            },
            "username": {
              "type": "string",
              "description": "The username to connect."
            },
            "password": {
              "type": "string",
              "title": "Password",
              "description": "The password to connect.",
              "airbyte_secret": true
            },
            "exchange": {
              "type": "string",
              "description": "The exchange name."
            },
            "routing_key": {
              "type": "string",
              "description": "The routing key."
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "d4d3fef9-e319-45c2-881a-bd02ce44cc9f",
      "name": "Redis",
      "dockerRepository": "airbyte/destination-redis",
      "dockerImageTag": "0.1.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redis",
      "icon": "redis.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redis",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Redis Destination Spec",
          "type": "object",
          "required": ["host", "username", "port", "cache_type"],
          "additionalProperties": false,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Redis host to connect to.",
              "type": "string",
              "examples": ["localhost,127.0.0.1"],
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "Port of Redis.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 6379,
              "order": 2
            },
            "username": {
              "title": "Username",
              "description": "Username associated with Redis.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with Redis.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "ssl": {
              "title": "SSL Connection",
              "type": "boolean",
              "description": "Indicates whether SSL encryption protocol will be used to connect to Redis. It is recommended to use SSL connection if possible.",
              "default": false,
              "order": 5
            },
            "ssl_mode": {
              "title": "SSL Modes",
              "description": "SSL connection modes. \n  <li><b>verify-full</b> - This is the most secure mode. Always require encryption and verifies the identity of the source database server",
              "type": "object",
              "order": 6,
              "oneOf": [
                {
                  "title": "disable",
                  "additionalProperties": false,
                  "description": "Disable SSL.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "disable",
                      "enum": ["disable"],
                      "default": "disable",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "verify-full",
                  "additionalProperties": false,
                  "description": "Verify-full SSL mode.",
                  "required": [
                    "mode",
                    "ca_certificate",
                    "client_certificate",
                    "client_key"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-full",
                      "enum": ["verify-full"],
                      "default": "verify-full",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA Certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client Certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client Key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "cache_type": {
              "title": "Cache type",
              "type": "string",
              "default": "hash",
              "description": "Redis cache type to store data in.",
              "enum": ["hash"],
              "order": 7
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "f7a7d195-377f-cf5b-70a5-be6b819019dc",
      "name": "Redshift",
      "dockerRepository": "airbyte/destination-redshift",
      "dockerImageTag": "0.4.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redshift",
      "icon": "redshift.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redshift",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Redshift Destination Spec",
          "type": "object",
          "required": [
            "host",
            "port",
            "database",
            "username",
            "password",
            "schema"
          ],
          "additionalProperties": true,
          "properties": {
            "host": {
              "description": "Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com)",
              "type": "string",
              "title": "Host",
              "order": 1
            },
            "port": {
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5439,
              "examples": ["5439"],
              "title": "Port",
              "order": 2
            },
            "username": {
              "description": "Username to use to access the database.",
              "type": "string",
              "title": "Username",
              "order": 3
            },
            "password": {
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "title": "Password",
              "order": 4
            },
            "database": {
              "description": "Name of the database.",
              "type": "string",
              "title": "Database",
              "order": 5
            },
            "schema": {
              "description": "The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is \"public\".",
              "type": "string",
              "examples": ["public"],
              "default": "public",
              "title": "Default Schema",
              "order": 6
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 7
            },
            "uploading_method": {
              "title": "Uploading Method",
              "type": "object",
              "description": "The method how the data will be uploaded to the database.",
              "order": 8,
              "oneOf": [
                {
                  "title": "Standard",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard"
                    }
                  }
                },
                {
                  "title": "S3 Staging",
                  "required": [
                    "method",
                    "s3_bucket_name",
                    "s3_bucket_region",
                    "access_key_id",
                    "secret_access_key"
                  ],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "S3 Staging"
                    },
                    "s3_bucket_name": {
                      "title": "S3 Bucket Name",
                      "type": "string",
                      "description": "The name of the staging S3 bucket to use if utilising a COPY strategy. COPY is recommended for production workloads for better speed and scalability. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html\">AWS docs</a> for more details.",
                      "examples": ["airbyte.staging"]
                    },
                    "s3_bucket_path": {
                      "title": "S3 Bucket Path",
                      "type": "string",
                      "description": "The directory under the S3 bucket where data will be written. If not provided, then defaults to the root directory. See <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/defining-bucket-names-data-lakes/faq.html#:~:text=be%20globally%20unique.-,For%20S3%20bucket%20paths,-%2C%20you%20can%20use\">path's name recommendations</a> for more details.",
                      "examples": ["data_sync/test"]
                    },
                    "s3_bucket_region": {
                      "title": "S3 Bucket Region",
                      "type": "string",
                      "default": "",
                      "description": "The region of the S3 staging bucket to use if utilising a COPY strategy. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html#:~:text=In-,Region,-%2C%20choose%20the%20AWS\">AWS docs</a> for details.",
                      "enum": [
                        "",
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "af-south-1",
                        "ap-east-1",
                        "ap-south-1",
                        "ap-northeast-1",
                        "ap-northeast-2",
                        "ap-northeast-3",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ca-central-1",
                        "cn-north-1",
                        "cn-northwest-1",
                        "eu-central-1",
                        "eu-north-1",
                        "eu-south-1",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "sa-east-1",
                        "me-south-1"
                      ]
                    },
                    "file_name_pattern": {
                      "type": "string",
                      "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
                      "title": "S3 Filename pattern",
                      "examples": [
                        "{date}",
                        "{date:yyyy_MM}",
                        "{timestamp}",
                        "{part_number}",
                        "{sync_id}"
                      ],
                      "order": 8
                    },
                    "access_key_id": {
                      "type": "string",
                      "description": "This ID grants access to the above S3 staging bucket. Airbyte requires Read and Write permissions to the given bucket. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">AWS docs</a> on how to generate an access key ID and secret access key.",
                      "title": "S3 Key Id",
                      "airbyte_secret": true
                    },
                    "secret_access_key": {
                      "type": "string",
                      "description": "The corresponding secret to the above access key id. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">AWS docs</a> on how to generate an access key ID and secret access key.",
                      "title": "S3 Access Key",
                      "airbyte_secret": true
                    },
                    "purge_staging_data": {
                      "title": "Purge Staging Files and Tables",
                      "type": "boolean",
                      "description": "Whether to delete the staging files from S3 after completing the sync. See <a href=\"https://docs.airbyte.com/integrations/destinations/redshift/#:~:text=the%20root%20directory.-,Purge%20Staging%20Data,-Whether%20to%20delete\"> docs</a> for details.",
                      "default": true
                    },
                    "encryption": {
                      "title": "Encryption",
                      "type": "object",
                      "description": "How to encrypt the staging data",
                      "default": {
                        "encryption_type": "none"
                      },
                      "oneOf": [
                        {
                          "title": "No encryption",
                          "description": "Staging data will be stored in plaintext.",
                          "type": "object",
                          "required": ["encryption_type"],
                          "properties": {
                            "encryption_type": {
                              "type": "string",
                              "const": "none",
                              "enum": ["none"],
                              "default": "none"
                            }
                          }
                        },
                        {
                          "title": "AES-CBC envelope encryption",
                          "description": "Staging data will be encrypted using AES-CBC envelope encryption.",
                          "type": "object",
                          "required": ["encryption_type"],
                          "properties": {
                            "encryption_type": {
                              "type": "string",
                              "const": "aes_cbc_envelope",
                              "enum": ["aes_cbc_envelope"],
                              "default": "aes_cbc_envelope"
                            },
                            "key_encrypting_key": {
                              "type": "string",
                              "title": "Key",
                              "description": "The key, base64-encoded. Must be either 128, 192, or 256 bits. Leave blank to have Airbyte generate an ephemeral key for each sync.",
                              "airbyte_secret": true
                            }
                          }
                        }
                      ]
                    },
                    "file_buffer_count": {
                      "title": "File Buffer Count",
                      "type": "integer",
                      "minimum": 10,
                      "maximum": 50,
                      "default": 10,
                      "description": "Number of file buffers allocated for writing data. Increasing this number is beneficial for connections using Change Data Capture (CDC) and up to the number of streams within a connection. Increasing the number of file buffers past the maximum number of streams has deteriorating effects",
                      "examples": ["10"]
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      },
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-redshift",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "redshift"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "825c5ee3-ed9a-4dd1-a2b6-79ed722f7b13",
      "name": "Redpanda",
      "dockerRepository": "airbyte/destination-redpanda",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redpanda",
      "icon": "redpanda.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redpanda",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Redpanda destination connector",
          "type": "object",
          "required": [
            "bootstrap_servers",
            "buffer_memory",
            "compression_type",
            "retries",
            "batch_size"
          ],
          "properties": {
            "bootstrap_servers": {
              "title": "Bootstrap Servers",
              "description": "A list of host/port pairs to use for establishing the initial connection to the Redpanda cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).",
              "type": "string",
              "examples": ["redpanda-broker1:9092,redpanda-broker2:9092"]
            },
            "buffer_memory": {
              "title": "Buffer Memory",
              "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
              "type": "string",
              "examples": 33554432
            },
            "compression_type": {
              "title": "Compression Type",
              "description": "The compression type for all data generated by the producer.",
              "type": "string",
              "default": "none",
              "enum": ["none", "gzip", "snappy", "lz4", "zstd"]
            },
            "batch_size": {
              "title": "Batch Size",
              "description": "The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition.",
              "type": "integer",
              "examples": [16384]
            },
            "retries": {
              "title": "Retries",
              "description": "Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error.",
              "type": "integer",
              "examples": [2147483647]
            },
            "topic_num_partitions": {
              "title": "Number of topic partitions",
              "description": "The number of topic partitions which will be created on topic creation",
              "type": "integer",
              "examples": [10]
            },
            "topic_replication_factor": {
              "title": "Topic replication factor",
              "description": "The number of topics to which messages will be replicated",
              "type": "integer",
              "examples": [10]
            },
            "socket_connection_setup_timeout_ms": {
              "title": "Socket Connection Setup Timeout",
              "description": "The amount of time the client will wait for the socket connection to be established.",
              "type": "integer",
              "examples": [10000]
            },
            "socket_connection_setup_timeout_max_ms": {
              "title": "Socket Connection Setup Max Timeout",
              "description": "The maximum amount of time the client will wait for the socket connection to be established. The connection setup timeout will increase exponentially for each consecutive connection failure up to this maximum.",
              "type": "integer",
              "examples": [30000]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "2c9d93a7-9a17-4789-9de9-f46f0097eb70",
      "name": "Rockset",
      "dockerRepository": "airbyte/destination-rockset",
      "dockerImageTag": "0.1.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/rockset",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/rockset",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Rockset Destination Spec",
          "type": "object",
          "required": ["api_key", "workspace"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "title": "Api Key",
              "description": "Rockset api key",
              "type": "string",
              "order": 0,
              "airbyte_secret": true
            },
            "workspace": {
              "title": "Workspace",
              "description": "The Rockset workspace in which collections will be created + written to.",
              "type": "string",
              "examples": ["commons", "my_workspace"],
              "default": "commons",
              "airbyte_secret": false,
              "order": 1
            },
            "api_server": {
              "title": "Api Server",
              "description": "Rockset api URL",
              "type": "string",
              "airbyte_secret": false,
              "default": "https://api.rs2.usw2.rockset.com",
              "pattern": "^https:\\/\\/.*.rockset.com$",
              "order": 2
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append", "overwrite"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "4816b78f-1489-44c1-9060-4b19d5fa9362",
      "name": "S3",
      "dockerRepository": "airbyte/destination-s3",
      "dockerImageTag": "0.3.21",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/s3",
      "icon": "s3.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/s3",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "S3 Destination Spec",
          "type": "object",
          "required": [
            "s3_bucket_name",
            "s3_bucket_path",
            "s3_bucket_region",
            "format"
          ],
          "properties": {
            "access_key_id": {
              "type": "string",
              "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>.",
              "title": "S3 Key ID",
              "airbyte_secret": true,
              "examples": ["A012345678910EXAMPLE"],
              "order": 0
            },
            "secret_access_key": {
              "type": "string",
              "description": "The corresponding secret to the access key ID. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>",
              "title": "S3 Access Key",
              "airbyte_secret": true,
              "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"],
              "order": 1
            },
            "s3_bucket_name": {
              "title": "S3 Bucket Name",
              "type": "string",
              "description": "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\">here</a>.",
              "examples": ["airbyte_sync"],
              "order": 2
            },
            "s3_bucket_path": {
              "title": "S3 Bucket Path",
              "description": "Directory under the S3 bucket where data will be written. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\">here</a>",
              "type": "string",
              "examples": ["data_sync/test"],
              "order": 3
            },
            "s3_bucket_region": {
              "title": "S3 Bucket Region",
              "type": "string",
              "default": "",
              "description": "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\">here</a> for all region codes.",
              "enum": [
                "",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "order": 4
            },
            "format": {
              "title": "Output Format",
              "type": "object",
              "description": "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\">here</a> for more details",
              "oneOf": [
                {
                  "title": "Avro: Apache Avro",
                  "required": ["format_type", "compression_codec"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["Avro"],
                      "default": "Avro",
                      "order": 0
                    },
                    "compression_codec": {
                      "title": "Compression Codec",
                      "description": "The compression algorithm used to compress data. Default to no compression.",
                      "type": "object",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["no compression"],
                              "default": "no compression"
                            }
                          }
                        },
                        {
                          "title": "Deflate",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["Deflate"],
                              "default": "Deflate"
                            },
                            "compression_level": {
                              "title": "Deflate Level",
                              "description": "0: no compression & fastest, 9: best compression & slowest.",
                              "type": "integer",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "bzip2",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["bzip2"],
                              "default": "bzip2"
                            }
                          }
                        },
                        {
                          "title": "xz",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["xz"],
                              "default": "xz"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "See <a href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\">here</a> for details.",
                              "type": "integer",
                              "default": 6,
                              "minimum": 0,
                              "maximum": 9
                            }
                          }
                        },
                        {
                          "title": "zstandard",
                          "required": ["codec", "compression_level"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["zstandard"],
                              "default": "zstandard"
                            },
                            "compression_level": {
                              "title": "Compression Level",
                              "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory.",
                              "type": "integer",
                              "default": 3,
                              "minimum": -5,
                              "maximum": 22
                            },
                            "include_checksum": {
                              "title": "Include Checksum",
                              "description": "If true, include a checksum with each data block.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        {
                          "title": "snappy",
                          "required": ["codec"],
                          "properties": {
                            "codec": {
                              "type": "string",
                              "enum": ["snappy"],
                              "default": "snappy"
                            }
                          }
                        }
                      ],
                      "order": 1
                    }
                  }
                },
                {
                  "title": "CSV: Comma-Separated Values",
                  "required": ["format_type", "flattening"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["CSV"],
                      "default": "CSV"
                    },
                    "flattening": {
                      "type": "string",
                      "title": "Flattening",
                      "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details.",
                      "default": "No flattening",
                      "enum": ["No flattening", "Root level flattening"]
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": ["compression_type"],
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "JSON Lines: Newline-delimited JSON",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["JSONL"],
                      "default": "JSONL"
                    },
                    "flattening": {
                      "type": "string",
                      "title": "Flattening",
                      "description": "Whether the input json data should be normalized (flattened) in the output JSON Lines. Please refer to docs for details.",
                      "default": "No flattening",
                      "enum": ["No flattening", "Root level flattening"]
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Parquet: Columnar Storage",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["Parquet"],
                      "default": "Parquet"
                    },
                    "compression_codec": {
                      "title": "Compression Codec",
                      "description": "The compression algorithm used to compress data pages.",
                      "type": "string",
                      "enum": [
                        "UNCOMPRESSED",
                        "SNAPPY",
                        "GZIP",
                        "LZO",
                        "BROTLI",
                        "LZ4",
                        "ZSTD"
                      ],
                      "default": "UNCOMPRESSED"
                    },
                    "block_size_mb": {
                      "title": "Block Size (Row Group Size) (MB)",
                      "description": "This is the size of a row group being buffered in memory. It limits the memory usage when writing. Larger values will improve the IO when reading, but consume more memory when writing. Default: 128 MB.",
                      "type": "integer",
                      "default": 128,
                      "examples": [128]
                    },
                    "max_padding_size_mb": {
                      "title": "Max Padding Size (MB)",
                      "description": "Maximum size allowed as padding to align row groups. This is also the minimum size of a row group. Default: 8 MB.",
                      "type": "integer",
                      "default": 8,
                      "examples": [8]
                    },
                    "page_size_kb": {
                      "title": "Page Size (KB)",
                      "description": "The page size is for compression. A block is composed of pages. A page is the smallest unit that must be read fully to access a single record. If this value is too small, the compression will deteriorate. Default: 1024 KB.",
                      "type": "integer",
                      "default": 1024,
                      "examples": [1024]
                    },
                    "dictionary_page_size_kb": {
                      "title": "Dictionary Page Size (KB)",
                      "description": "There is one dictionary page per column per row group when dictionary encoding is used. The dictionary page size works like the page size but for dictionary. Default: 1024 KB.",
                      "type": "integer",
                      "default": 1024,
                      "examples": [1024]
                    },
                    "dictionary_encoding": {
                      "title": "Dictionary Encoding",
                      "description": "Default: true.",
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              ],
              "order": 5
            },
            "s3_endpoint": {
              "title": "Endpoint",
              "type": "string",
              "default": "",
              "description": "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\">here</a>",
              "examples": ["http://localhost:9000"],
              "order": 6
            },
            "s3_path_format": {
              "title": "S3 Path Format",
              "description": "Format string on how data will be organized inside the S3 bucket directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\">here</a>",
              "type": "string",
              "examples": [
                "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
              ],
              "order": 7
            },
            "file_name_pattern": {
              "type": "string",
              "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
              "title": "S3 Filename pattern",
              "examples": [
                "{date}",
                "{date:yyyy_MM}",
                "{timestamp}",
                "{part_number}",
                "{sync_id}"
              ],
              "order": 8
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      }
    },
    {
      "destinationDefinitionId": "471e5cab-8ed1-49f3-ba11-79c687784737",
      "name": "S3 Glue",
      "dockerRepository": "airbyte/destination-s3-glue",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/s3-glue",
      "icon": "s3-glue.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/s3",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "S3 Destination Spec",
          "type": "object",
          "required": [
            "s3_bucket_name",
            "s3_bucket_path",
            "s3_bucket_region",
            "format",
            "glue_database",
            "glue_serialization_library"
          ],
          "properties": {
            "access_key_id": {
              "type": "string",
              "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>.",
              "title": "S3 Key ID",
              "airbyte_secret": true,
              "examples": ["A012345678910EXAMPLE"],
              "order": 0
            },
            "secret_access_key": {
              "type": "string",
              "description": "The corresponding secret to the access key ID. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\">here</a>",
              "title": "S3 Access Key",
              "airbyte_secret": true,
              "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"],
              "order": 1
            },
            "s3_bucket_name": {
              "title": "S3 Bucket Name",
              "type": "string",
              "description": "The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\">here</a>.",
              "examples": ["airbyte_sync"],
              "order": 2
            },
            "s3_bucket_path": {
              "title": "S3 Bucket Path",
              "description": "Directory under the S3 bucket where data will be written. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\">here</a>",
              "type": "string",
              "examples": ["data_sync/test"],
              "order": 3
            },
            "s3_bucket_region": {
              "title": "S3 Bucket Region",
              "type": "string",
              "default": "",
              "description": "The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\">here</a> for all region codes.",
              "enum": [
                "",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "order": 4
            },
            "format": {
              "title": "Output Format",
              "type": "object",
              "description": "Format of the data output. See <a href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\">here</a> for more details",
              "oneOf": [
                {
                  "title": "JSON Lines: Newline-delimited JSON",
                  "required": ["format_type"],
                  "properties": {
                    "format_type": {
                      "title": "Format Type",
                      "type": "string",
                      "enum": ["JSONL"],
                      "default": "JSONL"
                    },
                    "compression": {
                      "title": "Compression",
                      "type": "object",
                      "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").",
                      "oneOf": [
                        {
                          "title": "No Compression",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["No Compression"],
                              "default": "No Compression"
                            }
                          }
                        },
                        {
                          "title": "GZIP",
                          "requires": "compression_type",
                          "properties": {
                            "compression_type": {
                              "type": "string",
                              "enum": ["GZIP"],
                              "default": "GZIP"
                            }
                          }
                        }
                      ]
                    },
                    "flatten_data": {
                      "title": "Flatten Data",
                      "description": "If true data will be flattened and won't be nested in the _airbyte_data field",
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              ],
              "order": 5
            },
            "s3_endpoint": {
              "title": "Endpoint",
              "type": "string",
              "default": "",
              "description": "Your S3 endpoint url. Read more <a href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\">here</a>",
              "examples": ["http://localhost:9000"],
              "order": 6
            },
            "s3_path_format": {
              "title": "S3 Path Format",
              "description": "Format string on how data will be organized inside the S3 bucket directory. Read more <a href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\">here</a>",
              "type": "string",
              "examples": [
                "${NAMESPACE}/${STREAM_NAME}/${YEAR}_${MONTH}_${DAY}_${EPOCH}_"
              ],
              "order": 7
            },
            "file_name_pattern": {
              "type": "string",
              "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
              "title": "S3 Filename pattern",
              "examples": [
                "{date}",
                "{date:yyyy_MM}",
                "{timestamp}",
                "{part_number}",
                "{sync_id}"
              ],
              "order": 8
            },
            "glue_database": {
              "type": "string",
              "description": "Name of the glue database for creating the tables, leave blank if no integration",
              "title": "Glue database name",
              "examples": ["airbyte_database"],
              "order": 9
            },
            "glue_serialization_library": {
              "title": "Serialization Library",
              "description": "The library that your query engine will use for reading and writing data in your lake.",
              "type": "string",
              "enum": [
                "org.openx.data.jsonserde.JsonSerDe",
                "org.apache.hive.hcatalog.data.JsonSerDe"
              ],
              "default": "org.openx.data.jsonserde.JsonSerDe",
              "order": 10
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "e9810f61-4bab-46d2-bb22-edfc902e0644",
      "name": "SFTP-JSON",
      "dockerRepository": "airbyte/destination-sftp-json",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/sftp-json",
      "icon": "sftp.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/sftp-json",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination SFTP JSON",
          "type": "object",
          "required": ["host", "username", "password", "destination_path"],
          "additionalProperties": false,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the SFTP server.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the SFTP server.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 22,
              "examples": [22],
              "order": 1
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the SFTP server.",
              "type": "string",
              "order": 2
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 3
            },
            "destination_path": {
              "title": "Destination path",
              "type": "string",
              "description": "Path to the directory where json files will be written.",
              "examples": ["/json_data"],
              "order": 4
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "424892c4-daac-4491-b35d-c6688ba547ba",
      "name": "Snowflake",
      "dockerRepository": "airbyte/destination-snowflake",
      "dockerImageTag": "0.4.52",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/snowflake",
      "icon": "snowflake.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/snowflake",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Snowflake Destination Spec",
          "type": "object",
          "required": [
            "host",
            "role",
            "warehouse",
            "database",
            "schema",
            "username"
          ],
          "additionalProperties": true,
          "properties": {
            "host": {
              "description": "Enter your Snowflake account's <a href=\"https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#using-an-account-locator-as-an-identifier\">locator</a> (in the format <account_locator>.<region>.<cloud>.snowflakecomputing.com)",
              "examples": [
                "accountname.us-east-2.aws.snowflakecomputing.com",
                "accountname.snowflakecomputing.com"
              ],
              "type": "string",
              "title": "Host",
              "order": 0
            },
            "role": {
              "description": "Enter the <a href=\"https://docs.snowflake.com/en/user-guide/security-access-control-overview.html#roles\">role</a> that you want to use to access Snowflake",
              "examples": ["AIRBYTE_ROLE"],
              "type": "string",
              "title": "Role",
              "order": 1
            },
            "warehouse": {
              "description": "Enter the name of the <a href=\"https://docs.snowflake.com/en/user-guide/warehouses-overview.html#overview-of-warehouses\">warehouse</a> that you want to sync data into",
              "examples": ["AIRBYTE_WAREHOUSE"],
              "type": "string",
              "title": "Warehouse",
              "order": 2
            },
            "database": {
              "description": "Enter the name of the <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\">database</a> you want to sync data into",
              "examples": ["AIRBYTE_DATABASE"],
              "type": "string",
              "title": "Database",
              "order": 3
            },
            "schema": {
              "description": "Enter the name of the default <a href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\">schema</a>",
              "examples": ["AIRBYTE_SCHEMA"],
              "type": "string",
              "title": "Default Schema",
              "order": 4
            },
            "username": {
              "description": "Enter the name of the user you want to use to access the database",
              "examples": ["AIRBYTE_USER"],
              "type": "string",
              "title": "Username",
              "order": 5
            },
            "credentials": {
              "title": "Authorization Method",
              "description": "",
              "type": "object",
              "oneOf": [
                {
                  "title": "OAuth2.0",
                  "type": "object",
                  "order": 0,
                  "required": ["access_token", "refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "OAuth2.0",
                      "enum": ["OAuth2.0"],
                      "default": "OAuth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "Enter your application's Client ID",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "Enter your application's Client secret",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Enter you application's Access Token",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Enter your application's Refresh Token",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Key Pair Authentication",
                  "type": "object",
                  "order": 1,
                  "required": ["private_key"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Key Pair Authentication",
                      "enum": ["Key Pair Authentication"],
                      "default": "Key Pair Authentication",
                      "order": 0
                    },
                    "private_key": {
                      "type": "string",
                      "title": "Private Key",
                      "description": "RSA Private key to use for Snowflake connection. See the <a href=\"https://docs.airbyte.com/integrations/destinations/snowflake\">docs</a> for more information on how to obtain this key.",
                      "multiline": true,
                      "airbyte_secret": true
                    },
                    "private_key_password": {
                      "type": "string",
                      "title": "Passphrase",
                      "description": "Passphrase for private key",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Username and Password",
                  "type": "object",
                  "required": ["password"],
                  "order": 2,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Username and Password",
                      "enum": ["Username and Password"],
                      "default": "Username and Password",
                      "order": 0
                    },
                    "password": {
                      "description": "Enter the password associated with the username.",
                      "type": "string",
                      "airbyte_secret": true,
                      "title": "Password",
                      "order": 1
                    }
                  }
                }
              ],
              "order": 6
            },
            "jdbc_url_params": {
              "description": "Enter the additional properties to pass to the JDBC URL string when connecting to the database (formatted as key=value pairs separated by the symbol &). Example: key1=value1&key2=value2&key3=value3",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 7
            },
            "loading_method": {
              "type": "object",
              "title": "Data Staging Method",
              "description": "Select a data staging method",
              "order": 8,
              "oneOf": [
                {
                  "title": "Select another option",
                  "description": "Select another option",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "title": "",
                      "description": "",
                      "type": "string",
                      "enum": ["Standard"],
                      "default": "Standard"
                    }
                  }
                },
                {
                  "title": "[Recommended] Internal Staging",
                  "description": "Recommended for large production workloads for better speed and scalability.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "title": "",
                      "description": "",
                      "type": "string",
                      "enum": ["Internal Staging"],
                      "default": "Internal Staging"
                    }
                  }
                },
                {
                  "title": "AWS S3 Staging",
                  "description": "Recommended for large production workloads for better speed and scalability.",
                  "required": [
                    "method",
                    "s3_bucket_name",
                    "access_key_id",
                    "secret_access_key"
                  ],
                  "properties": {
                    "method": {
                      "title": "",
                      "description": "",
                      "type": "string",
                      "enum": ["S3 Staging"],
                      "default": "S3 Staging",
                      "order": 0
                    },
                    "s3_bucket_name": {
                      "title": "S3 Bucket Name",
                      "type": "string",
                      "description": "Enter your S3 bucket name",
                      "examples": ["airbyte.staging"],
                      "order": 1
                    },
                    "s3_bucket_region": {
                      "title": "S3 Bucket Region",
                      "type": "string",
                      "default": "",
                      "description": "Enter the region where your S3 bucket resides",
                      "enum": [
                        "",
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "af-south-1",
                        "ap-east-1",
                        "ap-south-1",
                        "ap-northeast-1",
                        "ap-northeast-2",
                        "ap-northeast-3",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ca-central-1",
                        "cn-north-1",
                        "cn-northwest-1",
                        "eu-central-1",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-south-1",
                        "eu-north-1",
                        "sa-east-1",
                        "me-south-1"
                      ],
                      "order": 2
                    },
                    "access_key_id": {
                      "type": "string",
                      "description": "Enter your <a href=\"https://docs.aws.amazon.com/powershell/latest/userguide/pstools-appendix-sign-up.html\">AWS access key ID</a>. Airbyte requires Read and Write permissions on your S3 bucket ",
                      "title": "AWS access key ID",
                      "airbyte_secret": true,
                      "order": 3
                    },
                    "secret_access_key": {
                      "type": "string",
                      "description": "Enter your <a href=\"https://docs.aws.amazon.com/powershell/latest/userguide/pstools-appendix-sign-up.html\">AWS secret access key</a>",
                      "title": "AWS secret access key",
                      "airbyte_secret": true,
                      "order": 4
                    },
                    "purge_staging_data": {
                      "title": "Purge Staging Files and Tables",
                      "type": "boolean",
                      "description": "Toggle to delete staging files from the S3 bucket after a successful sync",
                      "default": true,
                      "order": 5
                    },
                    "encryption": {
                      "title": "Encryption",
                      "type": "object",
                      "description": "Choose a data encryption method for the staging data",
                      "default": {
                        "encryption_type": "none"
                      },
                      "order": 6,
                      "oneOf": [
                        {
                          "title": "No encryption",
                          "description": "Staging data will be stored in plaintext.",
                          "type": "object",
                          "required": ["encryption_type"],
                          "properties": {
                            "encryption_type": {
                              "type": "string",
                              "const": "none",
                              "enum": ["none"],
                              "default": "none"
                            }
                          }
                        },
                        {
                          "title": "AES-CBC envelope encryption",
                          "description": "Staging data will be encrypted using AES-CBC envelope encryption.",
                          "type": "object",
                          "required": ["encryption_type"],
                          "properties": {
                            "encryption_type": {
                              "type": "string",
                              "const": "aes_cbc_envelope",
                              "enum": ["aes_cbc_envelope"],
                              "default": "aes_cbc_envelope"
                            },
                            "key_encrypting_key": {
                              "type": "string",
                              "title": "Key",
                              "description": "The key, base64-encoded. Must be either 128, 192, or 256 bits. Leave blank to have Airbyte generate an ephemeral key for each sync.",
                              "airbyte_secret": true
                            }
                          }
                        }
                      ]
                    },
                    "file_name_pattern": {
                      "type": "string",
                      "description": "The pattern allows you to set the file-name format for the S3 staging file(s)",
                      "title": "S3 Filename pattern",
                      "examples": [
                        "{date}",
                        "{date:yyyy_MM}",
                        "{timestamp}",
                        "{part_number}",
                        "{sync_id}"
                      ],
                      "order": 7
                    }
                  }
                },
                {
                  "title": "Google Cloud Storage Staging",
                  "description": "Recommended for large production workloads for better speed and scalability.",
                  "required": [
                    "method",
                    "project_id",
                    "bucket_name",
                    "credentials_json"
                  ],
                  "properties": {
                    "method": {
                      "title": "",
                      "description": "",
                      "type": "string",
                      "enum": ["GCS Staging"],
                      "default": "GCS Staging",
                      "order": 0
                    },
                    "project_id": {
                      "title": "Google Cloud project ID",
                      "type": "string",
                      "description": "Enter the <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\">Google Cloud project ID</a>",
                      "examples": ["my-project"],
                      "order": 1
                    },
                    "bucket_name": {
                      "title": "Cloud Storage bucket name",
                      "type": "string",
                      "description": "Enter the <a href=\"https://cloud.google.com/storage/docs/creating-buckets\">Cloud Storage bucket name</a>",
                      "examples": ["airbyte-staging"],
                      "order": 2
                    },
                    "credentials_json": {
                      "title": "Google Application Credentials",
                      "type": "string",
                      "description": "Enter your <a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys\">Google Cloud service account key</a> in the JSON format with read/write access to your Cloud Storage staging bucket",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    }
                  }
                },
                {
                  "title": "Azure Blob Storage Staging",
                  "description": "Recommended for large production workloads for better speed and scalability.",
                  "required": [
                    "method",
                    "azure_blob_storage_account_name",
                    "azure_blob_storage_container_name",
                    "azure_blob_storage_sas_token"
                  ],
                  "properties": {
                    "method": {
                      "title": "",
                      "description": "",
                      "type": "string",
                      "enum": ["Azure Blob Staging"],
                      "default": "Azure Blob Staging",
                      "order": 0
                    },
                    "azure_blob_storage_endpoint_domain_name": {
                      "title": "Azure Blob Storage Endpoint",
                      "type": "string",
                      "default": "blob.core.windows.net",
                      "description": "Enter the Azure Blob Storage <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview#storage-account-endpoints\">endpoint domain name</a>",
                      "examples": ["blob.core.windows.net"],
                      "order": 1
                    },
                    "azure_blob_storage_account_name": {
                      "title": "Azure Blob Storage <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview#storage-account-endpoints\">account name</a>",
                      "type": "string",
                      "description": "Enter your Azure Blob Storage account name",
                      "examples": ["airbyte5storage"],
                      "order": 2
                    },
                    "azure_blob_storage_container_name": {
                      "title": "Azure Blob Storage Container Name",
                      "type": "string",
                      "description": "Enter your Azure Blob Storage <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#container-names\">container name</a>",
                      "examples": ["airbytetestcontainername"],
                      "order": 3
                    },
                    "azure_blob_storage_sas_token": {
                      "title": "SAS Token",
                      "type": "string",
                      "airbyte_secret": true,
                      "description": "Enter the <a href=\"https://docs.snowflake.com/en/user-guide/data-load-azure-config.html#option-2-generating-a-sas-token\">Shared access signature</a> (SAS) token to grant Snowflake limited access to objects in your Azure Blob Storage account",
                      "examples": [
                        "?sv=2016-05-31&ss=b&srt=sco&sp=rwdl&se=2018-06-27T10:05:50Z&st=2017-06-27T02:05:50Z&spr=https,http&sig=bgqQwoXwxzuD2GJfagRg7VOS8hzNr3QLT7rhS8OFRLQ%3D"
                      ],
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "OAuth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "path_in_connector_config": ["host"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "memory_request": "1Gi",
              "memory_limit": "1Gi"
            }
          }
        ]
      },
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-snowflake",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "snowflake"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "294a4790-429b-40ae-9516-49826b9702e1",
      "name": "MariaDB ColumnStore",
      "dockerRepository": "airbyte/destination-mariadb-columnstore",
      "dockerImageTag": "0.1.7",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mariadb-columnstore",
      "icon": "mariadb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mariadb-columnstore",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MariaDB Columnstore Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "database"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "The Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "The Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 3306,
              "examples": ["3306"],
              "order": 1
            },
            "database": {
              "title": "Database",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "Username",
              "description": "The Username which is used to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "The Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "eebd85cf-60b2-4af6-9ba0-edeca01437b0",
      "name": "Streamr",
      "dockerRepository": "ghcr.io/devmate-cloud/streamr-airbyte-connectors",
      "dockerImageTag": "0.0.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/streamr",
      "icon": "streamr.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/streamr",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Streamr",
          "type": "object",
          "required": ["privateKey", "streamId"],
          "additionalProperties": false,
          "properties": {
            "privateKey": {
              "type": "string",
              "description": "You private key on Streamr",
              "airbyte_secret": true
            },
            "streamId": {
              "type": "string",
              "description": "Your full Stream ID",
              "examples": [
                "0x0d0102474519cd2fc1b3e3f962a87e39cbcbead2/test-streamr"
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append", "append_dedup"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "3dc6f384-cd6b-4be3-ad16-a41450899bf0",
      "name": "Scylla",
      "dockerRepository": "airbyte/destination-scylla",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/scylla",
      "icon": "scylla.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/scylla",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Scylla Destination Spec",
          "type": "object",
          "required": ["keyspace", "username", "password", "address", "port"],
          "additionalProperties": true,
          "properties": {
            "keyspace": {
              "title": "Keyspace",
              "description": "Default Scylla keyspace to create data in.",
              "type": "string",
              "order": 0
            },
            "username": {
              "title": "Username",
              "description": "Username to use to access Scylla.",
              "type": "string",
              "order": 1
            },
            "password": {
              "title": "Password",
              "description": "Password associated with Scylla.",
              "type": "string",
              "airbyte_secret": true,
              "order": 2
            },
            "address": {
              "title": "Address",
              "description": "Address to connect to.",
              "type": "string",
              "order": 3
            },
            "port": {
              "title": "Port",
              "description": "Port of Scylla.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 9042,
              "order": 4
            },
            "replication": {
              "title": "Replication factor",
              "type": "integer",
              "description": "Indicates to how many nodes the data should be replicated to.",
              "default": 1,
              "order": 5
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "a4cbd2d1-8dbe-4818-b8bc-b90ad782d12a",
      "name": "Google Sheets",
      "dockerRepository": "airbyte/destination-google-sheets",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/google-sheets",
      "icon": "google-sheets.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/google-sheets",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Google Sheets",
          "type": "object",
          "required": ["spreadsheet_id", "credentials"],
          "additionalProperties": false,
          "properties": {
            "spreadsheet_id": {
              "type": "string",
              "title": "Spreadsheet Link",
              "description": "The link to your spreadsheet. See <a href='https://docs.airbyte.com/integrations/destinations/google-sheets#sheetlink'>this guide</a> for more details.",
              "examples": [
                "https://docs.google.com/spreadsheets/d/1hLd9Qqti3UyLXZB2aFfUWDT7BG/edit"
              ]
            },
            "credentials": {
              "type": "object",
              "title": "Authentication via Google (OAuth)",
              "description": "Google API Credentials for connecting to Google Sheets and Google Drive APIs",
              "required": ["client_id", "client_secret", "refresh_token"],
              "properties": {
                "client_id": {
                  "title": "Client ID",
                  "type": "string",
                  "description": "The Client ID of your Google Sheets developer application.",
                  "airbyte_secret": true
                },
                "client_secret": {
                  "title": "Client Secret",
                  "type": "string",
                  "description": "The Client Secret of your Google Sheets developer application.",
                  "airbyte_secret": true
                },
                "refresh_token": {
                  "title": "Refresh Token",
                  "type": "string",
                  "description": "The token for obtaining new access token.",
                  "airbyte_secret": true
                }
              }
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "b76be0a6-27dc-4560-95f6-2623da0bd7b6",
      "name": "Local SQLite",
      "dockerRepository": "airbyte/destination-sqlite",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/local-sqlite",
      "icon": "sqlite.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/sqlite",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Sqlite",
          "type": "object",
          "required": ["destination_path"],
          "additionalProperties": false,
          "properties": {
            "destination_path": {
              "type": "string",
              "description": "Path to the sqlite.db file. The file will be placed inside that local mount. For more information check out our <a href=\"https://docs.airbyte.com/integrations/destinations/sqlite\">docs</a>",
              "example": "/local/sqlite.db"
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "06ec60c7-7468-45c0-91ac-174f6e1a788b",
      "name": "TiDB",
      "dockerRepository": "airbyte/destination-tidb",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/tidb",
      "icon": "tidb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/tidb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "TiDB Destination Spec",
          "type": "object",
          "required": ["host", "port", "username", "database"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 4000,
              "examples": ["4000"],
              "order": 1
            },
            "database": {
              "title": "Database",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "default": "",
              "order": 4
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 6
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "normalizationConfig": {
        "normalizationRepository": "airbyte/normalization-tidb",
        "normalizationTag": "0.2.26",
        "normalizationIntegrationType": "tidb"
      },
      "supportsDbt": true
    },
    {
      "destinationDefinitionId": "36be8dc6-9851-49af-b776-9d4c30e4ab6a",
      "name": "Typesense",
      "dockerRepository": "airbyte/destination-typesense",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/typesense",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/typesense",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Typesense",
          "type": "object",
          "required": ["api_key", "host"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Typesense API Key",
              "order": 0
            },
            "host": {
              "title": "Host",
              "type": "string",
              "description": "Hostname of the Typesense instance without protocol.",
              "order": 1
            },
            "port": {
              "title": "Port",
              "type": "string",
              "description": "Port of the Typesense instance. Ex: 8108, 80, 443. Default is 443",
              "order": 2
            },
            "protocol": {
              "title": "Protocol",
              "type": "string",
              "description": "Protocol of the Typesense instance. Ex: http or https. Default is https",
              "order": 3
            },
            "batch_size": {
              "title": "Batch size",
              "type": "string",
              "description": "How many documents should be imported together. Default 1000",
              "order": 4
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "2300fdcf-a532-419f-9f24-a014336e7966",
      "name": "YugabyteDB",
      "dockerRepository": "airbyte/destination-yugabytedb",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/yugabytedb",
      "icon": "yugabytedb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/destinations/yugabytedb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Yugabytedb destination spec",
          "type": "object",
          "required": ["host", "port", "username", "database", "schema"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "The Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "The Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 3306,
              "examples": ["3306"],
              "order": 1
            },
            "database": {
              "title": "Database",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "Username",
              "description": "The Username which is used to access the database.",
              "type": "string",
              "order": 3
            },
            "schema": {
              "title": "Default Schema",
              "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".",
              "type": "string",
              "examples": ["public"],
              "default": "public",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "The Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "302e4d8e-08d3-4098-acd4-ac67ca365b88",
      "name": "Databend",
      "dockerRepository": "airbyte/destination-databend",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/databend",
      "icon": "databend.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/databend",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Databend",
          "type": "object",
          "required": ["host", "username", "database"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 443,
              "examples": ["443"],
              "order": 2
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 3
            },
            "table": {
              "title": "Default Table",
              "description": "The default  table was written to.",
              "type": "string",
              "examples": ["default"],
              "default": "default",
              "order": 4
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 5
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 6
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "58e6f9da-904e-11ed-a1eb-0242ac120002",
      "name": "Teradata Vantage",
      "dockerRepository": "airbyte/destination-teradata",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.io/integrations/destinations/teradata",
      "icon": "teradata.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/destinations/teradata",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Teradata Destination Spec",
          "type": "object",
          "required": ["host", "username"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 1
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 2
            },
            "schema": {
              "title": "Default Schema",
              "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".",
              "type": "string",
              "examples": ["airbyte_td"],
              "default": "airbyte_td",
              "order": 3
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes.",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "ssl_mode": {
              "title": "SSL modes",
              "description": "SSL connection modes. \n <b>disable</b> - Chose this mode to disable encryption of communication between Airbyte and destination database\n <b>allow</b> - Chose this mode to enable encryption only when required by the destination database\n <b>prefer</b> - Chose this mode to allow unencrypted connection only if the destination database does not support encryption\n <b>require</b> - Chose this mode to always require encryption. If the destination database server does not support encryption, connection will fail\n  <b>verify-ca</b> - Chose this mode to always require encryption and to verify that the destination database server has a valid SSL certificate\n  <b>verify-full</b> - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the destination database server\n See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLMODE\"> in the docs</a>.",
              "type": "object",
              "order": 6,
              "oneOf": [
                {
                  "title": "disable",
                  "additionalProperties": false,
                  "description": "Disable SSL.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "disable",
                      "enum": ["disable"],
                      "default": "disable",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "allow",
                  "additionalProperties": false,
                  "description": "Allow SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "allow",
                      "enum": ["allow"],
                      "default": "allow",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "prefer",
                  "additionalProperties": false,
                  "description": "Prefer SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "prefer",
                      "enum": ["prefer"],
                      "default": "prefer",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "require",
                  "additionalProperties": false,
                  "description": "Require SSL mode.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "require",
                      "enum": ["require"],
                      "default": "require",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "verify-ca",
                  "additionalProperties": false,
                  "description": "Verify-ca SSL mode.",
                  "required": ["mode", "ssl_ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-ca",
                      "enum": ["verify-ca"],
                      "default": "verify-ca",
                      "order": 0
                    },
                    "ssl_ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "Specifies the file name of a PEM file that contains Certificate Authority (CA) certificates for use with SSLMODE=verify-ca.\n See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"> in the docs</a>.",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    }
                  }
                },
                {
                  "title": "verify-full",
                  "additionalProperties": false,
                  "description": "Verify-full SSL mode.",
                  "required": ["mode", "ssl_ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-full",
                      "enum": ["verify-full"],
                      "default": "verify-full",
                      "order": 0
                    },
                    "ssl_ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "Specifies the file name of a PEM file that contains Certificate Authority (CA) certificates for use with SSLMODE=verify-full.\n See more information - <a href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"> in the docs</a>.",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    }
                  }
                }
              ]
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 7
            }
          }
        },
        "supportsIncremental": false,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "7b7d7a0d-954c-45a0-bcfc-39a634b97736",
      "name": "Weaviate",
      "dockerRepository": "airbyte/destination-weaviate",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/destinations/weaviate",
      "icon": "weaviate.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/weaviate",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Destination Weaviate",
          "type": "object",
          "required": ["url"],
          "additionalProperties": false,
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL to the weaviate instance",
              "examples": [
                "http://localhost:8080",
                "https://your-instance.semi.network"
              ]
            },
            "username": {
              "type": "string",
              "description": "Username used with OIDC authentication",
              "examples": ["xyz@weaviate.io"]
            },
            "password": {
              "type": "string",
              "description": "Password used with OIDC authentication",
              "airbyte_secret": true
            },
            "batch_size": {
              "type": "integer",
              "description": "Batch size for writing to Weaviate",
              "default": 100
            },
            "vectors": {
              "type": "string",
              "description": "Comma separated list of strings of `stream_name.vector_column_name` to specify which field holds the vectors.",
              "examples": [
                "my_table.my_vector_column, another_table.vector",
                "mytable.vector"
              ]
            },
            "id_schema": {
              "type": "string",
              "description": "Comma separated list of strings of `stream_name.id_column_name` to specify which field holds the ID of the record.",
              "examples": [
                "my_table.my_id_column, another_table.id",
                "users.user_id"
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append", "overwrite"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "destinationDefinitionId": "94bd199c-2ff0-4aa2-b98e-17f0acb72610",
      "name": "DuckDB",
      "dockerRepository": "airbyte/destination-duckdb",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.io/integrations/destinations/duckdb",
      "icon": "duckdb.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/destinations/duckdb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DuckDB Destination Spec",
          "type": "object",
          "required": ["destination_path"],
          "additionalProperties": false,
          "properties": {
            "destination_path": {
              "type": "string",
              "description": "Path to the destination.duckdb file. The file will be placed inside that local mount. For more information check out our <a href=\"https://docs.airbyte.io/integrations/destinations/duckdb\">docs</a>",
              "example": "/local/destination.duckdb"
            },
            "schema": {
              "type": "string",
              "description": "database schema, default for duckdb is main",
              "example": "main"
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": ["overwrite", "append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    }
  ],
  "sources": [
    {
      "sourceDefinitionId": "9f32dab3-77cb-45a1-9d33-347aa5fbe363",
      "name": "ActiveCampaign",
      "dockerRepository": "airbyte/source-activecampaign",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/activecampaign",
      "icon": "activecampaign.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/activecampaign",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Activecampaign Spec",
          "type": "object",
          "required": ["api_key", "account_username"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            },
            "account_username": {
              "type": "string",
              "description": "Account Username"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d3b7fa46-111b-419a-998a-d7f046f6d66d",
      "name": "Adjust",
      "dockerRepository": "airbyte/source-adjust",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/adjust",
      "icon": "adjust.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://raw.githubusercontent.com/appchoose/airbyte/feature/source-adjust/docs/integrations/sources/adjust.md",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "description": "Adjust reporting API connector.",
          "properties": {
            "additional_metrics": {
              "description": "Metrics names that are not pre-defined, such as cohort metrics or app specific metrics.",
              "items": {
                "type": "string"
              },
              "order": 3,
              "title": "Additional metrics for ingestion",
              "type": "array"
            },
            "api_token": {
              "airbyte_secret": true,
              "description": "Adjust API key, see https://help.adjust.com/en/article/report-service-api-authentication",
              "order": 0,
              "title": "API Token",
              "type": "string"
            },
            "dimensions": {
              "description": "Dimensions allow a user to break down metrics into groups using one or several parameters. For example, the number of installs by date, country and network. See https://help.adjust.com/en/article/reports-endpoint#dimensions for more information about the dimensions.",
              "items": {
                "enum": [
                  "os_name",
                  "device_type",
                  "app",
                  "app_token",
                  "store_id",
                  "store_type",
                  "app_network",
                  "currency",
                  "currency_code",
                  "network",
                  "campaign",
                  "campaign_network",
                  "campaign_id_network",
                  "adgroup",
                  "adgroup_network",
                  "adgroup_id_network",
                  "source_network",
                  "source_id_network",
                  "creative",
                  "creative_network",
                  "creative_id_network",
                  "country",
                  "country_code",
                  "region",
                  "partner_name",
                  "partner_id"
                ],
                "type": "string"
              },
              "minItems": 1,
              "order": 4,
              "title": "Dimensions",
              "type": "array",
              "uniqueItems": true
            },
            "ingest_start": {
              "description": "Data ingest start date.",
              "format": "date",
              "order": 1,
              "title": "Ingest Start Date",
              "type": "string"
            },
            "metrics": {
              "description": "Select at least one metric to query.",
              "items": {
                "enum": [
                  "network_cost",
                  "network_cost_diff",
                  "network_clicks",
                  "network_impressions",
                  "network_installs",
                  "network_installs_diff",
                  "network_ecpc",
                  "network_ecpi",
                  "network_ecpm",
                  "arpdau_ad",
                  "arpdau",
                  "arpdau_iap",
                  "ad_impressions",
                  "ad_rpm",
                  "ad_revenue",
                  "cohort_ad_revenue",
                  "cost",
                  "adjust_cost",
                  "all_revenue",
                  "cohort_all_revenue",
                  "daus",
                  "maus",
                  "waus",
                  "base_sessions",
                  "ctr",
                  "click_conversion_rate",
                  "click_cost",
                  "clicks",
                  "paid_clicks",
                  "deattributions",
                  "ecpc",
                  "gdpr_forgets",
                  "gross_profit",
                  "cohort_gross_profit",
                  "impression_conversion_rate",
                  "impression_cost",
                  "impressions",
                  "paid_impressions",
                  "install_cost",
                  "installs",
                  "paid_installs",
                  "installs_per_mile",
                  "limit_ad_tracking_installs",
                  "limit_ad_tracking_install_rate",
                  "limit_ad_tracking_reattribution_rate",
                  "limit_ad_tracking_reattributions",
                  "non_organic_installs",
                  "organic_installs",
                  "roas_ad",
                  "roas",
                  "roas_iap",
                  "reattributions",
                  "return_on_investment",
                  "revenue",
                  "cohort_revenue",
                  "revenue_events",
                  "revenue_to_cost",
                  "sessions",
                  "events",
                  "ecpi_all",
                  "ecpi",
                  "ecpm"
                ],
                "type": "string"
              },
              "minItems": 1,
              "order": 2,
              "title": "Metrics to ingest",
              "type": "array",
              "uniqueItems": true
            },
            "until_today": {
              "default": false,
              "description": "Syncs data up until today. Useful when running daily incremental syncs, and duplicates are not desired.",
              "order": 5,
              "title": "Until Today",
              "type": "boolean"
            }
          },
          "required": ["api_token", "ingest_start", "metrics", "dimensions"],
          "title": "Adjust Spec",
          "type": "object"
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "14c6e7ea-97ed-4f5e-a7b5-25e9a80b8212",
      "name": "Airtable",
      "dockerRepository": "airbyte/source-airtable",
      "dockerImageTag": "2.0.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/airtable",
      "icon": "airtable.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/airtable",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Airtable Source Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oauth2.0"
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The client ID of the Airtable developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client secret",
                      "description": "The client secret the Airtable developer application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    },
                    "token_expiry_date": {
                      "type": "string",
                      "description": "The date-time when the access token should be refreshed.",
                      "format": "date-time"
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh token",
                      "description": "The key to refresh the expired access token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "API Key",
                  "type": "object",
                  "required": ["api_key"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "api_key"
                    },
                    "api_key": {
                      "type": "string",
                      "description": "The API Key or PAT for the Airtable account. See the <a href=\"https://airtable.com/developers/web/guides/personal-access-tokens\">Support Guide</a> for more information on how to obtain this key.",
                      "title": "API Key",
                      "airbyte_secret": true,
                      "examples": ["key1234567890"]
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                },
                "token_expiry_date": {
                  "type": "string",
                  "format": "date-time",
                  "path_in_connector_config": [
                    "credentials",
                    "token_expiry_date"
                  ]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.airtable.com", "airtable.com"]
      }
    },
    {
      "sourceDefinitionId": "81ca39dc-4534-4dd2-b848-b0cfd2c11fce",
      "name": "Aha",
      "dockerRepository": "airbyte/source-aha",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/aha",
      "icon": "aha.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/aha",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Aha Spec",
          "type": "object",
          "required": ["api_key", "url"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "title": "API Bearer Token"
            },
            "url": {
              "type": "string",
              "description": "URL",
              "title": "Aha Url Instance"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "db385323-9333-4fec-bec3-9e0ca9326c90",
      "name": "Alpha Vantage",
      "dockerRepository": "airbyte/source-alpha-vantage",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/alpha-vantage",
      "icon": "alpha-vantage.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/alpha-vantage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Alpha Vantage Spec",
          "type": "object",
          "required": ["api_key", "symbol"],
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "symbol": {
              "title": "Symbol",
              "type": "string",
              "description": "Stock symbol (with exchange code)",
              "examples": ["AAPL", "TSCO.LON"],
              "order": 1
            },
            "interval": {
              "title": "Interval",
              "type": "string",
              "description": "Time-series data point interval. Required for intraday endpoints.\n",
              "enum": ["1min", "5min", "15min", "30min", "60min"],
              "default": "1min",
              "order": 2
            },
            "adjusted": {
              "title": "Adjusted?",
              "type": "boolean",
              "description": "Whether to return adjusted data. Only applicable to intraday endpoints.\n",
              "default": false,
              "order": 3
            },
            "outputsize": {
              "title": "Output Size",
              "type": "string",
              "description": "Whether to return full or compact data (the last 100 data points).\n",
              "enum": ["compact", "full"],
              "default": "compact",
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "1fa90628-2b9e-11ed-a261-0242ac120002",
      "name": "AlloyDB for PostgreSQL",
      "dockerRepository": "airbyte/source-alloydb",
      "dockerImageTag": "2.0.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/alloydb",
      "icon": "alloydb.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/postgres",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Postgres Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "Database Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "default": ["public"],
              "order": 3
            },
            "username": {
              "title": "Username",
              "description": "Username to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
              "title": "JDBC URL Parameters (Advanced)",
              "type": "string",
              "order": 6
            },
            "ssl": {
              "title": "Connect using SSL",
              "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes.",
              "type": "boolean",
              "default": false,
              "order": 7
            },
            "ssl_mode": {
              "title": "SSL Modes",
              "description": "SSL connection modes. \n  Read more <a href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the docs</a>.",
              "type": "object",
              "order": 7,
              "oneOf": [
                {
                  "title": "disable",
                  "additionalProperties": true,
                  "description": "Disables encryption of communication between Airbyte and source database.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "disable",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "allow",
                  "additionalProperties": true,
                  "description": "Enables encryption only when required by the source database.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "allow",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "prefer",
                  "additionalProperties": true,
                  "description": "Allows unencrypted connection only if the source database does not support encryption.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "prefer",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "require",
                  "additionalProperties": true,
                  "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "require",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "verify-ca",
                  "additionalProperties": true,
                  "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-ca",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client Certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client Key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "verify-full",
                  "additionalProperties": true,
                  "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-full",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA Certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client Certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client Key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "replication_method": {
              "type": "object",
              "title": "Replication Method",
              "description": "Replication method for extracting data from the database.",
              "order": 8,
              "oneOf": [
                {
                  "title": "Standard",
                  "description": "Standard replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Logical Replication (CDC)",
                  "description": "Logical replication uses the Postgres write-ahead log (WAL) to detect inserts, updates, and deletes. This needs to be configured on the source database itself. Only available on Postgres 10 and above. Read the <a href=\"https://docs.airbyte.com/integrations/sources/postgres\">docs</a>.",
                  "required": ["method", "replication_slot", "publication"],
                  "additionalProperties": true,
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "CDC",
                      "order": 1
                    },
                    "plugin": {
                      "type": "string",
                      "title": "Plugin",
                      "description": "A logical decoding plugin installed on the PostgreSQL server.",
                      "enum": ["pgoutput"],
                      "default": "pgoutput",
                      "order": 2
                    },
                    "replication_slot": {
                      "type": "string",
                      "title": "Replication Slot",
                      "description": "A plugin logical replication slot. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-3-create-replication-slot\">replication slots</a>.",
                      "order": 3
                    },
                    "publication": {
                      "type": "string",
                      "title": "Publication",
                      "description": "A Postgres publication used for consuming changes. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-4-create-publications-and-replication-identities-for-tables\">publications and replication identities</a>.",
                      "order": 4
                    },
                    "initial_waiting_seconds": {
                      "type": "integer",
                      "title": "Initial Waiting Time in Seconds (Advanced)",
                      "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-5-optional-set-up-initial-waiting-time\">initial waiting time</a>.",
                      "default": 300,
                      "order": 5,
                      "min": 120,
                      "max": 1200
                    },
                    "lsn_commit_behaviour": {
                      "type": "string",
                      "title": "LSN commit behaviour",
                      "description": "Determines when Airbtye should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                      "enum": [
                        "While reading Data",
                        "After loading Data in the destination"
                      ],
                      "default": "After loading Data in the destination",
                      "order": 6
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["${host}", "${tunnel_method.tunnel_host}"]
      }
    },
    {
      "sourceDefinitionId": "6ff047c0-f5d5-4ce5-8c81-204a830fa7e1",
      "name": "AWS CloudTrail",
      "dockerRepository": "airbyte/source-aws-cloudtrail",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/aws-cloudtrail",
      "icon": "awscloudtrail.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/aws-cloudtrail",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Aws CloudTrail Spec",
          "type": "object",
          "required": [
            "aws_key_id",
            "aws_secret_key",
            "aws_region_name",
            "start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "aws_key_id": {
              "type": "string",
              "title": "Key ID",
              "description": "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.com/integrations/sources/aws-cloudtrail\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "aws_secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.com/integrations/sources/aws-cloudtrail\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "aws_region_name": {
              "type": "string",
              "title": "Region Name",
              "description": "The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "default": "1970-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "format": "date"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "c6b0a29e-1da9-4512-9002-7bfd0cba2246",
      "name": "Amazon Ads",
      "dockerRepository": "airbyte/source-amazon-ads",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-ads",
      "icon": "amazonads.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-ads",
        "connectionSpecification": {
          "title": "Amazon Ads Spec",
          "type": "object",
          "properties": {
            "auth_type": {
              "title": "Auth Type",
              "const": "oauth2.0",
              "order": 0,
              "type": "string"
            },
            "client_id": {
              "title": "Client ID",
              "description": "The client ID of your Amazon Ads developer application. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\">docs</a> for more information.",
              "order": 1,
              "type": "string"
            },
            "client_secret": {
              "title": "Client Secret",
              "description": "The client secret of your Amazon Ads developer application. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\">docs</a> for more information.",
              "airbyte_secret": true,
              "order": 2,
              "type": "string"
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "Amazon Ads refresh token. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens\">docs</a> for more information on how to obtain this token.",
              "airbyte_secret": true,
              "order": 3,
              "type": "string"
            },
            "region": {
              "title": "Region",
              "description": "Region to pull data from (EU/NA/FE). See <a href=\"https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints\">docs</a> for more details.",
              "enum": ["NA", "EU", "FE"],
              "type": "string",
              "default": "NA",
              "order": 4
            },
            "start_date": {
              "title": "Start Date",
              "description": "The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format",
              "examples": ["2022-10-10", "2022-10-22"],
              "order": 5,
              "type": "string"
            },
            "profiles": {
              "title": "Profile IDs",
              "description": "Profile IDs you want to fetch data for. See <a href=\"https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles\">docs</a> for more details.",
              "order": 6,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "state_filter": {
              "title": "State Filter",
              "description": "Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.",
              "items": {
                "type": "string",
                "enum": ["enabled", "paused", "archived"]
              },
              "type": "array",
              "uniqueItems": true,
              "order": 7
            },
            "look_back_window": {
              "title": "Look Back Window",
              "description": "The amount of days to go back in time to get the updated data from Amazon Ads",
              "examples": [3, 10],
              "type": "integer",
              "default": 3,
              "order": 8
            }
          },
          "required": ["client_id", "client_secret", "refresh_token"],
          "additionalProperties": true
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": [
          "api.amazon.com",
          "advertising-api.amazon.com",
          "advertising-api-eu.amazon.com",
          "advertising-api-fe.amazon.com"
        ]
      }
    },
    {
      "sourceDefinitionId": "e55879a8-0ef8-4557-abcf-ab34c53ec460",
      "name": "Amazon Seller Partner",
      "dockerRepository": "airbyte/source-amazon-seller-partner",
      "dockerImageTag": "0.2.33",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-seller-partner",
      "icon": "amazonsellerpartner.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-seller-partner",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/amazon-seller-partner",
        "connectionSpecification": {
          "title": "Amazon Seller Partner Spec",
          "type": "object",
          "properties": {
            "app_id": {
              "title": "App Id",
              "description": "Your Amazon App ID",
              "airbyte_secret": true,
              "order": 0,
              "type": "string"
            },
            "auth_type": {
              "title": "Auth Type",
              "const": "oauth2.0",
              "order": 1,
              "type": "string"
            },
            "lwa_app_id": {
              "title": "LWA Client Id",
              "description": "Your Login with Amazon Client ID.",
              "order": 2,
              "type": "string"
            },
            "lwa_client_secret": {
              "title": "LWA Client Secret",
              "description": "Your Login with Amazon Client Secret.",
              "airbyte_secret": true,
              "order": 3,
              "type": "string"
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "The Refresh Token obtained via OAuth flow authorization.",
              "airbyte_secret": true,
              "order": 4,
              "type": "string"
            },
            "aws_access_key": {
              "title": "AWS Access Key",
              "description": "Specifies the AWS access key used as part of the credentials to authenticate the user.",
              "airbyte_secret": true,
              "order": 5,
              "type": "string"
            },
            "aws_secret_key": {
              "title": "AWS Secret Access Key",
              "description": "Specifies the AWS secret key used as part of the credentials to authenticate the user.",
              "airbyte_secret": true,
              "order": 6,
              "type": "string"
            },
            "role_arn": {
              "title": "Role ARN",
              "description": "Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).",
              "airbyte_secret": true,
              "order": 7,
              "type": "string"
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 8,
              "type": "string"
            },
            "replication_end_date": {
              "title": "End Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$|^$",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 9,
              "type": "string"
            },
            "period_in_days": {
              "title": "Period In Days",
              "description": "Will be used for stream slicing for initial full_refresh sync when no updated state is present for reports that support sliced incremental sync.",
              "default": 90,
              "maximum": 90,
              "examples": ["1", "10", "30", "60", "90"],
              "order": 10,
              "type": "integer"
            },
            "report_options": {
              "title": "Report Options",
              "description": "Additional information passed to reports. This varies by report type. Must be a valid json string.",
              "examples": [
                "{\"GET_BRAND_ANALYTICS_SEARCH_TERMS_REPORT\": {\"reportPeriod\": \"WEEK\"}}",
                "{\"GET_SOME_REPORT\": {\"custom\": \"true\"}}"
              ],
              "order": 11,
              "type": "string"
            },
            "max_wait_seconds": {
              "title": "Max wait time for reports (in seconds)",
              "description": "Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.",
              "default": 500,
              "examples": ["500", "1980"],
              "order": 12,
              "type": "integer"
            },
            "aws_environment": {
              "title": "AWSEnvironment",
              "description": "An enumeration.",
              "enum": ["PRODUCTION", "SANDBOX"],
              "type": "string"
            },
            "region": {
              "title": "AWSRegion",
              "description": "An enumeration.",
              "enum": [
                "AE",
                "AU",
                "BR",
                "CA",
                "DE",
                "EG",
                "ES",
                "FR",
                "GB",
                "IN",
                "IT",
                "JP",
                "MX",
                "NL",
                "PL",
                "SA",
                "SE",
                "SG",
                "TR",
                "UK",
                "US"
              ],
              "type": "string"
            }
          },
          "required": [
            "lwa_app_id",
            "lwa_client_secret",
            "refresh_token",
            "replication_start_date",
            "aws_environment",
            "region"
          ],
          "additionalProperties": true,
          "definitions": {
            "AWSEnvironment": {
              "title": "AWSEnvironment",
              "description": "An enumeration.",
              "enum": ["PRODUCTION", "SANDBOX"],
              "type": "string"
            },
            "AWSRegion": {
              "title": "AWSRegion",
              "description": "An enumeration.",
              "enum": [
                "AE",
                "AU",
                "BR",
                "CA",
                "DE",
                "EG",
                "ES",
                "FR",
                "GB",
                "IN",
                "IT",
                "JP",
                "MX",
                "NL",
                "PL",
                "SA",
                "SE",
                "SG",
                "TR",
                "UK",
                "US"
              ],
              "type": "string"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "app_id": {
                  "type": "string",
                  "path_in_connector_config": ["app_id"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "lwa_app_id": {
                  "type": "string"
                },
                "lwa_client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "lwa_app_id": {
                  "type": "string",
                  "path_in_connector_config": ["lwa_app_id"]
                },
                "lwa_client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["lwa_client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "983fd355-6bf3-4709-91b5-37afa391eeb6",
      "name": "Amazon SQS",
      "dockerRepository": "airbyte/source-amazon-sqs",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-sqs",
      "icon": "awssqs.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/amazon-sqs",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Amazon SQS Source Spec",
          "type": "object",
          "required": ["queue_url", "region", "delete_messages"],
          "additionalProperties": false,
          "properties": {
            "queue_url": {
              "title": "Queue URL",
              "description": "URL of the SQS Queue",
              "type": "string",
              "examples": [
                "https://sqs.eu-west-1.amazonaws.com/1234567890/my-example-queue"
              ],
              "order": 0
            },
            "region": {
              "title": "AWS Region",
              "description": "AWS Region of the SQS Queue",
              "type": "string",
              "enum": [
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "order": 1
            },
            "delete_messages": {
              "title": "Delete Messages After Read",
              "description": "If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail. ",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "max_batch_size": {
              "title": "Max Batch Size",
              "description": "Max amount of messages to get in one batch (10 max)",
              "type": "integer",
              "examples": ["5"],
              "order": 3
            },
            "max_wait_time": {
              "title": "Max Wait Time",
              "description": "Max amount of time in seconds to wait for messages in a single poll (20 max)",
              "type": "integer",
              "examples": ["5"],
              "order": 4
            },
            "attributes_to_return": {
              "title": "Message Attributes To Return",
              "description": "Comma separated list of Mesage Attribute names to return",
              "type": "string",
              "examples": ["attr1,attr2"],
              "order": 5
            },
            "visibility_timeout": {
              "title": "Message Visibility Timeout",
              "description": "Modify the Visibility Timeout of the individual message from the Queue's default (seconds).",
              "type": "integer",
              "examples": ["15"],
              "order": 6
            },
            "access_key": {
              "title": "AWS IAM Access Key ID",
              "description": "The Access Key ID of the AWS IAM Role to use for pulling messages",
              "type": "string",
              "examples": ["xxxxxHRNxxx3TBxxxxxx"],
              "airbyte_secret": true,
              "order": 7
            },
            "secret_key": {
              "title": "AWS IAM Secret Key",
              "description": "The Secret Key of the AWS IAM Role to use for pulling messages",
              "type": "string",
              "examples": ["hu+qE5exxxxT6o/ZrKsxxxxxxBhxxXLexxxxxVKz"],
              "airbyte_secret": true,
              "order": 8
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "fa9f58c6-2d03-4237-aaa4-07d75e0c1396",
      "name": "Amplitude",
      "dockerRepository": "airbyte/source-amplitude",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/amplitude",
      "icon": "amplitude.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/amplitude",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Amplitude Spec",
          "type": "object",
          "required": ["api_key", "secret_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "data_region": {
              "type": "string",
              "title": "Data region",
              "description": "Amplitude data region server",
              "enum": ["Standard Server", "EU Residency Server"],
              "default": "Standard Server"
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Amplitude API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/amplitude#setup-guide\">setup guide</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "Amplitude Secret Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/amplitude#setup-guide\">setup guide</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Replication Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-01-25T00:00:00Z"],
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.amplitude.com"]
      }
    },
    {
      "sourceDefinitionId": "47f17145-fe20-4ef5-a548-e29b048adf84",
      "name": "Apify Dataset",
      "dockerRepository": "airbyte/source-apify-dataset",
      "dockerImageTag": "0.1.11",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/apify-dataset",
      "icon": "apify.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/apify-dataset",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Apify Dataset Spec",
          "type": "object",
          "required": ["datasetId"],
          "additionalProperties": false,
          "properties": {
            "datasetId": {
              "type": "string",
              "title": "Dataset ID",
              "description": "ID of the dataset you would like to load to Airbyte."
            },
            "clean": {
              "type": "boolean",
              "title": "Clean",
              "description": "If set to true, only clean items will be downloaded from the dataset. See description of what clean means in <a href=\"https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\">Apify API docs</a>. If not sure, set clean to false."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b4375641-e270-41d3-9c20-4f9cecad87a8",
      "name": "Appfollow",
      "dockerRepository": "airbyte/source-appfollow",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/appfollow",
      "icon": "appfollow.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/appfollow",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Appfollow Spec",
          "type": "object",
          "required": ["ext_id", "country", "cid", "api_secret"],
          "additionalProperties": true,
          "properties": {
            "ext_id": {
              "type": "string",
              "title": "app external id",
              "description": "for App Store — this is 9-10 digits identification number; for Google Play — this is bundle name;"
            },
            "cid": {
              "type": "string",
              "title": "client id",
              "description": "client id provided by Appfollow"
            },
            "api_secret": {
              "type": "string",
              "title": "api secret",
              "description": "api secret provided by Appfollow",
              "airbyte_secret": true
            },
            "country": {
              "type": "string",
              "title": "country",
              "description": "getting data by Country"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "16447954-e6a8-4593-b140-43dea13bc457",
      "name": "AppsFlyer",
      "dockerRepository": "airbyte/source-appsflyer",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/appsflyer",
      "icon": "appsflyer.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Appsflyer Spec",
          "type": "object",
          "required": ["app_id", "api_token", "start_date"],
          "additionalProperties": false,
          "properties": {
            "app_id": {
              "type": "string",
              "description": "App identifier as found in AppsFlyer."
            },
            "api_token": {
              "type": "string",
              "description": "Pull API token for authentication. If you change the account admin, the token changes, and you must update scripts with the new token. <a href=\"https://support.appsflyer.com/hc/en-us/articles/360004562377\">Get the API token in the Dashboard</a>.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "description": "The default value to use if no bookmark exists for an endpoint. Raw Reports historical lookback is limited to 90 days.",
              "examples": ["2021-11-16", "2021-11-16 15:00:00"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}( [0-9]{2}:[0-9]{2}:[0-9]{2})?$"
            },
            "timezone": {
              "type": "string",
              "description": "Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.",
              "default": "UTC",
              "examples": ["US/Pacific", "UTC"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2af123bf-0aaf-4e0d-9784-cb497f23741a",
      "name": "Appstore",
      "dockerRepository": "airbyte/source-appstore-singer",
      "dockerImageTag": "0.2.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/appstore",
      "icon": "appstore.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/appstore",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Appstore Singer Spec",
          "type": "object",
          "required": [
            "key_id",
            "private_key",
            "issuer_id",
            "vendor",
            "start_date"
          ],
          "additionalProperties": false,
          "properties": {
            "key_id": {
              "type": "string",
              "title": "Key ID",
              "description": "Appstore Key ID. See the <a href=\"https://docs.airbyte.com/integrations/sources/appstore\">docs</a> for more information on how to obtain this key."
            },
            "private_key": {
              "type": "string",
              "title": "Private Key",
              "description": "Appstore Private Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/appstore\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true,
              "multiline": true
            },
            "issuer_id": {
              "type": "string",
              "title": "Issuer ID",
              "description": "Appstore Issuer ID. See the <a href=\"https://docs.airbyte.com/integrations/sources/appstore\">docs</a> for more information on how to obtain this ID."
            },
            "vendor": {
              "type": "string",
              "title": "Vendor ID",
              "description": "Appstore Vendor ID. See the <a href=\"https://docs.airbyte.com/integrations/sources/appstore\">docs</a> for more information on how to obtain this ID."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d0243522-dccf-4978-8ba0-37ed47a0bdbf",
      "name": "Asana",
      "dockerRepository": "airbyte/source-asana",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/asana",
      "icon": "asana.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Asana Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Github",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate with Personal Access Token",
                  "required": ["personal_access_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "title": "Credentials title",
                      "description": "PAT Credentials",
                      "const": "PAT Credentials"
                    },
                    "personal_access_token": {
                      "type": "string",
                      "title": "Personal Access Token",
                      "description": "Asana Personal Access Token (generate yours <a href=\"https://app.asana.com/0/developer-console\">here</a>).",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Authenticate via Asana (Oauth)",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "title": "Credentials title",
                      "description": "OAuth Credentials",
                      "const": "OAuth Credentials"
                    },
                    "client_id": {
                      "type": "string",
                      "title": "",
                      "description": "",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "",
                      "description": "",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "",
                      "description": "",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "1"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta"
    },
    {
      "sourceDefinitionId": "4e8c9fa0-3634-499b-b948-11581b5c3efa",
      "name": "Ashby",
      "dockerRepository": "airbyte/source-ashby",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/ashby",
      "icon": "ashby.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://developers.ashbyhq.com/reference/introduction",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Ashby Spec",
          "type": "object",
          "required": ["api_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Ashby API key",
              "description": "The Ashby API Key, see <a href=\\\"https://developers.ashbyhq.com/reference/authentication\\\">doc</a> here.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6c504e48-14aa-4221-9a72-19cf5ff1ae78",
      "name": "Auth0",
      "dockerRepository": "airbyte/source-auth0",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/auth0",
      "icon": "auth0.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://auth0.com/docs/api/management/v2/",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Auth0 Management API Spec",
          "type": "object",
          "required": ["base_url", "credentials"],
          "additionalProperties": true,
          "properties": {
            "base_url": {
              "type": "string",
              "title": "Base URL",
              "examples": ["https://dev-yourOrg.us.auth0.com/"],
              "description": "The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`"
            },
            "credentials": {
              "title": "Authentication Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2 Confidential Application",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "audience"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "title": "Authentication Method",
                      "const": "oauth2_confidential_application",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "description": "Your application's Client ID. You can find this value on the <a href=\"https://manage.auth0.com/#/applications\">application's settings tab</a> after you login the admin portal.",
                      "type": "string",
                      "examples": ["Client_ID"]
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "description": "Your application's Client Secret. You can find this value on the <a href=\"https://manage.auth0.com/#/applications\">application's settings tab</a> after you login the admin portal.",
                      "type": "string",
                      "examples": ["Client_Secret"],
                      "airbyte_secret": true
                    },
                    "audience": {
                      "title": "Audience",
                      "description": "The audience for the token, which is your API. You can find this in the Identifier field on your  <a href=\"https://manage.auth0.com/#/apis\">API's settings tab</a>",
                      "type": "string",
                      "examples": ["https://dev-yourOrg.us.auth0.com/api/v2/"]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "OAuth2 Access Token",
                  "required": ["access_token", "auth_type"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "title": "Authentication Method",
                      "const": "oauth2_access_token",
                      "order": 0
                    },
                    "access_token": {
                      "title": "OAuth2 Access Token",
                      "description": "Also called <a href=\"https://auth0.com/docs/secure/tokens/access-tokens/get-management-api-access-tokens-for-testing\">API Access Token </a> The access token used to call the Auth0 Management API Token. It's a JWT that contains specific grant permissions knowns as scopes.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "798ae795-5189-42b6-b64e-3cb91db93338",
      "name": "Azure Table Storage",
      "dockerRepository": "airbyte/source-azure-table",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/azure-table",
      "icon": "azureblobstorage.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Azure Data Table Spec",
          "type": "object",
          "required": ["storage_account_name", "storage_access_key"],
          "properties": {
            "storage_account_name": {
              "title": "Account Name",
              "type": "string",
              "description": "The name of your storage account.",
              "order": 0,
              "airbyte_secret": false
            },
            "storage_access_key": {
              "title": "Access Key",
              "type": "string",
              "description": "Azure Table Storage Access Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/azure-table\">docs</a> for more information on how to obtain this key.",
              "order": 1,
              "airbyte_secret": true
            },
            "storage_endpoint_suffix": {
              "title": "Endpoint Suffix",
              "type": "string",
              "description": "Azure Table Storage service account URL suffix. See the <a href=\"https://docs.airbyte.com/integrations/sources/azure-table\">docs</a> for more information on how to obtain endpoint suffix",
              "order": 2,
              "default": "core.windows.net",
              "examples": ["core.windows.net", "core.chinacloudapi.cn"],
              "airbyte_secret": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "971c3e1e-78a5-411e-ad56-c4052b50876b",
      "name": "Babelforce",
      "dockerRepository": "airbyte/source-babelforce",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/babelforce",
      "icon": "babelforce.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Babelforce Spec",
          "type": "object",
          "required": ["region", "access_key_id", "access_token"],
          "additionalProperties": false,
          "properties": {
            "region": {
              "type": "string",
              "title": "Region",
              "default": "services",
              "description": "Babelforce region",
              "enum": ["services", "us-east", "ap-southeast"],
              "order": 1
            },
            "access_key_id": {
              "type": "string",
              "title": "Access Key ID",
              "description": "The Babelforce access key ID",
              "airbyte_secret": true,
              "order": 2
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The Babelforce access token",
              "airbyte_secret": true,
              "order": 3
            },
            "date_created_from": {
              "type": "integer",
              "title": "Date Created from",
              "description": "Timestamp in Unix the replication from Babelforce API will start from. For example 1651363200 which corresponds to 2022-05-01 00:00:00.",
              "examples": [1651363200],
              "order": 4
            },
            "date_created_to": {
              "type": "integer",
              "title": "Date Created to",
              "description": "Timestamp in Unix the replication from Babelforce will be up to. For example 1651363200 which corresponds to 2022-05-01 00:00:00.",
              "examples": [1651363200],
              "order": 5
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "90916976-a132-4ce9-8bce-82a03dd58788",
      "name": "BambooHR",
      "dockerRepository": "airbyte/source-bamboo-hr",
      "dockerImageTag": "0.2.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/bamboo-hr",
      "icon": "bamboohr.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/bamboo-hr",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Bamboo HR Spec",
          "type": "object",
          "required": ["subdomain", "api_key"],
          "additionalProperties": true,
          "properties": {
            "subdomain": {
              "type": "string",
              "description": "Sub Domain of bamboo hr"
            },
            "api_key": {
              "type": "string",
              "description": "Api key of bamboo hr",
              "airbyte_secret": true
            },
            "custom_reports_fields": {
              "type": "string",
              "default": "",
              "description": "Comma-separated list of fields to include in custom reports."
            },
            "custom_reports_include_default_fields": {
              "type": "boolean",
              "default": true,
              "description": "If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "59c5501b-9f95-411e-9269-7143c939adbd",
      "name": "BigCommerce",
      "dockerRepository": "airbyte/source-bigcommerce",
      "dockerImageTag": "0.1.10",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/bigcommerce",
      "icon": "bigcommerce.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/bigcommerce",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "BigCommerce Source CDK Specifications",
          "type": "object",
          "required": ["start_date", "store_hash", "access_token"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date you would like to replicate data. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "store_hash": {
              "type": "string",
              "title": "Store Hash",
              "description": "The hash code of the store. For https://api.bigcommerce.com/stores/HASH_CODE/v3/, The store's hash code is 'HASH_CODE'."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "Access Token for making authenticated requests.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "bfd1ddf8-ae8a-4620-b1d7-55597d2ba08c",
      "name": "BigQuery",
      "dockerRepository": "airbyte/source-bigquery",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/bigquery",
      "icon": "bigquery.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/bigquery",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "BigQuery Source Spec",
          "type": "object",
          "required": ["project_id", "credentials_json"],
          "properties": {
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target BigQuery dataset.",
              "title": "Project ID"
            },
            "dataset_id": {
              "type": "string",
              "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
              "title": "Default Dataset ID"
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of your Service Account Key JSON file. See the <a href=\"https://docs.airbyte.com/integrations/sources/bigquery#setup-the-bigquery-source-in-airbyte\">docs</a> for more information on how to obtain this key.",
              "title": "Credentials JSON",
              "airbyte_secret": true
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": true,
        "supportsDBT": true,
        "supported_destination_sync_modes": [],
        "supported_sync_modes": ["overwrite", "append", "append_dedup"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "47f25999-dd5e-4636-8c39-e7cea2453331",
      "name": "Bing Ads",
      "dockerRepository": "airbyte/source-bing-ads",
      "dockerImageTag": "0.1.18",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/bing-ads",
      "icon": "bingads.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/bing-ads",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Bing Ads Spec",
          "type": "object",
          "required": [
            "developer_token",
            "client_id",
            "refresh_token",
            "reports_start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "auth_method": {
              "type": "string",
              "const": "oauth2.0"
            },
            "tenant_id": {
              "type": "string",
              "title": "Tenant ID",
              "description": "The Tenant ID of your Microsoft Advertising developer application. Set this to \"common\" unless you know you need a different value.",
              "airbyte_secret": true,
              "default": "common",
              "order": 0
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Microsoft Advertising developer application.",
              "airbyte_secret": true,
              "order": 1
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Microsoft Advertising developer application.",
              "default": "",
              "airbyte_secret": true,
              "order": 2
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "Refresh Token to renew the expired Access Token.",
              "airbyte_secret": true,
              "order": 3
            },
            "developer_token": {
              "type": "string",
              "title": "Developer Token",
              "description": "Developer token associated with user. See more info <a href=\"https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token\"> in the docs</a>.",
              "airbyte_secret": true,
              "order": 4
            },
            "reports_start_date": {
              "type": "string",
              "title": "Reports replication start date",
              "format": "date",
              "default": "2020-01-01",
              "description": "The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format.",
              "order": 5
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tenant_id": {
                  "type": "string",
                  "path_in_connector_config": ["tenant_id"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": [
          "bingads.microsoft.com",
          "login.microsoftonline.com",
          "login.live.com",
          "login.windows-ppe.net",
          "ads.microsoft.com",
          "api.ads.microsoft.com"
        ]
      }
    },
    {
      "sourceDefinitionId": "63cea06f-1c75-458d-88fe-ad48c7cb27fd",
      "name": "Braintree",
      "dockerRepository": "airbyte/source-braintree",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/braintree",
      "icon": "braintree.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/braintree",
        "connectionSpecification": {
          "title": "Braintree Spec",
          "type": "object",
          "properties": {
            "merchant_id": {
              "title": "Merchant ID",
              "description": "The unique identifier for your entire gateway account. See the <a href=\"https://docs.airbyte.com/integrations/sources/braintree\">docs</a> for more information on how to obtain this ID.",
              "name": "Merchant ID",
              "type": "string"
            },
            "public_key": {
              "title": "Public Key",
              "description": "Braintree Public Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/braintree\">docs</a> for more information on how to obtain this key.",
              "name": "Public Key",
              "type": "string"
            },
            "private_key": {
              "title": "Private Key",
              "description": "Braintree Private Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/braintree\">docs</a> for more information on how to obtain this key.",
              "name": "Private Key",
              "airbyte_secret": true,
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "name": "Start Date",
              "examples": ["2020", "2020-12-30", "2020-11-22 20:20:05"],
              "type": "string",
              "format": "date-time"
            },
            "environment": {
              "title": "Environment",
              "description": "Environment specifies where the data will come from.",
              "name": "Environment",
              "examples": ["sandbox", "production", "qa", "development"],
              "enum": ["Development", "Sandbox", "Qa", "Production"],
              "type": "string"
            }
          },
          "required": [
            "merchant_id",
            "public_key",
            "private_key",
            "environment"
          ]
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7c37685e-8512-4901-addf-9afbef6c0de9",
      "name": "Breezometer",
      "dockerRepository": "airbyte/source-breezometer",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/breezometer",
      "icon": "breezometer.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/breezometer",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Breezometer Spec",
          "type": "object",
          "required": ["api_key", "latitude", "longitude"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "tittle": "API Key",
              "description": "Your API Access Key. See <a href=\"https://docs.breezometer.com/api-documentation/introduction/#authentication/\">here</a>.",
              "airbyte_secret": true
            },
            "latitude": {
              "type": "string",
              "tittle": "Latitude",
              "description": "Latitude of the monitored location.",
              "examples": ["54.675003"]
            },
            "longitude": {
              "type": "string",
              "tittle": "Longitude",
              "description": "Longitude of the monitored location.",
              "examples": ["-113.550282"]
            },
            "days_to_forecast": {
              "type": "integer",
              "tittle": "Days to Forecast",
              "description": "Number of days to forecast. Minimum 1, maximum 3. Valid for Polen and Weather Forecast streams.",
              "examples": [3]
            },
            "hours_to_forecast": {
              "type": "integer",
              "tittle": "Hours to Forecast",
              "description": "Number of hours to forecast. Minimum 1, maximum 96. Valid for Air Quality Forecast stream.",
              "examples": [30]
            },
            "historic_hours": {
              "type": "integer",
              "tittle": "Historic Hours",
              "description": "Number of hours retireve from Air Quality History stream. Minimum 1, maximum 720.",
              "examples": [30]
            },
            "radius": {
              "type": "integer",
              "tittle": "Radius",
              "description": "Desired radius from the location provided. Minimum 5, maximum 100. Valid for Wildfires streams.",
              "examples": [50]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "dc98a6ad-2dd1-47b6-9529-2ec35820f9c6",
      "name": "CallRail",
      "dockerRepository": "airbyte/source-callrail",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/callrail",
      "icon": "callrail.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/callrail",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Call Rail Spec",
          "type": "object",
          "required": ["api_key", "account_id", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API access key",
              "airbyte_secret": true
            },
            "account_id": {
              "type": "string",
              "description": "Account ID",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "description": "Start getting data from that date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["%Y-%m-%d"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "bb1a6d31-6879-4819-a2bd-3eed299ea8e2",
      "name": "Cart.com",
      "dockerRepository": "airbyte/source-cart",
      "dockerImageTag": "0.2.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/cart",
      "icon": "cart.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/cart",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Cart.com Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "description": "",
              "type": "object",
              "oneOf": [
                {
                  "title": "Central API Router",
                  "type": "object",
                  "order": 0,
                  "required": [
                    "auth_type",
                    "user_name",
                    "user_secret",
                    "site_id"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "CENTRAL_API_ROUTER",
                      "order": 0
                    },
                    "user_name": {
                      "type": "string",
                      "title": "User Name",
                      "description": "Enter your application's User Name",
                      "airbyte_secret": true,
                      "order": 1
                    },
                    "user_secret": {
                      "type": "string",
                      "title": "User Secret",
                      "description": "Enter your application's User Secret",
                      "airbyte_secret": true,
                      "order": 2
                    },
                    "site_id": {
                      "type": "string",
                      "title": "Site ID",
                      "description": "You can determine a site provisioning site Id by hitting https://site.com/store/sitemonitor.aspx and reading the response param PSID",
                      "airbyte_secret": true,
                      "order": 3
                    }
                  }
                },
                {
                  "title": "Single Store Access Token",
                  "type": "object",
                  "order": 1,
                  "required": ["auth_type", "access_token", "store_name"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "SINGLE_STORE_ACCESS_TOKEN",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "airbyte_secret": true,
                      "order": 1,
                      "description": "Access Token for making authenticated requests."
                    },
                    "store_name": {
                      "type": "string",
                      "title": "Store Name",
                      "order": 2,
                      "description": "The name of Cart.com Online Store. All API URLs start with https://[mystorename.com]/api/v1/, where [mystorename.com] is the domain name of your store."
                    }
                  }
                }
              ]
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "686473f1-76d9-4994-9cc7-9b13da46147c",
      "name": "Chargebee",
      "dockerRepository": "airbyte/source-chargebee",
      "dockerImageTag": "0.2.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/chargebee",
      "icon": "chargebee.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://apidocs.chargebee.com/docs/api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Chargebee Spec",
          "type": "object",
          "required": ["site", "site_api_key", "start_date", "product_catalog"],
          "additionalProperties": true,
          "properties": {
            "site_api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Chargebee API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/chargebee\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true,
              "order": 0
            },
            "site": {
              "type": "string",
              "title": "Site",
              "description": "The site prefix for your Chargebee instance.",
              "examples": ["airbyte-test"],
              "order": 1
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date",
              "description": "UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-25T00:00:00Z"],
              "order": 2
            },
            "product_catalog": {
              "type": "string",
              "title": "Product Catalog",
              "description": "Product Catalog version of your Chargebee site. Instructions on how to find your version you may find <a href=\"https://apidocs.chargebee.com/docs/api?prod_cat_ver=2\">here</a> under `API Version` section.",
              "enum": ["1.0", "2.0"],
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.chargebee.com"]
      }
    },
    {
      "sourceDefinitionId": "9b2d3607-7222-4709-9fa2-c2abdebbdd88",
      "name": "Chargify",
      "dockerRepository": "airbyte/source-chargify",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/chargify",
      "icon": "chargify.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/chargify",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Chargify Spec",
          "type": "object",
          "required": ["api_key", "domain"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "Chargify API Key.",
              "airbyte_secret": true
            },
            "domain": {
              "type": "string",
              "description": "Chargify domain. Normally this domain follows the following format companyname.chargify.com"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b6604cbd-1b12-4c08-8767-e140d0fb0877",
      "name": "Chartmogul",
      "dockerRepository": "airbyte/source-chartmogul",
      "dockerImageTag": "0.2.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/chartmogul",
      "icon": "chartmogul.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/chartmogul",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Chartmogul Spec",
          "type": "object",
          "required": ["api_key", "start_date", "interval"],
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API key",
              "description": "Your Chartmogul API key. See <a href=\"https://help.chartmogul.com/hc/en-us/articles/4407796325906-Creating-and-Managing-API-keys#creating-an-api-key\"> the docs </a> for info on how to obtain this.",
              "airbyte_secret": true,
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 1,
              "format": "date-time"
            },
            "interval": {
              "type": "string",
              "title": "Interval",
              "description": "Some APIs such as <a href=\"https://dev.chartmogul.com/reference/endpoint-overview-metrics-api\">Metrics</a> require intervals to cluster data.",
              "enum": ["day", "week", "month", "quarter"],
              "default": "month",
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.chartmogul.com"]
      }
    },
    {
      "sourceDefinitionId": "bad83517-5e54-4a3d-9b53-63e85fbd4d7c",
      "name": "ClickHouse",
      "dockerRepository": "airbyte/source-clickhouse",
      "dockerImageTag": "0.1.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/clickhouse",
      "icon": "clickhouse.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/clickhouse",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ClickHouse Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "description": "The host endpoint of the Clickhouse cluster.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "The port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8123,
              "examples": ["8123"],
              "order": 1
            },
            "database": {
              "description": "The name of the database.",
              "title": "Database",
              "type": "string",
              "examples": ["default"],
              "order": 2
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string",
              "order": 3
            },
            "password": {
              "description": "The password associated with this username.",
              "title": "Password",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
              "title": "JDBC URL Parameters (Advanced)",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": true,
              "order": 6
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}", "${tunnel_method.tunnel_host}"]
      }
    },
    {
      "sourceDefinitionId": "311a7a27-3fb5-4f7e-8265-5e4afe258b66",
      "name": "ClickUp",
      "dockerRepository": "airbyte/source-clickup-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/click-up",
      "icon": "clickup.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ClickUp Api Spec",
          "type": "object",
          "required": ["api_token"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Every ClickUp API call required authentication. This field is your personal API token. See <a href=\"https://clickup.com/api/developer-portal/authentication/#personal-token\">here</a>.",
              "airbyte_secret": true
            },
            "team_id": {
              "type": "string",
              "description": "The ID of your team in ClickUp. Retrieve it from the `/team` of the ClickUp API. See <a href=\"https://clickup.com/api/clickupreference/operation/GetAuthorizedTeams/\">here</a>."
            },
            "space_id": {
              "type": "string",
              "description": "The ID of your space in your workspace. Retrieve it from the `/team/{team_id}/space` of the ClickUp API. See <a href=\"https://clickup.com/api/clickupreference/operation/GetSpaces/\">here</a>."
            },
            "folder_id": {
              "type": "string",
              "description": "The ID of your folder in your space. Retrieve it from the `/space/{space_id}/folder` of the ClickUp API. See <a href=\"https://clickup.com/api/clickupreference/operation/GetFolders/\">here</a>."
            },
            "list_id": {
              "type": "string",
              "description": "The ID of your list in your folder. Retrieve it from the `/folder/{folder_id}/list` of the ClickUp API. See <a href=\"https://clickup.com/api/clickupreference/operation/GetLists/\">here</a>."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "dfffecb7-9a13-43e9-acdc-b92af7997ca9",
      "name": "Close.com",
      "dockerRepository": "airbyte/source-close-com",
      "dockerImageTag": "0.2.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/close-com",
      "icon": "close.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/close-com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Close.com Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "Close.com API key (usually starts with 'api_'; find yours <a href=\"https://app.close.com/settings/api/\">here</a>).",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "description": "The start date to sync data. Leave blank for full sync. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "default": "2021-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.close.com"]
      }
    },
    {
      "sourceDefinitionId": "9cdd4183-d0ba-40c3-aad3-6f46d4103974",
      "name": "CoinGecko Coins",
      "dockerRepository": "airbyte/source-coingecko-coins",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/coingecko-coins",
      "icon": "coingeckocoins.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "CoinGecko Coins Spec",
          "type": "object",
          "required": ["coin_id", "vs_currency", "days", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key (for pro users)",
              "airbyte_secret": true,
              "order": 0
            },
            "coin_id": {
              "type": "string",
              "description": "CoinGecko coin ID (e.g. bitcoin). Can be retrieved from the\n`/coins/list` endpoint.\n",
              "order": 1
            },
            "vs_currency": {
              "type": "string",
              "description": "The target currency of market data (e.g. usd, eur, jpy, etc.)\n",
              "order": 2
            },
            "days": {
              "type": "string",
              "description": "The number of days of data for market chart.\n",
              "enum": ["1", "7", "14", "30", "90", "180", "365", "max"],
              "default": "30",
              "order": 3
            },
            "start_date": {
              "type": "string",
              "description": "The start date for the historical data stream in dd-mm-yyyy format.\n",
              "format": "date",
              "pattern": "^[0-9]{2}-[0-9]{2}-[0-9]{4}$",
              "order": 4
            },
            "end_date": {
              "type": "string",
              "description": "The end date for the historical data stream in dd-mm-yyyy format.\n",
              "format": "date",
              "pattern": "^[0-9]{2}-[0-9]{2}-[0-9]{4}$",
              "order": 5
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9fa5862c-da7c-11eb-8d19-0242ac130003",
      "name": "Cockroachdb",
      "dockerRepository": "airbyte/source-cockroachdb",
      "dockerImageTag": "0.1.20",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/cockroachdb",
      "icon": "cockroachdb.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/cockroachdb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Cockroach Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
              "title": "JDBC URL Parameters (Advanced)",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "Connect using SSL",
              "description": "Encrypt client/server communications for increased security.",
              "type": "boolean",
              "default": false,
              "order": 6
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}"]
      }
    },
    {
      "sourceDefinitionId": "27f910fd-f832-4b2e-bcfd-6ab342e434d8",
      "name": "Coda",
      "dockerRepository": "airbyte/source-coda",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/coda",
      "icon": "coda.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/coda",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Required attributes for hitting apis",
          "type": "object",
          "required": ["auth_token"],
          "additionalProperties": true,
          "properties": {
            "auth_token": {
              "title": "Authentication token",
              "type": "string",
              "description": "Bearer token",
              "airbyte_secret": true,
              "order": 0
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "919984ef-53a2-479b-8ffe-9c1ddb9fc3f3",
      "name": "Coin API",
      "dockerRepository": "airbyte/source-coin-api",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/coin-api",
      "icon": "coinapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/coin-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Coin API Spec",
          "type": "object",
          "required": [
            "api_key",
            "environment",
            "symbol_id",
            "period",
            "start_date"
          ],
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "environment": {
              "type": "string",
              "description": "The environment to use. Either sandbox or production.\n",
              "enum": ["sandbox", "production"],
              "default": "sandbox",
              "order": 1
            },
            "symbol_id": {
              "type": "string",
              "description": "The symbol ID to use. See the documentation for a list.\nhttps://docs.coinapi.io/#list-all-symbols-get\n",
              "order": 2
            },
            "period": {
              "type": "string",
              "description": "The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get",
              "examples": ["5SEC", "2MTH"]
            },
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "description": "The start date in ISO 8601 format.",
              "examples": ["2019-01-01T00:00:00"]
            },
            "end_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "description": "The end date in ISO 8601 format. If not supplied, data will be returned\nfrom the start date to the current time, or when the count of result\nelements reaches its limit.\n",
              "examples": ["2019-01-01T00:00:00"]
            },
            "limit": {
              "type": "integer",
              "description": "The maximum number of elements to return. If not supplied, the default\nis 100. For numbers larger than 100, each 100 items is counted as one\nrequest for pricing purposes. Maximum value is 100000.\n",
              "minimum": 1,
              "maximum": 100000,
              "default": 100
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "239463f5-64bb-4d88-b4bd-18ce673fd572",
      "name": "CoinMarketCap",
      "dockerRepository": "airbyte/source-coinmarketcap",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/coinmarketcap",
      "icon": "coinmarketcap.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/coinmarketcap",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Coinmarketcap Spec",
          "type": "object",
          "required": ["api_key", "data_type"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://coinmarketcap.com/api/documentation/v1/#section/Authentication\">here</a>. The token is case sensitive.",
              "airbyte_secret": true
            },
            "data_type": {
              "title": "Data type",
              "type": "string",
              "enum": ["latest", "historical"],
              "description": "/latest: Latest market ticker quotes and averages for cryptocurrencies and exchanges. /historical: Intervals of historic market data like OHLCV data or data for use in charting libraries. See <a href=\"https://coinmarketcap.com/api/documentation/v1/#section/Endpoint-Overview\">here</a>."
            },
            "symbols": {
              "title": "Symbol",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Cryptocurrency symbols. (only used for quotes stream)",
              "minItems": 1,
              "examples": ["AVAX", "BTC"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "008b2e26-11a3-11ec-82a8-0242ac130003",
      "name": "Commercetools",
      "dockerRepository": "airbyte/source-commercetools",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/commercetools",
      "icon": "commercetools.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/commercetools",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Commercetools Source CDK Specifications",
          "type": "object",
          "required": [
            "region",
            "start_date",
            "host",
            "project_key",
            "client_id",
            "client_secret"
          ],
          "additionalProperties": false,
          "properties": {
            "region": {
              "type": "string",
              "description": "The region of the platform.",
              "examples": ["us-central1", "australia-southeast1"]
            },
            "host": {
              "type": "string",
              "enum": ["gcp", "aws"],
              "description": "The cloud provider your shop is hosted. See: https://docs.commercetools.com/api/authorization"
            },
            "start_date": {
              "type": "string",
              "description": "The date you would like to replicate data. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "project_key": {
              "type": "string",
              "description": "The project key"
            },
            "client_id": {
              "type": "string",
              "description": "Id of API Client.",
              "airbyte_secret": true
            },
            "client_secret": {
              "type": "string",
              "description": "The password of secret of API Client.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "4fd7565c-8b99-439b-80d0-2d965e1d958c",
      "name": "ConfigCat",
      "dockerRepository": "airbyte/source-configcat",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/configcat",
      "icon": "configcat.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/configcat",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Configcat Spec",
          "type": "object",
          "required": ["username", "password"],
          "additionalProperties": true,
          "properties": {
            "username": {
              "title": "Username",
              "type": "string",
              "description": "Basic auth user name. See <a href=\"https://api.configcat.com/docs/#section/Authentication\">here</a>."
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "Basic auth password. See <a href=\"https://api.configcat.com/docs/#section/Authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "cf40a7f8-71f8-45ce-a7fa-fca053e4028c",
      "name": "Confluence",
      "dockerRepository": "airbyte/source-confluence",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/confluence",
      "icon": "confluence.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Confluence Spec",
          "type": "object",
          "required": ["api_token", "domain_name", "email"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "title": "API Token",
              "type": "string",
              "description": "Please follow the Jira confluence for generating an API token: <a href=\"https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/\">generating an API token</a>.",
              "airbyte_secret": true
            },
            "domain_name": {
              "title": "Domain name",
              "type": "string",
              "description": "Your Confluence domain name",
              "examples": ["example.atlassian.net"]
            },
            "email": {
              "title": "Email",
              "type": "string",
              "description": "Your Confluence login email",
              "examples": ["abc@example.com"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${subdomain}.atlassian.net"]
      }
    },
    {
      "sourceDefinitionId": "be9ee02f-6efe-4970-979b-95f797a37188",
      "name": "ConvertKit",
      "dockerRepository": "airbyte/source-convertkit",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/convertkit",
      "icon": "convertkit.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/convertkit",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Convertkit Spec",
          "type": "object",
          "required": ["api_secret"],
          "additionalProperties": true,
          "properties": {
            "api_secret": {
              "type": "string",
              "description": "API Secret",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f39208dc-7e1c-48b8-919b-5006360cc27f",
      "name": "Commcare",
      "dockerRepository": "airbyte/source-commcare",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/commcare",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Commcare Source Spec",
          "type": "object",
          "required": ["api_key", "app_id", "start_date"],
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Commcare API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "project_space": {
              "type": "string",
              "title": "Project Space",
              "description": "Project Space for commcare",
              "order": 1
            },
            "app_id": {
              "type": "string",
              "title": "Application ID",
              "description": "The Application ID we are interested in",
              "airbyte_secret": true,
              "order": 2
            },
            "start_date": {
              "type": "string",
              "title": "Start date for extracting records",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "default": "2022-10-01T00:00:00Z",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Only records after this date will be replicated.",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "44f3002f-2df9-4f6d-b21c-02cd3b47d0dc",
      "name": "Copper",
      "dockerRepository": "airbyte/source-copper",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/copper",
      "icon": "copper.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/copper",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Copper Spec",
          "type": "object",
          "required": ["api_key", "user_email"],
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Copper API key",
              "airbyte_secret": true
            },
            "user_email": {
              "type": "string",
              "title": "User email",
              "description": "user email used to login in to Copper"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "c332628c-f55c-4017-8222-378cfafda9b2",
      "name": "Convex",
      "dockerRepository": "airbyte/source-convex",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/convex",
      "icon": "convex.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/convex",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Convex Source Spec",
          "type": "object",
          "required": ["deployment_url", "access_key"],
          "properties": {
            "deployment_url": {
              "type": "string",
              "title": "Deployment Url",
              "examples": [
                "https://murky-swan-635.convex.cloud",
                "https://cluttered-owl-337.convex.cloud"
              ]
            },
            "access_key": {
              "type": "string",
              "title": "Access Key",
              "description": "API access key used to retrieve data from Convex.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "0541b2cd-2367-4986-b5f1-b79ff55439e4",
      "name": "Courier",
      "dockerRepository": "airbyte/source-courier",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/courier",
      "icon": "courier.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/courier",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Courier Source Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "Courier API Key to retrieve your data.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e71aae8a-5143-11ed-bdc3-0242ac120002",
      "name": "Clockify",
      "dockerRepository": "airbyte/source-clockify",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/clockify",
      "icon": "clockify.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/clockify",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Clockify Spec",
          "type": "object",
          "required": ["workspace_id", "api_key"],
          "additionalProperties": true,
          "properties": {
            "workspace_id": {
              "title": "Workspace Id",
              "description": "WorkSpace Id",
              "type": "string"
            },
            "api_key": {
              "title": "API Key",
              "description": "You can get your api access_key <a href=\"https://app.clockify.me/user/settings\">here</a> This API is Case Sensitive.",
              "type": "string",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "c47d6804-8b98-449f-970a-5ddb5cb5d7aa",
      "name": "Customer.io",
      "dockerRepository": "farosai/airbyte-customer-io-source",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/customer-io",
      "icon": "customer-io.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.faros.ai",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Customer.io Spec",
          "type": "object",
          "required": ["app_api_key"],
          "additionalProperties": false,
          "properties": {
            "app_api_key": {
              "type": "string",
              "title": "Customer.io App API Key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "1cfc30c7-82db-43f4-9fd7-ac1b42312cda",
      "name": "Datadog",
      "dockerRepository": "airbyte/source-datadog",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/datadog",
      "icon": "datadog.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/datadog",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Datadog Source Spec",
          "type": "object",
          "required": ["api_key", "application_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "description": "Datadog API key",
              "type": "string",
              "airbyte_secret": true,
              "order": 1
            },
            "application_key": {
              "title": "Application Key",
              "description": "Datadog application key",
              "type": "string",
              "airbyte_secret": true,
              "order": 2
            },
            "query": {
              "title": "Query",
              "description": "The search query. This just applies to Incremental syncs. If empty, it'll collect all logs.",
              "type": "string",
              "order": 3
            },
            "max_records_per_request": {
              "type": "integer",
              "title": "Max records per requests",
              "default": 5000,
              "minimum": 1,
              "maximum": 5000,
              "description": "Maximum number of records to collect per request.",
              "order": 4
            },
            "start_date": {
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. This just applies to Incremental syncs.",
              "type": "string",
              "examples": ["2022-10-01T00:00:00Z"],
              "order": 5
            },
            "end_date": {
              "title": "End date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Data after this date will  not be replicated. An empty value will represent the current datetime for each  execution. This just applies to Incremental syncs.",
              "examples": ["2022-10-01T00:00:00Z"],
              "type": "string",
              "order": 6
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "8e1ae2d2-4790-44d3-9d83-75b3fc3940ff",
      "name": "Datascope",
      "dockerRepository": "airbyte/source-datascope",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/datascope",
      "icon": "datascope.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/datascope",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Datascope Spec",
          "type": "object",
          "required": ["api_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Start date for the data to be replicated",
              "examples": ["dd/mm/YYYY HH:MM"],
              "pattern": "^[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}$"
            },
            "api_key": {
              "title": "Authorization",
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "cc88c43f-6f53-4e8a-8c4d-b284baaf9635",
      "name": "Delighted",
      "dockerRepository": "airbyte/source-delighted",
      "dockerImageTag": "0.2.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/delighted",
      "icon": "delighted.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Delighted Spec",
          "type": "object",
          "required": ["since", "api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "Delighted API Key",
              "type": "string",
              "description": "A Delighted API key.",
              "airbyte_secret": true,
              "order": 0
            },
            "since": {
              "title": "Date Since",
              "type": "string",
              "description": "The date from which you'd like to replicate the data",
              "examples": ["2022-05-30T04:50:23Z", "2022-05-30 04:50:23"],
              "pattern": "^\\d{4}-\\d{2}-\\d{2}[T ]\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z?$",
              "order": 1,
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.delighted.com"]
      }
    },
    {
      "sourceDefinitionId": "0b5c867e-1b12-4d02-ab74-97b2184ff6d7",
      "name": "Dixa",
      "dockerRepository": "airbyte/source-dixa",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/dixa",
      "icon": "dixa.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/dixa",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Dixa Spec",
          "type": "object",
          "required": ["api_token", "start_date"],
          "additionalProperties": false,
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Dixa API token",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "description": "The connector pulls records updated from this date onwards.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            },
            "batch_size": {
              "type": "integer",
              "description": "Number of days to batch into one request. Max 31.",
              "pattern": "^[0-9]{1,2}$",
              "examples": [1, 31],
              "default": 31
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "72d405a3-56d8-499f-a571-667c03406e43",
      "name": "Dockerhub",
      "dockerRepository": "airbyte/source-dockerhub",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/dockerhub",
      "icon": "dockerhub.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/dockerhub",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Dockerhub Spec",
          "type": "object",
          "required": ["docker_username"],
          "additionalProperties": false,
          "properties": {
            "docker_username": {
              "type": "string",
              "description": "Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)",
              "pattern": "^[a-z0-9_\\-]+$",
              "examples": ["airbyte"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d99e9ace-8621-46c2-9144-76ae4751d64b",
      "name": "Dremio",
      "dockerRepository": "airbyte/source-dremio",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/dremio",
      "icon": "dremio.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/dremio",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Dremio Spec",
          "type": "object",
          "additionalProperties": true,
          "required": ["api_key", "base_url"],
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key that is generated when you authenticate to Dremio API",
              "airbyte_secret": true
            },
            "base_url": {
              "type": "string",
              "description": "URL of your Dremio instance",
              "default": "https://app.dremio.cloud"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "445831eb-78db-4b1f-8f1f-0d96ad8739e2",
      "name": "Drift",
      "dockerRepository": "airbyte/source-drift",
      "dockerImageTag": "0.2.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/drift",
      "icon": "drift.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/drift",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Drift Spec",
          "type": "object",
          "required": [],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "client_id",
                    "client_secret",
                    "access_token",
                    "refresh_token"
                  ],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your Drift developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your Drift developer application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Refresh Token to renew the expired Access Token.",
                      "default": "",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Access Token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "access_token",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Drift Access Token. See the <a href=\"https://docs.airbyte.com/integrations/sources/drift\">docs</a> for more information on how to generate this key.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["access_token"], ["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["driftapi.com"]
      }
    },
    {
      "sourceDefinitionId": "1356e1d9-977f-4057-ad4b-65f25329cf61",
      "name": "DV 360",
      "dockerRepository": "airbyte/source-dv-360",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/dv-360",
      "icon": "dv360.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Display & Video 360 Spec",
          "type": "object",
          "required": ["credentials", "partner_id", "start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "type": "object",
              "description": "Oauth2 credentials",
              "order": 0,
              "required": [
                "access_token",
                "refresh_token",
                "token_uri",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "Access token",
                  "airbyte_secret": true
                },
                "refresh_token": {
                  "type": "string",
                  "description": "Refresh token",
                  "airbyte_secret": true
                },
                "token_uri": {
                  "type": "string",
                  "description": "Token URI",
                  "airbyte_secret": true
                },
                "client_id": {
                  "type": "string",
                  "description": "Client ID",
                  "airbyte_secret": true
                },
                "client_secret": {
                  "type": "string",
                  "description": "Client secret",
                  "airbyte_secret": true
                }
              }
            },
            "partner_id": {
              "type": "integer",
              "description": "Partner ID",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25. Any data before this date will not be replicated",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            },
            "end_date": {
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25. Any data after this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 3
            },
            "filters": {
              "type": "array",
              "description": "filters for the dimensions. each filter object had 2 keys: 'type' for the name of the dimension to be used as. and 'value' for the value of the filter",
              "default": [],
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "50401137-8871-4c5a-abb7-1f5fda35545a",
      "name": "DynamoDB",
      "dockerRepository": "airbyte/source-dynamodb",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/dynamodb",
      "icon": "dynamodb.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/dynamodb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Dynamodb Source Spec",
          "type": "object",
          "required": ["access_key_id", "secret_access_key"],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "title": "Dynamodb Endpoint",
              "type": "string",
              "default": "",
              "description": "the URL of the Dynamodb database",
              "examples": ["https://{aws_dynamo_db_url}.com"]
            },
            "region": {
              "title": "Dynamodb Region",
              "type": "string",
              "default": "",
              "description": "The region of the Dynamodb database",
              "enum": [
                "",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ]
            },
            "access_key_id": {
              "title": "Dynamodb Key Id",
              "type": "string",
              "description": "The access key id to access Dynamodb. Airbyte requires read permissions to the database",
              "airbyte_secret": true,
              "examples": ["A012345678910EXAMPLE"]
            },
            "secret_access_key": {
              "title": "Dynamodb Access Key",
              "type": "string",
              "description": "The corresponding secret to the access key id.",
              "airbyte_secret": true,
              "examples": ["a012345678910ABCDEFGH/AbCdEfGhEXAMPLEKEY"]
            },
            "reserved_attribute_names": {
              "title": "Reserved attribute names",
              "type": "string",
              "description": "Comma separated reserved attribute names present in your tables",
              "airbyte_secret": true,
              "examples": ["name, field_name, field-name"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d53f9084-fa6b-4a5a-976c-5b8392f4ad8a",
      "name": "E2E Testing",
      "dockerRepository": "airbyte/source-e2e-test",
      "dockerImageTag": "2.1.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/e2e-test",
      "icon": "airbyte.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/e2e-test",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "E2E Test Source Spec",
          "additionalProperties": true,
          "type": "object",
          "oneOf": [
            {
              "title": "Legacy Infinite Feed",
              "description": "This mode is used for Platform acceptance tests. The catalog has one \"data\" stream, which has one string field \"column1\". This mode will emit messages infinitely.",
              "required": ["type", "max_records"],
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "type": {
                  "type": "string",
                  "const": "INFINITE_FEED",
                  "default": "INFINITE_FEED"
                },
                "max_records": {
                  "title": "Max Records",
                  "description": "Number of records to emit. If not set, defaults to infinity.",
                  "type": "integer"
                },
                "message_interval": {
                  "title": "Message Interval",
                  "description": "Interval between messages in ms.",
                  "type": "integer"
                }
              }
            },
            {
              "title": "Legacy Exception After N",
              "description": "This mode is used for Platform acceptance tests. The catalog has one \"data\" stream, which has one string field \"column1\". This mode will throw an exception after N messages.",
              "required": ["type", "throw_after_n_records"],
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "type": {
                  "type": "string",
                  "const": "EXCEPTION_AFTER_N",
                  "default": "EXCEPTION_AFTER_N"
                },
                "throw_after_n_records": {
                  "title": "Throw After N Records",
                  "description": "Number of records to emit before throwing an exception. Min 1.",
                  "type": "integer",
                  "min": 1
                }
              }
            },
            {
              "title": "Continuous Feed",
              "type": "object",
              "required": ["type", "max_messages", "mock_catalog"],
              "additionalProperties": true,
              "properties": {
                "type": {
                  "type": "string",
                  "const": "CONTINUOUS_FEED",
                  "default": "CONTINUOUS_FEED",
                  "order": 10
                },
                "max_messages": {
                  "title": "Max Records",
                  "description": "Number of records to emit per stream. Min 1. Max 100 billion.",
                  "type": "integer",
                  "default": 100,
                  "min": 1,
                  "max": 100000000000,
                  "order": 20
                },
                "seed": {
                  "title": "Random Seed",
                  "description": "When the seed is unspecified, the current time millis will be used as the seed. Range: [0, 1000000].",
                  "type": "integer",
                  "default": 0,
                  "examples": [42],
                  "min": 0,
                  "max": 1000000,
                  "order": 30
                },
                "message_interval_ms": {
                  "title": "Message Interval (ms)",
                  "description": "Interval between messages in ms. Min 0 ms. Max 60000 ms (1 minute).",
                  "type": "integer",
                  "min": 0,
                  "max": 60000,
                  "default": 0,
                  "order": 40
                },
                "mock_catalog": {
                  "title": "Mock Catalog",
                  "type": "object",
                  "order": 50,
                  "oneOf": [
                    {
                      "title": "Single Schema",
                      "description": "A catalog with one or multiple streams that share the same schema.",
                      "type": "object",
                      "required": ["type", "stream_name", "stream_schema"],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "SINGLE_STREAM",
                          "default": "SINGLE_STREAM"
                        },
                        "stream_name": {
                          "title": "Stream Name",
                          "description": "Name of the data stream.",
                          "type": "string",
                          "default": "data_stream"
                        },
                        "stream_schema": {
                          "title": "Stream Schema",
                          "description": "A Json schema for the stream. The schema should be compatible with <a href=\"https://json-schema.org/draft-07/json-schema-release-notes.html\">draft-07</a>. See <a href=\"https://cswr.github.io/JsonSchema/spec/introduction/\">this doc</a> for examples.",
                          "type": "string",
                          "default": "{ \"type\": \"object\", \"properties\": { \"column1\": { \"type\": \"string\" } } }"
                        },
                        "stream_duplication": {
                          "title": "Duplicate the stream N times",
                          "description": "Duplicate the stream for easy load testing. Each stream name will have a number suffix. For example, if the stream name is \"ds\", the duplicated streams will be \"ds_0\", \"ds_1\", etc.",
                          "type": "integer",
                          "default": 1,
                          "min": 1,
                          "max": 10000
                        }
                      }
                    },
                    {
                      "title": "Multi Schema",
                      "type": "object",
                      "description": "A catalog with multiple data streams, each with a different schema.",
                      "required": ["type", "stream_schemas"],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "MULTI_STREAM",
                          "default": "MULTI_STREAM"
                        },
                        "stream_schemas": {
                          "title": "Streams and Schemas",
                          "description": "A Json object specifying multiple data streams and their schemas. Each key in this object is one stream name. Each value is the schema for that stream. The schema should be compatible with <a href=\"https://json-schema.org/draft-07/json-schema-release-notes.html\">draft-07</a>. See <a href=\"https://cswr.github.io/JsonSchema/spec/introduction/\">this doc</a> for examples.",
                          "type": "string",
                          "default": "{ \"stream1\": { \"type\": \"object\", \"properties\": { \"field1\": { \"type\": \"string\" } } }, \"stream2\": { \"type\": \"object\", \"properties\": { \"field1\": { \"type\": \"boolean\" } } } }"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "title": "Benchmark",
              "description": "This mode is used for speed benchmarks. Specifically, it should be used for testing the throughput of the platform and destination. It optimizes for emitting records very quickly, so that it should never be the bottleneck.",
              "type": "object",
              "required": ["type", "schema", "terminationCondition"],
              "additionalProperties": true,
              "properties": {
                "type": {
                  "type": "string",
                  "const": "BENCHMARK",
                  "default": "BENCHMARK"
                },
                "schema": {
                  "title": "Schema",
                  "description": "schema of the data in the benchmark.",
                  "type": "string",
                  "enum": ["FIVE_STRING_COLUMNS"]
                },
                "terminationCondition": {
                  "title": "Termination Condition",
                  "description": "when does the benchmark stop?",
                  "type": "object",
                  "oneOf": [
                    {
                      "title": "max records",
                      "type": "object",
                      "required": ["type", "max"],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "MAX_RECORDS",
                          "default": "MAX_RECORDS"
                        },
                        "max": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "protocol_version": "0.2.1"
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "46b25e70-c980-4590-a811-8deaf50ee09f",
      "name": "EmailOctopus",
      "dockerRepository": "airbyte/source-emailoctopus",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/emailoctopus",
      "icon": "emailoctopus.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/emailoctopus",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "EmailOctopus Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "EmailOctopus API key",
              "description": "EmailOctopus API Key. See the <a href=\"https://help.emailoctopus.com/article/165-how-to-create-and-delete-api-keys\">docs</a> for information on how to generate this key.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e2b40e36-aa0e-4bed-b41b-bcea6fa348b1",
      "name": "Exchange Rates Api",
      "dockerRepository": "airbyte/source-exchange-rates",
      "dockerImageTag": "1.2.8",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/exchangeratesapi",
      "icon": "exchangeratesapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/exchangeratesapi",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "exchangeratesapi.io Source Spec",
          "type": "object",
          "required": ["start_date", "access_key"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start getting data from that date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"],
              "format": "date"
            },
            "access_key": {
              "type": "string",
              "description": "Your API Key. See <a href=\"https://apilayer.com/marketplace/exchangerates_data-api\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            },
            "base": {
              "type": "string",
              "description": "ISO reference currency. See <a href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\">here</a>. Free plan doesn't support Source Currency Switching, default base currency is EUR",
              "examples": ["EUR", "USD"]
            },
            "ignore_weekends": {
              "type": "boolean",
              "description": "Ignore weekends? (Exchanges don't run on weekends)",
              "default": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${subdomain}.apilayer.com", "apilayer.com"]
      }
    },
    {
      "sourceDefinitionId": "e7778cfc-e97c-4458-9ecb-b4f2bba8946c",
      "name": "Facebook Marketing",
      "dockerRepository": "airbyte/source-facebook-marketing",
      "dockerImageTag": "0.2.86",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/facebook-marketing",
      "icon": "facebook.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/facebook-marketing",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/facebook-marketing",
        "connectionSpecification": {
          "title": "Source Facebook Marketing",
          "type": "object",
          "properties": {
            "account_id": {
              "title": "Account ID",
              "description": "The Facebook Ad account ID to use when pulling data from the Facebook Marketing API. Open your Meta Ads Manager. The Ad account ID number is in the account dropdown menu or in your browser's address bar. See the <a href=\"https://www.facebook.com/business/help/1492627900875762\">docs</a> for more information.",
              "order": 0,
              "examples": ["111111111111111"],
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "order": 1,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            },
            "end_date": {
              "title": "End Date",
              "description": "The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.",
              "order": 2,
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-26T00:00:00Z"],
              "type": "string"
            },
            "access_token": {
              "title": "Access Token",
              "description": "The value of the generated access token. From your App’s Dashboard, click on \"Marketing API\" then \"Tools\". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on \"Get token\". See the <a href=\"https://docs.airbyte.com/integrations/sources/facebook-marketing\">docs</a> for more information.",
              "order": 3,
              "airbyte_secret": true,
              "type": "string"
            },
            "include_deleted": {
              "title": "Include Deleted Campaigns, Ads, and AdSets",
              "description": "Set to active if you want to include data from deleted Campaigns, Ads, and AdSets.",
              "default": false,
              "order": 4,
              "type": "boolean"
            },
            "fetch_thumbnail_images": {
              "title": "Fetch Thumbnail Images from Ad Creative",
              "description": "Set to active if you want to fetch the thumbnail_url and store the result in thumbnail_data_url for each Ad Creative.",
              "default": false,
              "order": 5,
              "type": "boolean"
            },
            "custom_insights": {
              "title": "Custom Insights",
              "description": "A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns. Click on \"add\" to fill this field.",
              "order": 6,
              "type": "array",
              "items": {
                "title": "InsightConfig",
                "description": "Config for custom insights",
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Name",
                    "description": "The name value of insight",
                    "type": "string"
                  },
                  "fields": {
                    "title": "Fields",
                    "description": "A list of chosen fields for fields parameter",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidEnums",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "account_currency",
                        "account_id",
                        "account_name",
                        "action_values",
                        "actions",
                        "ad_bid_value",
                        "ad_click_actions",
                        "ad_id",
                        "ad_impression_actions",
                        "ad_name",
                        "adset_bid_value",
                        "adset_end",
                        "adset_id",
                        "adset_name",
                        "adset_start",
                        "age_targeting",
                        "attribution_setting",
                        "auction_bid",
                        "auction_competitiveness",
                        "auction_max_competitor_bid",
                        "buying_type",
                        "campaign_id",
                        "campaign_name",
                        "canvas_avg_view_percent",
                        "canvas_avg_view_time",
                        "catalog_segment_actions",
                        "catalog_segment_value",
                        "catalog_segment_value_mobile_purchase_roas",
                        "catalog_segment_value_omni_purchase_roas",
                        "catalog_segment_value_website_purchase_roas",
                        "clicks",
                        "conversion_rate_ranking",
                        "conversion_values",
                        "conversions",
                        "converted_product_quantity",
                        "converted_product_value",
                        "cost_per_15_sec_video_view",
                        "cost_per_2_sec_continuous_video_view",
                        "cost_per_action_type",
                        "cost_per_ad_click",
                        "cost_per_conversion",
                        "cost_per_dda_countby_convs",
                        "cost_per_estimated_ad_recallers",
                        "cost_per_inline_link_click",
                        "cost_per_inline_post_engagement",
                        "cost_per_one_thousand_ad_impression",
                        "cost_per_outbound_click",
                        "cost_per_thruplay",
                        "cost_per_unique_action_type",
                        "cost_per_unique_click",
                        "cost_per_unique_conversion",
                        "cost_per_unique_inline_link_click",
                        "cost_per_unique_outbound_click",
                        "cpc",
                        "cpm",
                        "cpp",
                        "created_time",
                        "ctr",
                        "date_start",
                        "date_stop",
                        "dda_countby_convs",
                        "dda_results",
                        "engagement_rate_ranking",
                        "estimated_ad_recall_rate",
                        "estimated_ad_recall_rate_lower_bound",
                        "estimated_ad_recall_rate_upper_bound",
                        "estimated_ad_recallers",
                        "estimated_ad_recallers_lower_bound",
                        "estimated_ad_recallers_upper_bound",
                        "frequency",
                        "full_view_impressions",
                        "full_view_reach",
                        "gender_targeting",
                        "impressions",
                        "inline_link_click_ctr",
                        "inline_link_clicks",
                        "inline_post_engagement",
                        "instant_experience_clicks_to_open",
                        "instant_experience_clicks_to_start",
                        "instant_experience_outbound_clicks",
                        "interactive_component_tap",
                        "labels",
                        "location",
                        "mobile_app_purchase_roas",
                        "objective",
                        "optimization_goal",
                        "outbound_clicks",
                        "outbound_clicks_ctr",
                        "place_page_name",
                        "purchase_roas",
                        "qualifying_question_qualify_answer_rate",
                        "quality_ranking",
                        "quality_score_ectr",
                        "quality_score_ecvr",
                        "quality_score_organic",
                        "reach",
                        "social_spend",
                        "spend",
                        "total_postbacks",
                        "total_postbacks_detailed",
                        "unique_actions",
                        "unique_clicks",
                        "unique_conversions",
                        "unique_ctr",
                        "unique_inline_link_click_ctr",
                        "unique_inline_link_clicks",
                        "unique_link_clicks_ctr",
                        "unique_outbound_clicks",
                        "unique_outbound_clicks_ctr",
                        "unique_video_continuous_2_sec_watched_actions",
                        "unique_video_view_15_sec",
                        "updated_time",
                        "video_15_sec_watched_actions",
                        "video_30_sec_watched_actions",
                        "video_avg_time_watched_actions",
                        "video_continuous_2_sec_watched_actions",
                        "video_p100_watched_actions",
                        "video_p25_watched_actions",
                        "video_p50_watched_actions",
                        "video_p75_watched_actions",
                        "video_p95_watched_actions",
                        "video_play_actions",
                        "video_play_curve_actions",
                        "video_play_retention_0_to_15s_actions",
                        "video_play_retention_20_to_60s_actions",
                        "video_play_retention_graph_actions",
                        "video_thruplay_watched_actions",
                        "video_time_watched_actions",
                        "website_ctr",
                        "website_purchase_roas",
                        "wish_bid"
                      ]
                    }
                  },
                  "breakdowns": {
                    "title": "Breakdowns",
                    "description": "A list of chosen breakdowns for breakdowns",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidBreakdowns",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "ad_format_asset",
                        "age",
                        "app_id",
                        "body_asset",
                        "call_to_action_asset",
                        "country",
                        "description_asset",
                        "device_platform",
                        "dma",
                        "frequency_value",
                        "gender",
                        "hourly_stats_aggregated_by_advertiser_time_zone",
                        "hourly_stats_aggregated_by_audience_time_zone",
                        "image_asset",
                        "impression_device",
                        "is_conversion_id_modeled",
                        "link_url_asset",
                        "mmm",
                        "place_page_id",
                        "platform_position",
                        "product_id",
                        "publisher_platform",
                        "region",
                        "skan_campaign_id",
                        "skan_conversion_id",
                        "title_asset",
                        "video_asset"
                      ]
                    }
                  },
                  "action_breakdowns": {
                    "title": "Action Breakdowns",
                    "description": "A list of chosen action_breakdowns for action_breakdowns",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidActionBreakdowns",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "action_canvas_component_name",
                        "action_carousel_card_id",
                        "action_carousel_card_name",
                        "action_destination",
                        "action_device",
                        "action_reaction",
                        "action_target_id",
                        "action_type",
                        "action_video_sound",
                        "action_video_type"
                      ]
                    }
                  },
                  "time_increment": {
                    "title": "Time Increment",
                    "description": "Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only).",
                    "default": 1,
                    "exclusiveMaximum": 90,
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "start_date": {
                    "title": "Start Date",
                    "description": "The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
                    "examples": ["2017-01-25T00:00:00Z"],
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_date": {
                    "title": "End Date",
                    "description": "The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
                    "examples": ["2017-01-26T00:00:00Z"],
                    "type": "string",
                    "format": "date-time"
                  },
                  "insights_lookback_window": {
                    "title": "Custom Insights Lookback Window",
                    "description": "The attribution window",
                    "default": 28,
                    "maximum": 28,
                    "mininum": 1,
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  }
                },
                "required": ["name"]
              }
            },
            "page_size": {
              "title": "Page Size of Requests",
              "description": "Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.",
              "default": 100,
              "order": 7,
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            "insights_lookback_window": {
              "title": "Insights Lookback Window",
              "description": "The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.",
              "default": 28,
              "order": 8,
              "maximum": 28,
              "mininum": 1,
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            "max_batch_size": {
              "title": "Maximum size of Batched Requests",
              "description": "Maximum batch size used when sending batch requests to Facebook API. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.",
              "default": 50,
              "order": 9,
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            "action_breakdowns_allow_empty": {
              "title": "Action Breakdowns Allow Empty",
              "description": "Allows action_breakdowns to be an empty list",
              "default": true,
              "airbyte_hidden": true,
              "type": "boolean"
            }
          },
          "required": ["account_id", "start_date", "access_token"]
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [],
            "oauthFlowOutputParameters": [["access_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["graph.facebook.com"]
      }
    },
    {
      "sourceDefinitionId": "010eb12f-837b-4685-892d-0a39f76a98f5",
      "name": "Facebook Pages",
      "dockerRepository": "airbyte/source-facebook-pages",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/facebook-pages",
      "icon": "facebook.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/facebook-pages",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Facebook Pages Spec",
          "type": "object",
          "required": ["access_token", "page_id"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "type": "string",
              "title": "Page Access Token",
              "description": "Facebook Page Access Token",
              "airbyte_secret": true,
              "order": 0
            },
            "page_id": {
              "type": "string",
              "title": "Page ID",
              "description": "Page ID",
              "order": 1
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["graph.facebook.com"]
      }
    },
    {
      "sourceDefinitionId": "dfd88b22-b603-4c3d-aad7-3701784586b1",
      "name": "Sample Data (Faker)",
      "dockerRepository": "airbyte/source-faker",
      "dockerImageTag": "2.0.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/faker",
      "icon": "faker.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/faker",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Faker Source Spec",
          "type": "object",
          "required": ["count"],
          "additionalProperties": true,
          "properties": {
            "count": {
              "title": "Count",
              "description": "How many users should be generated in total.  This setting does not apply to the purchases or products stream.",
              "type": "integer",
              "minimum": 1,
              "default": 1000,
              "order": 0
            },
            "seed": {
              "title": "Seed",
              "description": "Manually control the faker random seed to return the same values on subsequent runs (leave -1 for random)",
              "type": "integer",
              "default": -1,
              "order": 1
            },
            "records_per_sync": {
              "title": "Records Per Sync",
              "description": "How many fake records will be returned for each sync, for each stream?  By default, it will take 2 syncs to create the requested 1000 records.",
              "type": "integer",
              "minimum": 1,
              "default": 500,
              "order": 2
            },
            "records_per_slice": {
              "title": "Records Per Stream Slice",
              "description": "How many fake records will be in each page (stream slice), before a state message is emitted?",
              "type": "integer",
              "minimum": 1,
              "default": 1000,
              "order": 3
            },
            "parallelism": {
              "title": "Parallelism",
              "description": "How many parallel workers should we use to generate fake data?  Choose a value equal to the number of CPUs you will allocate to this source.",
              "type": "integer",
              "minimum": 1,
              "default": 4,
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "resourceRequirements": {
        "jobSpecific": [
          {
            "jobType": "sync",
            "resourceRequirements": {
              "cpu_request": "1.0",
              "cpu_limit": "4.0"
            }
          }
        ]
      },
      "allowedHosts": {
        "hosts": []
      },
      "suggestedStreams": {
        "streams": ["users", "products", "purchases"]
      }
    },
    {
      "sourceDefinitionId": "eb3e9c1c-0467-4eb7-a172-5265e04ccd0a",
      "name": "Fastbill",
      "dockerRepository": "airbyte/source-fastbill",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/fastbill",
      "icon": "fastbill.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/fastbill",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Fastbill Spec",
          "type": "object",
          "required": ["username", "api_key"],
          "properties": {
            "username": {
              "title": "Username",
              "type": "string",
              "description": "Username for Fastbill account"
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Fastbill API key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "3825db3e-c94b-42ac-bd53-b5a9507ace2b",
      "name": "Fauna",
      "dockerRepository": "airbyte/source-fauna",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/fauna",
      "icon": "fauna.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://github.com/fauna/airbyte/blob/source-fauna/docs/integrations/sources/fauna.md",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Fauna Spec",
          "type": "object",
          "required": ["domain", "port", "scheme", "secret"],
          "additionalProperties": true,
          "properties": {
            "domain": {
              "order": 0,
              "type": "string",
              "title": "Domain",
              "description": "Domain of Fauna to query. Defaults db.fauna.com. See <a href=https://docs.fauna.com/fauna/current/learn/understanding/region_groups#how-to-use-region-groups>the docs</a>.",
              "default": "db.fauna.com"
            },
            "port": {
              "order": 1,
              "type": "integer",
              "title": "Port",
              "description": "Endpoint port.",
              "default": 443
            },
            "scheme": {
              "order": 2,
              "type": "string",
              "title": "Scheme",
              "description": "URL scheme.",
              "default": "https"
            },
            "secret": {
              "order": 3,
              "type": "string",
              "title": "Fauna Secret",
              "description": "Fauna secret, used when authenticating with the database.",
              "airbyte_secret": true
            },
            "collection": {
              "order": 5,
              "type": "object",
              "title": "Collection",
              "description": "Settings for the Fauna Collection.",
              "required": ["page_size", "deletions"],
              "properties": {
                "page_size": {
                  "order": 4,
                  "type": "integer",
                  "title": "Page Size",
                  "default": 64,
                  "description": "The page size used when reading documents from the database. The larger the page size, the faster the connector processes documents. However, if a page is too large, the connector may fail. <br>\nChoose your page size based on how large the documents are. <br>\nSee <a href=\"https://docs.fauna.com/fauna/current/learn/understanding/types#page\">the docs</a>."
                },
                "deletions": {
                  "order": 5,
                  "type": "object",
                  "title": "Deletion Mode",
                  "description": "<b>This only applies to incremental syncs.</b> <br>\nEnabling deletion mode informs your destination of deleted documents.<br>\nDisabled - Leave this feature disabled, and ignore deleted documents.<br>\nEnabled - Enables this feature. When a document is deleted, the connector exports a record with a \"deleted at\" column containing the time that the document was deleted.",
                  "oneOf": [
                    {
                      "title": "Disabled",
                      "type": "object",
                      "order": 0,
                      "required": ["deletion_mode"],
                      "properties": {
                        "deletion_mode": {
                          "type": "string",
                          "const": "ignore"
                        }
                      }
                    },
                    {
                      "title": "Enabled",
                      "type": "object",
                      "order": 1,
                      "required": ["deletion_mode", "column"],
                      "properties": {
                        "deletion_mode": {
                          "type": "string",
                          "const": "deleted_field"
                        },
                        "column": {
                          "type": "string",
                          "title": "Deleted At Column",
                          "description": "Name of the \"deleted at\" column.",
                          "default": "deleted_at"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "778daa7c-feaf-4db6-96f3-70fd645acc77",
      "name": "File (CSV, JSON, Excel, Feather, Parquet)",
      "dockerRepository": "airbyte/source-file",
      "dockerImageTag": "0.2.34",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/file",
      "icon": "file.svg",
      "sourceType": "file",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/file",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "File Source Spec",
          "type": "object",
          "additionalProperties": true,
          "required": ["dataset_name", "format", "url", "provider"],
          "properties": {
            "dataset_name": {
              "type": "string",
              "title": "Dataset Name",
              "description": "The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only)."
            },
            "format": {
              "type": "string",
              "enum": [
                "csv",
                "json",
                "jsonl",
                "excel",
                "excel_binary",
                "feather",
                "parquet",
                "yaml"
              ],
              "default": "csv",
              "title": "File Format",
              "description": "The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs)."
            },
            "reader_options": {
              "type": "string",
              "title": "Reader Options",
              "description": "This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.",
              "examples": [
                "{}",
                "{\"sep\": \" \"}",
                {
                  "sep": "\t",
                  "header": 0,
                  "names": "column1, column2"
                }
              ]
            },
            "url": {
              "type": "string",
              "title": "URL",
              "description": "The URL path to access the file which should be replicated.",
              "examples": [
                "https://storage.googleapis.com/covid19-open-data/v2/latest/epidemiology.csv",
                "gs://my-google-bucket/data.csv",
                "s3://gdelt-open-data/events/20190914.export.csv"
              ]
            },
            "provider": {
              "type": "object",
              "title": "Storage Provider",
              "description": "The storage Provider or Location of the file(s) which should be replicated.",
              "default": "Public Web",
              "oneOf": [
                {
                  "title": "HTTPS: Public Web",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "const": "HTTPS"
                    },
                    "user_agent": {
                      "type": "boolean",
                      "title": "User-Agent",
                      "default": false,
                      "description": "Add User-Agent to request"
                    }
                  }
                },
                {
                  "title": "GCS: Google Cloud Storage",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "GCS"
                    },
                    "service_account_json": {
                      "type": "string",
                      "title": "Service Account JSON",
                      "description": "In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described <a href=\"https://cloud.google.com/iam/docs/service-accounts\" target=\"_blank\">here</a>. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary."
                    }
                  }
                },
                {
                  "title": "S3: Amazon Web Services",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "S3"
                    },
                    "aws_access_key_id": {
                      "type": "string",
                      "title": "AWS Access Key ID",
                      "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary."
                    },
                    "aws_secret_access_key": {
                      "type": "string",
                      "title": "AWS Secret Access Key",
                      "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "AzBlob: Azure Blob Storage",
                  "required": ["storage", "storage_account"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "AzBlob"
                    },
                    "storage_account": {
                      "type": "string",
                      "title": "Storage Account",
                      "description": "The globally unique name of the storage account that the desired blob sits within. See <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview\" target=\"_blank\">here</a> for more details."
                    },
                    "sas_token": {
                      "type": "string",
                      "title": "SAS Token",
                      "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a SAS (Shared Access Signature) token. If accessing publicly available data, this field is not necessary.",
                      "airbyte_secret": true
                    },
                    "shared_key": {
                      "type": "string",
                      "title": "Shared Key",
                      "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a storage account shared key (aka account key or access key). If accessing publicly available data, this field is not necessary.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "SSH: Secure Shell",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SSH"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": "",
                      "airbyte_secret": true
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "SCP: Secure copy protocol",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SCP"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": "",
                      "airbyte_secret": true
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "SFTP: Secure File Transfer Protocol",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SFTP"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": "",
                      "airbyte_secret": true
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "Local Filesystem (limited)",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "description": "WARNING: Note that the local storage URL available for reading must start with the local mount \"/local/\" at the moment until we implement more advanced docker mounting options.",
                      "const": "local"
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*"]
      }
    },
    {
      "sourceDefinitionId": "8a5d48f6-03bb-4038-a942-a8d3f175cca3",
      "name": "Freshcaller",
      "dockerRepository": "airbyte/source-freshcaller",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshcaller",
      "icon": "freshcaller.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshcaller",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Freshcaller Spec",
          "type": "object",
          "required": ["domain", "api_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "domain": {
              "type": "string",
              "title": "Domain for Freshcaller account",
              "description": "Used to construct Base URL for the Freshcaller APIs",
              "examples": ["snaptravel"]
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Freshcaller API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/freshcaller\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "requests_per_minute": {
              "title": "Requests per minute",
              "type": "integer",
              "description": "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account."
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time. Any data created after this date will be replicated.",
              "format": "date-time",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2022-01-01T12:00:00Z"]
            },
            "sync_lag_minutes": {
              "title": "Lag in minutes for each sync",
              "type": "integer",
              "description": "Lag in minutes for each sync, i.e., at time T, data for the time range [prev_sync_time, T-30] will be fetched"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false
    },
    {
      "sourceDefinitionId": "f95337f1-2ad1-4baf-922f-2ca9152de630",
      "name": "Flexport",
      "dockerRepository": "airbyte/source-flexport",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/flexport",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/flexport",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Flexport Spec",
          "additionalProperties": true,
          "type": "object",
          "required": ["api_key", "start_date"],
          "properties": {
            "api_key": {
              "order": 0,
              "type": "string",
              "title": "API Key",
              "airbyte_secret": true
            },
            "start_date": {
              "order": 1,
              "title": "Start Date",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ec4b9503-13cb-48ab-a4ab-6ade4be46567",
      "name": "Freshdesk",
      "dockerRepository": "airbyte/source-freshdesk",
      "dockerImageTag": "3.0.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshdesk",
      "icon": "freshdesk.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshdesk",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Freshdesk Spec",
          "type": "object",
          "required": ["domain", "api_key"],
          "additionalProperties": true,
          "properties": {
            "domain": {
              "type": "string",
              "description": "Freshdesk domain",
              "title": "Domain",
              "examples": ["myaccount.freshdesk.com"],
              "pattern": "^[a-zA-Z0-9._-]*\\.freshdesk\\.com$"
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Freshdesk API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/freshdesk\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "requests_per_minute": {
              "title": "Requests per minute",
              "type": "integer",
              "description": "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.",
              "format": "date-time",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2020-12-01T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.freshdesk.com"]
      }
    },
    {
      "sourceDefinitionId": "eca08d79-7b92-4065-b7f3-79c14836ebe7",
      "name": "Freshsales",
      "dockerRepository": "airbyte/source-freshsales",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshsales",
      "icon": "freshsales.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshsales",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Freshsales Spec",
          "type": "object",
          "required": ["domain_name", "api_key"],
          "additionalProperties": false,
          "properties": {
            "domain_name": {
              "type": "string",
              "title": "Domain Name",
              "description": "The Name of your Freshsales domain",
              "examples": ["mydomain.myfreshworks.com"]
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Freshsales API Key. See <a href=\"https://crmsupport.freshworks.com/support/solutions/articles/50000002503-how-to-find-my-api-key-\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9bb85338-ea95-4c93-b267-6be89125b267",
      "name": "Freshservice",
      "dockerRepository": "airbyte/source-freshservice",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshservice",
      "icon": "freshservice.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/freshservice",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Freshservice Spec",
          "type": "object",
          "required": ["domain_name", "api_key", "start_date"],
          "additionalProperties": false,
          "properties": {
            "domain_name": {
              "type": "string",
              "title": "Domain Name",
              "description": "The name of your Freshservice domain",
              "examples": ["mydomain.freshservice.com"]
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Freshservice API Key. See <a href=\"https://api.freshservice.com/#authentication\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-10-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "5ea4459a-8f1a-452a-830f-a65c38cc438d",
      "name": "Genesys",
      "dockerRepository": "airbyte/source-genesys",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/genesys",
      "icon": "genesys.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/genesys",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Genesys Connector Configuration",
          "type": "object",
          "required": [
            "start_date",
            "tenant_endpoint",
            "client_id",
            "client_secret"
          ],
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Your OAuth user Client ID",
              "airbyte_secret": true,
              "order": 0
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "Your OAuth user Client Secret",
              "airbyte_secret": true,
              "order": 1
            },
            "tenant_endpoint": {
              "title": "Tenant Endpoint Location",
              "type": "string",
              "description": "Please choose the right endpoint where your Tenant is located. More info by this <a href=\"https://help.mypurecloud.com/articles/aws-regions-for-genesys-cloud-deployment/\">Link</a>",
              "enum": [
                "Americas (US East)",
                "Americas (US East 2)",
                "Americas (US West)",
                "Americas (Canada)",
                "Americas (São Paulo)",
                "EMEA (Frankfurt)",
                "EMEA (Dublin)",
                "EMEA (London)",
                "Asia Pacific (Mumbai)",
                "Asia Pacific (Seoul)",
                "Asia Pacific (Sydney)"
              ],
              "order": 2
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start Date in format: YYYY-MM-DD",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false
    },
    {
      "sourceDefinitionId": "e1a3866b-d3b2-43b6-b6d7-8c1ee4d7f53f",
      "name": "GetLago",
      "dockerRepository": "airbyte/source-getlago",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/getlago",
      "icon": "getlago.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/getlago",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Getlago Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://doc.getlago.com/docs/api/intro\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6cbea164-3237-433b-9abb-36d384ee4cbf",
      "name": "Gridly",
      "dockerRepository": "airbyte/source-gridly",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gridly",
      "icon": "gridly.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gridly",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Gridly Spec",
          "type": "object",
          "required": ["api_key", "grid_id"],
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "airbyte_secret": true
            },
            "grid_id": {
              "type": "string",
              "title": "Grid ID",
              "description": "ID of a grid, or can be ID of a branch"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ef69ef6e-aa7f-4af1-a01d-ef775033524e",
      "name": "GitHub",
      "dockerRepository": "airbyte/source-github",
      "dockerImageTag": "0.4.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/github",
      "icon": "github.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/github",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "GitHub Source Spec",
          "type": "object",
          "required": ["start_date", "repository"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication",
              "description": "Choose how to authenticate to GitHub",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth",
                  "required": ["access_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "OAuth Credentials",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "OAuth access token",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Personal Access Token",
                  "required": ["personal_access_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "PAT Credentials",
                      "order": 0
                    },
                    "personal_access_token": {
                      "type": "string",
                      "title": "Personal Access Tokens",
                      "description": "Log into GitHub and then generate a <a href=\"https://github.com/settings/tokens\">personal access token</a>. To load balance your API quota consumption across multiple API tokens, input multiple tokens separated with \",\"",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the <a href=\"https://docs.airbyte.com/integrations/sources/github\">docs</a> for more info",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "order": 1
            },
            "repository": {
              "type": "string",
              "examples": [
                "airbytehq/airbyte airbytehq/another-repo",
                "airbytehq/*",
                "airbytehq/airbyte"
              ],
              "title": "GitHub Repositories",
              "description": "Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.",
              "order": 2
            },
            "branch": {
              "type": "string",
              "title": "Branch",
              "examples": [
                "airbytehq/airbyte/master airbytehq/airbyte/my-branch"
              ],
              "description": "Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.",
              "order": 3
            },
            "page_size_for_large_streams": {
              "type": "integer",
              "title": "Page size for large streams",
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "description": "The Github connector contains several streams with a large amount of data. The page size of such streams depends on the size of your repository. We recommended that you specify values between 10 and 30.",
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "option_title"],
          "predicate_value": "OAuth Credentials",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.github.com"]
      },
      "suggestedStreams": {
        "streams": [
          "branches",
          "comments",
          "issues",
          "organizations",
          "pull_requests",
          "repositories",
          "stargazers",
          "tags",
          "teams",
          "users"
        ]
      }
    },
    {
      "sourceDefinitionId": "5e6175e5-68e1-4c17-bff9-56103bbb0d80",
      "name": "Gitlab",
      "dockerRepository": "airbyte/source-gitlab",
      "dockerImageTag": "1.0.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gitlab",
      "icon": "gitlab.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gitlab",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Gitlab Spec",
          "type": "object",
          "required": ["api_url", "start_date", "credentials"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "client_id",
                    "client_secret",
                    "refresh_token",
                    "access_token",
                    "token_expiry_date"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0"
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The API ID of the Gitlab developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The API Secret the Gitlab developer application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    },
                    "token_expiry_date": {
                      "type": "string",
                      "description": "The date-time when the access token should be refreshed.",
                      "format": "date-time"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "The key to refresh the expired access_token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Private Token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "access_token"
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Private Token",
                      "description": "Log into your Gitlab account and then generate a personal Access Token.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "api_url": {
              "type": "string",
              "examples": ["gitlab.com"],
              "title": "API URL",
              "default": "gitlab.com",
              "description": "Please enter your basic URL from GitLab instance.",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "order": 2,
              "format": "date-time"
            },
            "groups": {
              "type": "string",
              "examples": ["airbyte.io"],
              "title": "Groups",
              "description": "Space-delimited list of groups. e.g. airbyte.io.",
              "order": 3
            },
            "projects": {
              "type": "string",
              "title": "Projects",
              "examples": ["airbyte.io/documentation"],
              "description": "Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.",
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "path_in_connector_config": ["api_url"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                },
                "token_expiry_date": {
                  "type": "string",
                  "format": "date-time",
                  "path_in_connector_config": [
                    "credentials",
                    "token_expiry_date"
                  ]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["*"]
      }
    },
    {
      "sourceDefinitionId": "cf8ff320-6272-4faa-89e6-4402dc17e5d5",
      "name": "Glassfrog",
      "dockerRepository": "airbyte/source-glassfrog",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/glassfrog",
      "icon": "glassfrog.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/glassfrog",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Glassfrog Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API key provided by Glassfrog",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ce38aec4-5a77-439a-be29-9ca44fd4e811",
      "name": "GNews",
      "dockerRepository": "airbyte/source-gnews",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gnews",
      "icon": "gnews.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gnews",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Gnews Spec",
          "type": "object",
          "required": ["api_key", "query"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "API Key",
              "order": 0,
              "airbyte_secret": true
            },
            "query": {
              "type": "string",
              "order": 1,
              "title": "Query",
              "description": "This parameter allows you to specify your search keywords to find the news articles you are looking for. The keywords will be used to return the most relevant articles. It is possible to use logical operators  with keywords. - Phrase Search Operator: This operator allows you to make an exact search. Keywords surrounded by \n  quotation marks are used to search for articles with the exact same keyword sequence. \n  For example the query: \"Apple iPhone\" will return articles matching at least once this sequence of keywords.\n- Logical AND Operator: This operator allows you to make sure that several keywords are all used in the article\n  search. By default the space character acts as an AND operator, it is possible to replace the space character \n  by AND to obtain the same result. For example the query: Apple Microsoft is equivalent to Apple AND Microsoft\n- Logical OR Operator: This operator allows you to retrieve articles matching the keyword a or the keyword b.\n  It is important to note that this operator has a higher precedence than the AND operator. For example the \n  query: Apple OR Microsoft will return all articles matching the keyword Apple as well as all articles matching \n  the keyword Microsoft\n- Logical NOT Operator: This operator allows you to remove from the results the articles corresponding to the\n  specified keywords. To use it, you need to add NOT in front of each word or phrase surrounded by quotes.\n  For example the query: Apple NOT iPhone will return all articles matching the keyword Apple but not the keyword\n  iPhone",
              "examples": [
                "Microsoft Windows 10",
                "Apple OR Microsoft",
                "Apple AND NOT iPhone",
                "(Windows 7) AND (Windows 10)",
                "Intel AND (i7 OR i9)"
              ]
            },
            "language": {
              "type": "string",
              "title": "Language",
              "decription": "This parameter allows you to specify the language of the news articles returned by the API.  You have to set as value the 2 letters code of the language you want to filter.",
              "order": 2,
              "enum": [
                "ar",
                "zh",
                "nl",
                "en",
                "fr",
                "de",
                "el",
                "he",
                "hi",
                "it",
                "ja",
                "ml",
                "mr",
                "no",
                "pt",
                "ro",
                "ru",
                "es",
                "sv",
                "ta",
                "te",
                "uk"
              ]
            },
            "country": {
              "type": "string",
              "title": "Country",
              "description": "This parameter allows you to specify the country where the news articles returned by the API were published, the contents of the articles are not necessarily related to the specified country. You have to set as value the 2 letters code of the country you want to filter.",
              "order": 3,
              "enum": [
                "au",
                "br",
                "ca",
                "cn",
                "eg",
                "fr",
                "de",
                "gr",
                "hk",
                "in",
                "ie",
                "il",
                "it",
                "jp",
                "nl",
                "no",
                "pk",
                "pe",
                "ph",
                "pt",
                "ro",
                "ru",
                "sg",
                "es",
                "se",
                "ch",
                "tw",
                "ua",
                "gb",
                "us"
              ]
            },
            "in": {
              "type": "array",
              "title": "In",
              "description": "This parameter allows you to choose in which attributes the keywords are searched. The attributes that can be set are title, description and content. It is possible to combine several attributes.",
              "order": 4,
              "items": {
                "type": "string",
                "enum": ["title", "description", "content"]
              }
            },
            "nullable": {
              "type": "array",
              "title": "Nullable",
              "description": "This parameter allows you to specify the attributes that you allow to return null values. The attributes that  can be set are title, description and content. It is possible to combine several attributes",
              "order": 5,
              "items": {
                "type": "string",
                "enum": ["title", "description", "content"]
              }
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "This parameter allows you to filter the articles that have a publication date greater than or equal to the  specified value. The date must respect the following format: YYYY-MM-DD hh:mm:ss (in UTC)",
              "order": 6,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "examples": ["2022-08-21 16:27:09"]
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "This parameter allows you to filter the articles that have a publication date smaller than or equal to the  specified value. The date must respect the following format: YYYY-MM-DD hh:mm:ss (in UTC)",
              "order": 6,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "examples": ["2022-08-21 16:27:09"]
            },
            "sortby": {
              "type": "string",
              "title": "Sort By",
              "description": "This parameter allows you to choose with which type of sorting the articles should be returned. Two values  are possible:\n  - publishedAt = sort by publication date, the articles with the most recent publication date are returned first\n  - relevance = sort by best match to keywords, the articles with the best match are returned first",
              "order": 7,
              "enum": ["publishedAt", "relevance"]
            },
            "top_headlines_query": {
              "type": "string",
              "order": 8,
              "title": "Top Headlines Query",
              "description": "This parameter allows you to specify your search keywords to find the news articles you are looking for. The keywords will be used to return the most relevant articles. It is possible to use logical operators  with keywords. - Phrase Search Operator: This operator allows you to make an exact search. Keywords surrounded by \n  quotation marks are used to search for articles with the exact same keyword sequence. \n  For example the query: \"Apple iPhone\" will return articles matching at least once this sequence of keywords.\n- Logical AND Operator: This operator allows you to make sure that several keywords are all used in the article\n  search. By default the space character acts as an AND operator, it is possible to replace the space character \n  by AND to obtain the same result. For example the query: Apple Microsoft is equivalent to Apple AND Microsoft\n- Logical OR Operator: This operator allows you to retrieve articles matching the keyword a or the keyword b.\n  It is important to note that this operator has a higher precedence than the AND operator. For example the \n  query: Apple OR Microsoft will return all articles matching the keyword Apple as well as all articles matching \n  the keyword Microsoft\n- Logical NOT Operator: This operator allows you to remove from the results the articles corresponding to the\n  specified keywords. To use it, you need to add NOT in front of each word or phrase surrounded by quotes.\n  For example the query: Apple NOT iPhone will return all articles matching the keyword Apple but not the keyword\n  iPhone",
              "examples": [
                "Microsoft Windows 10",
                "Apple OR Microsoft",
                "Apple AND NOT iPhone",
                "(Windows 7) AND (Windows 10)",
                "Intel AND (i7 OR i9)"
              ]
            },
            "top_headlines_topic": {
              "type": "string",
              "title": "Top Headlines Topic",
              "description": "This parameter allows you to change the category for the request.",
              "order": 9,
              "enum": [
                "breaking-news",
                "world",
                "nation",
                "business",
                "technology",
                "entertainment",
                "sports",
                "science",
                "health"
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ba15ac82-5c6a-4fb2-bf24-925c23a1180c",
      "name": "GoCardless",
      "dockerRepository": "airbyte/source-gocardless",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gocardless",
      "icon": "gocardless.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gocardless",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Gocardless Spec",
          "type": "object",
          "required": [
            "access_token",
            "gocardless_environment",
            "gocardless_version",
            "start_date"
          ],
          "properties": {
            "access_token": {
              "title": "Access Token",
              "type": "string",
              "pattern": "^(sandbox|live)_.+$",
              "description": "Gocardless API TOKEN",
              "airbyte_secret": true,
              "order": 0
            },
            "gocardless_environment": {
              "title": "GoCardless API Environment",
              "type": "string",
              "enum": ["sandbox", "live"],
              "default": "sandbox",
              "description": "Environment you are trying to connect to.",
              "order": 1
            },
            "gocardless_version": {
              "title": "GoCardless API Version",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "GoCardless version. This is a date. You can find the latest here: \nhttps://developer.gocardless.com/api-reference/#api-usage-making-requests\n",
              "order": 2
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data\nbefore this date will not be replicated.\n",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "32382e40-3b49-4b99-9c5c-4076501914e7",
      "name": "Gong",
      "dockerRepository": "airbyte/source-gong",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gong",
      "icon": "gong.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gong",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Gong Spec",
          "type": "object",
          "required": ["access_key", "access_key_secret"],
          "additionalProperties": true,
          "properties": {
            "access_key": {
              "type": "string",
              "title": "Gong Access Key",
              "description": "Gong Access Key",
              "airbyte_secret": true
            },
            "access_key_secret": {
              "type": "string",
              "title": "Gong Access Key Secret",
              "description": "Gong Access Key Secret",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "The date from which to list calls, in the ISO-8601 format; if not specified, the calls start with the earliest recorded call. For web-conference calls recorded by Gong, the date denotes its scheduled time, otherwise, it denotes its actual start time.",
              "examples": ["2018-02-18T08:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "253487c0-2246-43ba-a21f-5116b20a2c50",
      "name": "Google Ads",
      "dockerRepository": "airbyte/source-google-ads",
      "dockerImageTag": "0.2.10",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-ads",
      "icon": "google-adwords.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-ads",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Ads Spec",
          "type": "object",
          "required": ["credentials", "start_date", "customer_id"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "type": "object",
              "description": "",
              "title": "Google Credentials",
              "order": 0,
              "required": [
                "developer_token",
                "client_id",
                "client_secret",
                "refresh_token"
              ],
              "properties": {
                "developer_token": {
                  "type": "string",
                  "title": "Developer Token",
                  "order": 0,
                  "description": "Developer token granted by Google to use their APIs. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>",
                  "airbyte_secret": true
                },
                "client_id": {
                  "type": "string",
                  "title": "Client ID",
                  "order": 1,
                  "description": "The Client ID of your Google Ads developer application. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                },
                "client_secret": {
                  "type": "string",
                  "title": "Client Secret",
                  "order": 2,
                  "description": "The Client Secret of your Google Ads developer application. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>",
                  "airbyte_secret": true
                },
                "refresh_token": {
                  "type": "string",
                  "title": "Refresh Token",
                  "order": 3,
                  "description": "The token for obtaining a new access token. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>",
                  "airbyte_secret": true
                },
                "access_token": {
                  "type": "string",
                  "title": "Access Token",
                  "order": 4,
                  "description": "Access Token for making authenticated requests. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>",
                  "airbyte_secret": true
                }
              }
            },
            "customer_id": {
              "title": "Customer ID(s)",
              "type": "string",
              "description": "Comma separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>. Metrics streams like AdGroupAdReport cannot be requested for a manager account.",
              "pattern": "^[0-9]{10}(,[0-9]{10})*$",
              "examples": ["6783948572,5839201945"],
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2017-01-25"],
              "order": 2
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "UTC date and time in the format 2017-01-25. Any data after this date will not be replicated.",
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2017-01-30"],
              "order": 6
            },
            "custom_queries": {
              "type": "array",
              "title": "Custom GAQL Queries",
              "description": "",
              "order": 3,
              "items": {
                "type": "object",
                "required": ["query", "table_name"],
                "properties": {
                  "query": {
                    "type": "string",
                    "title": "Custom Query",
                    "description": "A custom defined GAQL query for building the report. Should not contain segments.date expression because it is used by incremental streams. See Google's <a href=\"https://developers.google.com/google-ads/api/fields/v11/overview_query_builder\">query builder</a> for more information.",
                    "examples": [
                      "SELECT segments.ad_destination_type, campaign.advertising_channel_sub_type FROM campaign WHERE campaign.status = 'PAUSED'"
                    ]
                  },
                  "table_name": {
                    "type": "string",
                    "title": "Destination Table Name",
                    "description": "The table name in your destination database for choosen query."
                  }
                }
              }
            },
            "login_customer_id": {
              "type": "string",
              "title": "Login Customer ID for Managed Accounts",
              "description": "If your access to the customer account is through a manager account, this field is required and must be set to the customer ID of the manager account (10-digit number without dashes). More information about this field you can see <a href=\"https://developers.google.com/google-ads/api/docs/concepts/call-structure#cid\">here</a>",
              "pattern": "^([0-9]{10})?$",
              "examples": ["7349206847"],
              "order": 4
            },
            "conversion_window_days": {
              "title": "Conversion Window",
              "type": "integer",
              "description": "A conversion window is the period of time after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see Google's <a href=\"https://support.google.com/google-ads/answer/3123169?hl=en\">documentation</a>.",
              "minimum": 0,
              "maximum": 1095,
              "default": 14,
              "examples": [14],
              "order": 5
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials"],
            "oauthFlowInitParameters": [
              ["client_id"],
              ["client_secret"],
              ["developer_token"]
            ],
            "oauthFlowOutputParameters": [["access_token"], ["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["accounts.google.com", "googleads.googleapis.com"]
      }
    },
    {
      "sourceDefinitionId": "eff3616a-f9c3-11eb-9a03-0242ac130003",
      "name": "Google Analytics (Universal Analytics)",
      "dockerRepository": "airbyte/source-google-analytics-v4",
      "dockerImageTag": "0.1.34",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-analytics-universal-analytics",
      "icon": "google-analytics.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-analytics-universal-analytics",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Analytics (Universal Analytics) Spec",
          "type": "object",
          "required": ["view_id", "start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "order": 0,
              "type": "object",
              "title": "Credentials",
              "description": "Credentials for the service",
              "oneOf": [
                {
                  "title": "Authenticate via Google (Oauth)",
                  "type": "object",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Google Analytics developer application.",
                      "airbyte_secret": true,
                      "order": 1
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Google Analytics developer application.",
                      "airbyte_secret": true,
                      "order": 2
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "The token for obtaining a new access token.",
                      "airbyte_secret": true,
                      "order": 3
                    },
                    "access_token": {
                      "title": "Access Token",
                      "type": "string",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Service Account Key Authentication",
                  "required": ["credentials_json"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service",
                      "order": 0
                    },
                    "credentials_json": {
                      "title": "Service Account JSON Key",
                      "type": "string",
                      "description": "The JSON key of the service account to use for authorization",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ],
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "start_date": {
              "order": 1,
              "type": "string",
              "title": "Replication Start Date",
              "description": "The date in the format YYYY-MM-DD. Any data before this date will not be replicated.",
              "examples": ["2020-06-01"]
            },
            "view_id": {
              "order": 2,
              "type": "string",
              "title": "View ID",
              "description": "The ID for the Google Analytics View you want to fetch data from. This can be found from the <a href=\"https://ga-dev-tools.appspot.com/account-explorer/\">Google Analytics Account Explorer</a>."
            },
            "custom_reports": {
              "order": 3,
              "type": "string",
              "title": "Custom Reports",
              "description": "A JSON array describing the custom reports you want to sync from Google Analytics. See <a href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4#data-processing-latency\">the docs</a> for more information about the exact format you can use to fill out this field."
            },
            "window_in_days": {
              "type": "integer",
              "title": "Data request time increment in days",
              "description": "The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the <a href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4/#sampling-in-reports\">the docs</a>. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364. ",
              "examples": [30, 60, 90, 120, 200, 364],
              "default": 1,
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["access_token"], ["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available"
    },
    {
      "sourceDefinitionId": "3cc2eafd-84aa-4dca-93af-322d9dfeec1a",
      "name": "Google Analytics 4 (GA4)",
      "dockerRepository": "airbyte/source-google-analytics-data-api",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-analytics-v4",
      "icon": "google-analytics.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-analytics-v4",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Analytics 4 (GA4) Spec",
          "type": "object",
          "required": ["property_id", "date_ranges_start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "order": 0,
              "type": "object",
              "title": "Credentials",
              "description": "Credentials for the service",
              "oneOf": [
                {
                  "title": "Authenticate via Google (Oauth)",
                  "type": "object",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Google Analytics developer application.",
                      "order": 1
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Google Analytics developer application.",
                      "airbyte_secret": true,
                      "order": 2
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "The token for obtaining a new access token.",
                      "airbyte_secret": true,
                      "order": 3
                    },
                    "access_token": {
                      "title": "Access Token",
                      "type": "string",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Service Account Key Authentication",
                  "required": ["credentials_json"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service",
                      "order": 0
                    },
                    "credentials_json": {
                      "title": "Service Account JSON Key",
                      "type": "string",
                      "description": "The JSON key of the service account to use for authorization",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ],
                      "airbyte_secret": true,
                      "order": 1
                    }
                  }
                }
              ]
            },
            "property_id": {
              "type": "string",
              "title": "Property ID",
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body",
              "order": 1
            },
            "date_ranges_start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report.",
              "format": "date",
              "order": 2
            },
            "custom_reports": {
              "order": 3,
              "type": "string",
              "title": "Custom Reports",
              "description": "A JSON array describing the custom reports you want to sync from Google Analytics. See <a href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4/#custom-reports\">the docs</a> for more information about the exact format you can use to fill out this field."
            },
            "window_in_days": {
              "type": "integer",
              "title": "Data request time increment in days",
              "description": "The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the <a href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4/#sampling-in-reports\">the docs</a>. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364.",
              "examples": [30, 60, 90, 120, 200, 364],
              "minimum": 1,
              "maximum": 364,
              "default": 1,
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["access_token"], ["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": [
          "oauth2.googleapis.com",
          "www.googleapis.com",
          "analyticsdata.googleapis.com"
        ]
      }
    },
    {
      "sourceDefinitionId": "d19ae824-e289-4b14-995a-0632eb46d246",
      "name": "Google Directory",
      "dockerRepository": "airbyte/source-google-directory",
      "dockerImageTag": "0.1.9",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-directory",
      "icon": "googledirectory.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-directory",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Directory Spec",
          "type": "object",
          "required": [],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Google Credentials",
              "description": "Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports <a href=\"https://developers.google.com/identity/protocols/oauth2#webserver\" target=\"_blank\">Web server application</a> and <a href=\"https://developers.google.com/identity/protocols/oauth2#serviceaccount\" target=\"_blank\">Service accounts</a> scenarios.",
              "type": "object",
              "oneOf": [
                {
                  "title": "Sign in via Google (OAuth)",
                  "description": "For these scenario user only needs to give permission to read Google Directory data.",
                  "type": "object",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "Authentication Scenario",
                      "const": "Web server app",
                      "enum": ["Web server app"],
                      "default": "Web server app",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of the developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client secret",
                      "type": "string",
                      "description": "The Client Secret of the developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "The Token for obtaining a new access token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Service Account Key",
                  "description": "For these scenario user should obtain service account's credentials from the Google API Console and provide delegated email.",
                  "type": "object",
                  "required": ["credentials_json", "email"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "Authentication Scenario",
                      "const": "Service accounts",
                      "enum": ["Service accounts"],
                      "default": "Service accounts",
                      "order": 0
                    },
                    "credentials_json": {
                      "type": "string",
                      "title": "Credentials JSON",
                      "description": "The contents of the JSON service account key. See the <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation\">docs</a> for more information on how to generate this key.",
                      "airbyte_secret": true
                    },
                    "email": {
                      "type": "string",
                      "title": "Email",
                      "description": "The email of the user, which has permissions to access the Google Workspace Admin APIs."
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "1e9086ab-ddac-4c1d-aafd-ba43ff575fe4",
      "name": "Google PageSpeed Insights",
      "dockerRepository": "airbyte/source-google-pagespeed-insights",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-pagespeed-insights",
      "icon": "google-pagespeed-insights.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/google-pagespeed-insights",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google PageSpeed Insights Spec",
          "type": "object",
          "required": ["urls", "strategies", "categories"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Google PageSpeed API Key. See <a href=\"https://developers.google.com/speed/docs/insights/v5/get-started#APIKey\">here</a>. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.",
              "airbyte_secret": true
            },
            "urls": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:origin:)?(http(s)?:\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
              },
              "title": "URLs to analyse",
              "description": "The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain",
              "example": "https://example.com"
            },
            "strategies": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["desktop", "mobile"]
              },
              "title": "Analyses Strategies",
              "description": "The analyses strategy to use. Either \"desktop\" or \"mobile\"."
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "accessibility",
                  "best-practices",
                  "performance",
                  "pwa",
                  "seo"
                ]
              },
              "title": "Lighthouse Categories",
              "description": "Defines which Lighthouse category to run. One or many of: \"accessibility\", \"best-practices\", \"performance\", \"pwa\", \"seo\"."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "eb4c9e00-db83-4d63-a386-39cfa91012a8",
      "name": "Google Search Console",
      "dockerRepository": "airbyte/source-google-search-console",
      "dockerImageTag": "0.1.20",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-search-console",
      "icon": "googlesearchconsole.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-search-console",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Search Console Spec",
          "type": "object",
          "required": ["site_urls", "start_date", "authorization"],
          "properties": {
            "site_urls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Website URL Property",
              "description": "The URLs of the website property attached to your GSC account. Read more <a href=\"https://support.google.com/webmasters/answer/34592?hl=en\">here</a>.",
              "examples": ["https://example1.com/", "https://example2.com/"],
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date in the format 2017-01-25. Any data before this date will not be replicated.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 1
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "UTC date in the format 2017-01-25. Any data after this date will not be replicated. Must be greater or equal to the start date field.",
              "examples": ["2021-12-12"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            },
            "authorization": {
              "type": "object",
              "title": "Authentication Type",
              "description": "",
              "order": 3,
              "oneOf": [
                {
                  "title": "OAuth",
                  "type": "object",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "refresh_token"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The client ID of your Google Search Console developer application. Read more <a href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\">here</a>.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The client secret of your Google Search Console developer application. Read more <a href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\">here</a>.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "title": "Access Token",
                      "type": "string",
                      "description": "Access token for making authenticated requests. Read more <a href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\">here</a>.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "The token for obtaining a new access token. Read more <a href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\">here</a>.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Service Account Key Authentication",
                  "required": ["auth_type", "service_account_info", "email"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service",
                      "order": 0
                    },
                    "service_account_info": {
                      "title": "Service Account JSON Key",
                      "type": "string",
                      "description": "The JSON key of the service account to use for authorization. Read more <a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys\">here</a>.",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ],
                      "airbyte_secret": true
                    },
                    "email": {
                      "title": "Admin Email",
                      "type": "string",
                      "description": "The email of the user which has permissions to access the Google Workspace Admin APIs."
                    }
                  }
                }
              ]
            },
            "custom_reports": {
              "order": 4,
              "type": "string",
              "title": "Custom Reports",
              "description": "A JSON array describing the custom reports you want to sync from Google Search Console. See <a href=\"https://docs.airbyte.com/integrations/sources/google-search-console#step-2-set-up-the-google-search-console-connector-in-airbyte\">the docs</a> for more information about the exact format you can use to fill out this field."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["authorization", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["access_token"], ["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.googleapis.com"]
      }
    },
    {
      "sourceDefinitionId": "71607ba1-c0ac-4799-8049-7f4b90dd50f7",
      "name": "Google Sheets",
      "dockerRepository": "airbyte/source-google-sheets",
      "dockerImageTag": "0.2.37",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-sheets",
      "icon": "google-sheets.svg",
      "sourceType": "file",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-sheets",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Sheets Source Spec",
          "type": "object",
          "required": ["spreadsheet_id", "credentials"],
          "additionalProperties": true,
          "properties": {
            "spreadsheet_id": {
              "type": "string",
              "title": "Spreadsheet Link",
              "description": "Enter the link to the Google spreadsheet you want to sync",
              "examples": [
                "https://docs.google.com/spreadsheets/d/1hLd9Qqti3UyLXZB2aFfUWDT7BG-arw2xy4HR3D-dwUb/edit"
              ]
            },
            "row_batch_size": {
              "type": "integer",
              "title": "Row Batch Size",
              "description": "Number of rows fetched when making a Google Sheet API call. Defaults to 200.",
              "default": 200
            },
            "names_conversion": {
              "type": "boolean",
              "title": "Columns Name Conversion",
              "description": "Columns name conversion using a set of rules, for example, 'My Name' -> 'my-name'.",
              "default": false
            },
            "credentials": {
              "type": "object",
              "title": "Authentication",
              "description": "Credentials for connecting to the Google Sheets API",
              "oneOf": [
                {
                  "title": "Authenticate via Google (OAuth)",
                  "type": "object",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "refresh_token"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client"
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "Enter your Google application's Client ID",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "Enter your Google application's Client Secret",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "Enter your Google application's refresh token",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Service Account Key Authentication",
                  "type": "object",
                  "required": ["auth_type", "service_account_info"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service"
                    },
                    "service_account_info": {
                      "type": "string",
                      "title": "Service Account Information.",
                      "description": "Enter your Google Cloud <a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys\">service account key</a> in JSON format",
                      "airbyte_secret": true,
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.googleapis.com"]
      }
    },
    {
      "sourceDefinitionId": "a68fbcde-b465-4ab3-b2a6-b0590a875835",
      "name": "Google Webfonts",
      "dockerRepository": "airbyte/source-google-webfonts",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-webfonts",
      "icon": "googleworkpace.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-webfonts",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Webfonts Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API key is required to access google apis, For getting your's goto google console and generate api key for Webfonts",
              "airbyte_secret": true
            },
            "sort": {
              "type": "string",
              "description": "Optional, to find how to sort"
            },
            "prettyPrint": {
              "type": "string",
              "description": "Optional, boolean type"
            },
            "alt": {
              "type": "string",
              "description": "Optional, Available params- json, media, proto"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ed9dfefa-1bbc-419d-8c5e-4d78f0ef6734",
      "name": "Google Workspace Admin Reports",
      "dockerRepository": "airbyte/source-google-workspace-admin-reports",
      "dockerImageTag": "0.1.8",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-workspace-admin-reports",
      "icon": "googleworkpace.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/google-workspace-admin-reports",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Google Directory Spec",
          "type": "object",
          "required": ["credentials_json", "email"],
          "additionalProperties": false,
          "properties": {
            "credentials_json": {
              "type": "string",
              "title": "Credentials JSON",
              "description": "The contents of the JSON service account key. See the <a href=\"https://developers.google.com/admin-sdk/reports/v1/guides/delegation\">docs</a> for more information on how to generate this key.",
              "airbyte_secret": true
            },
            "email": {
              "type": "string",
              "title": "Email",
              "description": "The email of the user, who has permissions to access the Google Workspace Admin APIs."
            },
            "lookback": {
              "type": "integer",
              "title": "Lookback Window in Days",
              "minimum": 0,
              "maximum": 180,
              "description": "Sets the range of time shown in the report. The maximum value allowed by the Google API is 180 days."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "59f1e50a-331f-4f09-b3e8-2e8d4d355f44",
      "name": "Greenhouse",
      "dockerRepository": "airbyte/source-greenhouse",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/greenhouse",
      "icon": "greenhouse.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/greenhouse",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Greenhouse Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Greenhouse API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/greenhouse\">docs</a> for more information on how to generate this key.",
              "airbyte_secret": true,
              "order": 0
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["harvest.greenhouse.io"]
      }
    },
    {
      "sourceDefinitionId": "bff9a277-e01d-420d-81ee-80f28a307318",
      "name": "Gutendex",
      "dockerRepository": "airbyte/source-gutendex",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/gutendex",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/gutendex",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Gutendex Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "author_year_start": {
              "type": "string",
              "description": "(Optional) Defines the minimum birth year of the authors. Books by authors born prior to the start year will not be returned. Supports both positive (CE) or negative (BCE) integer values",
              "pattern": "^[-]?[0-9]{1,4}$",
              "examples": [2002, 500, -500, 2020]
            },
            "author_year_end": {
              "type": "string",
              "description": "(Optional) Defines the maximum birth year of the authors. Books by authors born after the end year will not be returned. Supports both positive (CE) or negative (BCE) integer values",
              "pattern": "^[-]?[0-9]{1,4}$",
              "examples": [2002, 500, -500, 2020]
            },
            "copyright": {
              "type": "string",
              "description": "(Optional) Use this to find books with a certain copyright status - true for books with existing copyrights, false for books in the public domain in the USA, or null for books with no available copyright information.",
              "pattern": "^(true|false|null)$",
              "examples": [true, false, null]
            },
            "languages": {
              "type": "string",
              "description": "(Optional) Use this to find books in any of a list of languages. They must be comma-separated, two-character language codes.",
              "examples": ["en", "en,fr,fi"]
            },
            "search": {
              "type": "string",
              "description": "(Optional) Use this to search author names and book titles with given words. They must be separated by a space (i.e. %20 in URL-encoded format) and are case-insensitive.",
              "examples": ["dickens%20great%20expect", "dickens"]
            },
            "sort": {
              "type": "string",
              "description": "(Optional) Use this to sort books - ascending for Project Gutenberg ID numbers from lowest to highest, descending for IDs highest to lowest, or popular (the default) for most popular to least popular by number of downloads.",
              "pattern": "^(ascending|descending|popular)$",
              "examples": ["ascending", "descending", "popular"]
            },
            "topic": {
              "type": "string",
              "description": "(Optional) Use this to search for a case-insensitive key-phrase in books' bookshelves or subjects.",
              "examples": ["children", "fantasy"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6fe89830-d04d-401b-aad6-6552ffa5c4af",
      "name": "Harness",
      "dockerRepository": "farosai/airbyte-harness-source",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/harness",
      "icon": "harness.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.faros.ai",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Harness Spec",
          "type": "object",
          "required": ["api_key", "account_id"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Harness API key",
              "airbyte_secret": true
            },
            "account_id": {
              "type": "string",
              "title": "Harness account ID"
            },
            "api_url": {
              "type": "string",
              "title": "Harness API URL",
              "default": "https://app.harness.io",
              "examples": ["https://my-harness-server.example.com"]
            },
            "cutoff_days": {
              "type": "number",
              "title": "Harness Cutoff Days",
              "default": 90,
              "description": "Only fetch deployments updated after cutoff"
            },
            "page_size": {
              "type": "number",
              "title": "Harness Page Size",
              "default": 100,
              "description": "number of pipelines (builds) to fetch per call"
            },
            "deployment_timeout": {
              "type": "number",
              "title": "Harness Deployment Timeout",
              "default": 24,
              "description": "Max number of hours to consider for a deployment to be running/queued before giving up on syncing it"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "fe2b4084-3386-4d3b-9ad6-308f61a6f1e6",
      "name": "Harvest",
      "dockerRepository": "airbyte/source-harvest",
      "dockerImageTag": "0.1.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/harvest",
      "icon": "harvest.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/harvest",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Harvest Spec",
          "type": "object",
          "required": ["account_id", "replication_start_date"],
          "additionalProperties": true,
          "properties": {
            "account_id": {
              "title": "Account ID",
              "description": "Harvest account ID. Required for all Harvest requests in pair with Personal Access Token",
              "airbyte_secret": true,
              "type": "string",
              "order": 0
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "order": 1
            },
            "replication_end_date": {
              "title": "End Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "airbyte_hidden": true,
              "order": 2
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Harvest.",
              "type": "object",
              "order": 3,
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Harvest (OAuth)",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Harvest developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Harvest developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "Refresh Token to renew the expired Access Token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Authenticate with Personal Access Token",
                  "required": ["api_token"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "order": 0
                    },
                    "api_token": {
                      "title": "Personal Access Token",
                      "description": "Log into Harvest and then create new <a href=\"https://id.getharvest.com/developers\"> personal access token</a>.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        },
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.harvestapp.com"]
      }
    },
    {
      "sourceDefinitionId": "492b56d1-937c-462e-8076-21ad2031e784",
      "name": "Hellobaton",
      "dockerRepository": "airbyte/source-hellobaton",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/hellobaton",
      "icon": "hellobaton.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Hellobaton Spec",
          "type": "object",
          "required": ["api_key", "company"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "authentication key required to access the api endpoints",
              "airbyte_secret": true
            },
            "company": {
              "type": "string",
              "description": "Company name that generates your base api url",
              "examples": ["google", "facebook", "microsoft"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "8097ceb9-383f-42f6-9f92-d3fd4bcc7689",
      "name": "Hubplanner",
      "dockerRepository": "airbyte/source-hubplanner",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/hubplanner",
      "icon": "hubplanner.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/hubplanner",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Hubplanner Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "36c891d9-4bd9-43ac-bad2-10e12756272c",
      "name": "HubSpot",
      "dockerRepository": "airbyte/source-hubspot",
      "dockerImageTag": "0.3.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/hubspot",
      "icon": "hubspot.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/hubspot",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HubSpot Source Spec",
          "type": "object",
          "required": ["start_date", "credentials"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            },
            "credentials": {
              "title": "Authentication",
              "description": "Choose how to authenticate to HubSpot.",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth",
                  "required": [
                    "client_id",
                    "client_secret",
                    "refresh_token",
                    "credentials_title"
                  ],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials",
                      "description": "Name of the credentials",
                      "const": "OAuth Credentials",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "description": "The Client ID of your HubSpot developer application. See the <a href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\">Hubspot docs</a> if you need help finding this ID.",
                      "type": "string",
                      "examples": ["123456789000"]
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "description": "The client secret for your HubSpot developer application. See the <a href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\">Hubspot docs</a> if you need help finding this secret.",
                      "type": "string",
                      "examples": ["secret"],
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "description": "Refresh token to renew an expired access token. See the <a href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\">Hubspot docs</a> if you need help finding this token.",
                      "type": "string",
                      "examples": ["refresh_token"],
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Private App",
                  "required": ["access_token", "credentials_title"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials",
                      "description": "Name of the credentials set",
                      "const": "Private App Credentials",
                      "order": 0
                    },
                    "access_token": {
                      "title": "Access token",
                      "description": "HubSpot Access token. See the <a href=\"https://developers.hubspot.com/docs/api/private-apps\">Hubspot docs</a> if you need help finding this token.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.hubapi.com"]
      }
    },
    {
      "sourceDefinitionId": "f23b7b7c-d705-49a3-9042-09add3b104a5",
      "name": "IP2Whois",
      "dockerRepository": "airbyte/source-ip2whois",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/ip2whois",
      "icon": "ip2whois.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/ip2whois",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Ip2whois Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://www.ip2whois.com/developers-api\">here</a>.",
              "airbyte_secret": true
            },
            "domain": {
              "title": "Domain",
              "type": "string",
              "description": "Domain name. See <a href=\"https://www.ip2whois.com/developers-api\">here</a>.",
              "examples": ["www.google.com", "www.facebook.com"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "447e0381-3780-4b46-bb62-00a4e3c8b8e2",
      "name": "IBM Db2",
      "dockerRepository": "airbyte/source-db2",
      "dockerImageTag": "0.1.18",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/db2",
      "icon": "db2.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/db2",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "IBM Db2 Source Spec",
          "type": "object",
          "required": [
            "host",
            "port",
            "db",
            "username",
            "password",
            "encryption"
          ],
          "properties": {
            "host": {
              "description": "Host of the Db2.",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8123,
              "examples": ["8123"],
              "order": 1
            },
            "db": {
              "description": "Name of the database.",
              "type": "string",
              "examples": ["default"],
              "order": 2
            },
            "username": {
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "password": {
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "encryption": {
              "title": "Encryption",
              "type": "object",
              "description": "Encryption method to use when communicating with the database",
              "order": 6,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "description": "Data transfer will not be encrypted.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "unencrypted"
                    }
                  }
                },
                {
                  "title": "TLS Encrypted (verify certificate)",
                  "description": "Verify and use the cert provided by the server.",
                  "required": ["encryption_method", "ssl_certificate"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate"
                    },
                    "ssl_certificate": {
                      "title": "SSL PEM file",
                      "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true
                    },
                    "key_store_password": {
                      "title": "Key Store Password. This field is optional. If you do not fill in this field, the password will be randomly generated.",
                      "description": "Key Store Password",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}"]
      }
    },
    {
      "sourceDefinitionId": "38f84314-fe6a-4257-97be-a8dcd942d693",
      "name": "Insightly",
      "dockerRepository": "airbyte/source-insightly",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/insightly",
      "icon": "insightly.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/insightly",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Insightly Spec",
          "type": "object",
          "required": ["token", "start_date"],
          "additionalProperties": true,
          "properties": {
            "token": {
              "type": ["string", "null"],
              "title": "API Token",
              "description": "Your Insightly API token.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": ["string", "null"],
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Insightly in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only for incremental streams.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6acf6b55-4f1e-4fca-944e-1a3caef8aba8",
      "name": "Instagram",
      "dockerRepository": "airbyte/source-instagram",
      "dockerImageTag": "1.0.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/instagram",
      "icon": "instagram.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/instagram",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/instagram",
        "connectionSpecification": {
          "title": "Source Instagram",
          "type": "object",
          "properties": {
            "start_date": {
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            },
            "access_token": {
              "title": "Access Token",
              "description": "The value of the access token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/instagram\">docs</a> for more information",
              "airbyte_secret": true,
              "type": "string"
            }
          },
          "required": ["start_date", "access_token"]
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [],
            "oauthFlowOutputParameters": [["access_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["graph.facebook.com"]
      }
    },
    {
      "sourceDefinitionId": "1901024c-0249-45d0-bcac-31a954652927",
      "name": "Instatus",
      "dockerRepository": "airbyte/source-instatus",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/instatus",
      "icon": "instatus.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/instatus",
        "connectionSpecification": {
          "title": "Instatus Spec",
          "type": "object",
          "additionalProperties": true,
          "required": ["api_key"],
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Rest API Key",
              "airbyte_secret": true,
              "description": "Instatus REST API key"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d8313939-3782-41b0-be29-b3ca20d8dd3a",
      "name": "Intercom",
      "dockerRepository": "airbyte/source-intercom",
      "dockerImageTag": "0.1.31",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/intercom",
      "icon": "intercom.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/intercom",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Intercom Spec",
          "type": "object",
          "required": ["start_date", "access_token"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "access_token": {
              "title": "Access token",
              "type": "string",
              "description": "Access token for making authenticated requests. See the <a href=\"https://developers.intercom.com/building-apps/docs/authentication-types#how-to-get-your-access-token\">Intercom docs</a> for more information.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [],
            "oauthFlowOutputParameters": [["access_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.intercom.io"]
      }
    },
    {
      "sourceDefinitionId": "3d15163b-11d8-412f-b808-795c9b2c3a3a",
      "name": "Intruder",
      "dockerRepository": "airbyte/source-intruder",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/intruder",
      "icon": "intruder.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/intruder",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Intruder Spec",
          "type": "object",
          "required": ["access_token"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "title": "API Access token",
              "type": "string",
              "description": "Your API Access token. See <a href=\"https://developers.intruder.io/docs/authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2e875208-0c0b-4ee4-9e92-1cb3156ea799",
      "name": "Iterable",
      "dockerRepository": "airbyte/source-iterable",
      "dockerImageTag": "0.1.26",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/iterable",
      "icon": "iterable.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/iterable",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Iterable Spec",
          "type": "object",
          "required": ["start_date", "api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Iterable API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/iterable\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true,
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2021-04-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "order": 1,
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.iterable.com"]
      }
    },
    {
      "sourceDefinitionId": "d6f73702-d7a0-4e95-9758-b0fb1af0bfba",
      "name": "Jenkins",
      "dockerRepository": "farosai/airbyte-jenkins-source",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/jenkins",
      "icon": "jenkins.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.faros.ai",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Jenkins Spec",
          "type": "object",
          "required": ["server_url", "user", "token"],
          "additionalProperties": false,
          "properties": {
            "server_url": {
              "type": "string",
              "title": "Jenkins Server URL",
              "examples": ["https://my-jenkins-server.example.com"]
            },
            "user": {
              "type": "string",
              "description": "Jenkins User"
            },
            "token": {
              "type": "string",
              "title": "Jenkins Token",
              "airbyte_secret": true
            },
            "depth": {
              "type": "number",
              "title": "Depth",
              "description": "Jenkins JSON API does not support deep scan, it is required to generate a suitable tree for the corresponding depth. Job in some cases have many sub jobs, depth needs to quantify how many sub jobs are showed. If depth is not provided we will try to compute it automatically"
            },
            "pageSize": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "Page Size",
              "description": "Quantity of jobs on a single page fetched from Jenkins"
            },
            "last100Builds": {
              "type": "boolean",
              "default": false,
              "title": "Last 100 Builds Only",
              "description": "Fetch only 100 last builds from Jenkins server"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "68e63de2-bb83-4c7e-93fa-a8a9051e3993",
      "name": "Jira",
      "dockerRepository": "airbyte/source-jira",
      "dockerImageTag": "0.3.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/jira",
      "icon": "jira.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/jira",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Jira Spec",
          "type": "object",
          "required": ["api_token", "domain", "email"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "type": "string",
              "title": "API Token",
              "description": "Jira API Token. See the <a href=\"https://docs.airbyte.com/integrations/sources/jira\">docs</a> for more information on how to generate this key.",
              "airbyte_secret": true,
              "order": 0
            },
            "domain": {
              "type": "string",
              "title": "Domain",
              "examples": ["domainname.atlassian.net"],
              "pattern": "^[a-zA-Z0-9._-]*\\.atlassian\\.net$",
              "description": "The Domain for your Jira account, e.g. airbyteio.atlassian.net",
              "order": 1
            },
            "email": {
              "type": "string",
              "title": "Email",
              "description": "The user email for your Jira account.",
              "order": 2
            },
            "projects": {
              "type": "array",
              "title": "Projects",
              "items": {
                "type": "string"
              },
              "examples": ["PROJ1", "PROJ2"],
              "description": "List of Jira project keys to replicate data for.",
              "order": 3
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. For more information, refer to the <a href=\"https://docs.airbyte.com/integrations/sources/jira/\">documentation</a>.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "format": "date-time",
              "order": 4
            },
            "expand_issue_changelog": {
              "type": "boolean",
              "title": "Expand Issue Changelog",
              "description": "Expand the changelog when replicating issues.",
              "default": false,
              "order": 5
            },
            "render_fields": {
              "type": "boolean",
              "title": "Render Issue Fields",
              "description": "Render issue fields in HTML format in addition to Jira JSON-like format.",
              "default": false,
              "order": 6
            },
            "enable_experimental_streams": {
              "type": "boolean",
              "title": "Enable Experimental Streams",
              "description": "Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.com/integrations/sources/jira#experimental-tables for more info.",
              "default": false,
              "order": 7
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["${domain}"]
      }
    },
    {
      "sourceDefinitionId": "e300ece7-b073-43a3-852e-8aff36a57f13",
      "name": "K6 Cloud",
      "dockerRepository": "airbyte/source-k6-cloud",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/k6-cloud",
      "icon": "k6cloud.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/k6-cloud",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "K6 Cloud Spec",
          "type": "object",
          "required": ["api_token"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "title": "Api Token",
              "type": "string",
              "description": "Your API Token. See <a href=\"https://k6.io/docs/cloud/integrations/token/\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d917a47b-8537-4d0d-8c10-36a9928d4265",
      "name": "Kafka",
      "dockerRepository": "airbyte/source-kafka",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/kafka",
      "icon": "kafka.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/kafka",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Kafka Source Spec",
          "type": "object",
          "required": ["bootstrap_servers", "subscription", "protocol"],
          "additionalProperties": true,
          "properties": {
            "MessageFormat": {
              "title": "MessageFormat",
              "type": "object",
              "description": "The serialization used based on this ",
              "oneOf": [
                {
                  "title": "JSON",
                  "properties": {
                    "deserialization_type": {
                      "type": "string",
                      "const": "JSON"
                    }
                  }
                },
                {
                  "title": "AVRO",
                  "properties": {
                    "deserialization_type": {
                      "const": "AVRO"
                    },
                    "deserialization_strategy": {
                      "type": "string",
                      "enum": [
                        "TopicNameStrategy",
                        "RecordNameStrategy",
                        "TopicRecordNameStrategy"
                      ],
                      "default": "TopicNameStrategy"
                    },
                    "schema_registry_url": {
                      "type": "string",
                      "examples": ["http://localhost:8081"]
                    },
                    "schema_registry_username": {
                      "type": "string",
                      "default": ""
                    },
                    "schema_registry_password": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            },
            "bootstrap_servers": {
              "title": "Bootstrap Servers",
              "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).",
              "type": "string",
              "examples": ["kafka-broker1:9092,kafka-broker2:9092"]
            },
            "subscription": {
              "title": "Subscription Method",
              "type": "object",
              "description": "You can choose to manually assign a list of partitions, or subscribe to all topics matching specified pattern to get dynamically assigned partitions.",
              "oneOf": [
                {
                  "title": "Manually assign a list of partitions",
                  "required": ["subscription_type", "topic_partitions"],
                  "properties": {
                    "subscription_type": {
                      "description": "Manually assign a list of partitions to this consumer. This interface does not allow for incremental assignment and will replace the previous assignment (if there is one).\nIf the given list of topic partitions is empty, it is treated the same as unsubscribe().",
                      "type": "string",
                      "const": "assign"
                    },
                    "topic_partitions": {
                      "title": "List of topic:partition Pairs",
                      "type": "string",
                      "examples": ["sample.topic:0, sample.topic:1"]
                    }
                  }
                },
                {
                  "title": "Subscribe to all topics matching specified pattern",
                  "required": ["subscription_type", "topic_pattern"],
                  "properties": {
                    "subscription_type": {
                      "description": "The Topic pattern from which the records will be read.",
                      "type": "string",
                      "const": "subscribe"
                    },
                    "topic_pattern": {
                      "title": "Topic Pattern",
                      "type": "string",
                      "examples": ["sample.topic"]
                    }
                  }
                }
              ]
            },
            "test_topic": {
              "title": "Test Topic",
              "description": "The Topic to test in case the Airbyte can consume messages.",
              "type": "string",
              "examples": ["test.topic"]
            },
            "group_id": {
              "title": "Group ID",
              "description": "The Group ID is how you distinguish different consumer groups.",
              "type": "string",
              "examples": ["group.id"]
            },
            "max_poll_records": {
              "title": "Max Poll Records",
              "description": "The maximum number of records returned in a single call to poll(). Note, that max_poll_records does not impact the underlying fetching behavior. The consumer will cache the records from each fetch request and returns them incrementally from each poll.",
              "type": "integer",
              "default": 500
            },
            "polling_time": {
              "title": "Polling Time",
              "description": "Amount of time Kafka connector should try to poll for messages.",
              "type": "integer",
              "default": 100
            },
            "protocol": {
              "title": "Protocol",
              "type": "object",
              "description": "The Protocol used to communicate with brokers.",
              "oneOf": [
                {
                  "title": "PLAINTEXT",
                  "required": ["security_protocol"],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "const": "PLAINTEXT"
                    }
                  }
                },
                {
                  "title": "SASL PLAINTEXT",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "const": "SASL_PLAINTEXT"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "The SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "const": "PLAIN"
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "The JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": "",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "SASL SSL",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "const": "SASL_SSL"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "The SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "default": "GSSAPI",
                      "enum": [
                        "GSSAPI",
                        "OAUTHBEARER",
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-512",
                        "PLAIN"
                      ]
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "The JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": "",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "client_id": {
              "title": "Client ID",
              "description": "An ID string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.",
              "type": "string",
              "examples": ["airbyte-consumer"]
            },
            "enable_auto_commit": {
              "title": "Enable Auto Commit",
              "description": "If true, the consumer's offset will be periodically committed in the background.",
              "type": "boolean",
              "default": true
            },
            "auto_commit_interval_ms": {
              "title": "Auto Commit Interval, ms",
              "description": "The frequency in milliseconds that the consumer offsets are auto-committed to Kafka if enable.auto.commit is set to true.",
              "type": "integer",
              "default": 5000
            },
            "client_dns_lookup": {
              "title": "Client DNS Lookup",
              "description": "Controls how the client uses DNS lookups. If set to use_all_dns_ips, connect to each returned IP address in sequence until a successful connection is established. After a disconnection, the next IP is used. Once all IPs have been used once, the client resolves the IP(s) from the hostname again. If set to resolve_canonical_bootstrap_servers_only, resolve each bootstrap address into a list of canonical names. After the bootstrap phase, this behaves the same as use_all_dns_ips. If set to default (deprecated), attempt to connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.",
              "type": "string",
              "default": "use_all_dns_ips",
              "enum": [
                "default",
                "use_all_dns_ips",
                "resolve_canonical_bootstrap_servers_only"
              ]
            },
            "retry_backoff_ms": {
              "title": "Retry Backoff, ms",
              "description": "The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.",
              "type": "integer",
              "default": 100
            },
            "request_timeout_ms": {
              "title": "Request Timeout, ms",
              "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.",
              "type": "integer",
              "default": 30000
            },
            "receive_buffer_bytes": {
              "title": "Receive Buffer, bytes",
              "description": "The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.",
              "type": "integer",
              "default": 32768
            },
            "auto_offset_reset": {
              "title": "Auto Offset Reset",
              "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server - earliest: automatically reset the offset to the earliest offset, latest: automatically reset the offset to the latest offset, none: throw exception to the consumer if no previous offset is found for the consumer's group, anything else: throw exception to the consumer.",
              "type": "string",
              "default": "latest",
              "enum": ["latest", "earliest", "none"]
            },
            "repeated_calls": {
              "title": "Repeated Calls",
              "description": "The number of repeated calls to poll() if no messages were received.",
              "type": "integer",
              "default": 3
            },
            "max_records_process": {
              "title": "Maximum Records",
              "description": "The Maximum to be processed per execution",
              "type": "integer",
              "default": 100000
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "supported_source_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "60c24725-00ae-490c-991d-55b78c3197e0",
      "name": "Klarna",
      "dockerRepository": "airbyte/source-klarna",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/klarna",
      "icon": "klarna.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/klarna",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Klarna Spec",
          "type": "object",
          "required": ["region", "playground", "username", "password"],
          "additionalProperties": true,
          "properties": {
            "region": {
              "title": "Region",
              "type": "string",
              "enum": ["eu", "us", "oc"],
              "description": "Base url region (For playground eu https://docs.klarna.com/klarna-payments/api/payments-api/#tag/API-URLs). Supported 'eu', 'us', 'oc'"
            },
            "playground": {
              "title": "Playground",
              "type": "boolean",
              "description": "Propertie defining if connector is used against playground or production environment",
              "default": false
            },
            "username": {
              "title": "Username",
              "type": "string",
              "description": "Consists of your Merchant ID (eid) - a unique number that identifies your e-store, combined with a random string (https://developers.klarna.com/api/#authentication)"
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "A string which is associated with your Merchant ID and is used to authorize use of Klarna's APIs (https://developers.klarna.com/api/#authentication)",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "95e8cffd-b8c4-4039-968e-d32fb4a69bde",
      "name": "Klaviyo",
      "dockerRepository": "airbyte/source-klaviyo",
      "dockerImageTag": "0.1.13",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/klaviyo",
      "icon": "klaviyo.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/klaviyo",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/klaviyo",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Klaviyo Spec",
          "type": "object",
          "properties": {
            "api_key": {
              "title": "Api Key",
              "description": "Klaviyo API Key. See our <a href=\"https://docs.airbyte.com/integrations/sources/klaviyo\">docs</a> if you need help finding this key.",
              "airbyte_secret": true,
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["api_key", "start_date"]
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["a.klaviyo.com", "klaviyo.com"]
      }
    },
    {
      "sourceDefinitionId": "547dc08e-ab51-421d-953b-8f3745201a8c",
      "name": "Kyriba",
      "dockerRepository": "airbyte/source-kyriba",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/kyriba",
      "icon": "kyriba.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Kyriba Spec",
          "type": "object",
          "required": ["domain", "username", "password", "start_date"],
          "additionalProperties": false,
          "properties": {
            "domain": {
              "type": "string",
              "description": "Kyriba domain",
              "title": "Domain",
              "examples": ["demo.kyriba.com"],
              "pattern": "^[a-zA-Z0-9._-]*\\.[a-zA-Z0-9._-]*\\.[a-z]*"
            },
            "username": {
              "type": "string",
              "description": "Username to be used in basic auth",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "description": "Password to be used in basic auth",
              "title": "Password",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "description": "The date the sync should start from.",
              "title": "Start Date",
              "examples": ["2021-01-10"],
              "pattern": "^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$"
            },
            "end_date": {
              "type": "string",
              "description": "The date the sync should end. If let empty the sync will run to the current date.",
              "title": "End Date",
              "examples": ["2022-03-01"],
              "pattern": "^(?:(\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01]))|)$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f96bb511-5e3c-48fc-b408-547953cd81a4",
      "name": "LaunchDarkly",
      "dockerRepository": "airbyte/source-launchdarkly",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/launchdarkly",
      "icon": "launchdarkly.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/launchdarkly",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Launchdarkly Spec",
          "type": "object",
          "required": ["access_token"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "title": "Access token",
              "type": "string",
              "description": "Your Access token. See <a href=\"https://apidocs.launchdarkly.com/#section/Overview/Authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "789f8e7a-2d28-11ec-8d3d-0242ac130003",
      "name": "Lemlist",
      "dockerRepository": "airbyte/source-lemlist",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/lemlist",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/lemlist",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Lemlist Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API key",
              "description": "Lemlist API key.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "3981c999-bd7d-4afc-849b-e53dea90c948",
      "name": "Lever Hiring",
      "dockerRepository": "airbyte/source-lever-hiring",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/lever-hiring",
      "icon": "leverhiring.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/lever-hiring",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/lever-hiring#changelog",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Lever Hiring Source Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "order": 3,
              "title": "Authentication Mechanism",
              "description": "Choose how to authenticate to Lever Hiring.",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Lever (OAuth)",
                  "required": ["refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Lever Hiring developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Lever Hiring developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "The token for obtaining new access token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Authenticate via Lever (Api Key)",
                  "required": ["api_key"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Api Key",
                      "order": 0
                    },
                    "api_key": {
                      "title": "Api key",
                      "type": "string",
                      "description": "The Api Key of your Lever Hiring account.",
                      "airbyte_secret": true,
                      "order": 1
                    }
                  }
                }
              ]
            },
            "start_date": {
              "order": 0,
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "environment": {
              "order": 1,
              "type": "string",
              "title": "Environment",
              "description": "The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.",
              "default": "Sandbox",
              "enum": ["Production", "Sandbox"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        },
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "properties": {
                "environment": {
                  "type": "string",
                  "path_in_connector_config": ["environment"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "137ece28-5434-455c-8f34-69dc3782f451",
      "name": "LinkedIn Ads",
      "dockerRepository": "airbyte/source-linkedin-ads",
      "dockerImageTag": "0.1.15",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/linkedin-ads",
      "icon": "linkedin.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/linkedin-ads",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Linkedin Ads Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oAuth2.0"
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The client ID of the LinkedIn Ads developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client secret",
                      "description": "The client secret the LinkedIn Ads developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh token",
                      "description": "The key to refresh the expired access token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Access token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "access_token"
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access token",
                      "description": "The token value generated using the authentication code. See the <a href=\"https://docs.airbyte.com/integrations/sources/linkedin-ads#authentication\">docs</a> to obtain yours.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "UTC date in the format 2020-09-17. Any data before this date will not be replicated.",
              "examples": ["2021-05-17"],
              "format": "date"
            },
            "account_ids": {
              "title": "Account IDs",
              "type": "array",
              "description": "Specify the account IDs separated by a space, to pull the data from. Leave empty, if you want to pull the data from all associated accounts. See the <a href=\"https://www.linkedin.com/help/linkedin/answer/a424270/find-linkedin-ads-account-details?lang=en\">LinkedIn Ads docs</a> for more info.",
              "items": {
                "type": "integer"
              },
              "default": []
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.linkedin.com"]
      }
    },
    {
      "sourceDefinitionId": "af54297c-e8f8-4d63-a00d-a94695acc9d3",
      "name": "LinkedIn Pages",
      "dockerRepository": "airbyte/source-linkedin-pages",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/linkedin-pages",
      "icon": "linkedin.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/linkedin-pages/",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Linkedin Pages Spec",
          "type": "object",
          "required": ["org_id"],
          "additionalProperties": true,
          "properties": {
            "org_id": {
              "title": "Organization ID",
              "type": "integer",
              "airbyte_secret": true,
              "description": "Specify the Organization ID",
              "examples": ["123456789"]
            },
            "credentials": {
              "title": "Authentication",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oAuth2.0"
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The client ID of the LinkedIn developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client secret",
                      "description": "The client secret of the LinkedIn developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh token",
                      "description": "The token value generated using the LinkedIn Developers OAuth Token Tools. See the <a href=\"https://docs.airbyte.com/integrations/sources/linkedin-pages/\">docs</a> to obtain yours.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Access token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "access_token"
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access token",
                      "description": "The token value generated using the LinkedIn Developers OAuth Token Tools. See the <a href=\"https://docs.airbyte.com/integrations/sources/linkedin-pages/\">docs</a> to obtain yours.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7b86879e-26c5-4ef6-a5ce-2be5c7b46d1e",
      "name": "Linnworks",
      "dockerRepository": "airbyte/source-linnworks",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/linnworks",
      "icon": "linnworks.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/linnworks",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Linnworks Spec",
          "type": "object",
          "required": [
            "application_id",
            "application_secret",
            "token",
            "start_date"
          ],
          "additionalProperties": false,
          "properties": {
            "application_id": {
              "title": "Application ID.",
              "description": "Linnworks Application ID",
              "type": "string"
            },
            "application_secret": {
              "title": "Application Secret",
              "description": "Linnworks Application Secret",
              "type": "string",
              "airbyte_secret": true
            },
            "token": {
              "title": "API Token",
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "45e0b135-615c-40ac-b38e-e65b0944197f",
      "name": "Lokalise",
      "dockerRepository": "airbyte/source-lokalise",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/lokalise",
      "icon": "lokalise.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/lokalise",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Lokalise Spec",
          "type": "object",
          "required": ["api_key", "project_id"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Lokalise API Key with read-access. Available at Profile settings > API tokens. See <a href=\"https://docs.lokalise.com/en/articles/1929556-api-tokens\">here</a>.",
              "airbyte_secret": true
            },
            "project_id": {
              "title": "Project Id",
              "type": "string",
              "description": "Lokalise project ID. Available at Project Settings > General."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "00405b19-9768-4e0c-b1ae-9fc2ee2b2a8c",
      "name": "Looker",
      "dockerRepository": "airbyte/source-looker",
      "dockerImageTag": "0.2.8",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/looker",
      "icon": "looker.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/looker",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Looker Spec",
          "type": "object",
          "required": ["domain", "client_id", "client_secret"],
          "additionalProperties": true,
          "properties": {
            "domain": {
              "type": "string",
              "title": "Domain",
              "examples": [
                "domainname.looker.com",
                "looker.clientname.com",
                "123.123.124.123:8000"
              ],
              "description": "Domain for your Looker account, e.g. airbyte.cloud.looker.com,looker.[clientname].com,IP address"
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID is first part of an API3 key that is specific to each Looker user. See the <a href=\"https://docs.airbyte.com/integrations/sources/looker\">docs</a> for more information on how to generate this key."
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret is second part of an API3 key.",
              "airbyte_secret": true
            },
            "run_look_ids": {
              "title": "Look IDs to Run",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9]*$"
              },
              "description": "The IDs of any Looks to run"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b03a9f3e-22a5-11eb-adc1-0242ac120002",
      "name": "Mailchimp",
      "dockerRepository": "airbyte/source-mailchimp",
      "dockerImageTag": "0.3.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailchimp",
      "icon": "mailchimp.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailchimp",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Mailchimp Spec",
          "type": "object",
          "required": [],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "type": "object",
              "title": "Authentication",
              "oneOf": [
                {
                  "title": "OAuth2.0",
                  "type": "object",
                  "required": ["auth_type", "access_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "title": "Access Token",
                      "type": "string",
                      "description": "An access token generated using the above client ID and secret.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "API Key",
                  "required": ["auth_type", "apikey"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "apikey",
                      "order": 1
                    },
                    "apikey": {
                      "type": "string",
                      "title": "API Key",
                      "description": "Mailchimp API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/mailchimp\">docs</a> for information on how to generate this key.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "campaign_id": {
              "type": "string",
              "title": "ID of a campaign to sync email activities",
              "airbyte_hidden": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available"
    },
    {
      "sourceDefinitionId": "56582331-5de2-476b-b913-5798de77bbdf",
      "name": "Mailjet Mail",
      "dockerRepository": "airbyte/source-mailjet-mail",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailjet-mail",
      "icon": "mailjetmail.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailjet-mail",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Mailjet Mail Spec",
          "type": "object",
          "required": ["api_key", "api_key_secret"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://dev.mailjet.com/email/guides/#authentication\">here</a>."
            },
            "api_key_secret": {
              "title": "API Secret Key",
              "type": "string",
              "description": "Your API Secret Key. See <a href=\"https://dev.mailjet.com/email/guides/#authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6ec2acea-7fd1-4378-b403-41a666e0c028",
      "name": "Mailjet SMS",
      "dockerRepository": "airbyte/source-mailjet-sms",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailjet-sms",
      "icon": "mailjetsms.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailjet-sms",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Mailjet Sms Spec",
          "type": "object",
          "required": ["token"],
          "additionalProperties": true,
          "properties": {
            "token": {
              "title": "Access Token",
              "type": "string",
              "description": "Your access token. See <a href=\"https://dev.mailjet.com/sms/reference/overview/authentication\">here</a>.",
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start date",
              "type": "integer",
              "description": "Retrieve SMS messages created after the specified timestamp. Required format - Unix timestamp.",
              "pattern": "^[0-9]*$",
              "examples": [1666261656]
            },
            "end_date": {
              "title": "End date",
              "type": "integer",
              "description": "Retrieve SMS messages created before the specified timestamp. Required format - Unix timestamp.",
              "pattern": "^[0-9]*$",
              "examples": [1666281656]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "dc3b9003-2432-4e93-a7f4-4620b0f14674",
      "name": "MailerLite",
      "dockerRepository": "airbyte/source-mailerlite",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailerlite",
      "icon": "mailerlite.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailerlite",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Mailerlite Spec",
          "type": "object",
          "required": ["api_token"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Your API Token. See <a href=\"https://developers.mailerlite.com/docs/#authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2707d529-3c04-46eb-9c7e-40d4038df6f7",
      "name": "MailerSend",
      "dockerRepository": "airbyte/source-mailersend",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailersend",
      "icon": "mailersend.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailersend",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Mailersend Spec",
          "type": "object",
          "required": ["api_token", "domain_id"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Your API Token. See <a href=\"https://www.mailersend.com/help/managing-api-tokens\">here</a>.",
              "airbyte_secret": true
            },
            "domain_id": {
              "type": "string",
              "description": "The domain entity in mailersend",
              "examples": ["airbyte.com", "linkana.com"]
            },
            "start_date": {
              "type": "number",
              "description": "Timestamp is assumed to be UTC.",
              "examples": [123131321]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "5b9cb09e-1003-4f9c-983d-5779d1b2cd51",
      "name": "Mailgun",
      "dockerRepository": "airbyte/source-mailgun",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailgun",
      "icon": "mailgun.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mailgun",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Mailgun Spec",
          "type": "object",
          "required": ["private_key"],
          "additionalProperties": true,
          "properties": {
            "private_key": {
              "type": "string",
              "airbyte_secret": true,
              "description": "Primary account API key to access your Mailgun data.",
              "title": "Private API Key"
            },
            "domain_region": {
              "type": "string",
              "description": "Domain region code. 'EU' or 'US' are possible values. The default is 'US'.",
              "title": "Domain Region Code"
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "examples": ["2020-10-01 00:00:00"],
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9e0556f4-69df-4522-a3fb-03264d36b348",
      "name": "Marketo",
      "dockerRepository": "airbyte/source-marketo",
      "dockerImageTag": "1.0.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/marketo",
      "icon": "marketo.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/marketo",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Marketo Spec",
          "type": "object",
          "required": [
            "domain_url",
            "client_id",
            "client_secret",
            "start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "domain_url": {
              "title": "Domain URL",
              "type": "string",
              "order": 3,
              "description": "Your Marketo Base URL. See <a href=\"https://docs.airbyte.com/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "examples": ["https://000-AAA-000.mktorest.com"],
              "airbyte_secret": true
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID of your Marketo developer application. See <a href=\"https://docs.airbyte.com/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "order": 0,
              "airbyte_secret": true
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret of your Marketo developer application. See <a href=\"https://docs.airbyte.com/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "order": 1,
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "order": 2,
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-09-25T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.mktorest.com"]
      }
    },
    {
      "sourceDefinitionId": "c7cb421b-942e-4468-99ee-e369bcabaec5",
      "name": "Metabase",
      "dockerRepository": "airbyte/source-metabase",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/metabase",
      "icon": "metabase.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/metabase",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Metabase Source Spec",
          "type": "object",
          "required": ["instance_api_url"],
          "additionalProperties": true,
          "properties": {
            "instance_api_url": {
              "type": "string",
              "title": "Metabase Instance API URL",
              "description": "URL to your metabase instance API",
              "examples": ["https://localhost:3000/api/"],
              "pattern": "^https://",
              "order": 0
            },
            "username": {
              "type": "string",
              "order": 1
            },
            "password": {
              "type": "string",
              "airbyte_secret": true,
              "order": 2
            },
            "session_token": {
              "type": "string",
              "description": "To generate your session token, you need to run the following command: ``` curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"person@metabase.com\", \"password\": \"fakepassword\"}' \\\n  http://localhost:3000/api/session\n``` Then copy the value of the `id` field returned by a successful call to that API.\nNote that by default, sessions are good for 14 days and needs to be regenerated.",
              "airbyte_secret": true,
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta"
    },
    {
      "sourceDefinitionId": "b5ea17b1-f170-46dc-bc31-cc744ca984c1",
      "name": "Microsoft SQL Server (MSSQL)",
      "dockerRepository": "airbyte/source-mssql",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mssql",
      "icon": "mssql.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/mssql",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MSSQL Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "description": "The hostname of the database.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "The port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "examples": ["1433"],
              "order": 1
            },
            "database": {
              "description": "The name of the database.",
              "title": "Database",
              "type": "string",
              "examples": ["master"],
              "order": 2
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Defaults to user. Case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "default": ["dbo"],
              "order": 3
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string",
              "order": 4
            },
            "password": {
              "description": "The password associated with the username.",
              "title": "Password",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 6
            },
            "ssl_method": {
              "title": "SSL Method",
              "type": "object",
              "description": "The encryption method which is used when communicating with the database.",
              "order": 7,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "description": "Data transfer will not be encrypted.",
                  "required": ["ssl_method"],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Encrypted (trust server certificate)",
                  "description": "Use the certificate provided by the server without verification. (For testing purposes only!)",
                  "required": ["ssl_method"],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_trust_server_certificate"
                    }
                  }
                },
                {
                  "title": "Encrypted (verify certificate)",
                  "description": "Verify and use the certificate provided by the server.",
                  "required": [
                    "ssl_method",
                    "trustStoreName",
                    "trustStorePassword"
                  ],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate"
                    },
                    "hostNameInCertificate": {
                      "title": "Host Name In Certificate",
                      "type": "string",
                      "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.",
                      "order": 7
                    }
                  }
                }
              ]
            },
            "replication_method": {
              "type": "object",
              "title": "Replication Method",
              "description": "The replication method used for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
              "default": "STANDARD",
              "order": 8,
              "oneOf": [
                {
                  "title": "Standard",
                  "description": "Standard replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "STANDARD",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Logical Replication (CDC)",
                  "description": "CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "CDC",
                      "order": 0
                    },
                    "data_to_sync": {
                      "title": "Data to Sync",
                      "type": "string",
                      "default": "Existing and New",
                      "enum": ["Existing and New", "New Changes Only"],
                      "description": "What data should be synced under the CDC. \"Existing and New\" will read existing data as a snapshot, and sync new changes through CDC. \"New Changes Only\" will skip the initial snapshot, and only sync new changes through CDC.",
                      "order": 1
                    },
                    "snapshot_isolation": {
                      "title": "Initial Snapshot Isolation Level",
                      "type": "string",
                      "default": "Snapshot",
                      "enum": ["Snapshot", "Read Committed"],
                      "description": "Existing data in the database are synced through an initial snapshot. This parameter controls the isolation level that will be used during the initial snapshotting. If you choose the \"Snapshot\" level, you must enable the <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/snapshot-isolation-in-sql-server\">snapshot isolation mode</a> on the database.",
                      "order": 2
                    },
                    "initial_waiting_seconds": {
                      "type": "integer",
                      "title": "Initial Waiting Time in Seconds (Advanced)",
                      "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about <a href=\"https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc\">initial waiting time</a>.",
                      "default": 300,
                      "min": 120,
                      "max": 1200,
                      "order": 3
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "eaf50f04-21dd-4620-913b-2a83f5635227",
      "name": "Microsoft teams",
      "dockerRepository": "airbyte/source-microsoft-teams",
      "dockerImageTag": "0.2.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/microsoft-teams",
      "icon": "microsoft-teams.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/microsoft-teams",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Microsoft Teams Spec",
          "type": "object",
          "required": ["period"],
          "additionalProperties": true,
          "properties": {
            "period": {
              "type": "string",
              "title": "Period",
              "description": "Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.",
              "examples": ["D7"]
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Microsoft",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Microsoft (OAuth 2.0)",
                  "required": [
                    "tenant_id",
                    "client_id",
                    "client_secret",
                    "refresh_token"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "enum": ["Client"],
                      "default": "Client",
                      "order": 0
                    },
                    "tenant_id": {
                      "title": "Directory (tenant) ID",
                      "type": "string",
                      "description": "A globally unique identifier (GUID) that is different than your organization name or domain. Follow these steps to obtain: open one of the Teams where you belong inside the Teams Application -> Click on the … next to the Team title -> Click on Get link to team -> Copy the link to the team and grab the tenant ID form the URL"
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Microsoft Teams developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Microsoft Teams developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "A Refresh Token to renew the expired Access Token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Authenticate via Microsoft",
                  "required": ["tenant_id", "client_id", "client_secret"],
                  "additionalProperties": false,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "enum": ["Token"],
                      "default": "Token",
                      "order": 0
                    },
                    "tenant_id": {
                      "title": "Directory (tenant) ID",
                      "type": "string",
                      "description": "A globally unique identifier (GUID) that is different than your organization name or domain. Follow these steps to obtain: open one of the Teams where you belong inside the Teams Application -> Click on the … next to the Team title -> Click on Get link to team -> Copy the link to the team and grab the tenant ID form the URL"
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Microsoft Teams developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Microsoft Teams developer application.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tenant_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "tenant_id"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9220e3de-3b60-4bb2-a46f-046d59ea235a",
      "name": "Microsoft Dataverse",
      "dockerRepository": "airbyte/source-microsoft-dataverse",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/microsoft-dataverse",
      "icon": "microsoftdataverse.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/microsoft-dataverse",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Microsoft Dataverse Spec",
          "type": "object",
          "required": ["url", "tenant_id", "client_id", "client_secret_value"],
          "additionalProperties": true,
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to Microsoft Dataverse API",
              "title": "URL",
              "examples": ["https://<org-id>.crm.dynamics.com"],
              "order": 0
            },
            "tenant_id": {
              "type": "string",
              "description": "Tenant Id of your Microsoft Dataverse Instance",
              "title": "Tenant Id",
              "airbyte_secret": true,
              "order": 1
            },
            "client_id": {
              "type": "string",
              "description": "App Registration Client Id",
              "title": "Client Id",
              "airbyte_secret": true,
              "order": 2
            },
            "client_secret_value": {
              "type": "string",
              "description": "App Registration Client Secret",
              "title": "Client Secret",
              "airbyte_secret": true,
              "order": 3
            },
            "odata_maxpagesize": {
              "type": "integer",
              "description": "Max number of results per page. Default=5000",
              "title": "Max page size",
              "default": 5000,
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "12928b32-bf0a-4f1e-964f-07e12e37153a",
      "name": "Mixpanel",
      "dockerRepository": "airbyte/source-mixpanel",
      "dockerImageTag": "0.1.30",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mixpanel",
      "icon": "mixpanel.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mixpanel",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Mixpanel Spec",
          "type": "object",
          "properties": {
            "credentials": {
              "title": "Authentication *",
              "description": "Choose how to authenticate to Mixpanel",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "type": "object",
                  "title": "Service Account",
                  "required": ["username", "secret"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "Service Account",
                      "order": 0
                    },
                    "username": {
                      "order": 1,
                      "title": "Username",
                      "type": "string",
                      "description": "Mixpanel Service Account Username. See the <a href=\"https://developer.mixpanel.com/reference/service-accounts\">docs</a> for more information on how to obtain this."
                    },
                    "secret": {
                      "order": 2,
                      "title": "Secret",
                      "type": "string",
                      "description": "Mixpanel Service Account Secret. See the <a href=\"https://developer.mixpanel.com/reference/service-accounts\">docs</a> for more information on how to obtain this.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Project Secret",
                  "required": ["api_secret"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "Project Secret",
                      "order": 0
                    },
                    "api_secret": {
                      "order": 1,
                      "title": "Project Secret",
                      "type": "string",
                      "description": "Mixpanel project secret. See the <a href=\"https://developer.mixpanel.com/reference/project-secret#managing-a-projects-secret\">docs</a> for more information on how to obtain this.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "project_id": {
              "order": 1,
              "title": "Project ID",
              "description": "Your project ID number. See the <a href=\"https://help.mixpanel.com/hc/en-us/articles/115004490503-Project-Settings#project-id\">docs</a> for more information on how to obtain this.",
              "type": "integer"
            },
            "attribution_window": {
              "order": 2,
              "title": "Attribution Window",
              "type": "integer",
              "description": " A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days.",
              "default": 5
            },
            "project_timezone": {
              "order": 3,
              "title": "Project Timezone",
              "type": "string",
              "description": "Time zone in which integer date times are stored. The project timezone may be found in the project settings in the <a href=\"https://help.mixpanel.com/hc/en-us/articles/115004547203-Manage-Timezones-for-Projects-in-Mixpanel\">Mixpanel console</a>.",
              "default": "US/Pacific",
              "examples": ["US/Pacific", "UTC"]
            },
            "select_properties_by_default": {
              "order": 4,
              "title": "Select Properties By Default",
              "type": "boolean",
              "description": "Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored.",
              "default": true
            },
            "start_date": {
              "order": 5,
              "title": "Start Date",
              "type": "string",
              "description": "The date in the format YYYY-MM-DD. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.",
              "examples": ["2021-11-16"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
            },
            "end_date": {
              "order": 6,
              "title": "End Date",
              "type": "string",
              "description": "The date in the format YYYY-MM-DD. Any data after this date will not be replicated. Left empty to always sync to most recent date",
              "examples": ["2021-11-16"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
            },
            "region": {
              "order": 7,
              "title": "Region",
              "description": "The region of mixpanel domain instance either US or EU.",
              "type": "string",
              "enum": ["US", "EU"],
              "default": "US"
            },
            "date_window_size": {
              "order": 8,
              "title": "Date slicing window",
              "description": "Defines window size in days, that used to slice through data. You can reduce it, if amount of data in each window is too big for your environment.",
              "type": "integer",
              "minimum": 1,
              "default": 30
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available"
    },
    {
      "sourceDefinitionId": "80a54ea2-9959-4040-aac1-eee42423ec9b",
      "name": "Monday",
      "dockerRepository": "airbyte/source-monday",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/monday",
      "icon": "monday.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/monday",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Monday Spec",
          "type": "object",
          "required": [],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "access_token"
                  ],
                  "properties": {
                    "subdomain": {
                      "type": "string",
                      "title": "Subdomain/Slug",
                      "description": "Slug/subdomain of the account, or the first part of the URL that comes before .monday.com",
                      "default": "",
                      "order": 0
                    },
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 1
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["auth_type", "api_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "api_token",
                      "order": 0
                    },
                    "api_token": {
                      "type": "string",
                      "title": "Personal API Token",
                      "description": "API Token for making authenticated requests.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "subdomain": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "subdomain"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.monday.com"]
      }
    },
    {
      "sourceDefinitionId": "b2e713cd-cc36-4c0a-b5bd-b47cb8a0561e",
      "name": "MongoDb",
      "dockerRepository": "airbyte/source-mongodb-v2",
      "dockerImageTag": "0.1.19",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mongodb-v2",
      "icon": "mongodb.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mongodb-v2",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/mongodb-v2",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MongoDb Source Spec",
          "type": "object",
          "required": ["database"],
          "additionalProperties": true,
          "properties": {
            "instance_type": {
              "type": "object",
              "title": "MongoDb Instance Type",
              "description": "The MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.",
              "order": 0,
              "oneOf": [
                {
                  "title": "Standalone MongoDb Instance",
                  "required": ["instance", "host", "port"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["standalone"],
                      "default": "standalone"
                    },
                    "host": {
                      "title": "Host",
                      "type": "string",
                      "description": "The host name of the Mongo database.",
                      "order": 0
                    },
                    "port": {
                      "title": "Port",
                      "type": "integer",
                      "description": "The port of the Mongo database.",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 27017,
                      "examples": ["27017"],
                      "order": 1
                    },
                    "tls": {
                      "title": "TLS Connection",
                      "type": "boolean",
                      "description": "Indicates whether TLS encryption protocol will be used to connect to MongoDB. It is recommended to use TLS connection if possible. For more information see <a href=\"https://docs.airbyte.com/integrations/sources/mongodb-v2\">documentation</a>.",
                      "default": false,
                      "order": 2
                    }
                  }
                },
                {
                  "title": "Replica Set",
                  "required": ["instance", "server_addresses"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["replica"],
                      "default": "replica"
                    },
                    "server_addresses": {
                      "title": "Server Addresses",
                      "type": "string",
                      "description": "The members of a replica set. Please specify `host`:`port` of each member separated by comma.",
                      "examples": ["host1:27017,host2:27017,host3:27017"],
                      "order": 0
                    },
                    "replica_set": {
                      "title": "Replica Set",
                      "type": "string",
                      "description": "A replica set in MongoDB is a group of mongod processes that maintain the same data set.",
                      "order": 1
                    }
                  }
                },
                {
                  "title": "MongoDB Atlas",
                  "additionalProperties": false,
                  "required": ["instance", "cluster_url"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["atlas"],
                      "default": "atlas"
                    },
                    "cluster_url": {
                      "title": "Cluster URL",
                      "type": "string",
                      "description": "The URL of a cluster to connect to.",
                      "order": 0
                    }
                  }
                }
              ]
            },
            "database": {
              "title": "Database Name",
              "type": "string",
              "description": "The database you want to replicate.",
              "order": 1
            },
            "user": {
              "title": "User",
              "type": "string",
              "description": "The username which is used to access the database.",
              "order": 2
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "The password associated with this username.",
              "airbyte_secret": true,
              "order": 3
            },
            "auth_source": {
              "title": "Authentication Source",
              "type": "string",
              "description": "The authentication source where the user information is stored.",
              "default": "admin",
              "examples": ["admin"],
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "722ba4bf-06ec-45a4-8dd5-72e4a5cf3903",
      "name": "My Hours",
      "dockerRepository": "airbyte/source-my-hours",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/my-hours",
      "icon": "my-hours.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/my-hours",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "My Hours Spec",
          "type": "object",
          "required": ["email", "password", "start_date"],
          "additionalProperties": false,
          "properties": {
            "email": {
              "title": "Email",
              "type": "string",
              "description": "Your My Hours username",
              "example": "john@doe.com"
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "The password associated to the username",
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start Date",
              "description": "Start date for collecting time logs",
              "examples": ["%Y-%m-%d", "2016-01-01"],
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "logs_batch_size": {
              "title": "Time logs batch size",
              "description": "Pagination size used for retrieving logs in days",
              "examples": [30],
              "type": "integer",
              "minimum": 1,
              "maximum": 365,
              "default": 30
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "435bb9a5-7887-4809-aa58-28c27df0d7ad",
      "name": "MySQL",
      "dockerRepository": "airbyte/source-mysql",
      "dockerImageTag": "2.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/mysql",
      "icon": "mysql.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/mysql",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MySql Source Spec",
          "type": "object",
          "required": [
            "host",
            "port",
            "database",
            "username",
            "replication_method"
          ],
          "properties": {
            "host": {
              "description": "The host name of the database.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "The port to connect to.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 3306,
              "examples": ["3306"],
              "order": 1
            },
            "database": {
              "description": "The database name.",
              "title": "Database",
              "type": "string",
              "order": 2
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string",
              "order": 3
            },
            "password": {
              "description": "The password associated with the username.",
              "title": "Password",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-jdbc-url-format.html\">JDBC URL parameters</a>.",
              "title": "JDBC URL Parameters (Advanced)",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": true,
              "order": 6
            },
            "ssl_mode": {
              "title": "SSL modes",
              "description": "SSL connection modes. Read more <a href=\"https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-using-ssl.html\"> in the docs</a>.",
              "type": "object",
              "order": 7,
              "oneOf": [
                {
                  "title": "preferred",
                  "description": "Automatically attempt SSL connection. If the MySQL server does not support SSL, continue with a regular connection.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "preferred",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "required",
                  "description": "Always connect with SSL. If the MySQL server doesn’t support SSL, the connection will not be established. Certificate Authority (CA) and Hostname are not verified.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "required",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Verify CA",
                  "description": "Always connect with SSL. Verifies CA, but allows connection even if Hostname does not match.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify_ca",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client certificate",
                      "description": "Client certificate (this is not a required field, but if you want to use it, you will need to add the <b>Client key</b> as well)",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client key",
                      "description": "Client key (this is not a required field, but if you want to use it, you will need to add the <b>Client certificate</b> as well)",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Verify Identity",
                  "description": "Always connect with SSL. Verify both CA and Hostname.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify_identity",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client certificate",
                      "description": "Client certificate (this is not a required field, but if you want to use it, you will need to add the <b>Client key</b> as well)",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client key",
                      "description": "Client key (this is not a required field, but if you want to use it, you will need to add the <b>Client certificate</b> as well)",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "replication_method": {
              "type": "object",
              "title": "Replication Method",
              "description": "Replication method to use for extracting data from the database.",
              "order": 8,
              "oneOf": [
                {
                  "title": "Standard",
                  "description": "Standard replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "STANDARD",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Logical Replication (CDC)",
                  "description": "CDC uses the Binlog to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "CDC",
                      "order": 0
                    },
                    "initial_waiting_seconds": {
                      "type": "integer",
                      "title": "Initial Waiting Time in Seconds (Advanced)",
                      "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about <a href=\"https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc\">initial waiting time</a>.",
                      "default": 300,
                      "min": 120,
                      "max": 1200,
                      "order": 1
                    },
                    "server_time_zone": {
                      "type": "string",
                      "title": "Configured server timezone for the MySQL source (Advanced)",
                      "description": "Enter the configured MySQL server timezone. This should only be done if the configured timezone in your MySQL instance does not conform to IANNA standard.",
                      "order": 2
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta"
    },
    {
      "sourceDefinitionId": "4a961f66-5e99-4430-8320-a73afe52f7a2",
      "name": "n8n",
      "dockerRepository": "airbyte/source-n8n",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/n8n",
      "icon": "n8n.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/n8n",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "N8n Spec",
          "type": "object",
          "required": ["host", "api_key"],
          "additionalProperties": true,
          "properties": {
            "host": {
              "type": "string",
              "description": "Hostname of the n8n instance"
            },
            "api_key": {
              "type": "string",
              "description": "Your API KEY. See <a href=\"https://docs.n8n.io/api/authentication\">here</a>"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "1a8667d7-7978-43cd-ba4d-d32cbd478971",
      "name": "NASA",
      "dockerRepository": "airbyte/source-nasa",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/nasa",
      "icon": "nasa.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/nasa-apod",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "NASA spec",
          "type": "object",
          "required": ["api_key"],
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API access key used to retrieve data from the NASA APOD API.",
              "airbyte_secret": true
            },
            "concept_tags": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether concept tags should be returned with the rest of the response.  The concept tags are not necessarily included in the explanation, but rather derived from common search tags that are associated with the description text. (Better than just pure text search.) Defaults to False."
            },
            "count": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "description": "A positive integer, no greater than 100. If this is specified then `count` randomly  chosen images will be returned in a JSON array. Cannot be used in conjunction with  `date` or `start_date` and `end_date`."
            },
            "start_date": {
              "type": "string",
              "description": "Indicates the start of a date range. All images in the range from `start_date` to  `end_date` will be returned in a JSON array. Must be after 1995-06-16, the first day an APOD picture was posted. There are no images for tomorrow available through this API.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-10-20"],
              "format": "date"
            },
            "end_date": {
              "type": "string",
              "description": "Indicates that end of a date range. If `start_date` is specified without an `end_date` then `end_date` defaults to the current date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-10-20"],
              "format": "date"
            },
            "thumbs": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether the API should return a thumbnail image URL for video files. If set to True, the API returns URL of video thumbnail. If an APOD is not a video, this parameter is ignored."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["api.nasa.gov"]
      }
    },
    {
      "sourceDefinitionId": "4f2f093d-ce44-4121-8118-9d13b7bfccd0",
      "name": "Netsuite",
      "dockerRepository": "airbyte/source-netsuite",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/netsuite",
      "icon": "netsuite.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Netsuite Spec",
          "type": "object",
          "required": [
            "realm",
            "consumer_key",
            "consumer_secret",
            "token_key",
            "token_secret",
            "start_datetime"
          ],
          "additionalProperties": true,
          "properties": {
            "realm": {
              "type": "string",
              "title": "Realm (Account Id)",
              "description": "Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`",
              "order": 0,
              "airbyte_secret": true
            },
            "consumer_key": {
              "type": "string",
              "title": "Consumer Key",
              "description": "Consumer key associated with your integration",
              "order": 1,
              "airbyte_secret": true
            },
            "consumer_secret": {
              "type": "string",
              "title": "Consumer Secret",
              "description": "Consumer secret associated with your integration",
              "order": 2,
              "airbyte_secret": true
            },
            "token_key": {
              "type": "string",
              "title": "Token Key (Token Id)",
              "description": "Access token key",
              "order": 3,
              "airbyte_secret": true
            },
            "token_secret": {
              "type": "string",
              "title": "Token Secret",
              "description": "Access token secret",
              "order": 4,
              "airbyte_secret": true
            },
            "object_types": {
              "type": "array",
              "title": "Object Types",
              "items": {
                "type": "string"
              },
              "description": "The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.",
              "order": 5,
              "examples": ["customer", "salesorder", "etc"],
              "default": []
            },
            "start_datetime": {
              "type": "string",
              "title": "Start Date",
              "description": "Starting point for your data replication, in format of \"YYYY-MM-DDTHH:mm:ssZ\"",
              "order": 6,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"]
            },
            "window_in_days": {
              "type": "integer",
              "title": "Window in Days",
              "description": "The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data.",
              "order": 7,
              "default": 30
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "df38991e-f35b-4af2-996d-36817f614587",
      "name": "News API",
      "dockerRepository": "airbyte/source-news-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/news-api",
      "icon": "newsapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/news-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "News Api Spec",
          "type": "object",
          "required": ["api_key", "country", "category", "sort_by"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "search_query": {
              "type": "string",
              "description": "Search query. See https://newsapi.org/docs/endpoints/everything for \ninformation.\n",
              "examples": [
                "+bitcoin OR +crypto",
                "sunak AND (truss OR johnson)"
              ],
              "order": 1
            },
            "search_in": {
              "type": "array",
              "description": "Where to apply search query. Possible values are: title, description,\ncontent.\n",
              "items": {
                "type": "string",
                "enum": ["title", "description", "content"]
              },
              "order": 2
            },
            "sources": {
              "type": "array",
              "description": "Identifiers (maximum 20) for the news sources or blogs you want\nheadlines from. Use the `/sources` endpoint to locate these\nprogrammatically or look at the sources index:\nhttps://newsapi.com/sources. Will override both country and category.\n",
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "domains": {
              "type": "array",
              "description": "A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com,\nengadget.com) to restrict the search to.\n",
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "exclude_domains": {
              "type": "array",
              "description": "A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com,\nengadget.com) to remove from the results.\n",
              "items": {
                "type": "string"
              },
              "order": 5
            },
            "start_date": {
              "type": "string",
              "description": "A date and optional time for the oldest article allowed. This should\nbe in ISO 8601 format (e.g. 2021-01-01 or 2021-01-01T12:00:00).\n",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2})?$",
              "order": 6
            },
            "end_date": {
              "type": "string",
              "description": "A date and optional time for the newest article allowed. This should\nbe in ISO 8601 format (e.g. 2021-01-01 or 2021-01-01T12:00:00).\n",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2})?$",
              "order": 7
            },
            "language": {
              "type": "string",
              "description": "The 2-letter ISO-639-1 code of the language you want to get headlines\nfor. Possible options: ar de en es fr he it nl no pt ru se ud zh.\n",
              "enum": [
                "ar",
                "de",
                "en",
                "es",
                "fr",
                "he",
                "it",
                "nl",
                false,
                "pt",
                "ru",
                "se",
                "ud",
                "zh"
              ],
              "order": 8
            },
            "country": {
              "type": "string",
              "description": "The 2-letter ISO 3166-1 code of the country you want to get headlines\nfor. You can't mix this with the sources parameter.\n",
              "enum": [
                "ae",
                "ar",
                "at",
                "au",
                "be",
                "bg",
                "br",
                "ca",
                "ch",
                "cn",
                "co",
                "cu",
                "cz",
                "de",
                "eg",
                "fr",
                "gb",
                "gr",
                "hk",
                "hu",
                "id",
                "ie",
                "il",
                "in",
                "it",
                "jp",
                "kr",
                "lt",
                "lv",
                "ma",
                "mx",
                "my",
                "ng",
                "nl",
                false,
                "nz",
                "ph",
                "pl",
                "pt",
                "ro",
                "rs",
                "ru",
                "sa",
                "se",
                "sg",
                "si",
                "sk",
                "th",
                "tr",
                "tw",
                "ua",
                "us",
                "ve",
                "za"
              ],
              "default": "us",
              "order": 9
            },
            "category": {
              "type": "string",
              "description": "The category you want to get top headlines for.",
              "enum": [
                "business",
                "entertainment",
                "general",
                "health",
                "science",
                "sports",
                "technology"
              ],
              "default": "business",
              "order": 10
            },
            "sort_by": {
              "type": "string",
              "description": "The order to sort the articles in. Possible options: relevancy,\npopularity, publishedAt.\n",
              "enum": ["relevancy", "popularity", "publishedAt"],
              "default": "publishedAt",
              "order": 11
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "60bd11d8-2632-4daa-a688-b47336d32093",
      "name": "Newsdata",
      "dockerRepository": "airbyte/source-newsdata",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/newsdata",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/newsdata",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Newsdata Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "OneOf": {
              "query": {
                "type": "string",
                "description": "Keywords or phrases to search for in the news title and content. Advanced Search options:\n  - Search `Social`: query = \"social\"\n  - Search `Social Pizza`: query = \"social pizza\"\n  - Search `Social` but not with `pizza`: query = \"social -pizza\"\n  - Search `Social` but not with `pizza` and `wildfire`: query = \"social -pizza -wildfire\"\n  - Search `Social` and `pizza`: query = \"social AND pizza\"\n  - Search `Social` and `pizza` and `pasta`: query = \"social AND pizza AND pasta\"\n  - Search `Social` or `pizza`: query = \"social OR pizza\"\n  - Search `Social` or `pizza` but not `pasta`: query = \"social OR pizza -pasta\"\n  - Search `Social` or `pizza` or `pasta`: query = \"social OR pizza OR pasta\"\nNote: You can't use AND and OR in the same query.",
                "order": 1
              },
              "query_in_title": {
                "type": "string",
                "description": "Same as `query`, but restricting the search to only the news title. It cannot be used along with `query`.",
                "order": 1
              }
            },
            "domain": {
              "type": "array",
              "description": "Domains (maximum 5) to restrict the search to. Use the sources stream to find top sources id.",
              "maxitems": 5,
              "items": {
                "type": "string"
              },
              "order": 2
            },
            "country": {
              "type": "array",
              "description": "2-letter ISO 3166-1 countries (maximum 5) to restrict the search to.",
              "maxitems": 5,
              "order": 3,
              "items": {
                "type": "string",
                "enum": [
                  "ar",
                  "au",
                  "at",
                  "bd",
                  "by",
                  "be",
                  "br",
                  "bg",
                  "ca",
                  "cl",
                  "cn",
                  "co",
                  "cr",
                  "cu",
                  "cz",
                  "dk",
                  "do",
                  "ec",
                  "eg",
                  "ee",
                  "et",
                  "fi",
                  "fr",
                  "de",
                  "gr",
                  "hk",
                  "hu",
                  "in",
                  "id",
                  "iq",
                  "ie",
                  "il",
                  "it",
                  "jp",
                  "kz",
                  "kw",
                  "lv",
                  "lb",
                  "lt",
                  "my",
                  "mx",
                  "ma",
                  "mm",
                  "nl",
                  "nz",
                  "ng",
                  "kp",
                  "no",
                  "pk",
                  "pe",
                  "ph",
                  "pl",
                  "pt",
                  "pr",
                  "ro",
                  "ru",
                  "sa",
                  "rs",
                  "sg",
                  "sk",
                  "si",
                  "za",
                  "kr",
                  "es",
                  "se",
                  "ch",
                  "tw",
                  "tz",
                  "th",
                  "tr",
                  "ua",
                  "ae",
                  "gb",
                  "us",
                  "ve",
                  "vi"
                ]
              }
            },
            "category": {
              "type": "array",
              "description": "Categories (maximum 5) to restrict the search to.",
              "maxitems": 5,
              "order": 4,
              "items": {
                "type": "string",
                "enum": [
                  "business",
                  "entertainment",
                  "environment",
                  "food",
                  "health",
                  "politics",
                  "science",
                  "sports",
                  "technology",
                  "top",
                  "world"
                ]
              }
            },
            "language": {
              "type": "array",
              "description": "Languages (maximum 5) to restrict the search to.",
              "maxitems": 5,
              "order": 5,
              "items": {
                "type": "string",
                "enum": [
                  "be",
                  "am",
                  "ar",
                  "bn",
                  "bs",
                  "bg",
                  "my",
                  "ckb",
                  "zh",
                  "hr",
                  "cs",
                  "da",
                  "nl",
                  "en",
                  "et",
                  "fi",
                  "fr",
                  "de",
                  "el",
                  "he",
                  "hi",
                  "hu",
                  "in",
                  "it",
                  "jp",
                  "ko",
                  "lv",
                  "lt",
                  "ms",
                  "no",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sr",
                  "sk",
                  "sl",
                  "es",
                  "sw",
                  "sv",
                  "th",
                  "tr",
                  "uk",
                  "ur",
                  "vi"
                ]
              }
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6e00b415-b02e-4160-bf02-58176a0ae687",
      "name": "Notion",
      "dockerRepository": "airbyte/source-notion",
      "dockerImageTag": "1.0.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/notion",
      "icon": "notion.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/notion",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Notion Source Spec",
          "type": "object",
          "required": ["start_date"],
          "properties": {
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$",
              "examples": ["2020-11-16T00:00:00.000Z"],
              "type": "string",
              "format": "date-time"
            },
            "credentials": {
              "title": "Authenticate using",
              "description": "Pick an authentication method.",
              "type": "object",
              "order": 1,
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "access_token"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "OAuth2.0"
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The ClientID of your Notion integration.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The ClientSecret of your Notion integration.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "title": "Access Token",
                      "type": "string",
                      "description": "Access Token is a token you received by complete the OauthWebFlow of Notion.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Access Token",
                  "required": ["auth_type", "token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "token"
                    },
                    "token": {
                      "title": "Access Token",
                      "description": "Notion API access token, see the <a href=\"https://developers.notion.com/docs/authorization\">docs</a> for more information on how to obtain this token.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["access_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.notion.com"]
      }
    },
    {
      "sourceDefinitionId": "0fae6a9a-04eb-44d4-96e1-e02d3dbc1d83",
      "name": "New York Times",
      "dockerRepository": "airbyte/source-nytimes",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/nytimes",
      "icon": "nytimes.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/nytimes",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nytimes Spec",
          "type": "object",
          "required": ["api_key", "start_date", "period"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start date to begin the article retrieval (format YYYY-MM)",
              "pattern": "^[0-9]{4}-[0-9]{2}$",
              "examples": ["2022-08", "1851-01"],
              "format": "date",
              "order": 1
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "End date to stop the article retrieval (format YYYY-MM)",
              "pattern": "^[0-9]{4}-[0-9]{2}$",
              "examples": ["2022-08", "1851-01"],
              "format": "date",
              "order": 2
            },
            "period": {
              "type": "integer",
              "title": "Period (used for Most Popular streams)",
              "description": "Period of time (in days)",
              "order": 3,
              "enum": [1, 7, 30]
            },
            "share_type": {
              "type": "string",
              "title": "Share Type (used for Most Popular Shared stream)",
              "description": "Share Type",
              "order": 4,
              "enum": ["facebook"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "1d4fdb25-64fc-4569-92da-fcdca79a8372",
      "name": "Okta",
      "dockerRepository": "airbyte/source-okta",
      "dockerImageTag": "0.1.14",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/okta",
      "icon": "okta.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/okta",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Okta Spec",
          "type": "object",
          "required": [],
          "additionalProperties": true,
          "properties": {
            "domain": {
              "type": "string",
              "title": "Okta domain",
              "description": "The Okta domain. See the <a href=\"https://docs.airbyte.com/integrations/sources/okta\">docs</a> for instructions on how to find it.",
              "airbyte_secret": false
            },
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format YYYY-MM-DDTHH:MM:SSZ. Any data before this date will not be replicated.",
              "examples": ["2022-07-22T00:00:00Z"],
              "title": "Start Date"
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "refresh_token"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Refresh Token to obtain new Access Token, when it's expired.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["auth_type", "api_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "api_token",
                      "order": 0
                    },
                    "api_token": {
                      "type": "string",
                      "title": "Personal API Token",
                      "description": "An Okta token. See the <a href=\"https://docs.airbyte.com/integrations/sources/okta\">docs</a> for instructions on how to generate it.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e7f0c5e2-4815-48c4-90cf-f47124209835",
      "name": "Omnisend",
      "dockerRepository": "airbyte/source-omnisend",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/omnisend",
      "icon": "omnisend.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/omnisend",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Omnisend Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "bb6afd81-87d5-47e3-97c4-e2c2901b1cf8",
      "name": "OneSignal",
      "dockerRepository": "airbyte/source-onesignal",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/onesignal",
      "icon": "onesignal.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/onesignal",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "OneSignal Source Spec",
          "type": "object",
          "required": ["user_auth_key", "start_date", "outcome_names"],
          "additionalProperties": false,
          "properties": {
            "user_auth_key": {
              "type": "string",
              "title": "User Auth Key",
              "description": "OneSignal User Auth Key, see the <a href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\">docs</a> for more information on how to obtain this key.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "outcome_names": {
              "type": "string",
              "title": "Outcome Names",
              "description": "Comma-separated list of names and the value (sum/count) for the returned outcome data. See the <a href=\"https://documentation.onesignal.com/reference/view-outcomes\">docs</a> for more details",
              "examples": [
                "os__session_duration.count,os__click.count,CustomOutcomeName.sum"
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d8540a80-6120-485d-b7d6-272bca477d9b",
      "name": "OpenWeather",
      "dockerRepository": "airbyte/source-openweather",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/openweather",
      "icon": "openweather.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Open Weather Spec",
          "type": "object",
          "required": ["appid", "lat", "lon"],
          "additionalProperties": true,
          "properties": {
            "lat": {
              "title": "Latitude",
              "type": "string",
              "pattern": "^[-]?\\d{1,2}(\\.\\d+)?$",
              "examples": ["45.7603", "-21.249107858038816"],
              "description": "Latitude for which you want to get weather condition from. (min -90, max 90)"
            },
            "lon": {
              "title": "Longitude",
              "type": "string",
              "pattern": "^[-]?\\d{1,3}(\\.\\d+)?$",
              "examples": ["4.835659", "-70.39482074115321"],
              "description": "Longitude for which you want to get weather condition from. (min -180, max 180)"
            },
            "appid": {
              "title": "App ID",
              "type": "string",
              "description": "Your OpenWeather API Key. See <a href=\"https://openweathermap.org/api\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            },
            "units": {
              "title": "Units",
              "type": "string",
              "description": "Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.",
              "enum": ["standard", "metric", "imperial"],
              "examples": ["standard", "metric", "imperial"]
            },
            "lang": {
              "title": "Language",
              "type": "string",
              "description": "You can use lang parameter to get the output in your language. The contents of the description field will be translated. See <a href=\"https://openweathermap.org/api/one-call-api#multi\">here</a> for the list of supported languages.",
              "enum": [
                "af",
                "al",
                "ar",
                "az",
                "bg",
                "ca",
                "cz",
                "da",
                "de",
                "el",
                "en",
                "eu",
                "fa",
                "fi",
                "fr",
                "gl",
                "he",
                "hi",
                "hr",
                "hu",
                "id",
                "it",
                "ja",
                "kr",
                "la",
                "lt",
                "mk",
                "no",
                "nl",
                "pl",
                "pt",
                "pt_br",
                "ro",
                "ru",
                "sv",
                "se",
                "sk",
                "sl",
                "sp",
                "es",
                "sr",
                "th",
                "tr",
                "ua",
                "uk",
                "vi",
                "zh_cn",
                "zh_tw",
                "zu"
              ],
              "examples": ["en", "fr", "pt_br", "uk", "zh_cn", "zh_tw"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b39a7370-74c3-45a6-ac3a-380d48520a83",
      "name": "Oracle DB",
      "dockerRepository": "airbyte/source-oracle",
      "dockerImageTag": "0.3.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/oracle",
      "icon": "oracle.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/oracle",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Oracle Source Spec",
          "type": "object",
          "required": ["host", "port", "username"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.\nOracle Corporations recommends the following port numbers:\n1521 - Default listening port for client connections to the listener. \n2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 1521,
              "order": 2
            },
            "connection_data": {
              "title": "Connect by",
              "type": "object",
              "description": "Connect data that will be used for DB connection",
              "order": 3,
              "oneOf": [
                {
                  "title": "Service name",
                  "description": "Use service name",
                  "required": ["service_name"],
                  "properties": {
                    "connection_type": {
                      "type": "string",
                      "const": "service_name",
                      "order": 0
                    },
                    "service_name": {
                      "title": "Service name",
                      "type": "string",
                      "order": 1
                    }
                  }
                },
                {
                  "title": "System ID (SID)",
                  "description": "Use SID (Oracle System Identifier)",
                  "required": ["sid"],
                  "properties": {
                    "connection_type": {
                      "type": "string",
                      "const": "sid",
                      "order": 0
                    },
                    "sid": {
                      "title": "System ID (SID)",
                      "type": "string",
                      "order": 1
                    }
                  }
                }
              ]
            },
            "username": {
              "title": "User",
              "description": "The username which is used to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "The password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Defaults to user. Case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "uniqueItems": true,
              "order": 6
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 7
            },
            "encryption": {
              "title": "Encryption",
              "type": "object",
              "description": "The encryption method with is used when communicating with the database.",
              "order": 8,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "description": "Data transfer will not be encrypted.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Native Network Encryption (NNE)",
                  "description": "The native network encryption gives you the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "client_nne"
                    },
                    "encryption_algorithm": {
                      "type": "string",
                      "description": "This parameter defines what encryption algorithm is used.",
                      "title": "Encryption Algorithm",
                      "default": "AES256",
                      "enum": ["AES256", "RC4_56", "3DES168"]
                    }
                  }
                },
                {
                  "title": "TLS Encrypted (verify certificate)",
                  "description": "Verify and use the certificate provided by the server.",
                  "required": ["encryption_method", "ssl_certificate"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate"
                    },
                    "ssl_certificate": {
                      "title": "SSL PEM File",
                      "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}", "${tunnel_method.tunnel_host}"]
      }
    },
    {
      "sourceDefinitionId": "7f0455fb-4518-4ec0-b7a3-d808bf8081cc",
      "name": "Orb",
      "dockerRepository": "airbyte/source-orb",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/orb",
      "icon": "orb.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.withorb.com/",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Orb Spec",
          "type": "object",
          "required": ["api_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Orb API Key",
              "description": "Orb API Key, issued from the Orb admin console.",
              "airbyte_secret": true,
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at before this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.",
              "examples": ["2022-03-01T00:00:00Z"],
              "order": 2
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window (in days)",
              "default": 0,
              "minimum": 0,
              "description": "When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.",
              "order": 3
            },
            "string_event_properties_keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Event properties keys (string values)",
              "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.",
              "order": 4
            },
            "numeric_event_properties_keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Event properties keys (numeric values)",
              "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.",
              "order": 5
            },
            "subscription_usage_grouping_key": {
              "type": "string",
              "title": "Subscription usage grouping key (string value)",
              "description": "Property key name to group subscription usage by."
            },
            "plan_id": {
              "type": "string",
              "title": "Orb Plan ID for Subscription Usage (string value)",
              "description": "Orb Plan ID to filter subscriptions that should have usage fetched."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "95bcc041-1d1a-4c2e-8802-0ca5b1bfa36a",
      "name": "Orbit",
      "dockerRepository": "airbyte/source-orbit",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/orbit",
      "icon": "orbit.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/orbit",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Orbit Source Spec",
          "type": "object",
          "required": ["api_token", "workspace"],
          "additionalProperties": false,
          "properties": {
            "api_token": {
              "type": "string",
              "airbyte_secret": true,
              "title": "API Token",
              "description": "Authorizes you to work with Orbit workspaces associated with the token.",
              "order": 0
            },
            "workspace": {
              "type": "string",
              "title": "Workspace",
              "description": "The unique name of the workspace that your API token is associated with.",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Date in the format 2022-06-26. Only load members whose last activities are after this date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2bf6c581-bec5-4e32-891d-de33036bd631",
      "name": "Oura",
      "dockerRepository": "airbyte/source-oura",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/oura",
      "icon": "oura.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Oura Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true,
              "order": 0
            },
            "start_datetime": {
              "type": "string",
              "description": "Start datetime to sync from. Default is current UTC datetime minus 1\nday.\n",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$",
              "order": 1
            },
            "end_datetime": {
              "type": "string",
              "description": "End datetime to sync until. Default is current UTC datetime.",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$",
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "3490c201-5d95-4783-b600-eaf07a4c7787",
      "name": "Outreach",
      "dockerRepository": "airbyte/source-outreach",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/outreach",
      "icon": "outreach.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/outreach",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Outreach Spec",
          "type": "object",
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "redirect_uri",
            "start_date"
          ],
          "additionalProperties": false,
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Outreach developer application."
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Outreach developer application.",
              "airbyte_secret": true
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "The token for obtaining the new access token.",
              "airbyte_secret": true
            },
            "redirect_uri": {
              "type": "string",
              "title": "Redirect URI",
              "description": "A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ad15c7ba-72a7-440b-af15-b9a963dc1a8a",
      "name": "Pardot",
      "dockerRepository": "airbyte/source-pardot",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pardot",
      "icon": "salesforcepardot.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pardot",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pardot Spec",
          "type": "object",
          "required": [
            "pardot_business_unit_id",
            "client_id",
            "client_secret",
            "refresh_token"
          ],
          "additionalProperties": false,
          "properties": {
            "pardot_business_unit_id": {
              "description": "Pardot Business ID, can be found at Setup > Pardot > Pardot Account Setup",
              "type": "string"
            },
            "client_id": {
              "description": "The Consumer Key that can be found when viewing your app in Salesforce",
              "type": "string",
              "airbyte_secret": true
            },
            "client_secret": {
              "description": "The Consumer Secret that can be found when viewing your app in Salesforce",
              "type": "string",
              "airbyte_secret": true
            },
            "refresh_token": {
              "description": "Salesforce Refresh Token used for Airbyte to access your Salesforce account. If you don't know what this is, follow this <a href=\"https://medium.com/@bpmmendis94/obtain-access-refresh-tokens-from-salesforce-rest-api-a324fe4ccd9b\">guide</a> to retrieve it.",
              "type": "string",
              "airbyte_secret": true
            },
            "start_date": {
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Leave blank to skip this filter",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "default": null,
              "examples": ["2021-07-25T00:00:00Z"]
            },
            "is_sandbox": {
              "description": "Whether or not the the app is in a Salesforce sandbox. If you do not know what this, assume it is false.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2817b3f0-04e4-4c7a-9f32-7a5e8a83db95",
      "name": "PagerDuty",
      "dockerRepository": "farosai/airbyte-pagerduty-source",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pagerduty",
      "icon": "pagerduty.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.faros.ai",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "PagerDuty Spec",
          "type": "object",
          "required": ["token"],
          "additionalProperties": false,
          "properties": {
            "token": {
              "type": "string",
              "title": "PagerDuty API key",
              "airbyte_secret": true
            },
            "pageSize": {
              "type": "number",
              "minimum": 1,
              "maximum": 25,
              "default": 25,
              "title": "Page Size",
              "description": "page size to use when querying PagerDuty API"
            },
            "cutoffDays": {
              "type": "number",
              "minimum": 1,
              "default": 90,
              "title": "Cutoff Days",
              "description": "fetch pipelines updated in the last number of days"
            },
            "incidentLogEntriesOverview": {
              "type": "boolean",
              "title": "Incident Log Entries Overview",
              "description": "If true, will return a subset of log entries that show only the most important changes to the incident.",
              "default": true
            },
            "defaultSeverity": {
              "type": "string",
              "title": "Severity category",
              "description": "A default severity category if not present",
              "examples": ["Sev1", "Sev2", "Sev3", "Sev4", "Sev5", "Custom"],
              "pattern": "^(Sev[0-5])?(Custom)?$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d30fb809-6456-484d-8e2c-ee12e0f6888d",
      "name": "PartnerStack",
      "dockerRepository": "airbyte/source-partnerstack",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/partnerstack",
      "icon": "partnerstack.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/partnerstack",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Partnerstack Spec",
          "type": "object",
          "required": ["public_key", "private_key"],
          "additionalProperties": true,
          "properties": {
            "public_key": {
              "type": "string",
              "title": "Partnerstack Public key",
              "description": "The Live Public Key for a Partnerstack account.",
              "airbyte_secret": true
            },
            "private_key": {
              "type": "string",
              "title": "Partnerstack Private key",
              "description": "The Live Private Key for a Partnerstack account.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d913b0f2-cc51-4e55-a44c-8ba1697b9239",
      "name": "Paypal Transaction",
      "dockerRepository": "airbyte/source-paypal-transaction",
      "dockerImageTag": "0.1.12",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/paypal-transaction",
      "icon": "paypal.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/paypal-transactions",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Paypal Transaction Search",
          "type": "object",
          "required": ["start_date", "is_sandbox"],
          "additionalProperties": true,
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Paypal developer application.",
              "airbyte_secret": true
            },
            "client_secret": {
              "type": "string",
              "title": "Client secret",
              "description": "The Client Secret of your Paypal developer application.",
              "airbyte_secret": true
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh token",
              "description": "The key to refresh the expired access token.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start Date for data extraction in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\">ISO format</a>. Date must be in range from 3 years till 12 hrs before present time.",
              "examples": ["2021-06-11T23:59:59-00:00"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
            },
            "is_sandbox": {
              "title": "Sandbox",
              "description": "Determines whether to use the sandbox or production environment.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api-m.paypal.com", "api-m.sandbox.paypal.com"]
      }
    },
    {
      "sourceDefinitionId": "193bdcb8-1dd9-48d1-aade-91cadfd74f9b",
      "name": "Paystack",
      "dockerRepository": "airbyte/source-paystack",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/paystack",
      "icon": "paystack.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/paystack",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Paystack Source Spec",
          "type": "object",
          "required": ["secret_key", "start_date"],
          "additionalProperties": false,
          "properties": {
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "pattern": "^(s|r)k_(live|test)_[a-zA-Z0-9]+$",
              "description": "The Paystack API key (usually starts with 'sk_live_'; find yours <a href=\"https://dashboard.paystack.com/#/settings/developer\">here</a>).",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window (in days)",
              "default": 0,
              "minimum": 0,
              "description": "When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "3052c77e-8b91-47e2-97a0-a29a22794b4b",
      "name": "PersistIq",
      "dockerRepository": "airbyte/source-persistiq",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/persistiq",
      "icon": "persistiq.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/persistiq",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Persistiq Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "PersistIq API Key. See the <a href=\"https://apidocs.persistiq.com/#authentication\">docs</a> for more information on where to find that key.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "69d9eb65-8026-47dc-baf1-e4bf67901fd6",
      "name": "Pexels API",
      "dockerRepository": "airbyte/source-pexels-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pexels-api",
      "icon": "pexels.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pexels-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pexel API Spec",
          "type": "object",
          "required": ["api_key", "query"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key from the pexels website",
              "type": "string",
              "description": "API key is required to access pexels api, For getting your's goto https://www.pexels.com/api/documentation and create account for free.",
              "airbyte_secret": true
            },
            "query": {
              "title": "Specific query for the search",
              "type": "string",
              "description": "Optional, the search query, Example Ocean, Tigers, Pears, etc.",
              "examples": ["people", "oceans"]
            },
            "orientation": {
              "title": "Specific orientation for the search",
              "type": "string",
              "description": "Optional, Desired photo orientation. The current supported orientations are landscape, portrait or square",
              "examples": ["square", "landscape"]
            },
            "size": {
              "title": "Specific size for the search",
              "type": "string",
              "description": "Optional, Minimum photo size. The current supported sizes are large(24MP), medium(12MP) or small(4MP).",
              "examples": ["large", "small"]
            },
            "color": {
              "title": "Specific color for the search",
              "type": "string",
              "description": "Optional, Desired photo color. Supported colors red, orange, yellow, green, turquoise, blue, violet, pink, brown, black, gray, white or any hexidecimal color code.",
              "examples": ["red", "orange"]
            },
            "locale": {
              "title": "Specific locale for the search",
              "type": "string",
              "description": "Optional, The locale of the search you are performing. The current supported locales are 'en-US' 'pt-BR' 'es-ES' 'ca-ES' 'de-DE' 'it-IT' 'fr-FR' 'sv-SE' 'id-ID' 'pl-PL' 'ja-JP' 'zh-TW' 'zh-CN' 'ko-KR' 'th-TH' 'nl-NL' 'hu-HU' 'vi-VN' 'cs-CZ' 'da-DK' 'fi-FI' 'uk-UA' 'el-GR' 'ro-RO' 'nb-NO' 'sk-SK' 'tr-TR' 'ru-RU'.",
              "examples": ["en-US", "pt-BR"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "5cb7e5fe-38c2-11ec-8d3d-0242ac130003",
      "name": "Pinterest",
      "dockerRepository": "airbyte/source-pinterest",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pinterest",
      "icon": "pinterest.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pinterest",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pinterest Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by api (914 days from today).",
              "examples": ["2022-07-28"]
            },
            "status": {
              "title": "Status",
              "description": "Entity statuses based off of campaigns, ad_groups, and ads. If you do not have a status set, it will be ignored completely.",
              "type": ["array", "null"],
              "items": {
                "type": "string",
                "enum": ["ACTIVE", "PAUSED", "ARCHIVED"]
              },
              "uniqueItems": true
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": ["auth_method", "refresh_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your OAuth application",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Refresh Token to obtain new Access Token, when it's expired.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Access Token",
                  "required": ["auth_method", "access_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "access_token",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The Access Token to make authenticated requests.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.pinterest.com"]
      }
    },
    {
      "sourceDefinitionId": "d8286229-c680-4063-8c59-23b9b391c700",
      "name": "Pipedrive",
      "dockerRepository": "airbyte/source-pipedrive",
      "dockerImageTag": "0.1.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pipedrive",
      "icon": "pipedrive.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pipedrive",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pipedrive Spec",
          "type": "object",
          "required": ["replication_start_date"],
          "additionalProperties": true,
          "properties": {
            "authorization": {
              "type": "object",
              "title": "API Key Authentication",
              "required": ["auth_type", "api_token"],
              "properties": {
                "auth_type": {
                  "type": "string",
                  "const": "Token",
                  "order": 0
                },
                "api_token": {
                  "title": "API Token",
                  "type": "string",
                  "description": "The Pipedrive API Token.",
                  "airbyte_secret": true
                }
              }
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["api.pipedrive.com"]
      }
    },
    {
      "sourceDefinitionId": "d60f5393-f99e-4310-8d05-b1876820f40e",
      "name": "Pivotal Tracker",
      "dockerRepository": "airbyte/source-pivotal-tracker",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pivotal-tracker",
      "icon": "pivotal-tracker.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pivotal Tracker Spec",
          "type": "object",
          "required": ["api_token"],
          "additionalProperties": false,
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Pivotal Tracker API token",
              "examples": ["5c054d0de3440452190fdc5d5a04d871"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ed799e2b-2158-4c66-8da4-b40fe63bc72a",
      "name": "Plaid",
      "dockerRepository": "airbyte/source-plaid",
      "dockerImageTag": "0.3.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/plaid",
      "icon": "plaid.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://plaid.com/docs/api/",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "required": ["access_token", "api_key", "client_id", "plaid_env"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The end-user's Link access token."
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "The Plaid API key to use to hit the API.",
              "airbyte_secret": true
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Plaid client id"
            },
            "plaid_env": {
              "title": "Plaid Environment",
              "type": "string",
              "enum": ["sandbox", "development", "production"],
              "description": "The Plaid environment"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate data for Plaid in the format YYYY-MM-DD. All data generated after this date will be replicated.",
              "examples": ["2021-03-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "603ba446-3d75-41d7-92f3-aba901f8b897",
      "name": "Plausible",
      "dockerRepository": "airbyte/source-plausible",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/plausible",
      "icon": "plausible.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/plausible",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Plausible Spec",
          "type": "object",
          "required": ["api_key", "site_id"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Plausible API key",
              "description": "Plausible API Key. See the <a href=\"https://plausible.io/docs/stats-api\">docs</a> for information on how to generate this key.",
              "airbyte_secret": true
            },
            "site_id": {
              "type": "string",
              "title": "Target website domain",
              "description": "The domain of the site you want to retrieve data for. Enter the name of your site as configured on Plausible, i.e., excluding \"https://\" and \"www\". Can be retrieved from the 'domain' field in your Plausible site settings.",
              "pattern": "^[A-Za-z0-9-.]+\\.[A-Z-a-z0-9-.]+",
              "examples": ["airbyte.com", "docs.airbyte.com"]
            },
            "start_date": {
              "type": "string",
              "title": "Data start date",
              "description": "Start date for data to retrieve, in ISO-8601 format.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b0dd65f1-081f-4731-9c51-38e9e6aa0ebf",
      "name": "Pocket",
      "dockerRepository": "airbyte/source-pocket",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pocket",
      "icon": "pocket.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pocket",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pocket Spec",
          "type": "object",
          "required": ["consumer_key", "access_token"],
          "additionalProperties": true,
          "properties": {
            "consumer_key": {
              "type": "string",
              "title": "Consumer Key",
              "description": "Your application's Consumer Key.",
              "airbyte_secret": true,
              "order": 0
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The user's Pocket access token.",
              "airbyte_secret": true,
              "order": 1
            },
            "state": {
              "type": "string",
              "title": "State",
              "description": "Select the state of the items to retrieve.",
              "order": 2,
              "enum": ["unread", "archive", "all"]
            },
            "favorite": {
              "type": "boolean",
              "title": "Is Favorite?",
              "description": "Retrieve only favorited items.",
              "default": false,
              "order": 3
            },
            "tag": {
              "type": "string",
              "title": "Tag Name",
              "description": "Return only items tagged with this tag name. Use _untagged_ for retrieving only untagged items.",
              "order": 4
            },
            "content_type": {
              "type": "string",
              "title": "Content Type",
              "description": "Select the content type of the items to retrieve.",
              "order": 5,
              "enum": ["article", "video", "image"]
            },
            "sort": {
              "type": "string",
              "title": "Sort By",
              "description": "Sort retrieved items by the given criteria.",
              "order": 6,
              "enum": ["newest", "oldest", "title", "site"]
            },
            "detail_type": {
              "type": "string",
              "title": "Detail Type",
              "description": "Select the granularity of the information about each item.",
              "order": 7,
              "enum": ["simple", "complete"]
            },
            "search": {
              "type": "string",
              "title": "Search Query",
              "description": "Only return items whose title or url contain the `search` string.",
              "order": 8
            },
            "domain": {
              "type": "string",
              "title": "Domain",
              "description": "Only return items from a particular `domain`.",
              "order": 9
            },
            "since": {
              "type": "string",
              "title": "Since",
              "description": "Only return items modified since the given timestamp.",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}",
              "examples": ["2022-10-20 14:14:14"],
              "order": 10
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6371b14b-bc68-4236-bfbd-468e8df8e968",
      "name": "PokeAPI",
      "dockerRepository": "airbyte/source-pokeapi",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pokeapi",
      "icon": "pokeapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/pokeapi",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pokeapi Spec",
          "type": "object",
          "required": ["pokemon_name"],
          "additionalProperties": false,
          "properties": {
            "pokemon_name": {
              "type": "string",
              "title": "Pokemon Name",
              "description": "Pokemon requested from the API.",
              "pattern": "^[a-z0-9_\\-]+$",
              "examples": ["ditto", "luxray", "snorlax"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "5807d72f-0abc-49f9-8fa5-ae820007032b",
      "name": "Polygon Stock API",
      "dockerRepository": "airbyte/source-polygon-stock-api",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/polygon-stock-api",
      "icon": "polygon.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/airtable",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Weather API Spec",
          "type": "object",
          "required": [
            "apiKey",
            "stocksTicker",
            "multiplier",
            "timespan",
            "start_date",
            "end_date"
          ],
          "additionalProperties": true,
          "properties": {
            "apiKey": {
              "title": "API Key",
              "type": "string",
              "description": "Your API ACCESS Key",
              "airbyte_secret": true
            },
            "stocksTicker": {
              "title": "Stock Ticker",
              "type": "string",
              "description": "The exchange symbol that this item is traded under.",
              "examples": ["IBM", "MSFT"]
            },
            "multiplier": {
              "title": "Multiplier",
              "type": "integer",
              "description": "The size of the timespan multiplier.",
              "examples": [1, 2]
            },
            "timespan": {
              "title": "Timespan",
              "type": "string",
              "description": "The size of the time window.",
              "examples": ["day"]
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "The beginning date for the aggregate window.",
              "examples": ["2020-10-14"],
              "format": "date"
            },
            "end_date": {
              "title": "End Date",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "The target date for the aggregate window.",
              "examples": ["2020-10-14"],
              "format": "date"
            },
            "adjusted": {
              "title": "Adjusted",
              "type": "string",
              "description": "Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.",
              "examples": ["true", "false"]
            },
            "sort": {
              "title": "Sort",
              "type": "string",
              "description": "Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).",
              "examples": ["asc", "desc"]
            },
            "limit": {
              "title": "Limit",
              "type": "integer",
              "description": "The target date for the aggregate window.",
              "examples": [100, 120]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["api.polygon.io"]
      }
    },
    {
      "sourceDefinitionId": "af6d50ee-dddf-4126-a8ee-7faee990774f",
      "name": "PostHog",
      "dockerRepository": "airbyte/source-posthog",
      "dockerImageTag": "0.1.8",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/posthog",
      "icon": "posthog.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/posthog",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "PostHog Spec",
          "type": "object",
          "required": ["api_key", "start_date"],
          "properties": {
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            },
            "api_key": {
              "type": "string",
              "airbyte_secret": true,
              "title": "API Key",
              "description": "API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/posthog\">docs</a> for information on how to generate this key."
            },
            "base_url": {
              "type": "string",
              "default": "https://app.posthog.com",
              "title": "Base URL",
              "description": "Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com).",
              "examples": ["https://posthog.example.com"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["${base_url}", "app.posthog.com"]
      }
    },
    {
      "sourceDefinitionId": "decd338e-5647-4c0b-adf4-da0e75f5a750",
      "name": "Postgres",
      "dockerRepository": "airbyte/source-postgres",
      "dockerImageTag": "2.0.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/postgres",
      "icon": "postgresql.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/postgres",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Postgres Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "Database Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "default": ["public"],
              "order": 3
            },
            "username": {
              "title": "Username",
              "description": "Username to access the database.",
              "type": "string",
              "order": 4
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
              "title": "JDBC URL Parameters (Advanced)",
              "type": "string",
              "order": 6
            },
            "ssl": {
              "title": "Connect using SSL",
              "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes.",
              "type": "boolean",
              "default": false,
              "order": 7
            },
            "ssl_mode": {
              "title": "SSL Modes",
              "description": "SSL connection modes. \n  Read more <a href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"> in the docs</a>.",
              "type": "object",
              "order": 7,
              "oneOf": [
                {
                  "title": "disable",
                  "additionalProperties": true,
                  "description": "Disables encryption of communication between Airbyte and source database.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "disable",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "allow",
                  "additionalProperties": true,
                  "description": "Enables encryption only when required by the source database.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "allow",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "prefer",
                  "additionalProperties": true,
                  "description": "Allows unencrypted connection only if the source database does not support encryption.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "prefer",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "require",
                  "additionalProperties": true,
                  "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                  "required": ["mode"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "require",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "verify-ca",
                  "additionalProperties": true,
                  "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-ca",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client Certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client Key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "verify-full",
                  "additionalProperties": true,
                  "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                  "required": ["mode", "ca_certificate"],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "const": "verify-full",
                      "order": 0
                    },
                    "ca_certificate": {
                      "type": "string",
                      "title": "CA Certificate",
                      "description": "CA certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    },
                    "client_certificate": {
                      "type": "string",
                      "title": "Client Certificate",
                      "description": "Client certificate",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 2
                    },
                    "client_key": {
                      "type": "string",
                      "title": "Client Key",
                      "description": "Client key",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 3
                    },
                    "client_key_password": {
                      "type": "string",
                      "title": "Client key password",
                      "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            },
            "replication_method": {
              "type": "object",
              "title": "Replication Method",
              "description": "Replication method for extracting data from the database.",
              "order": 8,
              "oneOf": [
                {
                  "title": "Standard",
                  "description": "Standard replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Logical Replication (CDC)",
                  "description": "Logical replication uses the Postgres write-ahead log (WAL) to detect inserts, updates, and deletes. This needs to be configured on the source database itself. Only available on Postgres 10 and above. Read the <a href=\"https://docs.airbyte.com/integrations/sources/postgres\">docs</a>.",
                  "required": ["method", "replication_slot", "publication"],
                  "additionalProperties": true,
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "CDC",
                      "order": 1
                    },
                    "plugin": {
                      "type": "string",
                      "title": "Plugin",
                      "description": "A logical decoding plugin installed on the PostgreSQL server.",
                      "enum": ["pgoutput"],
                      "default": "pgoutput",
                      "order": 2
                    },
                    "replication_slot": {
                      "type": "string",
                      "title": "Replication Slot",
                      "description": "A plugin logical replication slot. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-3-create-replication-slot\">replication slots</a>.",
                      "order": 3
                    },
                    "publication": {
                      "type": "string",
                      "title": "Publication",
                      "description": "A Postgres publication used for consuming changes. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-4-create-publications-and-replication-identities-for-tables\">publications and replication identities</a>.",
                      "order": 4
                    },
                    "initial_waiting_seconds": {
                      "type": "integer",
                      "title": "Initial Waiting Time in Seconds (Advanced)",
                      "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about <a href=\"https://docs.airbyte.com/integrations/sources/postgres#step-5-optional-set-up-initial-waiting-time\">initial waiting time</a>.",
                      "default": 300,
                      "order": 5,
                      "min": 120,
                      "max": 1200
                    },
                    "lsn_commit_behaviour": {
                      "type": "string",
                      "title": "LSN commit behaviour",
                      "description": "Determines when Airbtye should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                      "enum": [
                        "While reading Data",
                        "After loading Data in the destination"
                      ],
                      "default": "After loading Data in the destination",
                      "order": 6
                    }
                  }
                }
              ]
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["${host}", "${tunnel_method.tunnel_host}"]
      }
    },
    {
      "sourceDefinitionId": "cde75ca1-1e28-4a0f-85bb-90c546de9f1f",
      "name": "Postmark App",
      "dockerRepository": "airbyte/source-postmarkapp",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/postmarkapp",
      "icon": "postmark.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Postmarkapp Spec",
          "type": "object",
          "required": ["X-Postmark-Server-Token", "X-Postmark-Account-Token"],
          "additionalProperties": true,
          "properties": {
            "X-Postmark-Server-Token": {
              "title": "X-Postmark-Server-Token",
              "type": "string",
              "description": "API Key for server",
              "airbyte_secret": true
            },
            "X-Postmark-Account-Token": {
              "title": "X-Postmark-Account-Token",
              "type": "string",
              "description": "API Key for account",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d60a46d4-709f-4092-a6b7-2457f7d455f5",
      "name": "PrestaShop",
      "dockerRepository": "airbyte/source-prestashop",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/prestashop",
      "icon": "prestashop.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/prestashop",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "PrestaShop Spec",
          "type": "object",
          "required": ["access_key", "url", "start_date"],
          "properties": {
            "access_key": {
              "type": "string",
              "title": "Access Key",
              "description": "Your PrestaShop access key. See <a href=\"https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/#create-an-access-key\"> the docs </a> for info on how to obtain this.",
              "order": 0,
              "airbyte_secret": true
            },
            "url": {
              "type": "string",
              "title": "Shop URL",
              "description": "Shop URL without trailing slash.",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "The Start date in the format YYYY-MM-DD.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-01-01"],
              "format": "date",
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["${domain}"]
      }
    },
    {
      "sourceDefinitionId": "f636c3c6-4077-45ac-b109-19fc62a283c1",
      "name": "Primetric",
      "dockerRepository": "airbyte/source-primetric",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/primetric",
      "icon": "primetric.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Primetric Spec",
          "type": "object",
          "required": ["client_id", "client_secret"],
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Primetric developer application. The Client ID is visible <a href=\\\"https://app.primetric.com/administrator/integrations\">here</a>.",
              "pattern": "^[a-zA-Z0-9]+$",
              "airbyte_secret": true,
              "examples": ["1234aBcD5678EFGh9045Neq79sdDlA15082VMYcj"],
              "order": 0
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Primetric developer application. You can manage your client's credentials <a href=\\\"https://app.primetric.com/administrator/integrations\">here</a>.",
              "pattern": "^[a-zA-Z0-9]+$",
              "airbyte_secret": true,
              "order": 1
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "a4617b39-3c14-44cd-a2eb-6e720f269235",
      "name": "Public APIs",
      "dockerRepository": "airbyte/source-public-apis",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/public-apis",
      "icon": "publicapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/public-apis",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Public Apis Spec",
          "type": "object",
          "required": [],
          "properties": {}
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "dbe9b7ae-7b46-4e44-a507-02a343cf7230",
      "name": "Punk API",
      "dockerRepository": "airbyte/source-punk-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/punk-api",
      "icon": "punkapi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/punk-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Punk Api Spec",
          "type": "object",
          "required": ["brewed_before", "brewed_after"],
          "additionalProperties": true,
          "properties": {
            "id": {
              "title": "Beers with specific ID",
              "type": "string",
              "description": "To extract specific data with Unique ID",
              "examples": [1, 22]
            },
            "brewed_before": {
              "title": "Brewed before data to get incremental reads",
              "type": "string",
              "description": "To extract specific data with Unique ID",
              "pattern": "^[0-9]{2}-[0-9]{4}$",
              "examples": ["MM-YYYY"]
            },
            "brewed_after": {
              "title": "Brewed after data to get incremental reads",
              "type": "string",
              "description": "To extract specific data with Unique ID",
              "pattern": "^[0-9]{2}-[0-9]{4}$",
              "examples": ["MM-YYYY"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "88ecd3a8-5f5b-11ed-9b6a-0242ac120002",
      "name": "PyPI",
      "dockerRepository": "airbyte/source-pypi",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/pypi",
      "icon": "pypi.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/pypi",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Pypi Spec",
          "type": "object",
          "required": ["project_name"],
          "additionalProperties": true,
          "properties": {
            "project_name": {
              "type": "string",
              "title": "PyPI Package",
              "description": "Name of the project/package. Can only be in lowercase with hyphen. This is the name used using pip command for installing the package.",
              "examples": ["sampleproject"]
            },
            "version": {
              "title": "Package Version",
              "type": "string",
              "description": "Version of the project/package.  Use it to find a particular release instead of all releases.",
              "examples": ["1.2.0"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f7c0b910-5f66-11ed-9b6a-0242ac120002",
      "name": "Qonto",
      "dockerRepository": "airbyte/source-qonto",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/public-qonto",
      "icon": "qonto.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Qonto Spec",
          "type": "object",
          "required": ["endpoint", "organization_slug", "secret_key", "iban"],
          "properties": {
            "endpoint": {
              "title": "Endpoint",
              "type": "string",
              "description": "Please choose the right endpoint to use in this connection",
              "enum": ["Production", "Test Mocked API Server"]
            },
            "organization_slug": {
              "title": "Organization slug",
              "type": "string",
              "description": "Organization slug used in Qonto"
            },
            "secret_key": {
              "title": "Secret Key",
              "type": "string",
              "description": "Secret key of the Qonto account",
              "airbyte_secret": true
            },
            "iban": {
              "title": "IBAN",
              "type": "string",
              "description": "International Bank Account Number linked used with your Qonto Account",
              "pattern": "^[A-Z0-9]*$"
            },
            "start_date": {
              "title": "Start date",
              "type": "string",
              "description": "Start getting data from that date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b08e4776-d1de-4e80-ab5c-1e51dad934a2",
      "name": "Qualaroo",
      "dockerRepository": "airbyte/source-qualaroo",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/qualaroo",
      "icon": "qualaroo.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/qualaroo",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Qualaroo Spec",
          "type": "object",
          "required": ["token", "key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "token": {
              "type": "string",
              "title": "API token",
              "description": "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\">docs</a> for instructions on how to generate it.",
              "airbyte_secret": true
            },
            "key": {
              "type": "string",
              "title": "API key",
              "description": "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\">docs</a> for instructions on how to generate it.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-03-01T00:00:00.000Z"]
            },
            "survey_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9]{1,8}$"
              },
              "title": "Qualaroo survey IDs",
              "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [],
            "oauthFlowOutputParameters": [["token"], ["key"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "29b409d9-30a5-4cc8-ad50-886eb846fea3",
      "name": "QuickBooks",
      "dockerRepository": "airbyte/source-quickbooks-singer",
      "dockerImageTag": "0.1.5",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/quickbooks-singer",
      "icon": "qb.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/quickbooks-singer",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source QuickBooks Singer Spec",
          "type": "object",
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "realm_id",
            "user_agent",
            "start_date",
            "sandbox"
          ],
          "additionalProperties": false,
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Identifies which app is making the request. Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production."
            },
            "client_secret": {
              "description": " Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production.",
              "title": "Client Secret",
              "type": "string",
              "airbyte_secret": true
            },
            "refresh_token": {
              "description": "A token used when refreshing the access token.",
              "title": "Refresh Token",
              "type": "string",
              "airbyte_secret": true
            },
            "realm_id": {
              "description": "Labeled Company ID. The Make API Calls panel is populated with the realm id and the current access token.",
              "title": "Realm ID",
              "type": "string",
              "airbyte_secret": true
            },
            "user_agent": {
              "type": "string",
              "title": "User Agent",
              "description": "Process and email for API logging purposes. Example: tap-quickbooks <api_user_email@your_company.com>."
            },
            "start_date": {
              "description": "The default value to use if no bookmark exists for an endpoint (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this date will not be replicated.",
              "title": "Start Date",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-03-20T00:00:00Z"]
            },
            "sandbox": {
              "description": "Determines whether to use the sandbox or production environment.",
              "title": "Sandbox",
              "type": "boolean",
              "default": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9b6cc0c0-da81-4103-bbfd-5279e18a849a",
      "name": "Railz",
      "dockerRepository": "airbyte/source-railz",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/railz",
      "icon": "railz.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Railz Spec",
          "type": "object",
          "required": ["client_id", "secret_key", "start_date"],
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Client ID (client_id)",
              "order": 0
            },
            "secret_key": {
              "type": "string",
              "title": "Secret key",
              "description": "Secret key (secret_key)",
              "order": 1,
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "45d2e135-2ede-49e1-939f-3e3ec357a65e",
      "name": "Recharge",
      "dockerRepository": "airbyte/source-recharge",
      "dockerImageTag": "0.2.7",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/recharge",
      "icon": "recharge.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/recharge",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Recharge Spec",
          "type": "object",
          "required": ["start_date", "access_token"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-05-14T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "format": "date-time"
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The value of the Access Token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/recharge\">docs</a> for more information.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.rechargeapps.com"]
      }
    },
    {
      "sourceDefinitionId": "25d7535d-91e0-466a-aa7f-af81578be277",
      "name": "Recreation",
      "dockerRepository": "airbyte/source-recreation",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/recreation",
      "icon": "recreation.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/recreation",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Recreation Spec",
          "type": "object",
          "required": ["apikey"],
          "additionalProperties": true,
          "properties": {
            "apikey": {
              "title": "API Key",
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            },
            "query_campsites": {
              "title": "Query Campsite",
              "type": "string"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "3b046ac7-d8d3-4eb3-b122-f96b2a16d8a8",
      "name": "Recruitee",
      "dockerRepository": "airbyte/source-recruitee",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/recruitee",
      "icon": "recruitee.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/recruitee",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Recruitee Spec",
          "type": "object",
          "required": ["api_key", "company_id"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Recruitee API Key. See <a href=\"https://docs.recruitee.com/reference/getting-started#generate-api-token\">here</a>.",
              "airbyte_secret": true
            },
            "company_id": {
              "title": "Company ID",
              "type": "integer",
              "description": "Recruitee Company ID. You can also find this ID on the <a href=\"https://app.recruitee.com/#/settings/api_tokens\">Recruitee API tokens page</a>."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "cd42861b-01fc-4658-a8ab-5d11d0510f01",
      "name": "Recurly",
      "dockerRepository": "airbyte/source-recurly",
      "dockerImageTag": "0.4.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/recurly",
      "icon": "recurly.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/recurly",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Recurly Source Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": false,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Key",
              "airbyte_secret": true,
              "description": "Recurly API Key. See the  <a href=\"https://docs.airbyte.com/integrations/sources/recurly\">docs</a> for more information on how to generate this key.",
              "order": 1
            },
            "begin_time": {
              "type": "string",
              "description": "ISO8601 timestamp from which the replication from Recurly API will start from.",
              "examples": ["2021-12-01T00:00:00"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "order": 2
            },
            "end_time": {
              "type": "string",
              "description": "ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.",
              "examples": ["2021-12-01T00:00:00"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e87ffa8e-a3b5-f69c-9076-6011339de1f6",
      "name": "Redshift",
      "dockerRepository": "airbyte/source-redshift",
      "dockerImageTag": "0.3.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/redshift",
      "icon": "redshift.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/destinations/redshift",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Redshift Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username", "password"],
          "properties": {
            "host": {
              "title": "Host",
              "description": "Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).",
              "type": "string",
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5439,
              "examples": ["5439"],
              "order": 2
            },
            "database": {
              "title": "Database",
              "description": "Name of the database.",
              "type": "string",
              "examples": ["master"],
              "order": 3
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "examples": ["public"],
              "order": 4
            },
            "username": {
              "title": "Username",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 5
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "airbyte_secret": true,
              "order": 6
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 7
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "8cc6537e-f8a6-423c-b960-e927af76116e",
      "name": "Reply.io",
      "dockerRepository": "airbyte/source-reply-io",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/reply-io",
      "icon": "reply-io.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/reply-io",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Reply Io Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Token",
              "description": "The API Token for Reply",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "db04ecd1-42e7-4115-9cec-95812905c626",
      "name": "Retently",
      "dockerRepository": "airbyte/source-retently",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/retently",
      "icon": "retently.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Retently Api Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication Mechanism",
              "description": "Choose how to authenticate to Retently",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Retently (OAuth)",
                  "required": ["client_id", "client_secret", "refresh_token"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Retently developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Retently developer application.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "Retently Refresh Token which can be used to fetch new Bearer Tokens when the current one expires.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Authenticate with API Token",
                  "required": ["api_key"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "order": 0
                    },
                    "api_key": {
                      "title": "API Token",
                      "description": "Retently API Token. See the <a href=\"https://app.retently.com/settings/api/tokens\">docs</a> for more information on how to obtain this key.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "fb141f29-be2a-450b-a4f2-2cd203a00f84",
      "name": "RD Station Marketing",
      "dockerRepository": "airbyte/source-rd-station-marketing",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/rd-station-marketing",
      "icon": "rdstation.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/rd-station-marketing",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "RD Station Marketing Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "authorization": {
              "type": "object",
              "title": "Authentication Type",
              "description": "Choose one of the possible authorization method",
              "oneOf": [
                {
                  "title": "Sign in via RD Station (OAuth)",
                  "type": "object",
                  "required": ["auth_type"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your RD Station developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your RD Station developer application",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "The token for obtaining the new access token.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string"
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["authorization", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d78e5de0-aa44-4744-aa4f-74c818ccfe19",
      "name": "RKI Covid",
      "dockerRepository": "airbyte/source-rki-covid",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/rki-covid",
      "icon": "rki.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/rki-covid",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "RKI Covid Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date in the format 2017-01-25. Any data before this date will not be replicated.",
              "order": 1
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "0efee448-6948-49e2-b786-17db50647908",
      "name": "RSS",
      "dockerRepository": "airbyte/source-rss",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/rss",
      "icon": "rss.svg",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/rss",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "RSS Spec",
          "type": "object",
          "required": ["url"],
          "properties": {
            "url": {
              "type": "string",
              "description": "RSS Feed URL"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false
    },
    {
      "sourceDefinitionId": "921d9608-3915-450b-8078-0af18801ea1b",
      "name": "Rocket.chat",
      "dockerRepository": "airbyte/source-rocket-chat",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/rocket-chat",
      "icon": "rocket-chat.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/rocket-chat",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Rocket Chat Spec",
          "type": "object",
          "required": ["token", "user_id", "endpoint"],
          "additionalProperties": true,
          "properties": {
            "endpoint": {
              "title": "Endpoint",
              "type": "string",
              "description": "Your rocket.chat instance URL.",
              "examples": [
                "https://airbyte-connector-poc.rocket.chat",
                "https://hey.yoursite.com"
              ]
            },
            "token": {
              "title": "Token",
              "type": "string",
              "description": "Your API Token. See <a href=\"https://developer.rocket.chat/reference/api/rest-api/endpoints/other-important-endpoints/access-tokens-endpoints\">here</a>. The token is case sensitive.",
              "airbyte_secret": true
            },
            "user_id": {
              "title": "User ID.",
              "type": "string",
              "description": "Your User Id."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "69589781-7828-43c5-9f63-8925b1c1ccc2",
      "name": "S3",
      "dockerRepository": "airbyte/source-s3",
      "dockerImageTag": "1.0.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/s3",
      "icon": "s3.svg",
      "sourceType": "file",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/s3",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/s3",
        "connectionSpecification": {
          "title": "S3 Source Spec",
          "type": "object",
          "properties": {
            "dataset": {
              "title": "Output Stream Name",
              "description": "The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.",
              "pattern": "^([A-Za-z0-9-_]+)$",
              "order": 0,
              "type": "string"
            },
            "path_pattern": {
              "title": "Pattern of files to replicate",
              "description": "A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See <a href=\"https://facelessuser.github.io/wcmatch/glob/\" target=\"_blank\">this page</a> to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern <strong>**</strong> to pick up all files.",
              "examples": [
                "**",
                "myFolder/myTableFiles/*.csv|myFolder/myOtherTableFiles/*.csv"
              ],
              "order": 10,
              "type": "string"
            },
            "format": {
              "title": "File Format",
              "description": "The format of the files you'd like to replicate",
              "default": "csv",
              "order": 20,
              "type": "object",
              "oneOf": [
                {
                  "title": "CSV",
                  "description": "This connector utilises <a href=\"https: // arrow.apache.org/docs/python/generated/pyarrow.csv.open_csv.html\" target=\"_blank\">PyArrow (Apache Arrow)</a> for CSV parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "csv",
                      "type": "string"
                    },
                    "delimiter": {
                      "title": "Delimiter",
                      "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'.",
                      "default": ",",
                      "minLength": 1,
                      "order": 0,
                      "type": "string"
                    },
                    "infer_datatypes": {
                      "title": "Infer Datatypes",
                      "description": "Configures whether a schema for the source should be inferred from the current data or not. If set to false and a custom schema is set, then the manually enforced schema is used. If a schema is not manually set, and this is set to false, then all fields will be read as strings",
                      "default": true,
                      "order": 1,
                      "type": "boolean"
                    },
                    "quote_char": {
                      "title": "Quote Character",
                      "description": "The character used for quoting CSV values. To disallow quoting, make this field blank.",
                      "default": "\"",
                      "order": 2,
                      "type": "string"
                    },
                    "escape_char": {
                      "title": "Escape Character",
                      "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.",
                      "order": 3,
                      "type": "string"
                    },
                    "encoding": {
                      "title": "Encoding",
                      "description": "The character encoding of the CSV data. Leave blank to default to <strong>UTF8</strong>. See <a href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\">list of python encodings</a> for allowable options.",
                      "default": "utf8",
                      "order": 4,
                      "type": "string"
                    },
                    "double_quote": {
                      "title": "Double Quote",
                      "description": "Whether two quotes in a quoted CSV value denote a single quote in the data.",
                      "default": true,
                      "order": 5,
                      "type": "boolean"
                    },
                    "newlines_in_values": {
                      "title": "Allow newlines in values",
                      "description": "Whether newline characters are allowed in CSV values. Turning this on may affect performance. Leave blank to default to False.",
                      "default": false,
                      "order": 6,
                      "type": "boolean"
                    },
                    "additional_reader_options": {
                      "title": "Additional Reader Options",
                      "description": "Optionally add a valid JSON string here to provide additional options to the csv reader. Mappings must correspond to options <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\" target=\"_blank\">detailed here</a>. 'column_types' is used internally to handle schema so overriding that would likely cause problems.",
                      "examples": [
                        "{\"timestamp_parsers\": [\"%m/%d/%Y %H:%M\", \"%Y/%m/%d %H:%M\"], \"strings_can_be_null\": true, \"null_values\": [\"NA\", \"NULL\"]}"
                      ],
                      "order": 7,
                      "type": "string"
                    },
                    "advanced_options": {
                      "title": "Advanced Options",
                      "description": "Optionally add a valid JSON string here to provide additional <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ReadOptions.html#pyarrow.csv.ReadOptions\" target=\"_blank\">Pyarrow ReadOptions</a>. Specify 'column_names' here if your CSV doesn't have header, or if you want to use custom column names. 'block_size' and 'encoding' are already used above, specify them again here will override the values above.",
                      "examples": [
                        "{\"column_names\": [\"column1\", \"column2\"]}"
                      ],
                      "order": 8,
                      "type": "string"
                    },
                    "block_size": {
                      "title": "Block Size",
                      "description": "The chunk size in bytes to process at a time in memory from each file. If your data is particularly wide and failing during schema detection, increasing this should solve it. Beware of raising this too high as you could hit OOM errors.",
                      "default": 10000,
                      "minimum": 1,
                      "maximum": 2147483647,
                      "order": 9,
                      "type": "integer"
                    }
                  }
                },
                {
                  "title": "Parquet",
                  "description": "This connector utilises <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html\" target=\"_blank\">PyArrow (Apache Arrow)</a> for Parquet parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "parquet",
                      "type": "string"
                    },
                    "columns": {
                      "title": "Selected Columns",
                      "description": "If you only want to sync a subset of the columns from the file(s), add the columns you want here as a comma-delimited list. Leave it empty to sync all columns.",
                      "order": 0,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "batch_size": {
                      "title": "Record batch size",
                      "description": "Maximum number of records per batch read from the input files. Batches may be smaller if there aren’t enough rows in the file. This option can help avoid out-of-memory errors if your data is particularly wide.",
                      "default": 65536,
                      "order": 1,
                      "type": "integer"
                    },
                    "buffer_size": {
                      "title": "Buffer Size",
                      "description": "Perform read buffering when deserializing individual column chunks. By default every group column will be loaded fully to memory. This option can help avoid out-of-memory errors if your data is particularly wide.",
                      "default": 2,
                      "type": "integer"
                    }
                  }
                },
                {
                  "title": "Avro",
                  "description": "This connector utilises <a href=\"https://fastavro.readthedocs.io/en/latest/\" target=\"_blank\">fastavro</a> for Avro parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "avro",
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "Jsonl",
                  "description": "This connector uses <a href=\"https://arrow.apache.org/docs/python/json.html\" target=\"_blank\">PyArrow</a> for JSON Lines (jsonl) file parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "jsonl",
                      "type": "string"
                    },
                    "newlines_in_values": {
                      "title": "Allow newlines in values",
                      "description": "Whether newline characters are allowed in JSON values. Turning this on may affect performance. Leave blank to default to False.",
                      "default": false,
                      "order": 0,
                      "type": "boolean"
                    },
                    "unexpected_field_behavior": {
                      "title": "Unexpected field behavior",
                      "description": "How JSON fields outside of explicit_schema (if given) are treated. Check <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.json.ParseOptions.html\" target=\"_blank\">PyArrow documentation</a> for details",
                      "default": "infer",
                      "examples": ["ignore", "infer", "error"],
                      "order": 1,
                      "enum": ["ignore", "infer", "error"]
                    },
                    "block_size": {
                      "title": "Block Size",
                      "description": "The chunk size in bytes to process at a time in memory from each file. If your data is particularly wide and failing during schema detection, increasing this should solve it. Beware of raising this too high as you could hit OOM errors.",
                      "default": 0,
                      "order": 2,
                      "type": "integer"
                    }
                  }
                }
              ]
            },
            "schema": {
              "title": "Manually enforced data schema",
              "description": "Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of <strong>{ \"column\" : \"type\" }</strong>, where types are valid <a href=\"https://json-schema.org/understanding-json-schema/reference/type.html\" target=\"_blank\">JSON Schema datatypes</a>. Leave as {} to auto-infer the schema.",
              "default": "{}",
              "examples": [
                "{\"column_1\": \"number\", \"column_2\": \"string\", \"column_3\": \"array\", \"column_4\": \"object\", \"column_5\": \"boolean\"}"
              ],
              "order": 30,
              "type": "string"
            },
            "provider": {
              "title": "S3: Amazon Web Services",
              "type": "object",
              "properties": {
                "bucket": {
                  "title": "Bucket",
                  "description": "Name of the S3 bucket where the file(s) exist.",
                  "order": 0,
                  "type": "string"
                },
                "aws_access_key_id": {
                  "title": "AWS Access Key ID",
                  "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                  "airbyte_secret": true,
                  "order": 1,
                  "type": "string"
                },
                "aws_secret_access_key": {
                  "title": "AWS Secret Access Key",
                  "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                  "airbyte_secret": true,
                  "order": 2,
                  "type": "string"
                },
                "path_prefix": {
                  "title": "Path Prefix",
                  "description": "By providing a path-like prefix (e.g. myFolder/thisTable/) under which all the relevant files sit, we can optimize finding these in S3. This is optional but recommended if your bucket contains many folders/files which you don't need to replicate.",
                  "default": "",
                  "order": 3,
                  "type": "string"
                },
                "endpoint": {
                  "title": "Endpoint",
                  "description": "Endpoint to an S3 compatible service. Leave empty to use AWS.",
                  "default": "",
                  "order": 4,
                  "type": "string"
                }
              },
              "required": ["bucket"],
              "order": 11,
              "description": "Use this to load files from S3 or S3-compatible services"
            }
          },
          "required": ["dataset", "path_pattern", "provider"]
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.s3.amazonaws.com"]
      }
    },
    {
      "sourceDefinitionId": "41991d12-d4b5-439e-afd0-260a31d4c53f",
      "name": "SalesLoft",
      "dockerRepository": "airbyte/source-salesloft",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/salesloft",
      "icon": "salesloft.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/salesloft",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Salesloft Spec",
          "type": "object",
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Salesloft developer application."
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Salesloft developer application.",
              "airbyte_secret": true
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "The token for obtaining a new access token.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b117307c-14b6-41aa-9422-947e34922962",
      "name": "Salesforce",
      "dockerRepository": "airbyte/source-salesforce",
      "dockerImageTag": "2.0.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/salesforce",
      "icon": "salesforce.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/salesforce",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Salesforce Source Spec",
          "type": "object",
          "required": ["client_id", "client_secret", "refresh_token"],
          "additionalProperties": true,
          "properties": {
            "is_sandbox": {
              "title": "Sandbox",
              "description": "Toggle if you're using a <a href=\"https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm&type=5\">Salesforce Sandbox</a>",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "auth_type": {
              "type": "string",
              "const": "Client"
            },
            "client_id": {
              "title": "Client ID",
              "description": "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\">Client ID</a>",
              "type": "string",
              "order": 2
            },
            "client_secret": {
              "title": "Client Secret",
              "description": "Enter your Salesforce developer application's <a href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\">Client secret</a>",
              "type": "string",
              "airbyte_secret": true,
              "order": 3
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "Enter your application's <a href=\"https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm\">Salesforce Refresh Token</a> used for Airbyte to access your Salesforce account.",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "start_date": {
              "title": "Start Date",
              "description": "Enter the date in the YYYY-MM-DD format. Airbyte will replicate the data added on and after this date. If this field is blank, Airbyte will replicate all data.",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z|[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2021-07-25", "2021-07-25T00:00:00Z"],
              "format": "date",
              "order": 5
            },
            "streams_criteria": {
              "type": "array",
              "order": 6,
              "items": {
                "type": "object",
                "required": ["criteria", "value"],
                "properties": {
                  "criteria": {
                    "type": "string",
                    "title": "Search criteria",
                    "enum": [
                      "starts with",
                      "ends with",
                      "contains",
                      "exacts",
                      "starts not with",
                      "ends not with",
                      "not contains",
                      "not exacts"
                    ],
                    "order": 1,
                    "default": "contains"
                  },
                  "value": {
                    "type": "string",
                    "title": "Search value",
                    "order": 2
                  }
                }
              },
              "title": "Filter Salesforce Objects",
              "description": "Filter streams relevant to you"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "is_sandbox": {
                  "type": "boolean",
                  "path_in_connector_config": ["is_sandbox"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*.salesforce.com"]
      }
    },
    {
      "sourceDefinitionId": "ec5f3102-fb31-4916-99ae-864faf8e7e25",
      "name": "SAP Fieldglass",
      "dockerRepository": "airbyte/source-sap-fieldglass",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sap-fieldglass",
      "icon": "sapfieldglass.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/sap-fieldglass",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Sap Fieldglass Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "8d7ef552-2c0f-11ec-8d3d-0242ac130003",
      "name": "SearchMetrics",
      "dockerRepository": "airbyte/source-search-metrics",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/search-metrics",
      "icon": "searchmetrics.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/seacrh-metrics",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Search Metrics Spec",
          "type": "object",
          "required": [
            "api_key",
            "client_secret",
            "country_code",
            "start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "",
              "airbyte_secret": true
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "",
              "airbyte_secret": true
            },
            "country_code": {
              "title": "Country Code",
              "type": "string",
              "default": "",
              "description": "The region of the S3 staging bucket to use if utilising a copy strategy.",
              "enum": [
                "",
                "AR",
                "AU",
                "AT",
                "BE",
                "BR",
                "CA",
                "CN",
                "CO",
                "DK",
                "FI",
                "FR",
                "DE",
                "HK",
                "IN",
                "IE",
                "IT",
                "JP",
                "MX",
                "NL",
                "NO",
                "PL",
                "RU",
                "SG",
                "ZA",
                "ES",
                "SE",
                "CH",
                "TR",
                "US",
                "GB"
              ],
              "order": 2
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Data generated in SearchMetrics after this date will be replicated. This date must be specified in the format YYYY-MM-DDT00:00:00Z.",
              "examples": ["20200925"],
              "pattern": "^[0-9]{4}[0-9]{2}[0-9]{2}$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "da9fc6b9-8059-4be0-b204-f56e22e4d52d",
      "name": "Secoda",
      "dockerRepository": "airbyte/source-secoda",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/secoda",
      "icon": "secoda.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/secoda",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Secoda Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "Api Key",
              "type": "string",
              "description": "Your API Access Key. See <a href=\"https://docs.secoda.co/secoda-api/authentication\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "fbb5fbe2-16ad-4cf4-af7d-ff9d9c316c87",
      "name": "Sendgrid",
      "dockerRepository": "airbyte/source-sendgrid",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sendgrid",
      "icon": "sendgrid.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/sendgrid",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Sendgrid Spec",
          "type": "object",
          "required": ["apikey"],
          "additionalProperties": true,
          "properties": {
            "apikey": {
              "title": "Sendgrid API key",
              "airbyte_secret": true,
              "type": "string",
              "description": "API Key, use <a href=\"https://app.sendgrid.com/settings/api_keys/\">admin</a> to generate this key.",
              "order": 0
            },
            "start_time": {
              "title": "Start time",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(.\\d+)?Z$",
              "description": "Start time in ISO8601 format. Any data before this time point will not be replicated.",
              "examples": [
                "2020-01-01T01:01:01Z",
                "2020-01-01T01:01:01.000001Z"
              ],
              "order": 1
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.sendgrid.com"]
      }
    },
    {
      "sourceDefinitionId": "39de93cb-1511-473e-a673-5cbedb9436af",
      "name": "Senseforce",
      "dockerRepository": "airbyte/source-senseforce",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/senseforce",
      "icon": "senseforce.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/senseforce",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Senseforce Source Spec",
          "type": "object",
          "required": [
            "access_token",
            "backend_url",
            "dataset_id",
            "start_date"
          ],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "type": "string",
              "title": "API Access Token",
              "description": "Your API access token. See <a href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\">here</a>. The toke is case sensitive.",
              "airbyte_secret": true
            },
            "backend_url": {
              "type": "string",
              "title": "Senseforce backend URL",
              "examples": ["https://galaxyapi.senseforce.io"],
              "description": "Your Senseforce API backend URL. This is the URL shown during the Login screen. See <a href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\">here</a> for more details. (Note: Most Senseforce backend APIs have the term 'galaxy' in their ULR)"
            },
            "dataset_id": {
              "type": "string",
              "title": "Dataset ID",
              "examples": ["8f418098-ca28-4df5-9498-0df9fe78eda7"],
              "description": "The ID of the dataset you want to synchronize. The ID can be found in the URL when opening the dataset. See <a href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\">here</a> for more details. (Note: As the Senseforce API only allows to synchronize a specific dataset, each dataset you  want to synchronize needs to be implemented as a separate airbyte source)."
            },
            "start_date": {
              "type": "string",
              "title": "The first day (in UTC) when to read data from.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "UTC date and time in the format 2017-01-25. Only data with \"Timestamp\" after this date will be replicated. Important note: This start date must be set to the first day of where your dataset provides data.  If your dataset has data from 2020-10-10 10:21:10, set the start_date to 2020-10-10 or later",
              "examples": ["2017-01-25"],
              "format": "date"
            },
            "slice_range": {
              "type": "integer",
              "title": "Data request time increment in days",
              "default": 10,
              "minimum": 1,
              "maximum": 365,
              "examples": [1, 3, 10, 30, 180, 360],
              "airbyte_hidden": true,
              "description": "The time increment used by the connector when requesting data from the Senseforce API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted and the more likely one could run into rate limites.  Furthermore, consider that large chunks of time might take a long time for the Senseforce query to return data - meaning it could take in effect longer than with more smaller time slices. If there are a lot of data per day, set this setting to 1. If there is only very little data per day, you might change the setting to 10 or more."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["galaxyapi.senseforce.io", "senseforce.io"]
      }
    },
    {
      "sourceDefinitionId": "2e88fa20-a2f6-43cc-bba6-98a0a3f244fb",
      "name": "Sendinblue",
      "dockerRepository": "airbyte/source-sendinblue",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sendinblue",
      "icon": "sendinblue.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/sendinblue",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Sendinblue Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://developers.sendinblue.com/docs/getting-started\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9da77001-af33-4bcd-be46-6252bf9342b9",
      "name": "Shopify",
      "dockerRepository": "airbyte/source-shopify",
      "dockerImageTag": "0.3.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/shopify",
      "icon": "shopify.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/shopify",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Shopify Source CDK Specifications",
          "type": "object",
          "required": ["shop", "start_date"],
          "additionalProperties": true,
          "properties": {
            "shop": {
              "type": "string",
              "title": "Shopify Store",
              "description": "The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME'.",
              "order": 1
            },
            "credentials": {
              "title": "Shopify Authorization Method",
              "description": "The authorization method to use to retrieve data from Shopify",
              "type": "object",
              "order": 2,
              "oneOf": [
                {
                  "title": "API Password",
                  "description": "API Password Auth",
                  "type": "object",
                  "required": ["auth_method", "api_password"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "api_password",
                      "order": 0
                    },
                    "api_password": {
                      "type": "string",
                      "title": "API Password",
                      "description": "The API Password for your private application in the `Shopify` store.",
                      "airbyte_secret": true,
                      "order": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "description": "OAuth2.0",
                  "required": ["auth_method"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of the Shopify developer application.",
                      "airbyte_secret": true,
                      "order": 1
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of the Shopify developer application.",
                      "airbyte_secret": true,
                      "order": 2
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The Access Token for making authenticated requests.",
                      "airbyte_secret": true,
                      "order": 3
                    }
                  }
                }
              ]
            },
            "start_date": {
              "type": "string",
              "title": "Replication Start Date",
              "description": "The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shop": {
                  "type": "string",
                  "path_in_connector_config": ["shop"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2fed2292-5586-480c-af92-9944e39fe12d",
      "name": "Short.io",
      "dockerRepository": "airbyte/source-shortio",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/shortio",
      "icon": "short.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://developers.short.io/reference",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Shortio Spec",
          "type": "object",
          "required": ["domain_id", "secret_key", "start_date"],
          "properties": {
            "domain_id": {
              "type": "string",
              "desciprtion": "Short.io Domain ID",
              "title": "Domain ID",
              "airbyte_secret": false
            },
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "Short.io Secret Key",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "airbyte_secret": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "c2281cee-86f9-4a86-bb48-d23286b4c7bd",
      "name": "Slack",
      "dockerRepository": "airbyte/source-slack",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/slack",
      "icon": "slack.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/slack",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Slack Spec",
          "type": "object",
          "required": ["start_date", "lookback_window", "join_channels"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "title": "Start Date"
            },
            "lookback_window": {
              "type": "integer",
              "title": "Threads Lookback window (Days)",
              "description": "How far into the past to look for messages in threads.",
              "examples": [7, 14]
            },
            "join_channels": {
              "type": "boolean",
              "default": true,
              "title": "Join all channels",
              "description": "Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages. "
            },
            "channel_filter": {
              "type": "array",
              "default": [],
              "items": {
                "type": "string",
                "minLength": 0
              },
              "title": "Channel name filter",
              "description": "A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.",
              "examples": ["channel_one", "channel_two"]
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate into Slack",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Sign in via Slack (OAuth)",
                  "required": [
                    "option_title",
                    "client_id",
                    "client_secret",
                    "access_token"
                  ],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "Default OAuth2.0 authorization"
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "Slack client_id. See our <a href=\"https://docs.airbyte.com/integrations/sources/slack\">docs</a> if you need help finding this id."
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "Slack client_secret. See our <a href=\"https://docs.airbyte.com/integrations/sources/slack\">docs</a> if you need help finding this secret.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access token",
                      "description": "Slack access_token. See our <a href=\"https://docs.airbyte.com/integrations/sources/slack\">docs</a> if you need help generating the token.",
                      "airbyte_secret": true
                    }
                  },
                  "order": 0
                },
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["option_title", "api_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "API Token Credentials"
                    },
                    "api_token": {
                      "type": "string",
                      "title": "API Token",
                      "description": "A Slack bot token. See the <a href=\"https://docs.airbyte.com/integrations/sources/slack\">docs</a> for instructions on how to generate it.",
                      "airbyte_secret": true
                    }
                  },
                  "order": 1
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "option_title"],
          "predicate_value": "Default OAuth2.0 authorization",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["slack.com"]
      }
    },
    {
      "sourceDefinitionId": "781f8b1d-4e20-4842-a2c3-cd9b119d65fa",
      "name": "Smaily",
      "dockerRepository": "airbyte/source-smaily",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/smaily",
      "icon": "smaily.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/smaily",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Smaily Spec",
          "type": "object",
          "required": ["api_subdomain", "api_username", "api_password"],
          "additionalProperties": true,
          "properties": {
            "api_subdomain": {
              "type": "string",
              "title": "API Subdomain",
              "description": "API Subdomain. See https://smaily.com/help/api/general/create-api-user/"
            },
            "api_username": {
              "type": "string",
              "title": "API User Username",
              "description": "API user username. See https://smaily.com/help/api/general/create-api-user/"
            },
            "api_password": {
              "type": "string",
              "title": "API User Password",
              "description": "API user password. See https://smaily.com/help/api/general/create-api-user/",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "21cc4a17-a011-4485-8a3e-e2341a91ab9f",
      "name": "SmartEngage",
      "dockerRepository": "airbyte/source-smartengage",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/smartengage",
      "icon": "smartengage.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/smartengage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SmartEngage Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "API Key",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "374ebc65-6636-4ea0-925c-7d35999a8ffc",
      "name": "Smartsheets",
      "dockerRepository": "airbyte/source-smartsheets",
      "dockerImageTag": "1.0.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/smartsheets",
      "icon": "smartsheet.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/smartsheets",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Smartsheets Source Spec",
          "type": "object",
          "required": ["credentials", "spreadsheet_id"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "client_id",
                    "client_secret",
                    "refresh_token",
                    "access_token",
                    "token_expiry_date"
                  ],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0"
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The API ID of the SmartSheets developer application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The API Secret the SmartSheets developer application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    },
                    "token_expiry_date": {
                      "type": "string",
                      "description": "The date-time when the access token should be refreshed.",
                      "format": "date-time"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "The key to refresh the expired access_token.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "API Access Token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "access_token"
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The access token to use for accessing your data from Smartsheets. This access token must be generated by a user with at least read access to the data you'd like to replicate. Generate an access token in the Smartsheets main menu by clicking Account > Apps & Integrations > API Access. See the <a href=\"https://docs.airbyte.com/integrations/sources/smartsheets/#setup-guide\">setup guide</a> for information on how to obtain this token.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "spreadsheet_id": {
              "title": "Sheet ID",
              "description": "The spreadsheet ID. Find it by opening the spreadsheet then navigating to File > Properties",
              "type": "string",
              "order": 1
            },
            "start_datetime": {
              "title": "Start Datetime",
              "type": "string",
              "examples": ["2000-01-01T13:00:00", "2000-01-01T13:00:00-07:00"],
              "description": "Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`",
              "format": "date-time",
              "default": "2020-01-01T00:00:00+00:00",
              "order": 2,
              "airbyte_hidden": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                },
                "token_expiry_date": {
                  "type": "string",
                  "format": "date-time",
                  "path_in_connector_config": [
                    "credentials",
                    "token_expiry_date"
                  ]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["app.smartsheet.com", "api.smartsheet.com"]
      }
    },
    {
      "sourceDefinitionId": "200330b2-ea62-4d11-ac6d-cfe3e3f8ab2b",
      "name": "Snapchat Marketing",
      "dockerRepository": "airbyte/source-snapchat-marketing",
      "dockerImageTag": "0.1.15",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/snapchat-marketing",
      "icon": "snapchat.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/snapchat-marketing",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Snapchat Marketing Spec",
          "type": "object",
          "required": ["client_id", "client_secret", "refresh_token"],
          "properties": {
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID of your Snapchat developer application.",
              "airbyte_secret": true,
              "order": 0
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret of your Snapchat developer application.",
              "airbyte_secret": true,
              "order": 1
            },
            "refresh_token": {
              "title": "Refresh Token",
              "type": "string",
              "description": "Refresh Token to renew the expired Access Token.",
              "airbyte_secret": true,
              "order": 2
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Date in the format 2022-01-01. Any data before this date will not be replicated.",
              "examples": ["2022-01-01"],
              "default": "2022-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 3,
              "format": "date"
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "Date in the format 2017-01-25. Any data after this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-01-30"],
              "order": 4,
              "format": "date"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["accounts.snapchat.com", "adsapi.snapchat.com"]
      }
    },
    {
      "sourceDefinitionId": "e2d65910-8c8b-40a1-ae7d-ee2416b2bfa2",
      "name": "Snowflake",
      "dockerRepository": "airbyte/source-snowflake",
      "dockerImageTag": "0.1.31",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/snowflake",
      "icon": "snowflake.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/snowflake",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Snowflake Source Spec",
          "type": "object",
          "required": ["host", "role", "warehouse", "database"],
          "properties": {
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "order": 0,
                  "required": ["client_id", "client_secret", "auth_type"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "OAuth",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your Snowflake developer application.",
                      "airbyte_secret": true,
                      "order": 1
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your Snowflake developer application.",
                      "airbyte_secret": true,
                      "order": 2
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true,
                      "order": 3
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Refresh Token for making authenticated requests.",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Username and Password",
                  "type": "object",
                  "required": ["username", "password", "auth_type"],
                  "order": 1,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "username/password",
                      "order": 0
                    },
                    "username": {
                      "description": "The username you created to allow Airbyte to access the database.",
                      "examples": ["AIRBYTE_USER"],
                      "type": "string",
                      "title": "Username",
                      "order": 1
                    },
                    "password": {
                      "description": "The password associated with the username.",
                      "type": "string",
                      "airbyte_secret": true,
                      "title": "Password",
                      "order": 2
                    }
                  }
                }
              ],
              "order": 0
            },
            "host": {
              "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
              "examples": ["accountname.us-east-2.aws.snowflakecomputing.com"],
              "type": "string",
              "title": "Account Name",
              "order": 1
            },
            "role": {
              "description": "The role you created for Airbyte to access Snowflake.",
              "examples": ["AIRBYTE_ROLE"],
              "type": "string",
              "title": "Role",
              "order": 2
            },
            "warehouse": {
              "description": "The warehouse you created for Airbyte to access data.",
              "examples": ["AIRBYTE_WAREHOUSE"],
              "type": "string",
              "title": "Warehouse",
              "order": 3
            },
            "database": {
              "description": "The database you created for Airbyte to access data.",
              "examples": ["AIRBYTE_DATABASE"],
              "type": "string",
              "title": "Database",
              "order": 4
            },
            "schema": {
              "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
              "examples": ["AIRBYTE_SCHEMA"],
              "type": "string",
              "title": "Schema",
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 6
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "OAuth",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "path_in_connector_config": ["host"]
                },
                "role": {
                  "type": "string",
                  "path_in_connector_config": ["role"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}"]
      }
    },
    {
      "sourceDefinitionId": "3ab1d7d0-1577-4ab9-bcc4-1ff6a4c2c9f2",
      "name": "Sonar Cloud",
      "dockerRepository": "airbyte/source-sonar-cloud",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sonar-cloud",
      "icon": "sonarcloud.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/sonar-cloud",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Sonar Cloud Spec",
          "type": "object",
          "required": ["user_token", "organization", "component_keys"],
          "additionalProperties": true,
          "properties": {
            "user_token": {
              "title": "User Token",
              "type": "string",
              "description": "Your User Token. See <a href=\"https://docs.sonarcloud.io/advanced-setup/user-accounts/\">here</a>. The token is case sensitive.",
              "airbyte_secret": true
            },
            "organization": {
              "title": "Organization",
              "type": "string",
              "description": "Organization key. See <a href=\"https://docs.sonarcloud.io/appendices/project-information/#project-and-organization-keys\">here</a>.",
              "examples": ["airbyte"]
            },
            "component_keys": {
              "title": "Component Keys",
              "type": "array",
              "description": "Comma-separated list of component keys.",
              "examples": ["airbyte-ws-order", "airbyte-ws-checkout"]
            },
            "start_date": {
              "title": "Start date",
              "type": "string",
              "description": "To retrieve issues created after the given date (inclusive).",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"],
              "format": "date"
            },
            "end_date": {
              "title": "End date",
              "type": "string",
              "description": "To retrieve issues created before the given date (inclusive).",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"],
              "format": "date"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["sonarcloud.io"]
      }
    },
    {
      "sourceDefinitionId": "62235e65-af7a-4138-9130-0bda954eb6a8",
      "name": "SpaceX API",
      "dockerRepository": "airbyte/source-spacex-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/spacex-api",
      "icon": "spacex.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/spacex-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Spacex Api Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "id": {
              "title": "Unique ID for specific source target",
              "type": "string",
              "desciption": "Optional, For a specific ID"
            },
            "options": {
              "title": "Configuration options for endpoints",
              "type": "string",
              "desciption": "Optional, Possible values for an endpoint. Example values for launches-latest, upcoming, past"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "77225a51-cd15-4a13-af02-65816bd0ecf4",
      "name": "Square",
      "dockerRepository": "airbyte/source-square",
      "dockerImageTag": "0.2.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/square",
      "icon": "square.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/square",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Square Spec",
          "type": "object",
          "required": ["is_sandbox"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authentication",
              "description": "Choose how to authenticate to Square.",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "title": "Oauth authentication",
                  "type": "object",
                  "required": [
                    "auth_type",
                    "client_id",
                    "client_secret",
                    "refresh_token"
                  ],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "const": "OAuth Credentials",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Square-issued ID of your application",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Square-issued application secret for your application",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "A refresh token generated using the above client ID and secret",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "API key",
                  "type": "object",
                  "required": ["auth_type", "api_key"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "const": "API Key",
                      "order": 0
                    },
                    "api_key": {
                      "type": "string",
                      "title": "API key token",
                      "description": "The API key for a Square application",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "is_sandbox": {
              "type": "boolean",
              "description": "Determines whether to use the sandbox or production environment.",
              "title": "Sandbox",
              "default": false,
              "order": 1
            },
            "start_date": {
              "type": "string",
              "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated.",
              "title": "Start Date",
              "default": "2021-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            },
            "include_deleted_objects": {
              "type": "boolean",
              "description": "In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes)",
              "title": "Include Deleted Objects",
              "default": false,
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials", "0"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        },
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "Oauth",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["connect.squareupsandbox.com", "connect.squareup.com"]
      }
    },
    {
      "sourceDefinitionId": "7a4327c4-315a-11ec-8d3d-0242ac130003",
      "name": "Strava",
      "dockerRepository": "airbyte/source-strava",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/strava",
      "icon": "strava.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/strava",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Strava Spec",
          "type": "object",
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "athlete_id",
            "start_date"
          ],
          "additionalProperties": false,
          "properties": {
            "auth_type": {
              "type": "string",
              "const": "Client",
              "enum": ["Client"],
              "default": "Client"
            },
            "client_id": {
              "type": "string",
              "description": "The Client ID of your Strava developer application.",
              "title": "Client ID",
              "pattern": "^[0-9_\\-]+$",
              "examples": ["12345"]
            },
            "client_secret": {
              "type": "string",
              "description": "The Client Secret of your Strava developer application.",
              "title": "Client Secret",
              "pattern": "^[0-9a-fA-F]+$",
              "examples": ["fc6243f283e51f6ca989aab298b17da125496f50"],
              "airbyte_secret": true
            },
            "refresh_token": {
              "type": "string",
              "description": "The Refresh Token with the activity: read_all permissions.",
              "title": "Refresh Token",
              "pattern": "^[0-9a-fA-F]+$",
              "examples": ["fc6243f283e51f6ca989aab298b17da125496f50"],
              "airbyte_secret": true
            },
            "athlete_id": {
              "type": "integer",
              "description": "The Athlete ID of your Strava developer application.",
              "title": "Athlete ID",
              "pattern": "^[0-9_\\-]+$",
              "examples": ["17831421"]
            },
            "start_date": {
              "type": "string",
              "description": "UTC date and time. Any data before this date will not be replicated.",
              "title": "Start Date",
              "examples": ["2016-12-31 23:59:59"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["auth_type"],
          "predicate_value": "Client",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "74cbd708-46c3-4512-9c93-abd5c3e9a94d",
      "name": "Statuspage",
      "dockerRepository": "airbyte/source-statuspage",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/statuspage",
      "icon": "statuspage.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/statuspage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Statuspage Spec",
          "type": "object",
          "required": ["api_key"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://developer.statuspage.io/#section/Authentication/api_key\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e094cb9a-26de-4645-8761-65c0c425d1de",
      "name": "Stripe",
      "dockerRepository": "airbyte/source-stripe",
      "dockerImageTag": "3.0.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/stripe",
      "icon": "stripe.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/stripe",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Stripe Source Spec",
          "type": "object",
          "required": ["client_secret", "account_id", "start_date"],
          "properties": {
            "account_id": {
              "type": "string",
              "title": "Account ID",
              "description": "Your Stripe account ID (starts with 'acct_', find yours <a href=\"https://dashboard.stripe.com/settings/account\">here</a>).",
              "order": 0
            },
            "client_secret": {
              "type": "string",
              "title": "Secret Key",
              "description": "Stripe API key (usually starts with 'sk_live_'; find yours <a href=\"https://dashboard.stripe.com/apikeys\">here</a>).",
              "airbyte_secret": true,
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Replication start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 2
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window in days",
              "default": 0,
              "minimum": 0,
              "description": "When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info <a href=\"https://docs.airbyte.com/integrations/sources/stripe#requirements\">here</a>",
              "order": 3
            },
            "slice_range": {
              "type": "integer",
              "title": "Data request time increment in days",
              "default": 365,
              "minimum": 1,
              "examples": [1, 3, 10, 30, 180, 360],
              "description": "The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.",
              "order": 4
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.stripe.com"]
      }
    },
    {
      "sourceDefinitionId": "dd4632f4-15e0-4649-9b71-41719fb1fdee",
      "name": "SurveyCTO",
      "dockerRepository": "airbyte/source-surveycto",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/surveycto",
      "icon": "surveycto.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/surveycto",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Surveycto Spec",
          "type": "object",
          "required": ["server_name", "username", "password", "form_id"],
          "properties": {
            "server_name": {
              "type": "string",
              "title": "Server Name",
              "description": "The name of the SurveryCTO server",
              "order": 0
            },
            "username": {
              "type": "string",
              "title": "Username",
              "description": "Username to authenticate into the SurveyCTO server",
              "order": 1
            },
            "password": {
              "type": "string",
              "title": "Password",
              "description": "Password to authenticate into the SurveyCTO server",
              "airbyte_secret": true,
              "order": 2
            },
            "form_id": {
              "type": "array",
              "title": "Form's Id",
              "description": "Unique identifier for one of the forms",
              "order": 3
            },
            "start_date": {
              "type": "string",
              "description": "initial date for survey cto",
              "title": "Start Date",
              "examples": ["Jan 09, 2022 00:00:00 AM"],
              "default": "Jan 09, 2022 00:00:00 AM",
              "order": 4,
              "pattern": "^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dic) [0-9]{2}, [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} (AM|PM)$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "badc5925-0485-42be-8caa-b34096cb71b5",
      "name": "SurveyMonkey",
      "dockerRepository": "airbyte/source-surveymonkey",
      "dockerImageTag": "0.1.15",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/surveymonkey",
      "icon": "surveymonkey.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/surveymonkey",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SurveyMonkey Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "origin": {
              "type": "string",
              "order": 1,
              "enum": ["USA", "Europe", "Canada"],
              "default": "USA",
              "title": "Origin datacenter of the SurveyMonkey account",
              "description": "Depending on the originating datacenter of the SurveyMonkey account, the API access URL may be different."
            },
            "credentials": {
              "title": "SurveyMonkey Authorization Method",
              "description": "The authorization method to use to retrieve data from SurveyMonkey",
              "type": "object",
              "required": ["auth_method", "access_token"],
              "order": 2,
              "properties": {
                "auth_method": {
                  "type": "string",
                  "const": "oauth2.0",
                  "order": 0
                },
                "client_id": {
                  "type": "string",
                  "title": "Client ID",
                  "description": "The Client ID of the SurveyMonkey developer application.",
                  "airbyte_secret": true,
                  "order": 1
                },
                "client_secret": {
                  "type": "string",
                  "title": "Client Secret",
                  "description": "The Client Secret of the SurveyMonkey developer application.",
                  "airbyte_secret": true,
                  "order": 2
                },
                "access_token": {
                  "title": "Access Token",
                  "order": 3,
                  "type": "string",
                  "airbyte_secret": true,
                  "description": "Access Token for making authenticated requests. See the <a href=\"https://docs.airbyte.io/integrations/sources/surveymonkey\">docs</a> for information on how to generate this key."
                }
              }
            },
            "start_date": {
              "title": "Start Date",
              "order": 3,
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?$",
              "examples": ["2021-01-01T00:00:00Z"],
              "format": "date-time"
            },
            "survey_ids": {
              "type": "array",
              "order": 4,
              "items": {
                "type": "string",
                "pattern": "^[0-9]{8,9}$"
              },
              "title": "Survey Monkey survey IDs",
              "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "origin": {
                  "type": "string",
                  "path_in_connector_config": ["origin"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.surveymonkey.com"]
      }
    },
    {
      "sourceDefinitionId": "4a4d887b-0f2d-4b33-ab7f-9b01b9072804",
      "name": "SurveySparrow",
      "dockerRepository": "airbyte/source-survey-sparrow",
      "dockerImageTag": "0.2.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/survey-sparrow",
      "icon": "surveysparrow.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/surveysparrow",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Survey Sparrow Spec",
          "type": "object",
          "required": ["access_token"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "type": "string",
              "description": "Your access token. See <a href=\"https://developers.surveysparrow.com/rest-apis#authentication\">here</a>. The key is case sensitive.",
              "airbyte_secret": true,
              "order": 0
            },
            "survey_id": {
              "type": "array",
              "description": "A List of your survey ids for survey-specific stream",
              "order": 2
            },
            "region": {
              "title": "Base URL",
              "type": "object",
              "description": "Is your account location is EU based? If yes, the base url to retrieve data will be different.",
              "oneOf": [
                {
                  "title": "EU-based account",
                  "type": "object",
                  "properties": {
                    "url_base": {
                      "type": "string",
                      "const": "https://eu-api.surveysparrow.com/v3"
                    }
                  }
                },
                {
                  "title": "Global account",
                  "type": "object",
                  "properties": {
                    "url_base": {
                      "type": "string",
                      "const": "https://api.surveysparrow.com/v3"
                    }
                  }
                }
              ],
              "default": {
                "title": "Global account",
                "type": "object",
                "properties": {
                  "url_base": {
                    "type": "string",
                    "const": "https://api.surveysparrow.com/v3"
                  }
                }
              },
              "order": 1
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f00d2cf4-3c28-499a-ba93-b50b6f26359e",
      "name": "TalkDesk Explore",
      "dockerRepository": "airbyte/source-talkdesk-explore",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/talkdesk-explore",
      "icon": "talkdesk-explore.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Talkdesk Explore API Spec",
          "type": "object",
          "required": ["start_date", "auth_url", "api_key"],
          "additionalProperties": false,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "START DATE",
              "description": "The date from which you'd like to replicate data for Talkdesk Explore API, in the format YYYY-MM-DDT00:00:00. All data generated after this date will be replicated.",
              "examples": ["2020-10-15T00:00:00"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "order": 0
            },
            "timezone": {
              "type": "string",
              "title": "TIMEZONE",
              "description": "Timezone to use when generating reports. Only IANA timezones are supported (https://nodatime.org/TimeZones)",
              "examples": ["Europe/London", "America/Los_Angeles"],
              "default": "UTC",
              "order": 1
            },
            "auth_url": {
              "title": "AUTH URL",
              "type": "string",
              "description": "Talkdesk Auth URL. Only 'client_credentials' auth type supported at the moment.",
              "examples": [
                "https://xxxxxx.talkdeskid.com/oauth/token?grant_type=client_credentials"
              ],
              "order": 2
            },
            "api_key": {
              "title": "API KEY",
              "type": "string",
              "description": "Talkdesk API key.",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d1aa448b-7c54-498e-ad95-263cbebcd2db",
      "name": "Tempo",
      "dockerRepository": "airbyte/source-tempo",
      "dockerImageTag": "0.3.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tempo",
      "icon": "tempo.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Tempo Spec",
          "type": "object",
          "required": ["api_token"],
          "properties": {
            "api_token": {
              "type": "string",
              "title": "API token",
              "description": "Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.tempo.io"]
      }
    },
    {
      "sourceDefinitionId": "0dad1a35-ccf8-4d03-b73e-6788c00b13ae",
      "name": "TiDB",
      "dockerRepository": "airbyte/source-tidb",
      "dockerImageTag": "0.2.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tidb",
      "icon": "tidb.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tidb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "TiDB Source Spec",
          "type": "object",
          "required": ["host", "port", "database", "username"],
          "properties": {
            "host": {
              "description": "Hostname of the database.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "Port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 4000,
              "examples": ["4000"],
              "order": 1
            },
            "database": {
              "description": "Name of the database.",
              "title": "Database",
              "type": "string",
              "order": 2
            },
            "username": {
              "description": "Username to use to access the database.",
              "title": "Username",
              "type": "string",
              "order": 3
            },
            "password": {
              "description": "Password associated with the username.",
              "title": "Password",
              "type": "string",
              "airbyte_secret": true,
              "order": 4
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": false,
              "order": 6
            },
            "tunnel_method": {
              "type": "object",
              "title": "SSH Tunnel Method",
              "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.",
              "oneOf": [
                {
                  "title": "No Tunnel",
                  "required": ["tunnel_method"],
                  "properties": {
                    "tunnel_method": {
                      "description": "No ssh tunnel needed to connect to database",
                      "type": "string",
                      "const": "NO_TUNNEL",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "ssh_key"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host.",
                      "type": "string",
                      "order": 3
                    },
                    "ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 4
                    }
                  }
                },
                {
                  "title": "Password Authentication",
                  "required": [
                    "tunnel_method",
                    "tunnel_host",
                    "tunnel_port",
                    "tunnel_user",
                    "tunnel_user_password"
                  ],
                  "properties": {
                    "tunnel_method": {
                      "description": "Connect through a jump server tunnel host using username and password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "tunnel_host": {
                      "title": "SSH Tunnel Jump Server Host",
                      "description": "Hostname of the jump server host that allows inbound ssh tunnel.",
                      "type": "string",
                      "order": 1
                    },
                    "tunnel_port": {
                      "title": "SSH Connection Port",
                      "description": "Port on the proxy/jump server that accepts inbound ssh connections.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 22,
                      "examples": ["22"],
                      "order": 2
                    },
                    "tunnel_user": {
                      "title": "SSH Login Username",
                      "description": "OS-level username for logging into the jump server host",
                      "type": "string",
                      "order": 3
                    },
                    "tunnel_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha",
      "allowedHosts": {
        "hosts": ["${host}", "${tunnel_method.tunnel_host}"]
      }
    },
    {
      "sourceDefinitionId": "4bfac00d-ce15-44ff-95b9-9e3c3e8fbd35",
      "name": "TikTok Marketing",
      "dockerRepository": "airbyte/source-tiktok-marketing",
      "dockerImageTag": "2.0.4",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tiktok-marketing",
      "icon": "tiktok.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tiktok-marketing",
        "changelogUrl": "https://docs.airbyte.com/integrations/sources/tiktok-marketing",
        "connectionSpecification": {
          "title": "TikTok Marketing Source Spec",
          "type": "object",
          "properties": {
            "credentials": {
              "title": "Authentication Method",
              "description": "Authentication method",
              "default": {},
              "order": 0,
              "type": "object",
              "oneOf": [
                {
                  "title": "OAuth2.0",
                  "type": "object",
                  "properties": {
                    "auth_type": {
                      "title": "Auth Type",
                      "const": "oauth2.0",
                      "order": 0,
                      "type": "string"
                    },
                    "app_id": {
                      "title": "App ID",
                      "description": "The Developer Application App ID.",
                      "airbyte_secret": true,
                      "type": "string"
                    },
                    "secret": {
                      "title": "Secret",
                      "description": "The Developer Application Secret.",
                      "airbyte_secret": true,
                      "type": "string"
                    },
                    "access_token": {
                      "title": "Access Token",
                      "description": "Long-term Authorized Access Token.",
                      "airbyte_secret": true,
                      "type": "string"
                    },
                    "advertiser_id": {
                      "title": "Advertiser ID",
                      "description": "The Advertiser ID to filter reports and streams. Let this empty to retrieve all.",
                      "type": "string"
                    }
                  },
                  "required": ["app_id", "secret", "access_token"]
                },
                {
                  "title": "Sandbox Access Token",
                  "type": "object",
                  "properties": {
                    "auth_type": {
                      "title": "Auth Type",
                      "const": "sandbox_access_token",
                      "order": 0,
                      "type": "string"
                    },
                    "advertiser_id": {
                      "title": "Advertiser ID",
                      "description": "The Advertiser ID which generated for the developer's Sandbox application.",
                      "type": "string"
                    },
                    "access_token": {
                      "title": "Access Token",
                      "description": "The long-term authorized access token.",
                      "airbyte_secret": true,
                      "type": "string"
                    }
                  },
                  "required": ["advertiser_id", "access_token"]
                }
              ]
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated.",
              "default": "2016-09-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 1,
              "type": "string"
            },
            "end_date": {
              "title": "End Date",
              "description": "The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DD. All data generated between start_date and this date will be replicated. Not setting this option will result in always syncing the data till the current date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2,
              "type": "string"
            },
            "report_granularity": {
              "title": "Report Aggregation Granularity",
              "description": "The granularity used for aggregating performance data in reports. See <a href=\"https://docs.airbyte.com/integrations/sources/tiktok-marketing/#report-aggregation\">the docs</a>.",
              "enum": ["LIFETIME", "DAY", "HOUR"],
              "order": 3,
              "airbyte_hidden": true,
              "type": "string"
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [
          "overwrite",
          "append",
          "append_dedup"
        ],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "complete_oauth_output_specification": {
              "title": "CompleteOauthOutputSpecification",
              "type": "object",
              "properties": {
                "access_token": {
                  "title": "Access Token",
                  "path_in_connector_config": ["credentials", "access_token"],
                  "type": "string"
                }
              },
              "required": ["access_token"]
            },
            "complete_oauth_server_input_specification": {
              "title": "CompleteOauthServerInputSpecification",
              "type": "object",
              "properties": {
                "app_id": {
                  "title": "App Id",
                  "type": "string"
                },
                "secret": {
                  "title": "Secret",
                  "type": "string"
                }
              },
              "required": ["app_id", "secret"]
            },
            "complete_oauth_server_output_specification": {
              "title": "CompleteOauthServerOutputSpecification",
              "type": "object",
              "properties": {
                "app_id": {
                  "title": "App Id",
                  "path_in_connector_config": ["credentials", "app_id"],
                  "type": "string"
                },
                "secret": {
                  "title": "Secret",
                  "path_in_connector_config": ["credentials", "secret"],
                  "type": "string"
                }
              },
              "required": ["app_id", "secret"]
            }
          }
        },
        "additionalProperties": true
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["sandbox-ads.tiktok.com", "business-api.tiktok.com"]
      }
    },
    {
      "sourceDefinitionId": "bc617b5f-1b9e-4a2d-bebe-782fd454a771",
      "name": "Timely",
      "dockerRepository": "airbyte/source-timely",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/timely",
      "icon": "timely.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Timely Integration Spec",
          "type": "object",
          "required": ["account_id", "start_date", "bearer_token"],
          "additionalProperties": false,
          "properties": {
            "account_id": {
              "title": "account_id",
              "type": "string",
              "description": "Timely account id"
            },
            "start_date": {
              "title": "startDate",
              "type": "string",
              "description": "start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "example": "2022-05-06"
            },
            "bearer_token": {
              "title": "Bearer token",
              "type": "string",
              "description": "Timely bearer token"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6240848f-f795-45eb-8f5e-c7542822fc03",
      "name": "TMDb",
      "dockerRepository": "airbyte/source-tmdb",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tmdb",
      "icon": "tmdb.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tmdb",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Tmdb Spec",
          "type": "object",
          "required": ["api_key", "movie_id", "query", "language"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "Unique key for establishing connection",
              "type": "string",
              "description": "API Key from tmdb account",
              "airbyte_secret": true
            },
            "movie_id": {
              "title": "Movie ID for targeting movies",
              "type": "string",
              "description": "Target movie ID, Mandate for movie streams (Example is 550)",
              "examples": [550, 560]
            },
            "query": {
              "title": "Query for search streams",
              "type": "string",
              "description": "Target movie ID, Mandate for search streams",
              "examples": ["Marvel", "DC"]
            },
            "language": {
              "title": "Language for filtering",
              "type": "string",
              "description": "Language expressed in ISO 639-1 scheme, Mandate for required streams (Example en-US)",
              "examples": ["en-US", "en-UK"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7e7c844f-2300-4342-b7d3-6dd7992593cd",
      "name": "Toggl",
      "dockerRepository": "airbyte/source-toggl",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/toggl",
      "icon": "toggl.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/toggl",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Toggl Spec",
          "type": "object",
          "required": [
            "api_token",
            "organization_id",
            "workspace_id",
            "start_date",
            "end_date"
          ],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "title": "API token",
              "type": "string",
              "description": "Your API Token. See <a href=\"https://developers.track.toggl.com/docs/authentication\">here</a>. The token is case sensitive.",
              "airbyte_secret": true
            },
            "organization_id": {
              "title": "Organization ID",
              "type": "integer",
              "description": "Your organization id. See <a href=\"https://developers.track.toggl.com/docs/organization\">here</a>."
            },
            "workspace_id": {
              "title": "Workspace ID",
              "type": "integer",
              "description": "Your workspace id. See <a href=\"https://developers.track.toggl.com/docs/workspaces\">here</a>."
            },
            "start_date": {
              "title": "Start date",
              "type": "string",
              "description": "To retrieve time entries created after the given date (inclusive).",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            },
            "end_date": {
              "title": "End date",
              "type": "string",
              "description": "To retrieve time entries created before the given date (inclusive).",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d42bd69f-6bf0-4d0b-9209-16231af07a92",
      "name": "The Guardian API",
      "dockerRepository": "airbyte/source-the-guardian-api",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/the-guardian-api",
      "icon": "theguardian.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/the-guardian-api",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "The Guardian Api Spec",
          "type": "object",
          "required": ["api_key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your API Key. See <a href=\"https://open-platform.theguardian.com/access/\">here</a>. The key is case sensitive.",
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Use this to set the minimum date (YYYY-MM-DD) of the results. Results older than the start_date will not be shown.",
              "pattern": "^([1-9][0-9]{3})\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
              "examples": ["YYYY-MM-DD"]
            },
            "query": {
              "title": "Query",
              "type": "string",
              "description": "(Optional) The query (q) parameter filters the results to only those that include that search term. The q parameter supports AND, OR and NOT operators.",
              "examples": [
                "environment AND NOT water",
                "environment AND political",
                "amusement park",
                "political"
              ]
            },
            "tag": {
              "title": "Tag",
              "type": "string",
              "description": "(Optional) A tag is a piece of data that is used by The Guardian to categorise content. Use this parameter to filter results by showing only the ones matching the entered tag. See <a href=\"https://content.guardianapis.com/tags?api-key=test\">here</a> for a list of all tags, and <a href=\"https://open-platform.theguardian.com/documentation/tag\">here</a> for the tags endpoint documentation.",
              "examples": [
                "environment/recycling",
                "environment/plasticbags",
                "environment/energyefficiency"
              ]
            },
            "section": {
              "title": "Section",
              "type": "string",
              "description": "(Optional) Use this to filter the results by a particular section. See <a href=\"https://content.guardianapis.com/sections?api-key=test\">here</a> for a list of all sections, and <a href=\"https://open-platform.theguardian.com/documentation/section\">here</a> for the sections endpoint documentation.",
              "examples": ["media", "technology", "housing-network"]
            },
            "end_date": {
              "title": "End Date",
              "type": "string",
              "description": "(Optional) Use this to set the maximum date (YYYY-MM-DD) of the results. Results newer than the end_date will not be shown. Default is set to the current date (today) for incremental syncs.",
              "pattern": "^([1-9][0-9]{3})\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
              "examples": ["YYYY-MM-DD"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f9b6c538-ee12-42fe-8d4b-0c10f5955417",
      "name": "TPLcentral",
      "dockerRepository": "airbyte/source-tplcentral",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tplcentral",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tplcentral",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Tplcentral Spec",
          "type": "object",
          "required": ["url_base", "client_id", "client_secret"],
          "additionalProperties": false,
          "properties": {
            "url_base": {
              "title": "URL base",
              "type": "string",
              "format": "uri",
              "default": "https://secure-wms.com/",
              "pattern": "^https://"
            },
            "client_id": {
              "title": "Client ID",
              "type": "string"
            },
            "client_secret": {
              "title": "Client secret",
              "type": "string",
              "airbyte_secret": true
            },
            "user_login_id": {
              "title": "User login ID",
              "description": "User login ID and/or name is required",
              "type": "integer"
            },
            "user_login": {
              "title": "User login name",
              "description": "User login ID and/or name is required",
              "type": "string"
            },
            "tpl_key": {
              "title": "3PL GUID",
              "type": "string"
            },
            "customer_id": {
              "title": "Customer ID",
              "type": "integer"
            },
            "facility_id": {
              "title": "Facility ID",
              "type": "integer"
            },
            "start_date": {
              "title": "Start date",
              "description": "Date and time together in RFC 3339 format, for example, 2018-11-13T20:20:39+00:00.",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "8da67652-004c-11ec-9a03-0242ac130003",
      "name": "Trello",
      "dockerRepository": "airbyte/source-trello",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/trello",
      "icon": "trello.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/trello",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Trello Spec",
          "type": "object",
          "required": ["token", "key", "start_date"],
          "additionalProperties": true,
          "properties": {
            "token": {
              "type": "string",
              "title": "API token",
              "description": "Trello v API token. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\">docs</a> for instructions on how to generate it.",
              "airbyte_secret": true
            },
            "key": {
              "type": "string",
              "title": "API key",
              "description": "Trello API key. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\">docs</a> for instructions on how to generate it.",
              "airbyte_secret": true
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-03-01T00:00:00.000Z"]
            },
            "board_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9a-fA-F]{24}$"
              },
              "title": "Trello Board IDs",
              "description": "IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": [],
            "oauthFlowInitParameters": [],
            "oauthFlowOutputParameters": [["token"], ["key"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "bd14b08f-9f43-400f-b2b6-7248b5c72561",
      "name": "TVMaze Schedule",
      "dockerRepository": "airbyte/source-tvmaze-schedule",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tvmaze-schedule",
      "icon": "tvmazeschedule.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tvmaze-schedule",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "TVMaze Schedule Spec",
          "type": "object",
          "required": ["start_date", "domestic_schedule_country_code"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start date for TV schedule retrieval. May be in the future.",
              "order": 0,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "end_date": {
              "type": "string",
              "description": "End date for TV schedule retrieval. May be in the future. Optional.\n",
              "order": 1,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "domestic_schedule_country_code": {
              "type": "string",
              "description": "Country code for domestic TV schedule retrieval.",
              "examples": ["US", "GB"]
            },
            "web_schedule_country_code": {
              "type": "string",
              "description": "ISO 3166-1 country code for web TV schedule retrieval. Leave blank for\nall countries plus global web channels (e.g. Netflix). Alternatively,\nset to 'global' for just global web channels.\n",
              "examples": ["US", "GB", "global"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b9dc6155-672e-42ea-b10d-9f1f1fb95ab1",
      "name": "Twilio",
      "dockerRepository": "airbyte/source-twilio",
      "dockerImageTag": "0.1.16",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/twilio",
      "icon": "twilio.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/twilio",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Twilio Spec",
          "type": "object",
          "required": ["account_sid", "auth_token", "start_date"],
          "additionalProperties": true,
          "properties": {
            "account_sid": {
              "title": "Account ID",
              "description": "Twilio account SID",
              "airbyte_secret": true,
              "type": "string",
              "order": 1
            },
            "auth_token": {
              "title": "Auth Token",
              "description": "Twilio Auth Token.",
              "airbyte_secret": true,
              "type": "string",
              "order": 2
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2020-10-01T00:00:00Z"],
              "type": "string",
              "order": 3,
              "format": "date-time"
            },
            "lookback_window": {
              "title": "Lookback window",
              "description": "How far into the past to look for records. (in minutes)",
              "examples": [60],
              "default": 0,
              "minimum": 0,
              "maximum": 576000,
              "type": "integer",
              "order": 4
            }
          }
        },
        "supportsIncremental": true,
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": ["append"]
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["api.twilio.com", "monitor.twilio.com"]
      }
    },
    {
      "sourceDefinitionId": "2446953b-b794-429b-a9b3-c821ba992a48",
      "name": "Twilio Taskrouter",
      "dockerRepository": "airbyte/source-twilio-taskrouter",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/twilio-taskrouter",
      "icon": "twilio.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/twilio-taskrouter",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Twilio Taskrouter Spec",
          "type": "object",
          "required": ["account_sid", "auth_token"],
          "additionalProperties": true,
          "properties": {
            "account_sid": {
              "title": "Account SID",
              "type": "string",
              "description": "Twilio Account ID",
              "airbyte_secret": true
            },
            "auth_token": {
              "type": "string",
              "description": "Twilio Auth Token",
              "airbyte_secret": true,
              "title": "Auth Token"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "d7fd4f40-5e5a-4b8b-918f-a73077f8c131",
      "name": "Twitter",
      "dockerRepository": "airbyte/source-twitter",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/twitter",
      "icon": "twitter.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/twitter",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Twitter Spec",
          "type": "object",
          "required": ["api_key", "query"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Access Token",
              "description": "App only Bearer Token. See the <a href=\"https://developer.twitter.com/en/docs/authentication/oauth-2-0/bearer-tokens\">docs</a> for more information on how to obtain this token.",
              "airbyte_secret": true,
              "order": 0
            },
            "query": {
              "type": "string",
              "title": "Search Query",
              "description": "Query for matching Tweets. You can learn how to build this query by reading <a href=\"https://developer.twitter.com/en/docs/twitter-api/tweets/search/integrate/build-a-query\"> build a query guide </a>.",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The start date for retrieving tweets cannot be more than 7 days in the past.",
              "format": "date-time",
              "order": 2
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "The end date for retrieving tweets must be a minimum of 10 seconds prior to the request time.",
              "format": "date-time",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.twitter.com"]
      }
    },
    {
      "sourceDefinitionId": "3c0c3cd1-b3e0-464a-9090-d3ceb5f92346",
      "name": "Tyntec SMS",
      "dockerRepository": "airbyte/source-tyntec-sms",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/tyntec-sms",
      "icon": "tyntec.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/tyntec-sms",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Tyntec Sms Spec",
          "type": "object",
          "required": ["api_key", "to", "from"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Tyntec API Key",
              "description": "Your Tyntec API Key. See <a href=\"https://www.tyntec.com/docs/docs-center-sms-api-quick-start\">here</a>",
              "order": 0,
              "airbyte_secret": true
            },
            "to": {
              "type": "string",
              "title": "SMS Message Recipient Phone",
              "description": "The phone number of the SMS message recipient (international).",
              "order": 1
            },
            "from": {
              "type": "string",
              "title": "SMS Message Sender Phone",
              "description": "The phone number of the SMS message sender (international).",
              "order": 2
            },
            "message": {
              "type": "string",
              "title": "SMS Message Body",
              "description": "The content of the SMS message to be sent.",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e7eff203-90bf-43e5-a240-19ea3056c474",
      "name": "Typeform",
      "dockerRepository": "airbyte/source-typeform",
      "dockerImageTag": "0.1.11",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/typeform",
      "icon": "typeform.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/typeform",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Typeform Spec",
          "type": "object",
          "required": ["token", "start_date"],
          "additionalProperties": true,
          "properties": {
            "token": {
              "type": "string",
              "description": "The API Token for a Typeform account.",
              "title": "API Token",
              "airbyte_secret": true,
              "order": 0
            },
            "start_date": {
              "type": "string",
              "description": "UTC date and time in the format: YYYY-MM-DDTHH:mm:ss[Z]. Any data before this date will not be replicated.",
              "title": "Start Date",
              "examples": ["2020-01-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "order": 1
            },
            "form_ids": {
              "title": "Form IDs to replicate",
              "description": "When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL \"https://mysite.typeform.com/to/u6nXL7\" the form_id is u6nXL7. You can find form URLs on Share panel",
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.typeform.com"]
      }
    },
    {
      "sourceDefinitionId": "f77914a1-442b-4195-9355-8810a1f4ed3f",
      "name": "Unleash",
      "dockerRepository": "airbyte/source-unleash",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/unleash",
      "icon": "unleash.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/unleash",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Unleash Source Spec",
          "type": "object",
          "required": ["api_token", "api_url"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "title": "API Token Client",
              "type": "string",
              "description": "Your API Token (Server-Side SDK [Client]). See <a href=\"https://docs.getunleash.io/how-to/how-to-create-api-tokens/\">here</a>. The token is case sensitive.",
              "airbyte_secret": true,
              "examples": [
                "project:environment.be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178",
                "*:environment.be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178",
                "be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"
              ]
            },
            "api_url": {
              "title": "API URL",
              "type": "string",
              "description": "Your API URL. No trailing slash. ex: http://unleash.host.com/api"
            },
            "project_name": {
              "title": "Project Name",
              "type": "string",
              "description": "Use this if you want to filter the API call for only one given project (can be used in addition to the \"Feature Name Prefix\" field). See <a href=\"https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles\">here</a>"
            },
            "nameprefix": {
              "title": "Feature Name Prefix",
              "type": "string",
              "description": "Use this if you want to filter the API call for only one given project (can be used in addition to the \"Feature Name Prefix\" field). See <a href=\"https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles\">here</a>"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "c4cfaeda-c757-489a-8aba-859fb08b6970",
      "name": "US Census",
      "dockerRepository": "airbyte/source-us-census",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/us-census",
      "icon": "uscensus.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/us-census",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "https://api.census.gov/ Source Spec",
          "type": "object",
          "required": ["api_key", "query_path"],
          "additionalProperties": false,
          "properties": {
            "query_params": {
              "type": "string",
              "description": "The query parameters portion of the GET request, without the api key",
              "pattern": "^\\w+=[\\w,:*]+(&(?!key)\\w+=[\\w,:*]+)*$",
              "examples": [
                "get=NAME,NAICS2017_LABEL,LFO_LABEL,EMPSZES_LABEL,ESTAB,PAYANN,PAYQTR1,EMP&for=us:*&NAICS2017=72&LFO=001&EMPSZES=001",
                "get=MOVEDIN,GEOID1,GEOID2,MOVEDOUT,FULL1_NAME,FULL2_NAME,MOVEDNET&for=county:*"
              ]
            },
            "query_path": {
              "type": "string",
              "description": "The path portion of the GET request",
              "pattern": "^data(\\/[\\w\\d]+)+$",
              "examples": [
                "data/2019/cbp",
                "data/2018/acs",
                "data/timeseries/healthins/sahie"
              ]
            },
            "api_key": {
              "type": "string",
              "description": "Your API Key. Get your key <a href=\"https://api.census.gov/data/key_signup.html\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "afa734e4-3571-11ec-991a-1e0031268139",
      "name": "YouTube Analytics",
      "dockerRepository": "airbyte/source-youtube-analytics",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/youtube-analytics",
      "icon": "youtube-analytics.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/youtube-analytics",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "YouTube Analytics Spec",
          "type": "object",
          "required": ["credentials"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authenticate via OAuth 2.0",
              "type": "object",
              "required": ["client_id", "client_secret", "refresh_token"],
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "title": "Client ID",
                  "type": "string",
                  "description": "The Client ID of your developer application",
                  "airbyte_secret": true
                },
                "client_secret": {
                  "title": "Client Secret",
                  "type": "string",
                  "description": "The client secret of your developer application",
                  "airbyte_secret": true
                },
                "refresh_token": {
                  "title": "Refresh Token",
                  "type": "string",
                  "description": "A refresh token generated using the above client ID and secret",
                  "airbyte_secret": true
                }
              }
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta"
    },
    {
      "sourceDefinitionId": "78752073-6d96-447d-8a93-2b6953f3c787",
      "name": "YouTube Analytics Business",
      "dockerRepository": "airbyte/source-youtube-analytics-business",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/youtube-analytics-business",
      "icon": "youtube-analytics.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/youtube-analytics-business",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "YouTube Analytics Business Spec",
          "type": "object",
          "required": ["credentials"],
          "additionalProperties": true,
          "properties": {
            "credentials": {
              "title": "Authenticate via OAuth 2.0",
              "type": "object",
              "required": ["client_id", "client_secret", "refresh_token"],
              "additionalProperties": true,
              "properties": {
                "client_id": {
                  "title": "Client ID",
                  "type": "string",
                  "description": "The Client ID of your developer application",
                  "airbyte_secret": true
                },
                "client_secret": {
                  "title": "Client Secret",
                  "type": "string",
                  "description": "The client secret of your developer application",
                  "airbyte_secret": true
                },
                "refresh_token": {
                  "title": "Refresh Token",
                  "type": "string",
                  "description": "A refresh token generated using the above client ID and secret",
                  "airbyte_secret": true
                }
              }
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "authSpecification": {
          "auth_type": "oauth2.0",
          "oauth2Specification": {
            "rootObject": ["credentials"],
            "oauthFlowInitParameters": [["client_id"], ["client_secret"]],
            "oauthFlowOutputParameters": [["refresh_token"]]
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "28ce1fbd-1e15-453f-aa9f-da6c4d928e92",
      "name": "Vantage",
      "dockerRepository": "airbyte/source-vantage",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/vantage",
      "icon": "vantage.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/vantage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Vantage Spec",
          "type": "object",
          "required": ["access_token"],
          "additionalProperties": true,
          "properties": {
            "access_token": {
              "title": "API Access Token",
              "type": "string",
              "description": "Your API Access token. See <a href=\"https://vantage.readme.io/reference/authentication\">here</a>.",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7e20ce3e-d820-4327-ad7a-88f3927fd97a",
      "name": "VictorOps",
      "dockerRepository": "farosai/airbyte-victorops-source",
      "dockerImageTag": "0.1.23",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/victorops",
      "icon": "victorops.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.faros.ai",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "VictorOps Spec",
          "type": "object",
          "required": ["apiId", "apiKey"],
          "additionalProperties": true,
          "properties": {
            "apiId": {
              "type": "string",
              "title": "VictorOps API ID",
              "airbyte_secret": true
            },
            "apiKey": {
              "type": "string",
              "title": "VictorOps API key",
              "airbyte_secret": true
            },
            "maxContentLength": {
              "type": "number",
              "title": "VictorOps Content Length",
              "description": "VictorOps API response content length limit, try increasing if 'RequestError' is encountered.",
              "default": 500000
            },
            "pageLimit": {
              "type": "number",
              "title": "VictorOps Page Limit",
              "default": 100
            },
            "currentPhase": {
              "type": "string",
              "title": "VictorOps Current Phase",
              "default": "triggered,acknowledged,resolved"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "42495935-95de-4f5c-ae08-8fac00f6b308",
      "name": "Visma E-conomic",
      "dockerRepository": "airbyte/source-visma-economic",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/visma-economic",
      "icon": "visma-e-conomic.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/visma-economic",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Visma E-conomic Spec",
          "type": "object",
          "required": ["app_secret_token", "agreement_grant_token"],
          "properties": {
            "app_secret_token": {
              "title": "App Secret Token",
              "type": "string",
              "description": "Identification token for app accessing data",
              "airbyte_secret": true
            },
            "agreement_grant_token": {
              "title": "Agreement Grant Token",
              "type": "string",
              "description": "Identifier for the grant issued by an agreement",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6c6d8b0c-db35-4cd1-a7de-0ca8b080f5ac",
      "name": "Vitally",
      "dockerRepository": "airbyte/source-vitally",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/vitally",
      "icon": "vitally.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/vitally",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Vitally Spec",
          "type": "object",
          "required": ["api_key", "status"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Token",
              "description": "The API Token for a Vitally account.",
              "airbyte_secret": true
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Status of the Vitally accounts. One of the following values; active, churned, activeOrChurned.",
              "enum": ["active", "churned", "activeOrChurned"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6fd1e833-dd6e-45ec-a727-ab917c5be892",
      "name": "Xero",
      "dockerRepository": "airbyte/source-xero",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/xero",
      "icon": "xero.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/xero",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Xero Spec",
          "type": "object",
          "required": [
            "authentication",
            "start_date",
            "scopes",
            "tenant_id",
            "client_id",
            "client_secret"
          ],
          "additionalProperties": true,
          "properties": {
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "Enter your Xero application's Client ID"
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "Enter your Xero application's Client Secret",
              "airbyte_secret": true
            },
            "tenant_id": {
              "title": "Tenant ID",
              "type": "string",
              "description": "Enter your Xero organization's Tenant ID"
            },
            "scopes": {
              "title": "Scopes",
              "type": "string",
              "description": "Enter your required list of scopes (delimited by comma)"
            },
            "authentication": {
              "type": "object",
              "title": "Authentication",
              "description": "Type and additional credentials of the Xero API connection",
              "oneOf": [
                {
                  "title": "Authenticate via Xero (OAuth) (unsupported yet)",
                  "type": "object",
                  "required": ["auth_type", "refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth"
                    },
                    "refresh_token": {
                      "title": "Refresh Token",
                      "type": "string",
                      "description": "Enter your Xero application's refresh token",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Custom Connections Authentication",
                  "type": "object",
                  "required": ["auth_type"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "custom_connection"
                    }
                  }
                }
              ]
            },
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format YYYY-MM-DDTHH:mm:ssZ. Any data with created_at before this data will not be synced.",
              "examples": ["2022-03-01T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "80fddd16-17bd-4c0c-bf4a-80df7863fc9d",
      "name": "xkcd",
      "dockerRepository": "airbyte/source-xkcd",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/xkcd",
      "icon": "xkcd.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/xkcd",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Xkcd Spec",
          "type": "object",
          "properties": {}
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "5db8292c-5f5a-11ed-9b6a-0242ac120002",
      "name": "Weatherstack",
      "dockerRepository": "airbyte/source-weatherstack",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/weatherstack",
      "icon": "weatherstack.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/weatherstack",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Weatherstack Spec",
          "type": "object",
          "required": ["access_key", "query", "historical_date"],
          "properties": {
            "is_paid_account": {
              "order": 0,
              "title": "Is Paid Account",
              "description": "Toggle if you're using a <a href=\"https://weatherstack.com/product\">Paid subscription</a>",
              "type": "boolean",
              "default": false
            },
            "access_key": {
              "order": 1,
              "type": "string",
              "description": "API access key used to retrieve data from the Weatherstack API.(https://weatherstack.com/product)",
              "airbyte_secret": true
            },
            "query": {
              "order": 2,
              "type": "string",
              "description": "A location to query such as city, IP, latitudeLongitude, or zipcode. Multiple locations with semicolon seperated if using a professional plan or higher. For more info- (https://weatherstack.com/documentation#query_parameter)",
              "examples": ["New York", "London", "98101"]
            },
            "historical_date": {
              "order": 3,
              "type": "string",
              "description": "This is required for enabling the Historical date API with format- (YYYY-MM-DD). * Note, only supported by paid accounts",
              "examples": ["2015-01-21"],
              "default\"": "2000-01-01",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "ef580275-d9a9-48bb-af5e-db0f5855be04",
      "name": "Webflow",
      "dockerRepository": "airbyte/source-webflow",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/webflow",
      "icon": "webflow.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/webflow",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Webflow Spec",
          "type": "object",
          "required": ["api_key", "site_id"],
          "additionalProperties": false,
          "properties": {
            "site_id": {
              "title": "Site id",
              "type": "string",
              "description": "The id of the Webflow site you are requesting data from. See https://developers.webflow.com/#sites",
              "example": "a relatively long hex sequence",
              "order": 0
            },
            "api_key": {
              "title": "API token",
              "type": "string",
              "description": "The API token for authenticating to Webflow. See https://university.webflow.com/lesson/intro-to-the-webflow-api",
              "example": "a very long hex sequence",
              "order": 1,
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "e65f84c0-7598-458a-bfac-f770c381ff5d",
      "name": "Whisky Hunter",
      "dockerRepository": "airbyte/source-whisky-hunter",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/whisky-hunter",
      "icon": "whiskyhunter.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/whisky-hunter",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Whisky Hunter Spec",
          "type": "object",
          "additionalProperties": true,
          "properties": {}
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "2a2552ca-9f78-4c1c-9eb7-4d0dc66d72df",
      "name": "WooCommerce",
      "dockerRepository": "airbyte/source-woocommerce",
      "dockerImageTag": "0.2.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/woocommerce",
      "icon": "woocommerce.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/woocommerce",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Woocommerce Spec",
          "type": "object",
          "required": ["api_key", "api_secret", "shop", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "Customer Key",
              "description": "Customer Key for API in WooCommerce shop",
              "airbyte_secret": true,
              "order": 0
            },
            "api_secret": {
              "type": "string",
              "title": "Customer Secret",
              "description": "Customer Secret for API in WooCommerce shop",
              "airbyte_secret": true,
              "order": 1
            },
            "shop": {
              "type": "string",
              "title": "Shop Name",
              "description": "The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.",
              "order": 2
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date you would like to replicate data from. Format: YYYY-MM-DD",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "format": "date",
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["${domain}"]
      }
    },
    {
      "sourceDefinitionId": "ef3c99c6-9e90-43c8-9517-926cfd978517",
      "name": "Workable",
      "dockerRepository": "airbyte/source-workable",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/workable",
      "icon": "workable.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/sources/workable",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Workable API Spec",
          "type": "object",
          "required": ["api_key", "account_subdomain", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Your Workable API Key. See <a href=\"https://workable.readme.io/reference/generate-an-access-token\">here</a>.",
              "airbyte_secret": true
            },
            "account_subdomain": {
              "title": "Account Subdomain",
              "type": "string",
              "description": "Your Workable account subdomain, e.g. https://your_account_subdomain.workable.com."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Get data that was created since this date (format: YYYYMMDDTHHMMSSZ).",
              "pattern": "^[0-9]{8}T[0-9]{6}Z$",
              "examples": ["20150708T115616Z", "20221115T225616Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9c13f986-a13b-4988-b808-4705badf71c2",
      "name": "Wrike",
      "dockerRepository": "airbyte/source-wrike",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/wrike",
      "icon": "wrike.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Wrike Spec",
          "type": "object",
          "required": ["access_token", "wrike_instance"],
          "properties": {
            "access_token": {
              "type": "string",
              "title": "Permanent Access Token",
              "description": "Permanent access token. You can find documentation on how to acquire a permanent access token  <a href=\"https://developers.wrike.com/oauth-20-authorization/\">here</a>",
              "airbyte_secret": true,
              "order": 0
            },
            "wrike_instance": {
              "type": "string",
              "title": "Wrike Instance (hostname)",
              "description": "Wrike's instance such as `app-us2.wrike.com`",
              "default": "app-us2.wrike.com",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start date for comments",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Only comments after this date will be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 2
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "b8c917bc-7d1b-4828-995f-6726820266d0",
      "name": "Zapier Supported Storage",
      "dockerRepository": "airbyte/source-zapier-supported-storage",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-supported-storage",
      "icon": "zapiersupportedstorage.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zapier-supported-storage",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zapier Supported Storage Spec",
          "type": "object",
          "required": ["secret"],
          "additionalProperties": true,
          "properties": {
            "secret": {
              "title": "Secret Key",
              "type": "string",
              "description": "Secret key supplied by zapier",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "40d24d0f-b8f9-4fe0-9e6c-b06c0f3f45e4",
      "name": "Zendesk Chat",
      "dockerRepository": "airbyte/source-zendesk-chat",
      "dockerImageTag": "0.1.13",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-chat",
      "icon": "zendesk-chat.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-chat",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zendesk Chat Spec",
          "type": "object",
          "required": ["start_date"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.",
              "examples": ["2021-02-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "format": "date-time"
            },
            "subdomain": {
              "type": "string",
              "title": "Subdomain",
              "description": "Required if you access Zendesk Chat from a Zendesk Support subdomain.",
              "default": ""
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": ["credentials"],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your OAuth application",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Access Token for making authenticated requests.",
                      "airbyte_secret": true
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "Refresh Token to obtain new Access Token, when it's expired.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Access Token",
                  "required": ["credentials", "access_token"],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "access_token",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The Access Token to make authenticated requests.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "credentials"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "properties": {
                "subdomain": {
                  "type": "string",
                  "path_in_connector_config": ["subdomain"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                },
                "refresh_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "refresh_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["zopim.com"]
      }
    },
    {
      "sourceDefinitionId": "982eaa4c-bba1-4cce-a971-06a41f700b8c",
      "name": "Zendesk Sell",
      "dockerRepository": "airbyte/source-zendesk-sell",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-sell",
      "icon": "zendesk.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-sell",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Zendesk Sell Spec",
          "type": "object",
          "required": ["api_token"],
          "properties": {
            "api_token": {
              "title": "API token",
              "type": "string",
              "description": "The API token for authenticating to Zendesk Sell",
              "examples": [
                "f23yhd630otl94y85a8bf384958473pto95847fd006da49382716or937ruw059"
              ],
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "325e0640-e7b3-4e24-b823-3361008f603f",
      "name": "Zendesk Sunshine",
      "dockerRepository": "airbyte/source-zendesk-sunshine",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-sunshine",
      "icon": "zendesk-sunshine.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk_sunshine",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zendesk Sunshine Spec",
          "type": "object",
          "required": ["start_date", "subdomain"],
          "additionalProperties": true,
          "properties": {
            "subdomain": {
              "title": "Subdomain",
              "type": "string",
              "description": "The subdomain for your Zendesk Account."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "OAuth2.0",
                  "required": [
                    "auth_method",
                    "client_id",
                    "client_secret",
                    "access_token"
                  ],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "oauth2.0",
                      "enum": ["oauth2.0"],
                      "default": "oauth2.0",
                      "order": 0
                    },
                    "client_id": {
                      "type": "string",
                      "title": "Client ID",
                      "description": "The Client ID of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "client_secret": {
                      "type": "string",
                      "title": "Client Secret",
                      "description": "The Client Secret of your OAuth application.",
                      "airbyte_secret": true
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Long-term access Token for making authenticated requests.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["auth_method", "api_token", "email"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "api_token",
                      "enum": ["api_token"],
                      "default": "api_token",
                      "order": 1
                    },
                    "api_token": {
                      "type": "string",
                      "title": "API Token",
                      "description": "API Token. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk_sunshine\">docs</a> for information on how to generate this key.",
                      "airbyte_secret": true
                    },
                    "email": {
                      "type": "string",
                      "title": "Email",
                      "description": "The user email for your Zendesk account"
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_method"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "subdomain": {
                  "type": "string",
                  "path_in_connector_config": ["subdomain"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "79c1aa37-dae3-42ae-b333-d1c105477715",
      "name": "Zendesk Support",
      "dockerRepository": "airbyte/source-zendesk-support",
      "dockerImageTag": "0.2.25",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-support",
      "icon": "zendesk-support.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-support",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Zendesk Support Spec",
          "type": "object",
          "required": ["start_date", "subdomain"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Zendesk Support API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-10-15T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "subdomain": {
              "type": "string",
              "title": "Subdomain",
              "description": "This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY_SUBDOMAIN}.zendesk.com/, where MY_SUBDOMAIN is the value of your subdomain."
            },
            "credentials": {
              "title": "Authentication",
              "type": "object",
              "description": "Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.",
              "oneOf": [
                {
                  "title": "OAuth2.0",
                  "type": "object",
                  "required": ["access_token"],
                  "additionalProperties": true,
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk-support\">docs</a> for more information.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "API Token",
                  "type": "object",
                  "required": ["email", "api_token"],
                  "additionalProperties": true,
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "api_token",
                      "order": 0
                    },
                    "email": {
                      "title": "Email",
                      "type": "string",
                      "description": "The user email for your Zendesk account."
                    },
                    "api_token": {
                      "title": "API Token",
                      "type": "string",
                      "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk-support#setup-guide\">docs</a> for more information.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "ignore_pagination": {
              "type": "boolean",
              "default": false,
              "description": "Makes each stream read a single page of data.",
              "title": "Should the connector read the second and further pages of data.",
              "airbyte_hidden": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "credentials"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "subdomain": {
                  "type": "string",
                  "path_in_connector_config": ["subdomain"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["${subdomain}.zendesk.com", "zendesk.com"]
      }
    },
    {
      "sourceDefinitionId": "c8630570-086d-4a40-99ae-ea5b18673071",
      "name": "Zendesk Talk",
      "dockerRepository": "airbyte/source-zendesk-talk",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-talk",
      "icon": "zendesk-talk.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zendesk-talk",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Zendesk Talk Spec",
          "type": "object",
          "required": ["start_date", "subdomain"],
          "properties": {
            "subdomain": {
              "type": "string",
              "title": "Subdomain",
              "order": 0,
              "description": "This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY_SUBDOMAIN}.zendesk.com/, where MY_SUBDOMAIN is the value of your subdomain."
            },
            "credentials": {
              "title": "Authentication",
              "type": "object",
              "order": 1,
              "description": "Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.",
              "oneOf": [
                {
                  "title": "API Token",
                  "type": "object",
                  "required": ["email", "api_token"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "api_token"
                    },
                    "email": {
                      "title": "Email",
                      "type": "string",
                      "description": "The user email for your Zendesk account."
                    },
                    "api_token": {
                      "title": "API Token",
                      "type": "string",
                      "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk-talk\">docs</a> for more information.",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "OAuth2.0",
                  "type": "object",
                  "required": ["access_token"],
                  "additionalProperties": true,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "oauth2.0",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk-talk\">docs</a> for more information.",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "order": 2,
              "description": "The date from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-10-15T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": [],
        "advanced_auth": {
          "auth_flow_type": "oauth2.0",
          "predicate_key": ["credentials", "auth_type"],
          "predicate_value": "oauth2.0",
          "oauth_config_specification": {
            "oauth_user_input_from_connector_config_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "subdomain": {
                  "type": "string",
                  "path_in_connector_config": ["subdomain"]
                }
              }
            },
            "complete_oauth_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_token": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "access_token"]
                }
              }
            },
            "complete_oauth_server_input_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            },
            "complete_oauth_server_output_specification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_id"]
                },
                "client_secret": {
                  "type": "string",
                  "path_in_connector_config": ["credentials", "client_secret"]
                }
              }
            }
          }
        }
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["${subdomain}.zendesk.com", "zendesk.com"]
      }
    },
    {
      "sourceDefinitionId": "8baba53d-2fe3-4e33-bc85-210d0eb62884",
      "name": "Zenefits",
      "dockerRepository": "airbyte/source-zenefits",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zenefits",
      "icon": "zenefits.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zenefits Integration Spec",
          "type": "object",
          "required": ["token"],
          "additionalProperties": false,
          "properties": {
            "token": {
              "title": "token",
              "type": "string",
              "description": "Use Sync with Zenefits button on the link given on the readme file, and get the token to access the api"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "f1e4c7f6-db5c-4035-981f-d35ab4998794",
      "name": "Zenloop",
      "dockerRepository": "airbyte/source-zenloop",
      "dockerImageTag": "0.1.6",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zenloop",
      "icon": "zenloop.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zenloop",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zenloop Spec",
          "type": "object",
          "required": ["api_token"],
          "properties": {
            "api_token": {
              "type": "string",
              "description": "Zenloop API Token. You can get the API token in settings page <a href=\"https://app.zenloop.com/settings/api\">here</a> ",
              "airbyte_secret": true
            },
            "date_from": {
              "type": "string",
              "description": "Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced",
              "examples": ["2021-10-24T03:30:30Z"]
            },
            "survey_id": {
              "type": "string",
              "description": "Zenloop Survey ID. Can be found <a href=\"https://app.zenloop.com/settings/api\">here</a>. Leave empty to pull answers from all surveys",
              "airbyte_secret": true
            },
            "survey_group_id": {
              "type": "string",
              "description": "Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "beta",
      "allowedHosts": {
        "hosts": ["api.zenloop.com"]
      }
    },
    {
      "sourceDefinitionId": "cdaf146a-9b75-49fd-9dd2-9d64a0bb4781",
      "name": "Sentry",
      "dockerRepository": "airbyte/source-sentry",
      "dockerImageTag": "0.1.12",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sentry",
      "icon": "sentry.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/sentry",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Sentry Spec",
          "type": "object",
          "required": ["auth_token", "organization", "project"],
          "additionalProperties": true,
          "properties": {
            "auth_token": {
              "type": "string",
              "title": "Authentication Tokens",
              "description": "Log into Sentry and then <a href=\"https://sentry.io/settings/account/api/auth-tokens/\">create authentication tokens</a>.For self-hosted, you can find or create authentication tokens by visiting \"{instance_url_prefix}/settings/account/api/auth-tokens/\"",
              "airbyte_secret": true
            },
            "hostname": {
              "type": "string",
              "title": "Host Name",
              "description": "Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty.",
              "default": "sentry.io"
            },
            "organization": {
              "type": "string",
              "title": "Organization",
              "description": "The slug of the organization the groups belong to."
            },
            "project": {
              "type": "string",
              "title": "Project",
              "description": "The name (slug) of the Project you want to sync."
            },
            "discover_fields": {
              "type": "array",
              "item": "string",
              "title": "Discover Event Fields",
              "description": "Fields to retrieve when fetching discover events"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "generally_available",
      "allowedHosts": {
        "hosts": ["*"]
      }
    },
    {
      "sourceDefinitionId": "3dc3037c-5ce8-4661-adc2-f7a9e3c5ece5",
      "name": "Zuora",
      "dockerRepository": "airbyte/source-zuora",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zuora",
      "icon": "zuora.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zuora",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zuora Connector Configuration",
          "type": "object",
          "required": [
            "start_date",
            "tenant_endpoint",
            "data_query",
            "client_id",
            "client_secret"
          ],
          "properties": {
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start Date in format: YYYY-MM-DD",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "window_in_days": {
              "type": "string",
              "title": "Query Window (in days)",
              "description": "The amount of days for each data-chunk begining from start_date. Bigger the value - faster the fetch. (0.1 - as for couple of hours, 1 - as for a Day; 364 - as for a Year).",
              "examples": ["0.5", "1", "30", "60", "90", "120", "200", "364"],
              "pattern": "^(0|[1-9]\\d*)(\\.\\d+)?$",
              "default": "90"
            },
            "tenant_endpoint": {
              "title": "Tenant Endpoint Location",
              "type": "string",
              "description": "Please choose the right endpoint where your Tenant is located. More info by this <a href=\"https://www.zuora.com/developer/api-reference/#section/Introduction/Access-to-the-API\">Link</a>",
              "enum": [
                "US Production",
                "US Cloud Production",
                "US API Sandbox",
                "US Cloud API Sandbox",
                "US Central Sandbox",
                "US Performance Test",
                "EU Production",
                "EU API Sandbox",
                "EU Central Sandbox"
              ]
            },
            "data_query": {
              "title": "Data Query Type",
              "type": "string",
              "description": "Choose between `Live`, or `Unlimited` - the optimized, replicated database at 12 hours freshness for high volume extraction <a href=\"https://knowledgecenter.zuora.com/Central_Platform/Query/Data_Query/A_Overview_of_Data_Query#Query_Processing_Limitations\">Link</a>",
              "enum": ["Live", "Unlimited"],
              "default": "Live"
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Your OAuth user Client ID",
              "airbyte_secret": true
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "Your OAuth user Client Secret",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "cd06e646-31bf-4dc8-af48-cbc6530fcad3",
      "name": "Kustomer",
      "dockerRepository": "airbyte/source-kustomer-singer",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/kustomer",
      "icon": "kustomer.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/kustomer",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Source Kustomer Singer Spec",
          "type": "object",
          "required": ["api_token", "start_date"],
          "additionalProperties": true,
          "properties": {
            "api_token": {
              "title": "API Token",
              "type": "string",
              "description": "Kustomer API Token. See the <a href=\"https://developer.kustomer.com/kustomer-api-docs/reference/authentication\">docs</a> on how to obtain this",
              "airbyte_secret": true
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data",
              "examples": ["2019-01-01T00:00:00Z"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "4942d392-c7b5-4271-91f9-3b4f4e51eb3e",
      "name": "ZohoCRM",
      "dockerRepository": "airbyte/source-zoho-crm",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/zoho-crm",
      "icon": "zohocrm.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zoho-crm",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zoho Crm Configuration",
          "type": "object",
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "environment",
            "dc_region",
            "edition"
          ],
          "additionalProperties": false,
          "properties": {
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "OAuth2.0 Client ID",
              "airbyte_secret": true
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "OAuth2.0 Client Secret",
              "airbyte_secret": true
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "OAuth2.0 Refresh Token",
              "airbyte_secret": true
            },
            "dc_region": {
              "title": "Data Center Location",
              "type": "string",
              "description": "Please choose the region of your Data Center location. More info by this <a href=\"https://www.zoho.com/crm/developer/docs/api/v2/multi-dc.html\">Link</a>",
              "enum": ["US", "AU", "EU", "IN", "CN", "JP"]
            },
            "environment": {
              "title": "Environment",
              "type": "string",
              "description": "Please choose the environment",
              "enum": ["Production", "Developer", "Sandbox"]
            },
            "start_datetime": {
              "title": "Start Date",
              "type": ["null", "string"],
              "examples": [
                "2000-01-01",
                "2000-01-01 13:00",
                "2000-01-01 13:00:00",
                "2000-01-01T13:00+00:00",
                "2000-01-01T13:00:00-07:00"
              ],
              "description": "ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`",
              "format": "date-time"
            },
            "edition": {
              "title": "Zoho CRM Edition",
              "type": "string",
              "description": "Choose your Edition of Zoho CRM to determine API Concurrency Limits",
              "enum": [
                "Free",
                "Standard",
                "Professional",
                "Enterprise",
                "Ultimate"
              ],
              "default": "Free"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "a827c52e-791c-4135-a245-e233c5255199",
      "name": "SFTP",
      "dockerRepository": "airbyte/source-sftp",
      "dockerImageTag": "0.1.2",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sftp",
      "icon": "sftp.svg",
      "sourceType": "file",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/source/sftp",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SFTP Source Spec",
          "type": "object",
          "required": ["user", "host", "port"],
          "additionalProperties": true,
          "properties": {
            "user": {
              "title": "User Name",
              "description": "The server user",
              "type": "string",
              "order": 0
            },
            "host": {
              "title": "Host Address",
              "description": "The server host address",
              "type": "string",
              "examples": ["www.host.com", "192.0.2.1"],
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "The server port",
              "type": "integer",
              "default": 22,
              "examples": ["22"],
              "order": 2
            },
            "credentials": {
              "type": "object",
              "title": "Authentication",
              "description": "The server authentication method",
              "order": 3,
              "oneOf": [
                {
                  "title": "Password Authentication",
                  "required": ["auth_method", "auth_user_password"],
                  "properties": {
                    "auth_method": {
                      "description": "Connect through password authentication",
                      "type": "string",
                      "const": "SSH_PASSWORD_AUTH",
                      "order": 0
                    },
                    "auth_user_password": {
                      "title": "Password",
                      "description": "OS-level password for logging into the jump server host",
                      "type": "string",
                      "airbyte_secret": true,
                      "order": 1
                    }
                  }
                },
                {
                  "title": "SSH Key Authentication",
                  "required": ["auth_method", "auth_ssh_key"],
                  "properties": {
                    "auth_method": {
                      "description": "Connect through ssh key",
                      "type": "string",
                      "const": "SSH_KEY_AUTH",
                      "order": 0
                    },
                    "auth_ssh_key": {
                      "title": "SSH Private Key",
                      "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )",
                      "type": "string",
                      "airbyte_secret": true,
                      "multiline": true,
                      "order": 1
                    }
                  }
                }
              ]
            },
            "file_types": {
              "title": "File types",
              "description": "Coma separated file types. Currently only 'csv' and 'json' types are supported.",
              "type": "string",
              "default": "csv,json",
              "order": 4,
              "examples": ["csv,json", "csv"]
            },
            "folder_path": {
              "title": "Folder Path",
              "description": "The directory to search files for sync",
              "type": "string",
              "default": "",
              "examples": ["/logs/2022"],
              "order": 5
            },
            "file_pattern": {
              "title": "File Pattern",
              "description": "The regular expression to specify files for sync in a chosen Folder Path",
              "type": "string",
              "default": "",
              "examples": [
                "log-([0-9]{4})([0-9]{2})([0-9]{2}) - This will filter files which  `log-yearmmdd`"
              ],
              "order": 6
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "31e3242f-dee7-4cdc-a4b8-8e06c5458517",
      "name": "SFTP Bulk",
      "dockerRepository": "airbyte/source-sftp-bulk",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/sftp-bulk",
      "icon": "sftp.svg",
      "sourceType": "file",
      "spec": {
        "documentationUrl": "https://docs.airbyte.io/integrations/source/ftp",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "FTP Source Spec",
          "type": "object",
          "required": [
            "username",
            "host",
            "port",
            "stream_name",
            "start_date",
            "folder_path"
          ],
          "additionalProperties": true,
          "properties": {
            "username": {
              "title": "User Name",
              "description": "The server user",
              "type": "string",
              "order": 0
            },
            "password": {
              "title": "Password",
              "description": "OS-level password for logging into the jump server host",
              "type": "string",
              "airbyte_secret": true,
              "order": 1
            },
            "private_key": {
              "title": "Private key",
              "description": "The private key",
              "type": "string",
              "multiline": true,
              "order": 1
            },
            "host": {
              "title": "Host Address",
              "description": "The server host address",
              "type": "string",
              "examples": ["www.host.com", "192.0.2.1"],
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "The server port",
              "type": "integer",
              "default": 22,
              "examples": ["22"],
              "order": 2
            },
            "stream_name": {
              "title": "Stream name",
              "description": "The name of the stream or table you want to create",
              "type": "string",
              "examples": ["ftp_contacts"],
              "order": 1
            },
            "file_type": {
              "title": "File type",
              "description": "The file type you want to sync. Currently only 'csv' and 'json' files are supported.",
              "type": "string",
              "default": "csv",
              "enum": ["csv", "json"],
              "order": 4,
              "examples": ["csv", "json"]
            },
            "folder_path": {
              "title": "Folder Path (Optional)",
              "description": "The directory to search files for sync",
              "type": "string",
              "default": "",
              "examples": ["/logs/2022"],
              "order": 5
            },
            "file_pattern": {
              "title": "File Pattern (Optional)",
              "description": "The regular expression to specify files for sync in a chosen Folder Path",
              "type": "string",
              "default": "",
              "examples": [
                "log-([0-9]{4})([0-9]{2})([0-9]{2}) - This will filter files which  `log-yearmmdd`"
              ],
              "order": 6
            },
            "file_most_recent": {
              "title": "Most recent file (Optional)",
              "description": "Sync only the most recent file for the configured folder path and file pattern",
              "type": "boolean",
              "default": false,
              "order": 7
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "format": "date-time",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "description": "The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "order": 8
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "6f2ac653-8623-43c4-8950-19218c7caf3d",
      "name": "Firebolt",
      "dockerRepository": "airbyte/source-firebolt",
      "dockerImageTag": "0.2.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/firebolt",
      "icon": "firebolt.svg",
      "sourceType": "database",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/firebolt",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Firebolt Spec",
          "type": "object",
          "required": ["username", "password", "database"],
          "additionalProperties": true,
          "properties": {
            "username": {
              "type": "string",
              "title": "Username",
              "description": "Firebolt email address you use to login.",
              "examples": ["username@email.com"]
            },
            "password": {
              "type": "string",
              "title": "Password",
              "description": "Firebolt password.",
              "airbyte_secret": true
            },
            "account": {
              "type": "string",
              "title": "Account",
              "description": "Firebolt account to login."
            },
            "host": {
              "type": "string",
              "title": "Host",
              "description": "The host name of your Firebolt database.",
              "examples": ["api.app.firebolt.io"]
            },
            "database": {
              "type": "string",
              "title": "Database",
              "description": "The database to connect to."
            },
            "engine": {
              "type": "string",
              "title": "Engine",
              "description": "Engine name or url to connect to."
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7cf88806-25f5-4e1a-b422-b2fa9e1b0090",
      "name": "Elasticsearch",
      "dockerRepository": "airbyte/source-elasticsearch",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/elasticsearch",
      "icon": "elasticsearch.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/source/elasticsearch",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Elasticsearch Connection Configuration",
          "type": "object",
          "required": ["endpoint"],
          "additionalProperties": true,
          "properties": {
            "endpoint": {
              "title": "Server Endpoint",
              "type": "string",
              "description": "The full url of the Elasticsearch server"
            },
            "authenticationMethod": {
              "title": "Authentication Method",
              "type": "object",
              "description": "The type of authentication to be used",
              "oneOf": [
                {
                  "title": "None",
                  "additionalProperties": true,
                  "description": "No authentication will be used",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "none"
                    }
                  }
                },
                {
                  "title": "Api Key/Secret",
                  "additionalProperties": true,
                  "description": "Use a api key and secret combination to authenticate",
                  "required": ["method", "apiKeyId", "apiKeySecret"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "secret"
                    },
                    "apiKeyId": {
                      "title": "API Key ID",
                      "description": "The Key ID to used when accessing an enterprise Elasticsearch instance.",
                      "type": "string"
                    },
                    "apiKeySecret": {
                      "title": "API Key Secret",
                      "description": "The secret associated with the API Key ID.",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                },
                {
                  "title": "Username/Password",
                  "additionalProperties": true,
                  "description": "Basic auth header with a username and password",
                  "required": ["method", "username", "password"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "basic"
                    },
                    "username": {
                      "title": "Username",
                      "description": "Basic auth username to access a secure Elasticsearch server",
                      "type": "string"
                    },
                    "password": {
                      "title": "Password",
                      "description": "Basic auth password to access a secure Elasticsearch server",
                      "type": "string",
                      "airbyte_secret": true
                    }
                  }
                }
              ]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "03a53b13-794a-4d6b-8544-3b36ed8f3ce4",
      "name": "Waiteraid",
      "dockerRepository": "airbyte/source-waiteraid",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/waiteraid",
      "icon": "waiteraid.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Waiteraid Spec",
          "type": "object",
          "required": ["start_date", "auth_hash", "restid"],
          "additionalProperties": true,
          "properties": {
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Start getting data from that date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            },
            "auth_hash": {
              "title": "Authentication Hash",
              "type": "string",
              "description": "Your WaiterAid API key, obtained from API request with Username and Password",
              "airbyte_secret": true
            },
            "restid": {
              "title": "Restaurant ID",
              "type": "string",
              "description": "Your WaiterAid restaurant id from API request to getRestaurants",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "87c58f70-6f7a-4f70-aba5-bab1a458f5ba",
      "name": "Wikipedia Pageviews",
      "dockerRepository": "airbyte/source-wikipedia-pageviews",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/wikipedia-pageviews",
      "icon": "wikipediapageviews.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Wikipedia Pageviews Spec",
          "type": "object",
          "required": [
            "project",
            "access",
            "agent",
            "article",
            "start",
            "end",
            "country"
          ],
          "additionalProperties": true,
          "properties": {
            "project": {
              "type": "string",
              "title": "Project",
              "description": "If you want to filter by project, use the domain of any Wikimedia project.",
              "examples": [
                "en.wikipedia.org",
                "www.mediawiki.org",
                "commons.wikimedia.org"
              ]
            },
            "access": {
              "type": "string",
              "title": "Access",
              "description": "If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.",
              "examples": ["all-access", "desktop", "mobile-app", "mobile-web"]
            },
            "agent": {
              "type": "string",
              "title": "Agent",
              "description": "If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.",
              "examples": ["all-agents", "user", "spider", "automated"]
            },
            "article": {
              "type": "string",
              "title": "Article",
              "description": "The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.",
              "examples": ["Are_You_the_One%3F"]
            },
            "start": {
              "type": "string",
              "title": "Start",
              "description": "The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format."
            },
            "end": {
              "type": "string",
              "title": "End",
              "description": "The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format."
            },
            "country": {
              "type": "string",
              "title": "Country",
              "description": "The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.",
              "examples": ["FR", "IN"]
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "05b0bce2-4ec4-4534-bb1a-5d0127bd91b7",
      "name": "WorkRamp",
      "dockerRepository": "airbyte/source-workramp",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/workramp",
      "icon": "workramp.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/workramp",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Workramp Spec",
          "type": "object",
          "required": ["api_key", "academy_id"],
          "additionalProperties": true,
          "properties": {
            "api_key": {
              "type": "string",
              "title": "API Token",
              "description": "The API Token for Workramp",
              "airbyte_secret": true
            },
            "academy_id": {
              "type": "string",
              "title": "Academy ID",
              "description": "The id of the Academy"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "7865dce4-2211-4f6a-88e5-9d0fe161afe7",
      "name": "Yandex Metrica",
      "dockerRepository": "airbyte/source-yandex-metrica",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/yandex-metrica",
      "icon": "yandexmetrica.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docsurl.com",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Yandex Metrica Spec",
          "type": "object",
          "required": ["auth_token", "counter_id", "start_date", "end_date"],
          "additionalProperties": true,
          "properties": {
            "auth_token": {
              "type": "string",
              "title": "Authentication Token",
              "description": "Your Yandex Metrica API access token",
              "airbyte_secret": true,
              "order": 0
            },
            "counter_id": {
              "type": "string",
              "title": "Counter ID",
              "description": "Counter ID",
              "pattern": "^[0-9]+$",
              "order": 1
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format YYYY-MM-DD.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-01-01"],
              "order": 2
            },
            "end_date": {
              "title": "End Date",
              "type": "string",
              "description": "UTC date and time in the format YYYY-MM-DD.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2022-01-01"],
              "order": 3
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "9c74c2d7-531a-4ebf-b6d8-6181f805ecdc",
      "name": "Younium",
      "dockerRepository": "airbyte/source-younium",
      "dockerImageTag": "0.1.0",
      "documentationUrl": "https://docs.airbyte.com/integrations/sources/younium",
      "icon": "younium.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/younium",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Younium Spec",
          "type": "object",
          "required": ["username", "password", "legal_entity"],
          "properties": {
            "username": {
              "title": "Username",
              "type": "string",
              "description": "Username for Younium account"
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "Account password for younium account API key",
              "airbyte_secret": true
            },
            "legal_entity": {
              "title": "Legal Entity",
              "type": "string",
              "description": "Legal Entity that data should be pulled from"
            },
            "playground": {
              "title": "Playground environment",
              "type": "boolean",
              "description": "Property defining if connector is used against playground or production environment",
              "default": false
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "cbfd9856-1322-44fb-bcf1-0b39b7a8e92e",
      "name": "Zoom",
      "dockerRepository": "airbyte/source-zoom",
      "dockerImageTag": "0.1.1",
      "documentationUrl": "https://docs.airbyte.io/integrations/sources/zoom",
      "icon": "zoom.svg",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/zoom",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Zoom Spec",
          "type": "object",
          "required": ["jwt_token"],
          "additionalProperties": true,
          "properties": {
            "jwt_token": {
              "type": "string",
              "description": "JWT Token",
              "airbyte_secret": true
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    },
    {
      "sourceDefinitionId": "68b9c98e-0747-4c84-b05b-d30b47686725",
      "name": "Braze",
      "dockerRepository": "airbyte/source-braze",
      "dockerImageTag": "0.1.3",
      "documentationUrl": "https://docs.airbyte.io/integrations/sources/braze",
      "sourceType": "api",
      "spec": {
        "documentationUrl": "https://docs.airbyte.com/integrations/sources/braze",
        "connectionSpecification": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Braze Spec",
          "type": "object",
          "additionalProperties": true,
          "required": ["url", "api_key", "start_date"],
          "properties": {
            "url": {
              "type": "string",
              "title": "URL",
              "description": "Braze REST API endpoint"
            },
            "api_key": {
              "type": "string",
              "title": "Rest API Key",
              "airbyte_secret": true,
              "description": "Braze REST API key"
            },
            "start_date": {
              "type": "string",
              "format": "date",
              "title": "Start date",
              "description": "Rows after this date will be synced"
            }
          }
        },
        "supportsNormalization": false,
        "supportsDBT": false,
        "supported_destination_sync_modes": []
      },
      "tombstone": false,
      "public": true,
      "custom": false,
      "releaseStage": "alpha"
    }
  ]
}
