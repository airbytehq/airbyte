plugins {
    id 'java'
}

// The java plugin automatically compiles/runs tests in the test source set (./src/test directory). Since we want acceptance tests to run
// only when explicitly requested, we put them in a separate source set, specify the sourceset's dependencies via configuration extensions below,
// and create a custom test task that can be invoked to run acceptance tests.
sourceSets {
    acceptanceTests {
        java {
            srcDir("src/acceptanceTests/java")
        }
        resources {
            srcDir("src/acceptanceTests/resources")
        }
    }
}

// Gradle links configurations with the name xImplementation or xRuntimeOnly etc.. to the source set named x. Therefore, any deps specified
// using the extensions below apply only to this sourceset and not any other code in the project.
configurations {
    acceptanceTestsImplementation.extendsFrom testImplementation
    acceptanceTestsRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    acceptanceTestsImplementation project(':dataline-api')
    acceptanceTestsImplementation project(':dataline-config:persistence')
    acceptanceTestsImplementation project(':dataline-db')
    acceptanceTestsImplementation project(':dataline-test-utils')

    acceptanceTestsImplementation "org.testcontainers:postgresql:1.14.3"
    acceptanceTestsImplementation "org.postgresql:postgresql:42.2.16"
    acceptanceTestsImplementation "com.fasterxml.jackson.core:jackson-databind"
}

task acceptanceTests(type: Test) {
    testClassesDirs += sourceSets.acceptanceTests.output.classesDirs
    classpath += sourceSets.acceptanceTests.runtimeClasspath
    useJUnitPlatform()
    testLogging() {
        events "passed", "failed"
        exceptionFormat "full"
    }
    mustRunAfter test
}

