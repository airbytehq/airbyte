plugins {
    id "base"
    id "com.github.node-gradle.node" version "3.1.1"
}

def nodeVersion = System.getenv('NODE_VERSION') ?: '16.13.0'

node {
    download = true
    version = nodeVersion
}

npm_run_build {
    inputs.files fileTree('public')
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    // todo (cgardens) - the plugin seems to ignore this value when the copy command is run. ideally the output would be place in build/app.
    outputs.dir project.buildDir
}

task test(type: NpmTask) {
    dependsOn assemble

    args = ['run', 'test', '--', '--watchAll=false', '--silent']
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
}

task licenseCheck(type: NpmTask) {
    dependsOn npmInstall

    args = ['run', 'license-check']
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
}

// Make sure to always run a license check after we installed dependencies
npmInstall.finalizedBy licenseCheck
assemble.dependsOn npm_run_build
build.finalizedBy test

task copyBuild(type: Copy) {
    dependsOn copyDocker

    from "${project.projectDir}/build"
    into "build/docker/bin/build"
    exclude ".docker"
    exclude "docker"
}

task copyDocs(type: Copy) {
    dependsOn copyDocker

    from "${project.rootProject.projectDir}/docs/integrations"
    into "build/docker/bin/docs/integrations"
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

// Copy images that are used in .md integration documentation docs
task copyAssets(type: Copy) {
    dependsOn copyDocker

    from "${project.rootProject.projectDir}/docs/.gitbook"
    into "build/docker/bin/docs/.gitbook"
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

task copyNginx(type: Copy) {
    dependsOn copyDocker

    from "${project.projectDir}/nginx"
    into "build/docker/bin/nginx"
}

copyBuild.dependsOn npm_run_build
copyNginx.dependsOn npm_run_build
copyDocs.dependsOn npm_run_build
copyAssets.dependsOn npm_run_build
assemble.dependsOn copyDocs
copyDocker.dependsOn(npm_run_build)

Task dockerBuildTask = getDockerBuildTask("webapp", "$project.projectDir", "$rootProject.ext.version", "$rootProject.ext.image_tag")
dockerBuildTask.dependsOn(copyBuild)
dockerBuildTask.dependsOn(copyNginx)
dockerBuildTask.dependsOn(copyDocs)
dockerBuildTask.dependsOn(copyAssets)
assemble.dependsOn(dockerBuildTask)
