name: Approve Regression Tests
permissions:
  pull-requests: write
on:
  workflow_dispatch:
    inputs:
      pr:
        description: "Pull request number. Used to pull the proper branch ref, including on forks."
        type: number
        required: false
      comment-id:
        description: "Optional. The comment-id of the slash command. Used to update the comment with the status."
        required: false

      # These must be declared, but they are unused and ignored.
      # TODO: Infer 'repo' and 'gitref' from PR number on other workflows, so we can remove these.
      repo:
        description: "Repo (Ignored)"
        required: false
        default: "clnoll/airbyte"
      gitref:
        description: "Ref (Ignored)"
        required: false

run-name: "Approve Regression Tests #${{ github.event.inputs.pr }}"
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.pr }}
  # Cancel any previous runs on the same branch if they are still in progress
  cancel-in-progress: true

jobs:
  approve-regression-tests:
    name: "Approve Regression Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Get job variables
        id: job-vars
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.inputs.pr }})
          echo "PR_JSON: $PR_JSON"
          echo "repo=$(echo "$PR_JSON" | jq -r .head.repo.full_name)" >> $GITHUB_OUTPUT
          BRANCH=$(echo "$PR_JSON" | jq -r .head.ref)
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          LATEST_COMMIT=$(gh api repos/${{ github.repository }}/commits/$BRANCH | jq -r .sha)
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT

      - name: Checkout Airbyte
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.job-vars.outputs.repo }}
          ref: ${{ steps.job-vars.outputs.branch }}
          fetch-depth: 1
          # Important that token is a PAT so that CI checks are triggered again.
          # Without this we would be forever waiting on required checks to pass.
          token: ${{ secrets.GH_PAT_APPROVINGTON_OCTAVIA }}

      - name: Append comment with job run link
        # If comment-id is not provided, this will create a new
        # comment with the job run link.
        id: first-comment-action
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.pr }}
          body: |

            > [Check job output.][1]

            [1]: ${{ steps.job-vars.outputs.run-url }}

      - name: Get RUN_ID for most recent run
        id: get-run-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          prev_run_id=$(gh api repos/${{ github.repository }}/actions/runs?head_sha=${{ steps.job-vars.outputs.latest_commit }} | jq "first(.workflow_runs[] | select(.name | endswith(\"Connectors Approve Regression Tests\")) | .id)")
          echo $prev_run_id

          [ -n "$prev_run_id" ] && [ "$prev_run_id" != "null" ] || {
            echo "Failed to determine run ID" 1>&2
            exit 1
          }

          echo prev_run_id=$prev_run_id >> $GITHUB_OUTPUT

      - name: Create artifact
        id: create-artifact
        run: |
          echo '' > regression-test-approval_${{ steps.job-vars.outputs.latest_commit }}.txt

      - name: Write persisted data
        id: write-persisted-data
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-approval_${{ steps.job-vars.outputs.latest_commit }}.txt
          path: regression-test-approval_${{ steps.job-vars.outputs.latest_commit }}.txt
          retention-days: 1

      - name: Get job for prev_run_id ID
        id: get-job-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          job_id=$(gh api repos/${{ github.repository }}/actions/runs/${{ steps.get-run-id.outputs.prev_run_id }}/jobs | jq "first(.jobs[] | select(.name | endswith(\"Connectors Approve Regression Tests\")) | .id)")
          echo $job_id

          [ -n "$job_id" ] && [ "$job_id" != "null" ] || {
            echo "Failed to determine job ID" 1>&2
            exit 1
          }

          echo job_id=$job_id >> $GITHUB_OUTPUT

      - name: Rerun approve-regression-tests
        id: re-run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "rerunning ...."
          callback_url=${{ github.api_url }}/repos/${{ github.repository }}/actions/jobs/${{ steps.get-job-id.outputs.job_id }}/rerun
          echo $callback_url
          curl -X POST -Ss -H "Authorization: Bearer ${{ secrets.GH_PAT_MAINTENANCE_OCTAVIA }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $callback_url

      - name: Append success comment
        uses: peter-evans/create-or-update-comment@v4
        if: success()
        with:
          comment-id: ${{ steps.first-comment-action.outputs.comment-id }}
          reactions: "+1"
          body: |
            > ✅ Approving regression tests

      - name: Append failure comment
        uses: peter-evans/create-or-update-comment@v4
        if: failure()
        with:
          comment-id: ${{ steps.first-comment-action.outputs.comment-id }}
          reactions: confused
          body: |
            > ❌ Job failed
