name: Connector Ops CI - Publish Connectors

on:
  push:
    branches:
      - master
    paths:
      - "airbyte-integrations/connectors/**/metadata.yaml"
  workflow_call:
    inputs:
      connectors:
        description: "list of connectors to publish. This should be a string of the form --name=source-pokeapi --name=destination-postgres."
        default: "--name=source-pokeapi"
        type: string
      publish-options:
        description: "Options to pass to the 'airbyte-ci connectors publish' command. Use --pre-release or --main-release depending on whether you want to publish a dev image or not. "
        default: "--pre-release"
        type: string
  workflow_dispatch:
    inputs:
      connectors:
        description: "list of connectors to publish. This should be a string of the form --name=source-pokeapi --name=destination-postgres."
        default: "--name=source-pokeapi"
      publish-options:
        description: "Options to pass to the 'airbyte-ci connectors publish' command. Use --pre-release or --main-release depending on whether you want to publish a dev image or not. "
        default: "--pre-release"
jobs:
  list_connectors:
    name: List connectors to publish
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Required so we can conduct a diff from the previous commit to understand what connectors have changed.
      - name: List connectors [manual]
        id: list-connectors-manual
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call'
        shell: bash
        # When invoked manually, we run on the connectors specified in the input.
        run: echo connectors-to-publish=$(./poe-tasks/parse-connector-name-args.sh ${{ inputs.connectors }}) | tee -a $GITHUB_OUTPUT
      - name: List connectors [On merge to master]
        id: list-connectors-master
        if: github.event_name == 'push'
        shell: bash
        # When merging to master, we run on connectors that have changed since the previous commit.
        run: echo connectors-to-publish=$(./poe-tasks/get-modified-connectors.sh --prev-commit --json) | tee -a $GITHUB_OUTPUT
    outputs:
      # Exactly one of the manual/master steps will run, so just OR them together.
      connectors-to-publish: ${{ steps.list-connectors-manual.outputs.connectors-to-publish || steps.list-connectors-master.outputs.connectors-to-publish }}
  publish_connectors:
    name: Publish connectors
    needs: [list_connectors]
    runs-on: ubuntu-24.04
    strategy:
      matrix: ${{ fromJson(needs.list_connectors.outputs.connectors-to-publish) }}
      max-parallel: 5
      # Allow all jobs to run, even if one fails
      fail-fast: false
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Required so we can conduct a diff from the previous commit to understand what connectors have changed.

      - name: Create docker buildx builder
        id: create-buildx-builder
        shell: bash
        run: docker buildx create --use --driver=docker-container --name builder --platform linux/amd64,linux/arm64

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21
          cache: gradle

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Python
        # v5
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          check-latest: true
          update-environment: true

      - name: Install and configure Poetry
        # v1
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          version: 1.8.5

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Install Poe
        run: |
          # Install Poe so we can run the connector tasks:
          uv tool install poethepoet

      - name: Get connector metadata
        id: connector-metadata
        working-directory: airbyte-integrations/connectors/${{ matrix.connector }}
        run: |
          set -euo pipefail
          echo "connector-language=$(poe -qq get-language)" | tee -a $GITHUB_OUTPUT
          echo "connector-version=$(poe -qq get-version)" | tee -a $GITHUB_OUTPUT

      # We're intentionally not using the `google-github-actions/auth` action.
      # The upload-connector-metadata step runs a script which handles auth manually.
      # This is because we're writing files to multiple buckets, using different credentials
      # for each bucket.
      # (it's unclear whether that's actually necessary)
      - name: Install gcloud
        # v2.1.5
        uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9

      - name: Install metadata_service
        run: poetry install --directory airbyte-ci/connectors/metadata_service/lib

      - name: Validate connector metadata
        id: validate-connector-metadata
        shell: bash
        run: ./poe-tasks/validate-connector-metadata.sh --name ${{ matrix.connector }}

      - name: Publish to Python Registry [On merge to master]
        id: publish-python-registry-master
        if: github.event_name == 'push' && steps.connector-metadata.outputs.connector-language == 'python'
        shell: bash
        run: |
          ./poe-tasks/publish-python-registry.sh --name ${{ matrix.connector }}
        env:
          PYTHON_REGISTRY_TOKEN: ${{ secrets.PYPI_TOKEN }}
        continue-on-error: true # We allow this to fail because we are testing this step. TODO: remove this once we are sure it works.

      - name: Publish to Python Registry [Manual]
        id: publish-python-registry-manual
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') && steps.connector-metadata.outputs.connector-language == 'python'
        shell: bash
        run: |
          # Determine if this is a pre-release
          is_pre_release=$(echo "${{ inputs.publish-options }}" | grep -c -- '--pre-release' || true)
          if [[ $is_pre_release -gt 0 ]]; then
            PRE_RELEASE_FLAG="--pre-release"
          else
            PRE_RELEASE_FLAG=""
          fi

          ./poe-tasks/publish-python-registry.sh --name ${{ matrix.connector }} $PRE_RELEASE_FLAG
        env:
          PYTHON_REGISTRY_TOKEN: ${{ secrets.PYPI_TOKEN }}
        continue-on-error: true # We allow this to fail because we are testing this step. TODO: remove this once we are sure it works.

      - name: Upload Python Dependencies to GCS [On merge to master]
        id: upload-python-dependencies-master
        if: github.event_name == 'push' && steps.connector-metadata.outputs.connector-language == 'python'
        shell: bash
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
        run: |
          ./poe-tasks/upload-python-dependencies.sh --name ${{ matrix.connector }} --bucket prod-airbyte-cloud-connector-metadata-service
        continue-on-error: true # We allow this to fail because we are testing this step. TODO: remove this once we are sure it works.

      - name: Upload Python Dependencies to GCS [Manual]
        id: upload-python-dependencies-manual
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') && steps.connector-metadata.outputs.connector-language == 'python'
        shell: bash
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
        run: |
          # Determine if this is a pre-release
          is_pre_release=$(echo "${{ inputs.publish-options }}" | grep -c -- '--pre-release' || true)
          if [[ $is_pre_release -gt 0 ]]; then
            PRE_RELEASE_FLAG="--pre-release"
          else
            PRE_RELEASE_FLAG=""
          fi
          ./poe-tasks/upload-python-dependencies.sh --name ${{ matrix.connector }} --bucket prod-airbyte-cloud-connector-metadata-service $PRE_RELEASE_FLAG
        continue-on-error: true # We allow this to fail because we are testing this step. TODO: remove this once we are sure it works.

      - name: Build and publish JVM connectors images [On merge to master]
        id: build-and-publish-JVM-connectors-images-master
        if: github.event_name == 'push' && steps.connector-metadata.outputs.connector-language == 'java'
        shell: bash
        run: |
          ./poe-tasks/build-and-publish-java-connectors-with-tag.sh --main-release --publish --name ${{ matrix.connector }}

      - name: Publish JVM connectors tar file [On merge to master]]
        id: publish-JVM-connectors-tar-file-master
        if: github.event_name == 'push' && steps.connector-metadata.outputs.connector-language == 'java'
        shell: bash
        run: ./poe-tasks/upload-java-connector-tar-file.sh --name ${{ matrix.connector }} --main-release
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_DEV_GCS_CREDENTIALS }}
        # we allow it to fail because we are testing this step. We should remove this once we are sure it works.
        continue-on-error: true

      - name: Determine build and publish options
        id: get-connector-options
        if: steps.connector-metadata.outputs.connector-language != 'java'
        shell: bash
        run: |
          # TODO: refactor this logic to be shared by all connector types
          is_pre_release=$(echo ${{ inputs.publish-options }} | grep -c -- '--pre-release' || true)
          is_release_candidate=$(echo ${{ steps.connector-metadata.outputs.connector-version }} | grep -c -- '-rc' || true)

          # Don't tag with latest for pre-release or release candidate builds
          if [[ $is_pre_release -gt 0 || $is_release_candidate -gt 0 ]]; then
            echo "push-latest=false" >> $GITHUB_OUTPUT
            echo "Skipping latest tag for pre-release or release candidate build."
          else
            echo "push-latest=true" >> $GITHUB_OUTPUT
          fi

          if [[ $is_pre_release -gt 0 ]]; then
            hash=$(git rev-parse --short=10 HEAD)
            tag_override="${{ steps.connector-metadata.outputs.connector-version }}-dev.${hash}"
            echo "tag-override=${tag_override}" >> $GITHUB_OUTPUT
            echo "Using a dev tag for a pre-release build: ${tag_override}"
          fi

      - name: Build and publish Python and Manifest-Only connectors images [On merge to master]
        id: build-and-publish-python-manifest-only-connectors-images-master
        if: github.event_name == 'push' && steps.connector-metadata.outputs.connector-language != 'java'
        uses: ./.github/actions/connector-image-build-push
        with:
          connector-name: ${{ matrix.connector }}
          push-latest: ${{ steps.get-connector-options.outputs.push-latest }}
          dry-run: "false"
          docker-hub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-hub-password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Upload connector metadata [On merge to master]
        id: upload-connector-metadata-master
        if: github.event_name == 'push'
        shell: bash
        run: ./poe-tasks/upload-connector-metadata.sh --name ${{ matrix.connector }} --main-release
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          SPEC_CACHE_GCS_CREDENTIALS: ${{ secrets.SPEC_CACHE_SERVICE_ACCOUNT_KEY_PUBLISH }}
          METADATA_SERVICE_GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}

      - name: Build and publish JVM connectors images [manual]
        id: build-and-publish-JVM-connectors-images-manual
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') && steps.connector-metadata.outputs.connector-language == 'java'
        shell: bash
        run: ./poe-tasks/build-and-publish-java-connectors-with-tag.sh  ${{ inputs.publish-options }} --name ${{ matrix.connector }} --publish

      - name: Publish JVM connectors tar file [manual]
        id: publish-JVM-connectors-tar-file-manual
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') && steps.connector-metadata.outputs.connector-language == 'java'
        shell: bash
        run: ./poe-tasks/upload-java-connector-tar-file.sh --name ${{ matrix.connector }} ${{ inputs.publish-options }}
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_DEV_GCS_CREDENTIALS }}
        # we allow it to fail because we are testing this step. We should remove this once we are sure it works.
        continue-on-error: true

      - name: Build and publish Python and Manifest-Only connectors images [manual]
        id: build-and-publish-python-manifest-only-connectors-images-manual
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') && steps.connector-metadata.outputs.connector-language != 'java'
        uses: ./.github/actions/connector-image-build-push
        with:
          connector-name: ${{ matrix.connector }}
          push-latest: ${{ steps.get-connector-options.outputs.push-latest }}
          tag-override: ${{ steps.get-connector-options.outputs.tag-override }}
          dry-run: "false"
          docker-hub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-hub-password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Upload connector metadata [Manual]
        id: upload-connector-metadata-manual
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call'
        shell: bash
        run: ./poe-tasks/upload-connector-metadata.sh --name ${{ matrix.connector }} ${{ inputs.publish-options }}
        env:
          GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          SPEC_CACHE_GCS_CREDENTIALS: ${{ secrets.SPEC_CACHE_SERVICE_ACCOUNT_KEY_PUBLISH }}
          METADATA_SERVICE_GCS_CREDENTIALS: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}

  notify-failure-slack-channel:
    name: "Notify Slack Channel on Publish Failures"
    runs-on: ubuntu-24.04
    needs:
      - publish_connectors
    if: ${{ always() && contains(needs.*.result, 'failure') && github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: Match GitHub User to Slack User
        id: match-github-to-slack-user
        uses: ./.github/actions/match-github-to-slack-user
        env:
          AIRBYTE_TEAM_BOT_SLACK_TOKEN: ${{ secrets.SLACK_AIRBYTE_TEAM_READ_USERS }}
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Send publish failures to connector-publish-failures channel
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "channel": "#connector-publish-failures",
              "username": "Connectors CI/CD Bot",
              "text": "🚨 Publish workflow failed:\n ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \n merged by ${{ github.actor }} (<@${{ steps.match-github-to-slack-user.outputs.slack_user_ids }}>). "
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PUBLISH_ON_MERGE_SLACK_WEBHOOK }}

  notify-failure-pager-duty:
    name: "Notify PagerDuty on Publish Failures"
    runs-on: ubuntu-24.04
    needs:
      - publish_connectors
    if: ${{ always() && contains(needs.*.result, 'failure') && github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: Notify PagerDuty
        id: pager-duty
        uses: ./.github/actions/send-pager-duty-event
        with:
          # Integration URL: https://airbyte.pagerduty.com/services/P5GNI5T/integrations/PGKH9JV
          integration_key: ${{ secrets.PAGER_DUTY_PUBLISH_FAILURES_INTEGRATION_KEY }}
          summary: "Publish workflow failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} merged by ${{ github.actor }}"
          severity: "critical"
          source: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
