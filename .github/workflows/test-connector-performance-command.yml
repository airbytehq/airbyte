name: Test Connector Performance
on:
  workflow_dispatch:
    inputs:
      connector:
        description: "Airbyte Connector"
        required: true
      repo:
        description: "Repo to check out code from. Defaults to the main airbyte repo. Set this when building connectors from forked repos."
        required: false
        default: "airbytehq/airbyte"
      gitref:
        description: "The git ref to check out from the specified repository."
        required: false
        default: master
      comment-id:
        description: "The comment-id of the slash command. Used to update the comment with the status."
        required: false
      uuid:
        description: "Custom UUID of workflow run. Used because GitHub dispatches endpoint does not return workflow run id."
        required: false
      connector-acceptance-test-version:
        description: "Set a specific connector acceptance test version to use. Enter 'dev' to test, build and use a local version of Connector Acceptance Test."
        required: false
        default: "latest"
      local_cdk:
        description: "Run Connector Acceptance Tests against the CDK version on the current branch."
        required: false
jobs:
  uuid:
    name: "Custom UUID of workflow run"
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: UUID ${{ github.event.inputs.uuid }}
        run: true
  start-test-runner:
    name: Start Build EC2 Runner
    needs: uuid
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.gitref }}
      - name: Check PAT rate limits
        run: |
          ./tools/bin/find_non_rate_limited_PAT \
            ${{ secrets.GH_PAT_BUILD_RUNNER_OSS }} \
            ${{ secrets.GH_PAT_BUILD_RUNNER_BACKUP }}
      - name: Start AWS Runner
        id: start-ec2-runner
        uses: ./.github/actions/start-aws-runner
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          github-token: ${{ env.PAT }}
  performance-test:
    timeout-minutes: 240
    needs: start-test-runner
    runs-on: ${{ needs.start-test-runner.outputs.label }}
    steps:
      - name: Link comment to workflow run
        if: github.event.inputs.comment-id
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            > :runner: ${{github.event.inputs.connector}} https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      - name: Search for valid connector name format
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: "^((connectors|bases)/)?[a-zA-Z0-9-_]+$"
          regex_flags: "i" # required to be set for this plugin
          search_string: ${{ github.event.inputs.connector }}
      - name: Validate input workflow format
        if: steps.regex.outputs.first_match != github.event.inputs.connector
        run: echo "The connector provided has an invalid format!" && exit 1
      - name: Checkout Airbyte
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.gitref }}
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install CI scripts
        # all CI python packages have the prefix "ci_"
        run: |
          pip install --quiet -e ./tools/ci_*
      - name: build connector
        shell: bash
        run: |
          echo "Building... ${{github.event.inputs.connector}}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "Running ./gradlew :airbyte-integrations:connectors:source-postgres:build -x check" 
          ./gradlew :airbyte-integrations:connectors:source-postgres:build -x check
      - name: KIND Kubernetes Cluster Setup
        uses: helm/kind-action@v1.4.0
      - id: prepare-images
        name: Prepare images
        shell: bash
        run: |
          echo "Setting admin account permissions"
           kubectl apply -f ./tools/bin/admin-service-account.yaml
          echo "Loading connector image into kind" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          kind load docker-image airbyte/source-postgres:dev --name chart-testing
          echo "Loading connector image into kind" >> $GITHUB_STEP_SUMMARY
          docker pull airbyte/source-postgres:1.0.35
          kind load docker-image airbyte/source-postgres:1.0.35 --name chart-testing
          echo "pulling harness image..."
          docker pull rodireich/perftestrepo:15
          echo "Loading harness image into kind" >> $GITHUB_STEP_SUMMARY
          kind load docker-image rodireich/perftestrepo:15 --name chart-testing
          echo "loading pod..."
          kubectl create -f ./tools/bin/test-postgres-source-process.yaml
          echo "get pods..."
          kubectl get po
          POD=$(kubectl get pod -l app=perfharness -o jsonpath="{.items[0].metadata.name}")
          echo "pod name is $POD"
          kubectl wait --for=condition=Ready --timeout=20s "pod/$POD"
          kubectl logs --follow $POD
          echo "reading end of log"
          kubectl logs --tail=5 $POD
          # RUN_RESULT=$(kubectl logs --tail=5 $POD 2>&1)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "RUN_RESULT<<$EOF" >> $GITHUB_OUTPUT
          kubectl logs --tail=5 $POD | while read line ; do echo $line >> $GITHUB_OUTPUT ; done 
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Link comment to workflow run
        uses: peter-evans/create-or-update-comment@v2
        with:
          reactions: '+1'
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            ## Performance test Result: 
            ```
            ${{ steps.prepare-images.outputs.RUN_RESULT }}
            ```
            ### This run was XX% faster:rocket: than baseline on `master`.
      # need to add credentials here
  # In case of self-hosted EC2 errors, remove this block.
  stop-test-runner:
    name: Stop Build EC2 Runner
    timeout-minutes: 10
    needs:
      - start-test-runner # required to get output from the start-runner job
      - performance-test # required to wait when the main job is done
      - uuid
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Checkout Airbyte
        uses: actions/checkout@v3
      - name: Check PAT rate limits
        run: |
          ./tools/bin/find_non_rate_limited_PAT \
            ${{ secrets.GH_PAT_BUILD_RUNNER_OSS }} \
            ${{ secrets.GH_PAT_BUILD_RUNNER_BACKUP }}
      - name: Stop EC2 runner
        uses: supertopher/ec2-github-runner@base64v1.0.10
        with:
          mode: stop
          github-token: ${{ env.PAT }}
          label: ${{ needs.start-test-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-test-runner.outputs.ec2-instance-id }}
