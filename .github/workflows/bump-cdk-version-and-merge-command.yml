name: Bump Java CDK Version
on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repo to check out code from. Defaults to the main airbyte repo."
        type: choice
        required: true
        default: airbytehq/airbyte
        options:
          - airbytehq/airbyte
      version:
        description: "Version to bump to. Defaults to the latest version."
        type: string
        required: true
        default: latest
jobs:
  bump-cdk-version-and-merge:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Validate provided version
        run: |
          # Extract the provided version
          provided_version="${{ github.event.inputs.version }}"
          
          # Extract the current version from version.properties
          current_version=$(grep '^version=' airbyte-cdk/java/airbyte-cdk/core/src/main/resources/version.properties | cut -d'=' -f2)
          
          # Check if the provided version follows SemVer
          if ! [[ "$provided_version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Provided version '$provided_version' is not a valid SemVer version."
            exit 1
          fi
          
          # Compare the provided version with the current version
          if [ "$(printf '%s\n' "$current_version" "$provided_version" | sort -V | head -n1)" = "$provided_version" ] && [ "$current_version" != "$provided_version" ]; then
            echo "Error: Provided version '$provided_version' is not greater than the current version '$current_version'."
            exit 1
          fi
          
          echo "Provided version '$provided_version' is valid and greater than the current version '$current_version'."

      - name: Update version.properties
        run: |
          # Extract the provided version
          provided_version="${{ github.event.inputs.version }}"
          
          # Update the version in version.properties
          sed -i "s/^version=.*/version=$provided_version/" airbyte-cdk/java/airbyte-cdk/core/src/main/resources/version.properties
          
          echo "Updated version.properties with version '$provided_version'."

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update cdkVersionRequired in build.gradle files
        run: |
          # Ensure the branch has the most recent updates from the master branch
          git fetch origin master

          # Get the list of modified files between the default branch and the current branch
          modified_files=$(git diff --name-only origin/master)

          # Filter for folders containing build.gradle files
          for file in $modified_files; do
            if [[ $file == *"build.gradle" ]]; then
              gradle_file=$file
              sed -i "s/cdkVersionRequired = '.*'/cdkVersionRequired = '${{ github.event.inputs.version }}'/" "$gradle_file"
              sed -i "/useLocalCdk/d" "$gradle_file"
            fi
          done

      - name: Trigger the target workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by GitHub Actions
        run: |
          gh workflow run 'Publish Java CDK' --ref ${{ github.ref_name }} -F dry-run=true -F gitref=${{ github.ref_name }}
          
          RUN_ID=$(gh run list --workflow 'Publish Java CDK' --branch ${{ github.ref_name }} --limit 1 --json databaseId --jq '.[0].databaseId' --repo ${{ github.repository }} --status queued --status in_progress)

          echo "Triggered workflow run ID: $RUN_ID"

          sleep 30

          # --- Watch the workflow run until it completes ---
          # gh run watch blocks until the run finishes
          # It exits with a non-zero code if the watched run fails or is cancelled
          echo "Waiting for workflow run $RUN_ID to finish..."
          gh run watch $RUN_ID 
          echo "Workflow run $RUN_ID finished."
        working-directory: ${{ github.workspace }} # Ensure gh command runs from the repo root

      - name: Commit changes
        run: |
          git add .
          git commit -m "Bump the cdk version to ${{ github.event.inputs.version }}"
          git push

      - name: Respond to user
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Java CDK version bumped to `${{ env.new_version }}` and connectors updated successfully. ðŸš€"
            })
