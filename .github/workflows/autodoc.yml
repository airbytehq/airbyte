name: Autodoc

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  write-documentation:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.head.repo.full_name == github.repository
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get the list of files changed in the PR
      - name: Get files in this PR
        id: pr-files
        continue-on-error: false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '[.[].filename] | @json')
          if [ -z "$FILES" ]; then
            echo "Error: Failed to fetch or parse PR files."
            exit 1
          fi
          echo "files=$FILES" >> $GITHUB_OUTPUT

      # Install yq for yaml file parsing
      - name: Install yq
        id: install-yq
        run: sudo apt-get update && sudo apt-get install -y yq

      # Check if the PR contains a metadata.yaml file and if the connector is community supported
      - name: Check for Community support level
        id: check-support-level
        continue-on-error: false
        run: |
          # Find metadata.yaml in any folder
          METADATA_FILE=$(find . -path "*/airbyte-integrations/connectors/*/metadata.yaml" | head -n 1)
          if [ -z "$METADATA_FILE" ]; then
            echo "No metadata.yaml file found in the connector directories."  
            echo "metadata_file=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          # Check the supportLevel in metadata.yaml
          SUPPORT_LEVEL=$(yq '.data.supportLevel' "$METADATA_FILE")
          if [ "$SUPPORT_LEVEL" != "community" ]; then
            echo "This PR does not contain a Community/Marketplace connector."
            echo "community_support=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "metadata_file=true" >> $GITHUB_OUTPUT
          echo "community_support=true" >> $GITHUB_OUTPUT
          echo "Metadata file found: $METADATA_FILE"
          echo "Support level: $SUPPORT_LEVEL"

      # If this isn't a community connector, skip the doc update
      - name: Skip doc update
        id: skip-doc-update
        if: steps.check-support-level.outputs.metadata_file == 'false' || steps.check-support-level.outputs.community_support == 'false'
        run: echo "Skipping docs update because this connector is not community supported or is missing metadata file."

      # Use Devin Action to start documentation update session
      - name: Start Devin documentation session
        if: steps.check-support-level.outputs.metadata_file == 'true' && steps.check-support-level.outputs.community_support == 'true'
        uses: aaronsteers/devin-action@0d74d6d9ff1b16ada5966dc31af53a9d155759f4
        with:
          devin-token: ${{ secrets.DEVIN_AI_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          playbook-macro: "!connectordocs"
          prompt-text: "The pull request you are working with is: ${{ github.event.pull_request.number }}"
          tags: |
            area/documentation
            team/documentation
