name: Pull Data for Repo Migration

on:
  push:
    branches:
      - pull-encrypted-secrets
  workflow_dispatch:


jobs:
  openssl:
    name: Pull Encrypted Data
    runs-on: ubuntu-latest
    environment: more-secrets
    steps:
      - uses: actions/checkout@v3
      - env:
          MY_OPENSSL_PASSWORD: '${{ secrets.OPENSSL_PASSWORD }}'
          MY_OPENSSL_ITER: '${{ secrets.OPENSSL_ITER }}'
          DOCKER_HUB_PASSWORD: '${{ secrets.DOCKER_HUB_PASSWORD }}'
          DOCKER_HUB_USERNAME: '${{ secrets.DOCKER_HUB_USERNAME }}'
          PROD_SPEC_CACHE_SA_KEY: '${{ secrets.PROD_SPEC_CACHE_SA_KEY }}'
          SELF_RUNNER_AWS_ACCESS_KEY_ID: '${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}'
          SELF_RUNNER_AWS_SECRET_ACCESS_KEY: '${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}'
          SELF_RUNNER_GITHUB_ACCESS_TOKEN: '${{ secrets.SELF_RUNNER_GITHUB_ACCESS_TOKEN }}'
          SLACK_BOT_TOKEN_AIRBYTE_TEAM: '${{ secrets.SLACK_BOT_TOKEN_AIRBYTE_TEAM }}'
        run: |
          echo "DOCKER_HUB_PASSWORD (openssl) = $(echo "${DOCKER_HUB_PASSWORD}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "DOCKER_HUB_USERNAME (openssl) = $(echo "${DOCKER_HUB_USERNAME}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "PROD_SPEC_CACHE_SA_KEY (openssl) = $(echo "${PROD_SPEC_CACHE_SA_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "SELF_RUNNER_AWS_ACCESS_KEY_ID (openssl) = $(echo "${SELF_RUNNER_AWS_ACCESS_KEY_ID}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "SELF_RUNNER_AWS_SECRET_ACCESS_KEY (openssl) = $(echo "${SELF_RUNNER_AWS_SECRET_ACCESS_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "SELF_RUNNER_GITHUB_ACCESS_TOKEN (openssl) = $(echo "${SELF_RUNNER_GITHUB_ACCESS_TOKEN}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "SLACK_BOT_TOKEN_AIRBYTE_TEAM (openssl) = $(echo "${SLACK_BOT_TOKEN_AIRBYTE_TEAM}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
