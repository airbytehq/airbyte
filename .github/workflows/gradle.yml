name: Airbyte CI

on:
  schedule:
    - cron: '0 */6 * * *'
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - name: Cache java deps
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            gradle-

      - name: Cache node deps
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - uses: actions/setup-java@v1
        with:
          java-version: '14'

      - uses: actions/setup-node@v1
        with:
          node-version: '14.7'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Write Integration Test Credentials
        run: ./tools/bin/ci_credentials.sh
        env:
          BIGQUERY_INTEGRATION_TEST_CREDS: ${{ secrets.BIGQUERY_INTEGRATION_TEST_CREDS }}
          STRIPE_INTEGRATION_TEST_CREDS: ${{ secrets.STRIPE_INTEGRATION_TEST_CREDS }}
          GH_INTEGRATION_TEST_CREDS: ${{ secrets.GH_INTEGRATION_TEST_CREDS }}
          SALESFORCE_INTEGRATION_TESTS_CREDS: ${{ secrets.SALESFORCE_INTEGRATION_TESTS_CREDS }}
          GOOGLE_ANALYTICS_TEST_CREDS: ${{ secrets.GOOGLE_ANALYTICS_TEST_CREDS }}
          GOOGLE_ANALYTICS_TEST_TRACKING_ID: ${{ secrets.GOOGLE_ANALYTICS_TEST_TRACKING_ID }}
          HUBSPOT_INTEGRATION_TESTS_CREDS: ${{ secrets.HUBSPOT_INTEGRATION_TESTS_CREDS }}
          GSHEETS_INTEGRATION_TESTS_CREDS: ${{ secrets.GSHEETS_INTEGRATION_TESTS_CREDS }}

      - name: Build
        run: ./gradlew --no-daemon build --scan

      - name: Ensure no file change
        run: git status --porcelain && test -z "$(git status --porcelain)"

      - name: Run Integration Tests (PR)
        if: success() && github.ref != 'refs/heads/master'
        run: ./tools/bin/integration_test_pr.sh

      - name: Run Integration Tests (Master)
        if: success() && github.ref == 'refs/heads/master'
        run: ./gradlew --no-daemon integrationTest --scan

      - name: Run Standard Source Tests (PR)
        if: success() && github.ref != 'refs/heads/master'
        run: ./tools/bin/standard_test_pr.sh

      - name: Run Standard Source Tests (Master)
        if: success() && github.ref == 'refs/heads/master'
        run: ./gradlew --no-daemon standardSourceTestPython --scan

      - name: Build Core Docker Images
        if: success() && github.ref == 'refs/heads/master'
        run: ./gradlew --no-daemon composeBuild --scan
        env:
          GIT_REVISION: ${{ github.sha }}

      - name: Run End-to-End Acceptance Tests
        run: ./tools/bin/acceptance_test.sh

      - name: Push Core Docker Images
        if: success() && github.ref == 'refs/heads/master'
        run: |
          docker login -u airbytebot -p ${DOCKER_PASSWORD}
          docker-compose -f docker-compose.build.yaml push
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Slack Notification - Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.BUILD_SLACK_WEBHOOK }}
          SLACK_USERNAME: Buildozer
          SLACK_ICON: https://avatars.slack-edge.com/temp/2020-09-01/1342729352468_209b10acd6ff13a649a1.jpg
          SLACK_COLOR: DC143C
          SLACK_TITLE: "Build failure"
          SLACK_FOOTER: ""

      - name: Slack Notification - Success
        if: success() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.BUILD_SLACK_WEBHOOK }}
          SLACK_USERNAME: Buildbot
          SLACK_TITLE: "Build Success"
          SLACK_FOOTER: ""
