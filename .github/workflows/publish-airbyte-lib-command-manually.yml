name: Publish AirbyteLib Manually
on: workflow_dispatch

concurrency:
  group: publish-airbyte-lib
  cancel-in-progress: false

jobs:
  get_ci_runner:
    runs-on: ubuntu-latest
    name: Get CI runner
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_PAT_APPROVINGTON_OCTAVIA }}
          fetch-depth: 1
      - name: Get CI runner
        id: get_ci_runner
        uses: ./.github/actions/airbyte-ci-requirements
        with:
          runner_type: "publish"
          runner_size: "large"
          # Getting ci requirements for connectors publish command as there is no special one for poetry publish
          airbyte_ci_command: "connectors publish"
          github_token: ${{ secrets.GH_PAT_APPROVINGTON_OCTAVIA }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
    outputs:
      runner_name: ${{ steps.get_ci_runner.outputs.runner_name }}
  publish_connectors:
    name: Publish airbyte-lib
    needs: get_ci_runner
    runs-on: ${{ needs.get_ci_runner.outputs.runner_name }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v3
      - name: Publish
        id: publish-airbyte-lib
        uses: ./.github/actions/run-dagger-pipeline
        with:
          context: "manual"
          dagger_cloud_token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcp_gsm_credentials: ${{ secrets.GCP_GSM_CREDENTIALS }}
          gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          metadata_service_gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          slack_webhook_url: ${{ secrets.PUBLISH_ON_MERGE_SLACK_WEBHOOK }}
          spec_cache_gcs_credentials: ${{ secrets.SPEC_CACHE_SERVICE_ACCOUNT_KEY_PUBLISH }}
          s3_build_cache_access_key_id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          s3_build_cache_secret_key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_KEY }}
          subcommand: 'poetry --package-path=airbyte-lib publish --registry-url="https://test.pypi.org/legacy/"'
          python_registry_token: ${{ secrets.PYPI_TOKEN }}
