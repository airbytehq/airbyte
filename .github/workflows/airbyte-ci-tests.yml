name: Connector Ops CI - Pipeline Unit Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - "**/*.md"
jobs:
  run-airbyte-ci-tests:
    name: Run Airbyte CI tests
    runs-on: "conn-prod-xlarge-runner"
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v3
      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            ops:
              - 'airbyte-ci/connectors/connector_ops/**'
            base_images:
              - 'airbyte-ci/connectors/connector_ops/**'
              - 'airbyte-ci/connectors/base_images/**'
            pipelines:
              - 'airbyte-ci/connectors/connector_ops/**'
              - 'airbyte-ci/connectors/base_images/**'
              - 'airbyte-ci/connectors/pipelines/**'
            metadata-lib:
              - 'airbyte-ci/connectors/metadata/lib/**'
            metadata-orchestrator:
              - 'airbyte-ci/connectors/metadata/lib/**'
              - 'airbyte-ci/connectors/metadata/orchestrator/**'

      - name: Run airbyte-ci/connectors/connector_ops tests
        if: steps.changes.outputs.ops == 'true'
        id: run-airbyte-ci-connectors-connector-ops-tests
        uses: ./.github/actions/run-dagger-pipeline
        with:
          context: "pull_request"
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          github_token: ${{ secrets.GH_PAT_MAINTENANCE_OCTAVIA }}
          subcommand: "test airbyte-ci/connectors/connector_ops"

      - name: Run airbyte-ci/connectors/pipelines tests
        id: run-airbyte-ci-connectors-pipelines-tests
        if: steps.changes.outputs.pipelines == 'true'
        uses: ./.github/actions/run-dagger-pipeline
        with:
          context: "pull_request"
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          github_token: ${{ secrets.GH_PAT_MAINTENANCE_OCTAVIA }}
          subcommand: "test airbyte-ci/connectors/pipelines"

      - name: Run airbyte-ci/connectors/base_images tests
        id: run-airbyte-ci-connectors-base-images-tests
        if: steps.changes.outputs.base_images == 'true'
        uses: ./.github/actions/run-dagger-pipeline
        with:
          context: "pull_request"
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          github_token: ${{ secrets.GH_PAT_MAINTENANCE_OCTAVIA }}
          subcommand: "test airbyte-ci/connectors/base_images"

      - name: Run test pipeline for the metadata lib
        id: metadata-lib-test-pipeline
        if: steps.changes.outputs.metadata-lib == 'true'
        uses: ./.github/actions/run-dagger-pipeline
        with:
          subcommand: "test airbyte-ci/connectors/metadata_service/lib/"
          context: "pull_request"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Run test for the metadata orchestrator
        id: metadata-orchestrator-test-pipeline
        if: steps.changes.outputs.metadata-orchestrator == 'true'
        uses: ./.github/actions/run-dagger-pipeline
        with:
          subcommand: "test airbyte-ci/connectors/metadata_service/orchestrator/"
          context: "pull_request"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
