name: Bump Bulk CDK Version
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repo to check out code from. Defaults to the main airbyte repo."
        type: choice
        required: true
        default: airbytehq/airbyte
        options:
          - airbytehq/airbyte
jobs:
  publish-bulk-cdk:
    uses: ./.github/workflows/publish-bulk-cdk.yml
    env:
      DRY_RUN: true
    secrets: inherit

  bump-cdk-version-and-merge:
    runs-on: ubuntu-24.04
    needs: [ bump-cdk-version ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Fetch version from repo
        run: |
          # 1. Define the target URL
          REPO_URL="https://airbyte.mycloudrepo.io/public/repositories/airbyte-public-jars/io/airbyte/bulk-cdk/bulk-cdk-core-load/"
          echo "Fetching versions from $REPO_URL" >&2 # Log output to standard error

          # 2. Fetch HTML, extract versions (X.Y), sort, get the latest
          latest_version=$(curl -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' -s "$REPO_URL" | grep -o 'href="[0-9]\+\.[0-9]\+/"' | sed 's/^href="//; s/\/"$//' | sort -V | tail -n 1)
          
          # 3. Check if we found a version string
          if [[ -z "$latest_version" ]]; then
            echo "Error: Could not find any valid version strings (format X.Y) at $REPO_URL" >&2
            exit 1 # Fail the step if no version is found
          fi
          echo "Latest version found: $latest_version" >&2

          # 4. Split the latest version into major and minor parts
          IFS='.' read -r major minor <<< "$latest_version"

          # 5. Validate that the parts are numeric
          if ! [[ "$major" =~ ^[0-9]+$ && "$minor" =~ ^[0-9]+$ ]]; then
              echo "Error: Failed to parse version string '$latest_version' into numeric major.minor components." >&2
              exit 1 # Fail the step if parsing fails
          fi

          # 6. Increment the minor version number
          next_minor=$((minor + 1))

          # 7. Construct the next version string
          next_version="$major.$next_minor"
          echo "Calculated next version: $next_version" >&2

          # 8. Set the output parameter for GitHub Actions
          # This makes "next_version" available to subsequent steps
          echo "next_version=$next_version" >> "$GITHUB_OUTPUT"
