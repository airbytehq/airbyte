name: "Build OSS Branch and Push Minimum Required OSS Images"
description: "Build jars and docker images tagged for a particular branch. Primarily used for running OSS branch code in Cloud."
inputs:
  branch_version_tag:
    description: 'Used to tag jars and docker images with a branch-specific version (should use the form "dev-<commit_hash>" to pass AirbyteVersion validation)'
    required: false
  dockerhub_token:
    description: "Used to log in to dockerhub for pushing images"
    required: true
runs:
  using: "composite"
  steps:
    - name: "Parse Input"
      id: parse-input
      shell: bash
      run: |-
        # if the *branch_version_tag* input param is not specified, then generate it as 'dev-<commit_hash>`
        #
        [[ "${{ inputs.branch_version_tag }}" != '' ]] && echo "::set-output name=branch_version_tag::${{ inputs.branch_version_tag }}" \
          || { short_hash=$(git rev-parse --short HEAD); echo "::set-output name=branch_version_tag::dev-$short_hash"; }

    - uses: actions/setup-java@v1
      with:
        java-version: "17"

    - uses: actions/setup-node@v1
      with:
        node-version: "16.13.0"

    - name: Set up CI Gradle Properties
      run: |
        mkdir -p ~/.gradle/
        cat > ~/.gradle/gradle.properties <<EOF
        org.gradle.jvmargs=-Xmx8g -Xss4m --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED
        org.gradle.workers.max=8
        org.gradle.vfs.watch=false
        EOF
      shell: bash

    - name: Build
      run: VERSION=${{ steps.parse-input.outputs.branch_version_tag }} SUB_BUILD=PLATFORM ./gradlew build --scan
      shell: bash

    - name: Publish to Maven Local
      run: VERSION=${{ steps.parse-input.outputs.branch_version_tag }} SUB_BUILD=PLATFORM ./gradlew publishToMavenLocal
      shell: bash

    - name: Login to Docker (on Master)
      uses: docker/login-action@v1
      with:
        username: airbytebot
        password: ${{ inputs.dockerhub_token }}

    - name: Push Docker Images
      run: |
        GIT_REVISION=$(git rev-parse HEAD)
        [ [ -z "$GIT_REVISION" ] ] && echo "Couldn't get the git revision..." && exit 1
        VERSION=${{ steps.parse-input.outputs.branch_version_tag }} GIT_REVISION=$GIT_REVISION docker-compose -f docker-compose-cloud.build.yaml push
      shell: bash
